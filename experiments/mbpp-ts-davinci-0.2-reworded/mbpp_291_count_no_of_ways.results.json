{
  "name": "mbpp_291_count_no_of_ways",
  "language": "ts",
  "prompt": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_291_count_no_of_ways.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    if (n === 2) {\n        return k * k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    let same = 0;\n    let diff = k;\n    let total = same + diff;\n    for (let i = 2; i <= n; i++) {\n        same = diff;\n        diff = total * (k - 1);\n        total = same + diff;\n    }\n    return total;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n  let same = 0;\n  let diff = k;\n  let total = same + diff;\n  for (let i = 2; i <= n; i++) {\n    same = diff;\n    diff = total * (k - 1);\n    total = same + diff;\n  }\n  return total;\n}\n\nconsole.log(count_no_of_ways(3, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    let same = 0;\n    let diff = k;\n    let total = same + diff;\n    for (let i = 2; i <= n; i++) {\n        same = diff;\n        diff = total * (k - 1);\n        total = same + diff;\n    }\n    return total;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    let same = 0;\n    let diff = k;\n    let total = same + diff;\n    for (let i = 2; i <= n; i++) {\n        same = diff;\n        diff = total * (k - 1);\n        total = same + diff;\n    }\n    return total;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    let same = 0;\n    let diff = k;\n    for (let i = 2; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0 || k === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    let same = 0;\n    let diff = k;\n    let total = same + diff;\n    for (let i = 2; i <= n; i++) {\n        same = diff;\n        diff = total * (k - 1);\n        total = same + diff;\n    }\n    return total;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    if (n === 2) {\n        return k * k;\n    }\n    let diff = k * (k - 1);\n    let same = k;\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (diff + same) * (k - 1);\n        same = temp;\n    }\n    return diff + same;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n == 0) {\n        return 0;\n    }\n    if (n == 1) {\n        return k;\n    }\n    if (n == 2) {\n        return k * k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) return 0;\n    if (n === 1) return k;\n    if (n === 2) return k * k;\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n  let dp: number[] = [];\n  dp[0] = 0;\n  dp[1] = k;\n  dp[2] = k + k * (k - 1);\n  for (let i = 3; i <= n; i++) {\n    dp[i] = (k - 1) * (dp[i - 1] + dp[i - 2]);\n  }\n  return dp[n];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) return 0;\n    if (n === 1) return k;\n    if (n === 2) return k * k;\n\n    let same = k;\n    let diff = k * (k - 1);\n\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n  if (n === 0) return 0;\n  if (n === 1) return k;\n  let same = k;\n  let diff = k * (k - 1);\n  for (let i = 3; i <= n; i++) {\n    let temp = diff;\n    diff = (same + diff) * (k - 1);\n    same = temp;\n  }\n  return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    if (n === 2) {\n        return k * k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n  if (n === 0) {\n    return 0;\n  }\n  if (n === 1) {\n    return k;\n  }\n  let same = k;\n  let diff = k * (k - 1);\n  for (let i = 3; i <= n; i++) {\n    let temp = diff;\n    diff = (same + diff) * (k - 1);\n    same = temp;\n  }\n  return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n  let same = 0;\n  let diff = k;\n  let total = same + diff;\n  for (let i = 2; i <= n; i++) {\n    same = diff;\n    diff = total * (k - 1);\n    total = same + diff;\n  }\n  return total;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n  if (n === 0) return 0;\n  if (n === 1) return k;\n  if (n === 2) return k * k;\n\n  let same = k;\n  let diff = k * (k - 1);\n\n  for (let i = 3; i <= n; i++) {\n    let temp = diff;\n    diff = (same + diff) * (k - 1);\n    same = temp;\n  }\n\n  return same + diff;\n}\n\nconsole.log(count_no_of_ways(3, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123073,
      "stdout": "6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    let same = 0;\n    let diff = k;\n    let total = same + diff;\n    for (let i = 2; i <= n; i++) {\n        same = diff;\n        diff = total * (k - 1);\n        total = same + diff;\n    }\n    return total;\n}\n\nconsole.log(count_no_of_ways(3, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123073,
      "stdout": "6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n  if (n === 0) return 0;\n  if (n === 1) return k;\n  let same = k;\n  let diff = k * (k - 1);\n  for (let i = 3; i <= n; i++) {\n    let temp = diff;\n    diff = (same + diff) * (k - 1);\n    same = temp;\n  }\n  return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    if (n === 2) {\n        return k * k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n  if (n === 0) {\n    return 0;\n  }\n  if (n === 1) {\n    return k;\n  }\n  let same = k;\n  let diff = k * (k - 1);\n  for (let i = 3; i <= n; i++) {\n    let temp = diff;\n    diff = (same + diff) * (k - 1);\n    same = temp;\n  }\n  return same + diff;\n}\n\nconsole.log(count_no_of_ways(3, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123073,
      "stdout": "6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    let same = 0;\n    let diff = k;\n    let total = k;\n    for (let i = 2; i <= n; i++) {\n        same = diff;\n        diff = total * (k - 1);\n        total = same + diff;\n    }\n    return total;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 1) {\n        return k;\n    }\n    if (n === 2) {\n        return k * k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    if (n === 2) {\n        return k * k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    let same = 0;\n    let diff = k;\n    let total = same + diff;\n    for (let i = 2; i <= n; i++) {\n        same = diff;\n        diff = total * (k - 1);\n        total = same + diff;\n    }\n    return total;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) return 0;\n    if (n === 1) return k;\n    if (n === 2) return k * k;\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n  let same = 0;\n  let diff = k;\n  let total = same + diff;\n  for (let i = 2; i <= n; i++) {\n    same = diff;\n    diff = total * (k - 1);\n    total = same + diff;\n  }\n  return total;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    let same = 0;\n    let diff = k;\n    let total = same + diff;\n    for (let i = 2; i <= n; i++) {\n        same = diff;\n        diff = total * (k - 1);\n        total = same + diff;\n    }\n    return total;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    if (n === 2) {\n        return k * k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 1) {\n        return k;\n    }\n    if (n === 2) {\n        return k * k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    if (n === 2) {\n        return k * k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    let same = 0;\n    let diff = k;\n    let total = same + diff;\n    for (let i = 2; i <= n; i++) {\n        same = diff;\n        diff = total * (k - 1);\n        total = same + diff;\n    }\n    return total;\n}\n\nconsole.log(count_no_of_ways(3, 2));\nconsole.log(count_no_of_ways(2, 4));\nconsole.log(count_no_of_ways(4, 2));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123073,
      "stdout": "6\n16\n10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    if (n === 2) {\n        return k * k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    let same = 0, diff = k;\n    for (let i = 2; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n  let same = 0;\n  let diff = k;\n  let total = same + diff;\n  for (let i = 2; i <= n; i++) {\n    same = diff;\n    diff = total * (k - 1);\n    total = same + diff;\n  }\n  return total;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconsole.log(count_no_of_ways(3, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123073,
      "stdout": "6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n  if (n == 0) {\n    return 0;\n  }\n  if (n == 1) {\n    return k;\n  }\n  if (n == 2) {\n    return k * k;\n  }\n  let same = k;\n  let diff = k * (k - 1);\n  for (let i = 3; i <= n; i++) {\n    let temp = diff;\n    diff = (same + diff) * (k - 1);\n    same = temp;\n  }\n  return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    if (n === 2) {\n        return k * k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    let dp: number[] = [];\n    dp[0] = k;\n    dp[1] = k * k;\n    for (let i = 2; i < n; i++) {\n        dp[i] = (k - 1) * (dp[i - 1] + dp[i - 2]);\n    }\n    return dp[n - 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n  if (n === 0) {\n    return 0;\n  }\n  if (n === 1) {\n    return k;\n  }\n  if (n === 2) {\n    return k * k;\n  }\n  let same = k;\n  let diff = k * (k - 1);\n  for (let i = 3; i <= n; i++) {\n    let temp = diff;\n    diff = (same + diff) * (k - 1);\n    same = temp;\n  }\n  return same + diff;\n}\n\nconsole.log(count_no_of_ways(3, 2));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123073,
      "stdout": "6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n  if (n === 1) return k;\n  if (n === 2) return k * k;\n  let same = k;\n  let diff = k * (k - 1);\n  for (let i = 3; i <= n; i++) {\n    let temp = diff;\n    diff = (same + diff) * (k - 1);\n    same = temp;\n  }\n  return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) return 0;\n    if (n === 1) return k;\n    if (n === 2) return k * k;\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    let same = 0;\n    let diff = k;\n    for (let i = 2; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n == 1) return k;\n    if (n == 2) return k * k;\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconsole.log(count_no_of_ways(3, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123073,
      "stdout": "6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    if (n === 2) {\n        return k * k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n == 0) {\n        return 0;\n    }\n    if (n == 1) {\n        return k;\n    }\n    if (n == 2) {\n        return k * k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) return 0;\n    if (n === 1) return k;\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 2; i < n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    if (n === 2) {\n        return k * k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconsole.log(count_no_of_ways(3, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123073,
      "stdout": "6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    if (n === 2) {\n        return k * k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    let same: number = 0;\n    let diff: number = k;\n    let total: number = same + diff;\n    for (let i: number = 2; i <= n; i++) {\n        same = diff;\n        diff = total * (k - 1);\n        total = same + diff;\n    }\n    return total;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    let same = 0;\n    let diff = k;\n    let total = same + diff;\n    for (let i = 2; i <= n; i++) {\n        same = diff;\n        diff = total * (k - 1);\n        total = same + diff;\n    }\n    return total;\n}\n\nconsole.log(count_no_of_ways(3, 2));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123073,
      "stdout": "6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n  if (n === 0) return 0;\n  if (n === 1) return k;\n  if (n === 2) return k * k;\n\n  let same = k;\n  let diff = k * (k - 1);\n\n  for (let i = 3; i <= n; i++) {\n    let temp = diff;\n    diff = (same + diff) * (k - 1);\n    same = temp;\n  }\n\n  return same + diff;\n}\n\nconsole.log(count_no_of_ways(3, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123073,
      "stdout": "24\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n == 0) return 0;\n    if (n == 1) return k;\n    if (n == 2) return k * k;\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) return 0;\n    if (n === 1) return k;\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 2; i < n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n == 1) return k;\n    if (n == 2) return k * k;\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    let same = 0;\n    let diff = k;\n    let total = same + diff;\n    for (let i = 2; i <= n; i++) {\n        same = diff;\n        diff = total * (k - 1);\n        total = same + diff;\n    }\n    return total;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    let same = 0;\n    let diff = k;\n    let total = same + diff;\n    for (let i = 2; i <= n; i++) {\n        same = diff;\n        diff = total * (k - 1);\n        total = same + diff;\n    }\n    return total;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n == 1) {\n        return k;\n    }\n    if (n == 2) {\n        return k * k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 1) {\n        return k;\n    }\n    if (n === 2) {\n        return k * k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 1) return k;\n    if (n === 2) return k * k;\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n  if (n == 0) return 0;\n  if (n == 1) return k;\n  let same = k;\n  let diff = k * (k - 1);\n  for (let i = 3; i <= n; i++) {\n    let temp = diff;\n    diff = (same + diff) * (k - 1);\n    same = temp;\n  }\n  return same + diff;\n}\n\nconsole.log(count_no_of_ways(4, 2));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123073,
      "stdout": "10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) return 0;\n    if (n === 1) return k;\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n  if (n === 0) return 0;\n  if (n === 1) return k;\n  let same = k;\n  let diff = k * (k - 1);\n  for (let i = 3; i <= n; i++) {\n    let temp = diff;\n    diff = (same + diff) * (k - 1);\n    same = temp;\n  }\n  return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 1) {\n        return k;\n    }\n    if (n === 2) {\n        return k * k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n  let dp: number[][] = [];\n  for (let i = 0; i <= n; i++) {\n    dp[i] = [];\n    for (let j = 0; j <= k; j++) {\n      dp[i][j] = 0;\n    }\n  }\n  for (let i = 1; i <= k; i++) {\n    dp[1][i] = i;\n  }\n  for (let i = 2; i <= n; i++) {\n    for (let j = 1; j <= k; j++) {\n      dp[i][j] = dp[i - 1][j] + dp[i - 2][j];\n    }\n  }\n  return dp[n][k];\n}\n\nconsole.log(count_no_of_ways(3, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123075,
      "stdout": "4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpngn690fd.js:24:12)\n    at Object.<anonymous> (/tmp/tmpngn690fd.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    let same = 0;\n    let diff = k;\n    let total = same + diff;\n    for (let i = 2; i <= n; i++) {\n        same = diff;\n        diff = total * (k - 1);\n        total = same + diff;\n    }\n    return total;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n  if (n === 0) return 0;\n  if (n === 1) return k;\n  if (n === 2) return k * k;\n  let same = k;\n  let diff = k * (k - 1);\n  for (let i = 3; i <= n; i++) {\n    let temp = diff;\n    diff = (same + diff) * (k - 1);\n    same = temp;\n  }\n  return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123075,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n == 0 || k == 0) {\n        return 0;\n    }\n    if (n == 1) {\n        return k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123075,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    if (n === 2) {\n        return k * k;\n    }\n    let diff = k * (k - 1);\n    let same = k;\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (diff + same) * (k - 1);\n        same = temp;\n    }\n    return diff + same;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    let same = 0;\n    let diff = k;\n    let total = same + diff;\n    for (let i = 2; i <= n; i++) {\n        same = diff;\n        diff = total * (k - 1);\n        total = same + diff;\n    }\n    return total;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    if (n === 2) {\n        return k * k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    let total = k;\n    let same = 0;\n    let diff = k;\n    for (let i = 2; i <= n; i++) {\n        same = diff;\n        diff = total * (k - 1);\n        total = same + diff;\n    }\n    return total;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    let same = 0;\n    let diff = k;\n    let total = same + diff;\n    for (let i = 2; i <= n; i++) {\n        same = diff;\n        diff = total * (k - 1);\n        total = same + diff;\n    }\n    return total;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n  if (n === 0) return 0;\n  if (n === 1) return k;\n  let same = k;\n  let diff = k * (k - 1);\n  for (let i = 3; i <= n; i++) {\n    let temp = diff;\n    diff = (same + diff) * (k - 1);\n    same = temp;\n  }\n  return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n  let same = 0;\n  let diff = k;\n  for (let i = 2; i <= n; i++) {\n    let temp = diff;\n    diff = (same + diff) * (k - 1);\n    same = temp;\n  }\n  return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconsole.log(count_no_of_ways(3, 2));\nconsole.log(count_no_of_ways(2, 4));\nconsole.log(count_no_of_ways(4, 2));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123076,
      "stdout": "6\n16\n10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n  let same = 0;\n  let diff = k;\n  let total = same + diff;\n  for (let i = 2; i <= n; i++) {\n    same = diff;\n    diff = total * (k - 1);\n    total = same + diff;\n  }\n  return total;\n}\n\nconsole.log(count_no_of_ways(2, 2));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123076,
      "stdout": "4\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n == 1) return k;\n    if (n == 2) return k * k;\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    let same = 0;\n    let diff = k;\n    for (let i = 2; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    if (n === 2) {\n        return k * k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconsole.log(count_no_of_ways(3, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123073,
      "stdout": "6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n == 0) {\n        return 0;\n    }\n    if (n == 1) {\n        return k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconsole.log(count_no_of_ways(3, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123076,
      "stdout": "6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n  if (n === 0) return 0;\n  if (n === 1) return k;\n  if (n === 2) return k * k;\n  let same = k;\n  let diff = k * (k - 1);\n  for (let i = 3; i <= n; i++) {\n    let temp = diff;\n    diff = (same + diff) * (k - 1);\n    same = temp;\n  }\n  return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123075,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 1) {\n        return k;\n    }\n    if (n === 2) {\n        return k * k;\n    }\n\n    let diff_color_counts = k * (k - 1);\n    let same_color_counts = k;\n    let total_counts = diff_color_counts + same_color_counts;\n\n    for (let i = 3; i <= n; i++) {\n        diff_color_counts = total_counts * (k - 1);\n        same_color_counts = total_counts;\n        total_counts = diff_color_counts + same_color_counts;\n    }\n\n    return total_counts;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123076,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpm2i653lo.js:23:12)\n    at Object.<anonymous> (/tmp/tmpm2i653lo.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n  if (n === 0) return 0;\n  if (n === 1) return k;\n  let same = k;\n  let diff = k * (k - 1);\n  for (let i = 2; i < n; i++) {\n    let temp = diff;\n    diff = (same + diff) * (k - 1);\n    same = temp;\n  }\n  return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n  let same = 0;\n  let diff = k;\n  let total = same + diff;\n\n  for (let i = 2; i <= n; i++) {\n    same = diff;\n    diff = total * (k - 1);\n    total = same + diff;\n  }\n\n  return total;\n}\n\nconsole.log(count_no_of_ways(3, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123076,
      "stdout": "6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    let same = 0;\n    let diff = k;\n    let total = same + diff;\n    for (let i = 2; i <= n; i++) {\n        same = diff;\n        diff = total * (k - 1);\n        total = same + diff;\n    }\n    return total;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    if (n === 2) {\n        return k * k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    if (n === 2) {\n        return k * k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    if (n === 2) {\n        return k * k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    let same = 0;\n    let diff = k;\n    for (let i = 2; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n  if (n === 1) return k;\n  if (n === 2) return k * k;\n\n  let same = k;\n  let diff = k * (k - 1);\n\n  for (let i = 3; i <= n; i++) {\n    let temp = diff;\n    diff = (same + diff) * (k - 1);\n    same = temp;\n  }\n\n  return same + diff;\n}\n\nconsole.log(count_no_of_ways(3, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123076,
      "stdout": "6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n == 0) return 0;\n    if (n == 1) return k;\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    let same = 0;\n    let diff = k;\n    let total = same + diff;\n    for (let i = 2; i <= n; i++) {\n        same = diff;\n        diff = total * (k - 1);\n        total = same + diff;\n    }\n    return total;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    let same = 0;\n    let diff = k;\n    let total = same + diff;\n    for (let i = 2; i <= n; i++) {\n        same = diff;\n        diff = total * (k - 1);\n        total = same + diff;\n    }\n    return total;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    let same = 0;\n    let diff = k;\n    let total = same + diff;\n    for (let i = 2; i <= n; i++) {\n        same = diff;\n        diff = total * (k - 1);\n        total = same + diff;\n    }\n    return total;\n}\n\nconsole.log(count_no_of_ways(3, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123073,
      "stdout": "6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n  if (n === 1) return k;\n  if (n === 2) return k * k;\n  let same = k;\n  let diff = k * (k - 1);\n  for (let i = 3; i <= n; i++) {\n    let temp = diff;\n    diff = (same + diff) * (k - 1);\n    same = temp;\n  }\n  return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 1) {\n        return k;\n    }\n    if (n === 2) {\n        return k * k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n  let same = 0;\n  let diff = k;\n  let total = same + diff;\n  for (let i = 2; i <= n; i++) {\n    same = diff;\n    diff = total * (k - 1);\n    total = same + diff;\n  }\n  return total;\n}\n\nconsole.log(count_no_of_ways(3, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) return 0;\n    if (n === 1) return k;\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) return 0;\n    if (n === 1) return k;\n    if (n === 2) return k * k;\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    if (n === 2) {\n        return k * k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n  if (n === 0) {\n    return 0;\n  }\n  if (n === 1) {\n    return k;\n  }\n  if (n === 2) {\n    return k * k;\n  }\n  let same = k;\n  let diff = k * (k - 1);\n  for (let i = 3; i <= n; i++) {\n    let temp = diff;\n    diff = (same + diff) * (k - 1);\n    same = temp;\n  }\n  return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    if (n === 2) {\n        return k * k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    let same = 0;\n    let diff = k;\n    let total = same + diff;\n    for (let i = 2; i <= n; i++) {\n        same = diff;\n        diff = total * (k - 1);\n        total = same + diff;\n    }\n    return total;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n  let same = 0;\n  let diff = k;\n  let total = same + diff;\n  for (let i = 2; i <= n; i++) {\n    same = diff;\n    diff = total * (k - 1);\n    total = same + diff;\n  }\n  return total;\n}\n\nconsole.log(count_no_of_ways(3, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n  if (n == 0) {\n    return 0;\n  }\n  if (n == 1) {\n    return k;\n  }\n  let same = k;\n  let diff = k * (k - 1);\n  for (let i = 3; i <= n; i++) {\n    let temp = diff;\n    diff = (same + diff) * (k - 1);\n    same = temp;\n  }\n  return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    let same = 0;\n    let diff = k;\n    let total = same + diff;\n    for (let i = 2; i <= n; i++) {\n        same = diff;\n        diff = total * (k - 1);\n        total = same + diff;\n    }\n    return total;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n  let same = 0;\n  let diff = k;\n  let total = same + diff;\n  for (let i = 2; i <= n; i++) {\n    same = diff;\n    diff = total * (k - 1);\n    total = same + diff;\n  }\n  return total;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    let same = 0;\n    let diff = k;\n    let total = same + diff;\n    for (let i = 2; i <= n; i++) {\n        same = diff;\n        diff = total * (k - 1);\n        total = same + diff;\n    }\n    return total;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    if (n === 2) {\n        return k * k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n == 0) return 0;\n    if (n == 1) return k;\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    let same = 0;\n    let diff = k;\n    let total = same + diff;\n    for (let i = 2; i <= n; i++) {\n        same = diff;\n        diff = total * (k - 1);\n        total = same + diff;\n    }\n    return total;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n  let same = 0;\n  let diff = k;\n  let total = same + diff;\n  for (let i = 2; i <= n; i++) {\n    same = diff;\n    diff = total * (k - 1);\n    total = same + diff;\n  }\n  return total;\n}\n\nconsole.log(count_no_of_ways(3, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n == 1) {\n        return k;\n    }\n    if (n == 2) {\n        return k * k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n  if (n === 0) return 0;\n  if (n === 1) return k;\n  if (n === 2) return k * k;\n  let same = k;\n  let diff = k * (k - 1);\n  for (let i = 3; i <= n; i++) {\n    let temp = diff;\n    diff = (same + diff) * (k - 1);\n    same = temp;\n  }\n  return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123075,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n  if (n === 0) {\n    return 0;\n  }\n  if (n === 1) {\n    return k;\n  }\n  let same = k;\n  let diff = k * (k - 1);\n  for (let i = 3; i <= n; i++) {\n    let temp = diff;\n    diff = (same + diff) * (k - 1);\n    same = temp;\n  }\n  return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    if (n === 2) {\n        return k * k;\n    }\n    let diff = k * (k - 1);\n    let same = k;\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (diff + same) * (k - 1);\n        same = temp;\n    }\n    return diff + same;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    if (n === 2) {\n        return k * k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconsole.log(count_no_of_ways(3, 2));\nconsole.log(count_no_of_ways(4, 2));\nconsole.log(count_no_of_ways(5, 2));\nconsole.log(count_no_of_ways(3, 3));\nconsole.log(count_no_of_ways(4, 3));\nconsole.log(count_no_of_ways(5, 3));\nconsole.log(count_no_of_ways(6, 3));\nconsole.log(count_no_of_ways(7, 3));\nconsole.log(count_no_of_ways(8, 3));\nconsole.log(count_no_of_ways(9, 3));\nconsole.log(count_no_of_ways(10, 3));\nconsole.log(count_no_of_ways(11, 3));\nconsole.log(count_no_of_ways(12, 3));\nconsole.log(count_no_of_ways(13, 3));\nconsole.log(count_no_of_ways(14, 3));\nconsole.log(count_no_of_ways(15, 3));\nconsole.log(count_no_of_ways(16, 3));\nconsole.log(count_no_of_ways(17, 3));\nconsole.log(count_no_of_ways(18, 3));\nconsole.log(count_no_of_ways(19, 3));\nconsole.log(count_no_of_ways(20, 3));\nconsole.log(count_no_of_ways(21, 3));\nconsole.log(count_no_\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123076,
      "stdout": "../../../../tmp/tmp5kil9ee6.ts(45,1): error TS1005: ',' expected.\n../../../../tmp/tmp5kil9ee6.ts(45,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    let same = 0;\n    let diff = k;\n    for (let i = 2; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n  if (n === 0) return 0;\n  if (n === 1) return k;\n  let same = k;\n  let diff = k * (k - 1);\n  for (let i = 2; i < n; i++) {\n    let temp = diff;\n    diff = (same + diff) * (k - 1);\n    same = temp;\n  }\n  return same + diff;\n}\n\nconsole.log(count_no_of_ways(3, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123076,
      "stdout": "6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    if (n === 2) {\n        return k * k;\n    }\n    let diff_color_counts = k * (k - 1);\n    let same_color_counts = k;\n    for (let i = 3; i <= n; i++) {\n        let temp = diff_color_counts;\n        diff_color_counts = (diff_color_counts + same_color_counts) * (k - 1);\n        same_color_counts = temp;\n    }\n    return diff_color_counts + same_color_counts;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n  if (n === 1) return k;\n  if (n === 2) return k * k;\n  let same = k;\n  let diff = k * (k - 1);\n  for (let i = 3; i <= n; i++) {\n    let temp = diff;\n    diff = (same + diff) * (k - 1);\n    same = temp;\n  }\n  return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 1) {\n        return k;\n    }\n    if (n === 2) {\n        return k * k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n  let same = 0, diff = k;\n  for (let i = 2; i <= n; i++) {\n    let temp = diff;\n    diff = (same + diff) * (k - 1);\n    same = temp;\n  }\n  return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    if (n === 2) {\n        return k * k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    let total = same + diff;\n    for (let i = 3; i <= n; i++) {\n        same = diff;\n        diff = total * (k - 1);\n        total = same + diff;\n    }\n    return total;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n == 1) {\n        return k;\n    }\n    if (n == 2) {\n        return k * k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n <= 0 || k <= 0) {\n        return 0;\n    }\n    let same = 0;\n    let diff = k;\n    for (let i = 2; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) return 0;\n    if (n === 1) return k;\n    if (n === 2) return k * k;\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n  if (n === 0) return 0;\n  if (n === 1) return k;\n  let same = k;\n  let diff = k * (k - 1);\n  for (let i = 3; i <= n; i++) {\n    let temp = diff;\n    diff = (same + diff) * (k - 1);\n    same = temp;\n  }\n  return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    let same = 0;\n    let diff = k;\n    let total = same + diff;\n    for (let i = 2; i <= n; i++) {\n        same = diff;\n        diff = total * (k - 1);\n        total = same + diff;\n    }\n    return total;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    if (n === 2) {\n        return k * k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconsole.log(count_no_of_ways(3, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123073,
      "stdout": "6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n  if (n === 0) return 0;\n  if (n === 1) return k;\n  let same = k;\n  let diff = k * (k - 1);\n  for (let i = 3; i <= n; i++) {\n    let temp = diff;\n    diff = (same + diff) * (k - 1);\n    same = temp;\n  }\n  return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n == 0) {\n        return 0;\n    }\n    if (n == 1) {\n        return k;\n    }\n    if (n == 2) {\n        return k * k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n  if (n === 0) {\n    return 0;\n  }\n  if (n === 1) {\n    return k;\n  }\n  let same = k;\n  let diff = k * (k - 1);\n  for (let i = 3; i <= n; i++) {\n    let temp = diff;\n    diff = (same + diff) * (k - 1);\n    same = temp;\n  }\n  return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    let same = 0;\n    let diff = k;\n    let total = same + diff;\n    for (let i = 2; i <= n; i++) {\n        same = diff;\n        diff = total * (k - 1);\n        total = same + diff;\n    }\n    return total;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n  if (n === 1) {\n    return k;\n  }\n  if (n === 2) {\n    return k * k;\n  }\n  let same = k;\n  let diff = k * (k - 1);\n  for (let i = 3; i <= n; i++) {\n    let temp = diff;\n    diff = (same + diff) * (k - 1);\n    same = temp;\n  }\n  return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconsole.log(count_no_of_ways(4, 2));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n  if (n === 0) return 0;\n  if (n === 1) return k;\n  let same = k;\n  let diff = k * (k - 1);\n  for (let i = 3; i <= n; i++) {\n    let temp = diff;\n    diff = (same + diff) * (k - 1);\n    same = temp;\n  }\n  return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    if (n === 2) {\n        return k * k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconsole.log(count_no_of_ways(3, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "24\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n == 0) {\n        return 0;\n    }\n    if (n == 1) {\n        return k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    if (n === 2) {\n        return k * k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    if (n === 2) {\n        return k * k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n  if (n === 0) return 0;\n  if (n === 1) return k;\n  let same = k;\n  let diff = k * (k - 1);\n  for (let i = 3; i <= n; i++) {\n    let temp = diff;\n    diff = (same + diff) * (k - 1);\n    same = temp;\n  }\n  return same + diff;\n}\n\nconsole.log(count_no_of_ways(3, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    let same = 0;\n    let diff = k;\n    for (let i = 2; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n  if (n === 0) return 0;\n  if (n === 1) return k;\n  if (n === 2) return k * k;\n\n  let same = k;\n  let diff = k * (k - 1);\n\n  for (let i = 3; i <= n; i++) {\n    let temp = diff;\n    diff = (same + diff) * (k - 1);\n    same = temp;\n  }\n\n  return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 1) {\n        return k;\n    }\n    if (n === 2) {\n        return k * k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    if (n === 2) {\n        return k * k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    if (n === 2) {\n        return k * k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n  let same = 0;\n  let diff = k;\n  for (let i = 2; i <= n; i++) {\n    let temp = diff;\n    diff = (same + diff) * (k - 1);\n    same = temp;\n  }\n  return same + diff;\n}\n\nconsole.log(count_no_of_ways(3, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 1) {\n        return k;\n    }\n    if (n === 2) {\n        return k * k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n == 1) {\n        return k;\n    }\n    if (n == 2) {\n        return k * k;\n    }\n    let diff = k * (k - 1);\n    let same = k;\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (diff + same) * (k - 1);\n        same = temp;\n    }\n    return diff + same;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n == 1) return k;\n    if (n == 2) return k * k;\n    let diff_color = k * (k - 1);\n    let same_color = k;\n    for (let i = 3; i <= n; i++) {\n        let temp = diff_color;\n        diff_color = (diff_color + same_color) * (k - 1);\n        same_color = temp;\n    }\n    return diff_color + same_color;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123078,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    let same = 0;\n    let diff = k;\n    let total = same + diff;\n    for (let i = 2; i <= n; i++) {\n        same = diff;\n        diff = total * (k - 1);\n        total = same + diff;\n    }\n    return total;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    let same = 0;\n    let diff = k;\n    for (let i = 2; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    if (n === 2) {\n        return k * k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return k;\n    }\n    if (n === 2) {\n        return k * k;\n    }\n    let same = k;\n    let diff = k * (k - 1);\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510180,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n    if (n == 0) return 0;\n    if (n == 1) return k;\n    if (n == 2) return k * k;\n\n    let same = k;\n    let diff = k * (k - 1);\n\n    for (let i = 3; i <= n; i++) {\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n\n    return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n: number, k: number): number {\n  if (n === 0) return 0;\n  if (n === 1) return k;\n  let same = k;\n  let diff = k * (k - 1);\n  for (let i = 2; i < n; i++) {\n    let temp = diff;\n    diff = (same + diff) * (k - 1);\n    same = temp;\n  }\n  return same + diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666123076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
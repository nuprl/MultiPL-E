{
  "name": "mbpp_725_extract_quotation",
  "language": "ts",
  "prompt": "//Write a function to extract values between quotation marks \" \" of the given string.\nfunction extract_quotation(text1: string): any {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_725_extract_quotation.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_quotation;\n  assert.deepEqual(candidate(\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"),[\"A53\", \"multi\", \"Processor\"]);\n  assert.deepEqual(candidate(\"Cast your \"favorite\" entertainment \"apps\"\"),[\"favorite\", \"apps\"]);\n  assert.deepEqual(candidate(\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\"),[\"4k Ultra HD\", \"HDR 10\"]);\n  assert.deepEqual(candidate(\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\"),[]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let text2: string = \"\";\n    let text3: string = \"\";\n    let text4: string = \"\";\n    let text5: string = \"\";\n    let text6: string = \"\";\n    let text7: string = \"\";\n    let text8: string = \"\";\n    let text9: string = \"\";\n    let text10: string = \"\";\n    let text11: string = \"\";\n    let text12: string = \"\";\n    let text13: string = \"\";\n    let text14: string = \"\";\n    let text15: string = \"\";\n    let text16: string = \"\";\n    let text17: string = \"\";\n    let text18: string = \"\";\n    let text19: string = \"\";\n    let text20: string = \"\";\n    let text21: string = \"\";\n    let text22: string = \"\";\n    let text23: string = \"\";\n    let text24: string = \"\";\n    let text25: string = \"\";\n    let text26: string = \"\";\n    let text27: string = \"\";\n    let text28: string = \"\";\n    let text29: string = \"\";\n    let text30: string = \"\";\n    let text31: string = \"\";\n    let text32: string = \"\";\n    let text33: string = \"\";\n    let text34: string = \"\";\n    let text35: string = \"\";\n    let text36: string = \"\";\n    let text37: string = \"\";\n    let text38: string = \"\";\n    let text39: string = \"\";\n    let text40: string = \"\";\n    let text41: string = \"\";\n    let text42: string = \"\";\n    let text43: string = \"\";\n    let text44: string = \"\";\n    let text45: string = \"\";\n    let text46: string = \"\";\n    let text47: string = \"\";\n    let text48: string = \"\";\n    let text49: string = \"\";\n    let text50: string = \"\";\n    let text51: string = \"\";\n    let text52: string = \"\";\n   ",
    "    let result = text1.match(/\"(.*?)\"/g);\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result = text1.match(/\"(.*?)\"/g);\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result: string[] = [];\n    let regex = /\"(.*?)\"/g;\n    let match: any;\n    while (match = regex.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\n\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\n",
    "    let result: string[] = [];\n    let regex = /\"(.*?)\"/g;\n    let match: any;\n    while (match = regex.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\n\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\n",
    "    let result: string = \"\";\n    let text: string = \"\";\n    let flag: boolean = false;\n    for (let i: number = 0; i < text1.length; i++) {\n        if (text1[i] === \"\\\"\") {\n            flag = !flag;\n            if (!flag) {\n                result += text + \" \";\n                text = \"\";\n            }\n        } else {\n            if (flag) {\n                text += text1[i];\n            }\n        }\n    }\n    return result;\n}\n",
    "    let result: string[] = [];\n    let regex = /\"(.*?)\"/g;\n    let match: any;\n    while (match = regex.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\n\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\n",
    "    let text = text1.split(\" \");\n    let result = [];\n    for (let i = 0; i < text.length; i++) {\n        if (text[i].charAt(0) === \"\\\"\" && text[i].charAt(text[i].length - 1) === \"\\\"\") {\n            result.push(text[i].substring(1, text[i].length - 1));\n        }\n    }\n    return result;\n}\n",
    "    let result: string[] = [];\n    let regex = /\"(.*?)\"/g;\n    let match: any;\n    while (match = regex.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\n\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result = text1.match(/\"(.*?)\"/g);\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let text2: string = \"\";\n    let text3: string = \"\";\n    let text4: string = \"\";\n    let text5: string = \"\";\n    let text6: string = \"\";\n    let text7: string = \"\";\n    let text8: string = \"\";\n    let text9: string = \"\";\n    let text10: string = \"\";\n    let text11: string = \"\";\n    let text12: string = \"\";\n    let text13: string = \"\";\n    let text14: string = \"\";\n    let text15: string = \"\";\n    let text16: string = \"\";\n    let text17: string = \"\";\n    let text18: string = \"\";\n    let text19: string = \"\";\n    let text20: string = \"\";\n    let text21: string = \"\";\n    let text22: string = \"\";\n    let text23: string = \"\";\n    let text24: string = \"\";\n    let text25: string = \"\";\n    let text26: string = \"\";\n    let text27: string = \"\";\n    let text28: string = \"\";\n    let text29: string = \"\";\n    let text30: string = \"\";\n    let text31: string = \"\";\n    let text32: string = \"\";\n    let text33: string = \"\";\n    let text34: string = \"\";\n    let text35: string = \"\";\n    let text36: string = \"\";\n    let text37: string = \"\";\n    let text38: string = \"\";\n    let text39: string = \"\";\n    let text40: string = \"\";\n    let text41: string = \"\";\n    let text42: string = \"\";\n    let text43: string = \"\";\n    let text44: string = \"\";\n    let text45: string = \"\";\n    let text46: string = \"\";\n    let text47: string = \"\";\n    let text48: string = \"\";\n    let text49: string = \"\";\n    let text50: string = \"\";\n    let text51: string = \"\";\n    let text52: string = \"\";\n   ",
    "    let result: string[] = [];\n    let index: number = 0;\n    let start: number = 0;\n    let end: number = 0;\n    while (index < text1.length) {\n        if (text1[index] === '\"') {\n            if (start === 0) {\n                start = index;\n            } else {\n                end = index;\n                result.push(text1.substring(start + 1, end));\n                start = 0;\n            }\n        }\n        index++;\n    }\n    return result;\n}\n",
    "    let result: string[] = [];\n    let text: string = text1;\n    let start: number = 0;\n    let end: number = 0;\n    let i: number = 0;\n    while (i < text.length) {\n        if (text[i] == '\"') {\n            start = i;\n            i++;\n            while (text[i] != '\"') {\n                i++;\n            }\n            end = i;\n            result.push(text.substring(start + 1, end));\n        }\n        i++;\n    }\n    return result;\n}\n",
    "    let result: string[] = [];\n    let regex: RegExp = /\"(.*?)\"/g;\n    let match: RegExpExecArray;\n    while (match = regex.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let text2 = text1.split('');\n    let text3 = [];\n    let text4 = [];\n    for (let i = 0; i < text2.length; i++) {\n        if (text2[i] === '\"') {\n            text3.push(i);\n        }\n    }\n    for (let i = 0; i < text3.length; i++) {\n        if (i % 2 === 0) {\n            text4.push(text1.slice(text3[i] + 1, text3[i + 1]));\n        }\n    }\n    return text4;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result: string[] = [];\n    let regex = /\"(.*?)\"/g;\n    let match: any;\n    while (match = regex.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\n",
    "    let result: any = [];\n    let regex = /\"(.*?)\"/g;\n    let match: any;\n    while (match = regex.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\n\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"Java",
    "    let regex = /\"(.*?)\"/g;\n    let result = text1.match(regex);\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result: string[] = [];\n    let regex = /\"([^\"]*)\"/g;\n    let match: any;\n    while (match = regex.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result: string[] = [];\n    let index: number = 0;\n    let index2: number = 0;\n    let index3: number = 0;\n    let index4: number = 0;\n    let index5: number = 0;\n    let index6: number = 0;\n    let index7: number = 0;\n    let index8: number = 0;\n    let index9: number = 0;\n    let index10: number = 0;\n    let index11: number = 0;\n    let index12: number = 0;\n    let index13: number = 0;\n    let index14: number = 0;\n    let index15: number = 0;\n    let index16: number = 0;\n    let index17: number = 0;\n    let index18: number = 0;\n    let index19: number = 0;\n    let index20: number = 0;\n    let index21: number = 0;\n    let index22: number = 0;\n    let index23: number = 0;\n    let index24: number = 0;\n    let index25: number = 0;\n    let index26: number = 0;\n    let index27: number = 0;\n    let index28: number = 0;\n    let index29: number = 0;\n    let index30: number = 0;\n    let index31: number = 0;\n    let index32: number = 0;\n    let index33: number = 0;\n    let index34: number = 0;\n    let index35: number = 0;\n    let index36: number = 0;\n    let index37: number = 0;\n    let index38: number = 0;\n    let index39: number = 0;\n    let index40: number = 0;\n    let index41: number = 0;\n    let index42: number = 0;\n    let index43: number = 0;\n    let index44: number = 0;\n    let index45: number = 0;\n    let index46: number = 0;\n    let index47: number = 0;\n    let index48: number = 0;\n    let index49: number = 0;\n    let index50: number = 0;\n    let index",
    "    let result = \"\";\n    for (let i = 0; i < text1.length; i++) {\n        if (text1[i] === \"\\\"\") {\n            for (let j = i + 1; j < text1.length; j++) {\n                if (text1[j] === \"\\\"\") {\n                    return result;\n                }\n                result += text1[j];\n            }\n        }\n    }\n}\n\nconsole.log(extract_quotation(\"\\\"Hello\\\"\"));\nconsole.log(extract_quotation(\"\\\"Hello\\\" World\"));\nconsole.log(extract_quotation(\"\\\"Hello\\\" World \\\"World\\\"\"));\nconsole.log(extract_quotation(\"\\\"Hello\\\" \\\"World\\\"\"));\nconsole.log(extract_quotation(\"\\\"Hello\\\" \\\"World\\\" \\\"!\\\"\"));\nconsole.log(extract_quotation(\"\\\"Hello\\\" \\\"World\\\" \\\"!\\\" \\\"!\\\"\"));\nconsole.log(extract_quotation(\"\\\"Hello\\\" \\\"World\\\" \\\"!\\\" \\\"!\\\" \\\"!\\\"\"));\nconsole.log(extract_quotation(\"\\\"Hello\\\" \\\"World\\\" \\\"!\\\" \\\"!\\\" \\\"!\\\" \\\"!\\\"\"));\nconsole.log(extract_quotation(\"\\\"Hello\\\" \\\"World\\\" \\\"!\\\" \\\"!\\\" \\\"!\\\" \\\"!\\\" \\\"!\\\"\"));\nconsole.log(extract_quotation(\"\\\"Hello\\\" \\\"World\\\" \\\"!\\\" \\\"!\\\" \\\"!\\\" \\\"!\\\" \\\"!\\\" \\\"!\\\"\"));\nconsole.log(extract_quotation(\"\\\"Hello\\\" \\\"World\\\" \\\"!\\\" \\\"!\\\" \\\"!\\\" \\\"!\\\" \\\"!\\\" \\\"!\\\" \\\"!\\\"\"));\nconsole.log(extract_quotation(\"\\\"Hello\\\" \\\"World\\\" \\\"!\\\" \\\"!\\\" \\\"!\\\" \\\"!\\\" \\\"!\\\" \\\"!\\\" \\\"!\\\" \\\"!\\\"\"));\nconsole.log(extract_quotation(\"\\\"Hello\\\" \\\"World\\\" \\\"!\\\" \\\"!\\\" \\\"!\\\" \\\"!\\\" \\\"!\\\" \\\"!\\\" \\\"!\\\" \\\"!\\\" \\\"!\\\"\"));\nconsole.log(extract_quotation(\"\\\"Hello\\\" \\\"World\\\" \\\"!\\\" \\\"!\\\" \\\"!\\\" \\\"!\\\" \\\"",
    "    let result: string[] = [];\n    let start: number = 0;\n    let end: number = 0;\n    for (let i: number = 0; i < text1.length; i++) {\n        if (text1[i] === '\"') {\n            if (start === 0) {\n                start = i;\n            } else {\n                end = i;\n                result.push(text1.slice(start + 1, end));\n                start = 0;\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_quotation('\"Python\", \"JavaScript\", \"Java\"'));\n",
    "    let result: string[] = [];\n    let regex = /\"(.*?)\"/g;\n    let match: any;\n    while (match = regex.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\nconsole.log(extract_quotation(\"\\\"PHP Exercises\\\" and \\\"Python Exercises\\\"\"));\n",
    "    let text2: string = text1.replace(/['\"]+/g, '');\n    return text2;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result: string[] = [];\n    let regex = /\"(.*?)\"/g;\n    let text2: RegExpExecArray | null;\n\n    while (text2 = regex.exec(text1)) {\n        result.push(text2[1]);\n    }\n\n    return result;\n}\n\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result: string[] = [];\n    let regex = /\"(.*?)\"/g;\n    let match: any;\n    while (match = regex.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\nconsole.log(extract_quotation(\"\\\"PHP Exercises\\\" and \\\"Python Exercises\\\"\"));\n",
    "    let result: string = \"\";\n    let text2: string = \"\";\n    let text3: string = \"\";\n    let text4: string = \"\";\n    let text5: string = \"\";\n    let text6: string = \"\";\n    let text7: string = \"\";\n    let text8: string = \"\";\n    let text9: string = \"\";\n    let text10: string = \"\";\n    let text11: string = \"\";\n    let text12: string = \"\";\n    let text13: string = \"\";\n    let text14: string = \"\";\n    let text15: string = \"\";\n    let text16: string = \"\";\n    let text17: string = \"\";\n    let text18: string = \"\";\n    let text19: string = \"\";\n    let text20: string = \"\";\n    let text21: string = \"\";\n    let text22: string = \"\";\n    let text23: string = \"\";\n    let text24: string = \"\";\n    let text25: string = \"\";\n    let text26: string = \"\";\n    let text27: string = \"\";\n    let text28: string = \"\";\n    let text29: string = \"\";\n    let text30: string = \"\";\n    let text31: string = \"\";\n    let text32: string = \"\";\n    let text33: string = \"\";\n    let text34: string = \"\";\n    let text35: string = \"\";\n    let text36: string = \"\";\n    let text37: string = \"\";\n    let text38: string = \"\";\n    let text39: string = \"\";\n    let text40: string = \"\";\n    let text41: string = \"\";\n    let text42: string = \"\";\n    let text43: string = \"\";\n    let text44: string = \"\";\n    let text45: string = \"\";\n    let text46: string = \"\";\n    let text47: string = \"\";\n    let text48: string = \"\";\n    let text49: string = \"\";\n    let text50: string = \"\";\n    let text51: string = \"\";\n    let",
    "    let result: string[] = [];\n    let index: number = 0;\n    let start: number = 0;\n    let end: number = 0;\n    for (let i: number = 0; i < text1.length; i++) {\n        if (text1[i] == '\"') {\n            if (index % 2 == 0) {\n                start = i;\n            }\n            else {\n                end = i;\n                result.push(text1.substring(start + 1, end));\n            }\n            index++;\n        }\n    }\n    return result;\n}\n",
    "    let result = text1.match(/\"(.*?)\"/g);\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result: string[] = [];\n    let regex = /\"(.*?)\"/g;\n    let match: RegExpExecArray;\n    while (match = regex.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"JavaScript\", \"PHP\"'));\n",
    "    let regex: RegExp = /\"(.*?)\"/g;\n    let result: any;\n    let resultArray: any = [];\n    while ((result = regex.exec(text1)) !== null) {\n        resultArray.push(result[1]);\n    }\n    return resultArray;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let text2 = text1.split(\" \");\n    let text3 = [];\n    for (let i = 0; i < text2.length; i++) {\n        if (text2[i].startsWith(\"\\\"\")) {\n            text3.push(text2[i].slice(1, text2[i].length - 1));\n        }\n    }\n    return text3;\n}\nconsole.log(extract_quotation(\"\\\"I am a boy\\\", she said.\"));\nconsole.log(extract_quotation(\"\\\"I am a girl\\\", he said.\"));\n",
    "    let result: string[] = [];\n    let index: number = 0;\n    let start: number = 0;\n    let end: number = 0;\n    while (index < text1.length) {\n        if (text1[index] === '\"') {\n            if (start === 0) {\n                start = index;\n            } else {\n                end = index;\n                result.push(text1.substring(start + 1, end));\n                start = 0;\n            }\n        }\n        index++;\n    }\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result: string[] = [];\n    let regex = /\"(.*?)\"/g;\n    let match: any;\n    while (match = regex.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\n\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let text2 = text1.split(\" \");\n    let text3 = [];\n    for (let i = 0; i < text2.length; i++) {\n        if (text2[i].startsWith(\"\\\"\") && text2[i].endsWith(\"\\\"\")) {\n            text3.push(text2[i]);\n        }\n    }\n    return text3;\n}\nconsole.log(extract_quotation(\"\\\"PHP Exercises\\\" and \\\"Python Exercises\\\"\"));\n",
    "    let result: string[] = [];\n    let index: number = 0;\n    let temp: string = \"\";\n    for (let i: number = 0; i < text1.length; i++) {\n        if (text1[i] == \"\\\"\") {\n            if (index % 2 == 0) {\n                index++;\n            } else {\n                index++;\n                result.push(temp);\n                temp = \"\";\n            }\n        } else {\n            if (index % 2 != 0) {\n                temp += text1[i];\n            }\n        }\n    }\n    return result;\n}\n",
    "    let result: string[] = [];\n    let regex = /\"(.*?)\"/g;\n    let match: any;\n    while (match = regex.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\n\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result: string[] = [];\n    let result1: string[] = [];\n    let result2: string[] = [];\n    let result3: string[] = [];\n    let result4: string[] = [];\n    let result5: string[] = [];\n    let result6: string[] = [];\n    let result7: string[] = [];\n    let result8: string[] = [];\n    let result9: string[] = [];\n    let result10: string[] = [];\n    let result11: string[] = [];\n    let result12: string[] = [];\n    let result13: string[] = [];\n    let result14: string[] = [];\n    let result15: string[] = [];\n    let result16: string[] = [];\n    let result17: string[] = [];\n    let result18: string[] = [];\n    let result19: string[] = [];\n    let result20: string[] = [];\n    let result21: string[] = [];\n    let result22: string[] = [];\n    let result23: string[] = [];\n    let result24: string[] = [];\n    let result25: string[] = [];\n    let result26: string[] = [];\n    let result27: string[] = [];\n    let result28: string[] = [];\n    let result29: string[] = [];\n    let result30: string[] = [];\n    let result31: string[] = [];\n    let result32: string[] = [];\n    let result33: string[] = [];\n    let result34: string[] = [];\n    let result35: string[] = [];\n    let result36: string[] = [];\n    let result37: string[] = [];\n    let result38: string[] = [];\n    let result39: string[] = [];\n    let result40: string[] = [];\n    let result41: string[] = [];\n    let result42: string[] = [];\n    let result43: string[] = [];\n    let result44: string[] = [];\n    let result45: string[] = [];\n    let result46: string[] = [];\n    let result47: string[] = [];\n    let result48: string[] = [];\n    let result49: string[] = [];\n    let result50: string[] = [];\n    let",
    "    let result: string[] = [];\n    let regex: RegExp = /\"(.*?)\"/g;\n    let match: RegExpExecArray;\n    while (match = regex.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let regex = /\"(.*?)\"/g;\n    let result = text1.match(regex);\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result: string[] = [];\n    let regex = /\"(.*?)\"/g;\n    let match: any;\n    while (match = regex.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\n\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let text2: string = \"\";\n    let text3: string = \"\";\n    for (let i: number = 0; i < text1.length; i++) {\n        if (text1[i] == \"\\\"\") {\n            for (let j: number = i + 1; j < text1.length; j++) {\n                if (text1[j] == \"\\\"\") {\n                    text2 = text1.slice(i + 1, j);\n                    text3 = text3 + text2 + \" \";\n                    break;\n                }\n            }\n        }\n    }\n    return text3;\n}\nconsole.log(extract_quotation(\"\\\"PHP Exercises\\\" and \\\"Python Exercises\\\"\"));\n",
    "    let result = text1.match(/\"(.*?)\"/g);\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\n",
    "    let result: any = [];\n    let index: number = 0;\n    let index2: number = 0;\n    while (index < text1.length) {\n        if (text1[index] === '\"') {\n            index2 = index + 1;\n            while (text1[index2] !== '\"') {\n                index2++;\n            }\n            result.push(text1.slice(index + 1, index2));\n            index = index2 + 1;\n        } else {\n            index++;\n        }\n    }\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result = text1.match(/\"(.*?)\"/g);\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\n",
    "    let result: string[] = [];\n    let index: number = 0;\n    for (let i: number = 0; i < text1.length; i++) {\n        if (text1[i] === \"\\\"\") {\n            index = i;\n            for (let j: number = index + 1; j < text1.length; j++) {\n                if (text1[j] === \"\\\"\") {\n                    result.push(text1.substring(index + 1, j));\n                    break;\n                }\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_quotation(\"\\\"Hello\\\", \\\"World\\\"\"));\n",
    "    let result: string[] = [];\n    let regex: RegExp = /\"(.*?)\"/g;\n    let match: RegExpExecArray;\n    while (match = regex.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\n\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\"'));\n",
    "    let regex = /\"(.*?)\"/g;\n    let result = text1.match(regex);\n    return result;\n}\n",
    "  let result: string[] = [];\n  let result1: string[] = [];\n  let result2: string[] = [];\n  let result3: string[] = [];\n  let result4: string[] = [];\n  let result5: string[] = [];\n  let result6: string[] = [];\n  let result7: string[] = [];\n  let result8: string[] = [];\n  let result9: string[] = [];\n  let result10: string[] = [];\n  let result11: string[] = [];\n  let result12: string[] = [];\n  let result13: string[] = [];\n  let result14: string[] = [];\n  let result15: string[] = [];\n  let result16: string[] = [];\n  let result17: string[] = [];\n  let result18: string[] = [];\n  let result19: string[] = [];\n  let result20: string[] = [];\n  let result21: string[] = [];\n  let result22: string[] = [];\n  let result23: string[] = [];\n  let result24: string[] = [];\n  let result25: string[] = [];\n  let result26: string[] = [];\n  let result27: string[] = [];\n  let result28: string[] = [];\n  let result29: string[] = [];\n  let result30: string[] = [];\n  let result31: string[] = [];\n  let result32: string[] = [];\n  let result33: string[] = [];\n  let result34: string[] = [];\n  let result35: string[] = [];\n  let result36: string[] = [];\n  let result37: string[] = [];\n  let result38: string[] = [];\n  let result39: string[] = [];\n  let result40: string[] = [];\n  let result41: string[] = [];\n  let result42: string[] = [];\n  let result43: string[] = [];\n  let result44: string[] = [];\n  let result45: string[] = [];\n  let result46: string[] = [];\n  let result47: string[] = [];\n  let result48: string[] = [];\n  let result49: string[] = [];\n  let result50: string[] = [];\n  let",
    "    let text2: string = \"\";\n    for (let i = 0; i < text1.length; i++) {\n        if (text1[i] == '\"') {\n            for (let j = i + 1; j < text1.length; j++) {\n                if (text1[j] == '\"') {\n                    break;\n                }\n                text2 += text1[j];\n            }\n            break;\n        }\n    }\n    return text2;\n}\nconsole.log(extract_quotation('\"Python\"'));\nconsole.log(extract_quotation('\"PHP\"'));\n",
    "    let text2: string = text1.replace(/[^\"]+/g, '');\n    return text2;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result = text1.match(/\"[^\"]*\"/g);\n    return result;\n}\n\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result: string[] = [];\n    let regex: RegExp = /\"(.*?)\"/g;\n    let match: RegExpExecArray;\n    while (match = regex.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let text2 = text1.split(\" \");\n    let text3 = [];\n    for (let i = 0; i < text2.length; i++) {\n        if (text2[i].charAt(0) === \"\\\"\" && text2[i].charAt(text2[i].length - 1) === \"\\\"\") {\n            text3.push(text2[i].substring(1, text2[i].length - 1));\n        }\n    }\n    return text3;\n}\n",
    "    let result: any = [];\n    let regex: RegExp = /\"(.*?)\"/g;\n    let match: any;\n    while (match = regex.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"JavaScript\", \"PHP\"'));\n",
    "    let text = text1.split(\" \");\n    let result = [];\n    for (let i = 0; i < text.length; i++) {\n        if (text[i].startsWith('\"') && text[i].endsWith('\"')) {\n            result.push(text[i]);\n        }\n    }\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let text2: string = text1.replace(/[^\"]+/g, \"\");\n    let text3: string = text2.replace(/[\"\"]+/g, \"\");\n    return text3;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result: string = \"\";\n    let i: number = 0;\n    while (i < text1.length) {\n        if (text1[i] == '\"') {\n            i++;\n            while (text1[i] != '\"') {\n                result += text1[i];\n                i++;\n            }\n        }\n        i++;\n    }\n    return result;\n}\nconsole.log(extract_quotation('\"Hello\"'));\nconsole.log(extract_quotation('\"Hello world\"'));\nconsole.log(extract_quotation('\"Hello world\" \"How are you\"'));\n",
    "    let text2: string = \"\";\n    let text3: string = \"\";\n    let text4: string = \"\";\n    let text5: string = \"\";\n    let text6: string = \"\";\n    let text7: string = \"\";\n    let text8: string = \"\";\n    let text9: string = \"\";\n    let text10: string = \"\";\n    let text11: string = \"\";\n    let text12: string = \"\";\n    let text13: string = \"\";\n    let text14: string = \"\";\n    let text15: string = \"\";\n    let text16: string = \"\";\n    let text17: string = \"\";\n    let text18: string = \"\";\n    let text19: string = \"\";\n    let text20: string = \"\";\n    let text21: string = \"\";\n    let text22: string = \"\";\n    let text23: string = \"\";\n    let text24: string = \"\";\n    let text25: string = \"\";\n    let text26: string = \"\";\n    let text27: string = \"\";\n    let text28: string = \"\";\n    let text29: string = \"\";\n    let text30: string = \"\";\n    let text31: string = \"\";\n    let text32: string = \"\";\n    let text33: string = \"\";\n    let text34: string = \"\";\n    let text35: string = \"\";\n    let text36: string = \"\";\n    let text37: string = \"\";\n    let text38: string = \"\";\n    let text39: string = \"\";\n    let text40: string = \"\";\n    let text41: string = \"\";\n    let text42: string = \"\";\n    let text43: string = \"\";\n    let text44: string = \"\";\n    let text45: string = \"\";\n    let text46: string = \"\";\n    let text47: string = \"\";\n    let text48: string = \"\";\n    let text49: string = \"\";\n    let text50: string = \"\";\n    let text51: string = \"\";\n    let text52: string = \"\";\n   ",
    "    let result = text1.match(/\"(.*?)\"/g);\n    return result;\n}\n\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\n",
    "    let result: string[] = [];\n    let regex = /\"(.*?)\"/g;\n    let match: any;\n    while (match = regex.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\n\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let text2 = text1.split(\" \");\n    let text3 = [];\n    for (let i = 0; i < text2.length; i++) {\n        if (text2[i].charAt(0) === '\"') {\n            text3.push(text2[i].substring(1, text2[i].length - 1));\n        }\n    }\n    return text3;\n}\n",
    "    let text2 = text1.split(\" \");\n    let text3 = [];\n    for (let i = 0; i < text2.length; i++) {\n        if (text2[i].charAt(0) === '\"') {\n            text3.push(text2[i].substring(1, text2[i].length - 1));\n        }\n    }\n    return text3;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result: string = \"\";\n    let text2: string = \"\";\n    let text3: string = \"\";\n    let text4: string = \"\";\n    let text5: string = \"\";\n    let text6: string = \"\";\n    let text7: string = \"\";\n    let text8: string = \"\";\n    let text9: string = \"\";\n    let text10: string = \"\";\n    let text11: string = \"\";\n    let text12: string = \"\";\n    let text13: string = \"\";\n    let text14: string = \"\";\n    let text15: string = \"\";\n    let text16: string = \"\";\n    let text17: string = \"\";\n    let text18: string = \"\";\n    let text19: string = \"\";\n    let text20: string = \"\";\n    let text21: string = \"\";\n    let text22: string = \"\";\n    let text23: string = \"\";\n    let text24: string = \"\";\n    let text25: string = \"\";\n    let text26: string = \"\";\n    let text27: string = \"\";\n    let text28: string = \"\";\n    let text29: string = \"\";\n    let text30: string = \"\";\n    let text31: string = \"\";\n    let text32: string = \"\";\n    let text33: string = \"\";\n    let text34: string = \"\";\n    let text35: string = \"\";\n    let text36: string = \"\";\n    let text37: string = \"\";\n    let text38: string = \"\";\n    let text39: string = \"\";\n    let text40: string = \"\";\n    let text41: string = \"\";\n    let text42: string = \"\";\n    let text43: string = \"\";\n    let text44: string = \"\";\n    let text45: string = \"\";\n    let text46: string = \"\";\n    let text47: string = \"\";\n    let text48: string = \"\";\n    let text49: string = \"\";\n    let text50: string = \"\";\n    let text51: string = \"\";\n    let",
    "    let text = text1.split(\" \");\n    let result = [];\n    for (let i = 0; i < text.length; i++) {\n        if (text[i].includes('\"')) {\n            result.push(text[i].replace(/\"/g, \"\"));\n        }\n    }\n    return result;\n}\n",
    "    let text2 = text1.split('\"');\n    let text3 = text2.filter(function (el) {\n        return el != \"\";\n    });\n    return text3;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result: any = [];\n    let regexp = /\"(.*?)\"/g;\n    let match: any;\n    while (match = regexp.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let text2: string = \"\";\n    let text3: string = \"\";\n    for (let i: number = 0; i < text1.length; i++) {\n        if (text1[i] == \"\\\"\") {\n            text2 += text1[i];\n            for (let j: number = i + 1; j < text1.length; j++) {\n                if (text1[j] == \"\\\"\") {\n                    text2 += text1[j];\n                    break;\n                }\n                text2 += text1[j];\n            }\n        }\n    }\n    for (let i: number = 0; i < text2.length; i++) {\n        if (text2[i] == \"\\\"\") {\n            for (let j: number = i + 1; j < text2.length; j++) {\n                if (text2[j] == \"\\\"\") {\n                    break;\n                }\n                text3 += text2[j];\n            }\n        }\n    }\n    return text3;\n}\n",
    "    let result: string[] = [];\n    let start: number = text1.indexOf('\"');\n    let end: number = text1.indexOf('\"', start + 1);\n    while (start > -1 && end > -1) {\n        result.push(text1.substring(start + 1, end));\n        start = text1.indexOf('\"', end + 1);\n        end = text1.indexOf('\"', start + 1);\n    }\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result: string = \"\";\n    let quotation: boolean = false;\n    for (let i = 0; i < text1.length; i++) {\n        if (text1[i] == '\"') {\n            quotation = !quotation;\n        }\n        if (quotation) {\n            result += text1[i];\n        }\n    }\n    return result;\n}\nconsole.log(extract_quotation('\"Hello\"'));\nconsole.log(extract_quotation('\"Hello \"World\"'));\nconsole.log(extract_quotation('\"Hello \"World\"'));\nconsole.log(extract_quotation('\"Hello \"World\"'));\nconsole.log(extract_quotation('\"Hello \"World\"'));\nconsole.log(extract_quotation('\"Hello \"World\"'));\nconsole.log(extract_quotation('\"Hello \"World\"'));\nconsole.log(extract_quotation('\"Hello \"World\"'));\nconsole.log(extract_quotation('\"Hello \"World\"'));\nconsole.log(extract_quotation('\"Hello \"World\"'));\nconsole.log(extract_quotation('\"Hello \"World\"'));\nconsole.log(extract_quotation('\"Hello \"World\"'));\nconsole.log(extract_quotation('\"Hello \"World\"'));\nconsole.log(extract_quotation('\"Hello \"World\"'));\nconsole.log(extract_quotation('\"Hello \"World\"'));\nconsole.log(extract_quotation('\"Hello \"World\"'));\nconsole.log(extract_quotation('\"Hello \"World\"'));\nconsole.log(extract_quotation('\"Hello \"World\"'));\nconsole.log(extract_quotation('\"Hello \"World\"'));\nconsole.log(extract_quotation('\"Hello \"World\"'));\nconsole.log(extract_quotation('\"Hello \"World\"'));\nconsole.log(extract_quotation('\"Hello \"World\"'));\nconsole.log(extract_quotation('\"Hello \"World\"'));\nconsole.log(extract_",
    "    let result: string[] = [];\n    let regex = /\"([^\"]*)\"/g;\n    let match: any;\n    while (match = regex.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\n\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"Java",
    "    let result: string[] = [];\n    let regex = /\"(.*?)\"/g;\n    let match: any;\n    while (match = regex.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result: string[] = [];\n    let regex = /\"(.*?)\"/g;\n    let match: any;\n    while (match = regex.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\n\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let text2 = text1.split(\" \");\n    let text3 = [];\n    for (let i = 0; i < text2.length; i++) {\n        if (text2[i].includes(\"\\\"\")) {\n            text3.push(text2[i].replace(/\\\"/g, \"\"));\n        }\n    }\n    return text3;\n}\n",
    "    let result: string[] = [];\n    let regex = /\"(.*?)\"/g;\n    let match: any;\n    while (match = regex.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\n\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result: string = \"\";\n    let index: number = 0;\n    for (let i = 0; i < text1.length; i++) {\n        if (text1[i] == '\"') {\n            index = i;\n            break;\n        }\n    }\n    for (let i = index + 1; i < text1.length; i++) {\n        if (text1[i] == '\"') {\n            break;\n        }\n        result += text1[i];\n    }\n    return result;\n}\nconsole.log(extract_quotation('\"Python\"'));\nconsole.log(extract_quotation('\"PHP is a widely-used open source general-purpose scripting language.\"'));\nconsole.log(extract_quotation('\"JavaScript is a programming language that makes web pages interactive.\"'));\nconsole.log(extract_quotation('\"JavaScript is a programming language that makes web pages interactive.\"'));\nconsole.log(extract_quotation('\"JavaScript is a programming language that makes web pages interactive.\"'));\nconsole.log(extract_quotation('\"JavaScript is a programming language that makes web pages interactive.\"'));\nconsole.log(extract_quotation('\"JavaScript is a programming language that makes web pages interactive.\"'));\nconsole.log(extract_quotation('\"JavaScript is a programming language that makes web pages interactive.\"'));\nconsole.log(extract_quotation('\"JavaScript is a programming language that makes web pages interactive.\"'));\nconsole.log(extract_quotation('\"JavaScript is a programming language that makes web pages interactive.\"'));\nconsole.log(extract_quotation('\"JavaScript is a programming language that makes web pages interactive.\"'));\nconsole.log(extract_quotation('\"JavaScript is a programming language that makes web pages interactive.\"'));\nconsole.log(extract_quotation('\"JavaScript is a programming language that makes web pages interactive.\"'));\nconsole.log(extract_quotation('\"JavaScript is a programming language that makes web pages interactive.\"'));\nconsole.log(extract_quotation('\"JavaScript is a programming language that makes web pages interactive.\"'));\n",
    "    let regex = /\"(.*?)\"/g;\n    let result = text1.match(regex);\n    return result;\n}\n\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result: string[] = [];\n    let regex = /\"(.*?)\"/g;\n    let match: any;\n    while (match = regex.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\n",
    "    let result: string[] = [];\n    let regex: RegExp = /\"(.*?)\"/g;\n    let match: RegExpExecArray;\n    while (match = regex.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\nconsole.log(extract_quotation('\"PHP Exercises\"'));\nconsole.log(extract_quotation('\"PHP Exercises\" and \"Python Exercises\"'));\n",
    "    let text2: string = text1.replace(/[^\"]+/g, '');\n    return text2;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result: string = \"\";\n    let i: number;\n    let j: number;\n    for (i = 0; i < text1.length; i++) {\n        if (text1[i] == '\"') {\n            for (j = i + 1; j < text1.length; j++) {\n                if (text1[j] == '\"') {\n                    break;\n                }\n            }\n            result += text1.substring(i + 1, j) + \" \";\n        }\n    }\n    return result;\n}\n",
    "    let result = text1.match(/\"(.*?)\"/g);\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result: string[] = [];\n    let text2: string = text1.replace(/[^\"]+/g, function (match: string) {\n        result.push(match);\n        return \"\";\n    });\n    return result;\n}\n\nconsole.log(extract_quotation(\"\\\"Hello\\\"\"));\nconsole.log(extract_quotation(\"\\\"Hello\\\" \\\"World\\\"\"));\nconsole.log(extract_quotation(\"\\\"Hello\\\" \\\"World\\\" \\\"!\\\"\"));\nconsole.log(extract_quotation(\"\\\"Hello\\\" \\\"World\\\" \\\"!\\\" \\\"How\\\" \\\"are\\\" \\\"you\\\" \\\"today\\\"\"));\n",
    "    let result = text1.match(/\"(.*?)\"/g);\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result: string[] = [];\n    let regex = /\"(.*?)\"/g;\n    let match: any;\n    while ((match = regex.exec(text1)) !== null) {\n        result.push(match[1]);\n    }\n    return result;\n}\n",
    "    let result: any = [];\n    let regex = /\"([^\"]*)\"/g;\n    let match: any;\n    while (match = regex.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\n",
    "    let text2: string = \"\";\n    let text3: string = \"\";\n    let text4: string = \"\";\n    let text5: string = \"\";\n    let text6: string = \"\";\n    let text7: string = \"\";\n    let text8: string = \"\";\n    let text9: string = \"\";\n    let text10: string = \"\";\n    let text11: string = \"\";\n    let text12: string = \"\";\n    let text13: string = \"\";\n    let text14: string = \"\";\n    let text15: string = \"\";\n    let text16: string = \"\";\n    let text17: string = \"\";\n    let text18: string = \"\";\n    let text19: string = \"\";\n    let text20: string = \"\";\n    let text21: string = \"\";\n    let text22: string = \"\";\n    let text23: string = \"\";\n    let text24: string = \"\";\n    let text25: string = \"\";\n    let text26: string = \"\";\n    let text27: string = \"\";\n    let text28: string = \"\";\n    let text29: string = \"\";\n    let text30: string = \"\";\n    let text31: string = \"\";\n    let text32: string = \"\";\n    let text33: string = \"\";\n    let text34: string = \"\";\n    let text35: string = \"\";\n    let text36: string = \"\";\n    let text37: string = \"\";\n    let text38: string = \"\";\n    let text39: string = \"\";\n    let text40: string = \"\";\n    let text41: string = \"\";\n    let text42: string = \"\";\n    let text43: string = \"\";\n    let text44: string = \"\";\n    let text45: string = \"\";\n    let text46: string = \"\";\n    let text47: string = \"\";\n    let text48: string = \"\";\n    let text49: string = \"\";\n    let text50: string = \"\";\n    let text51: string = \"\";\n    let text52: string = \"\";\n   ",
    "    let result: string[] = [];\n    let regex: RegExp = /\"(.*?)\"/g;\n    let match: RegExpExecArray;\n    while (match = regex.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\n\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python",
    "    let reg = /\"([^\"]*)\"/g;\n    let result = text1.match(reg);\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result = text1.match(/\"(.*?)\"/g);\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result: string = \"\";\n    for (let i = 0; i < text1.length; i++) {\n        if (text1[i] == \"\\\"\") {\n            for (let j = i + 1; j < text1.length; j++) {\n                if (text1[j] == \"\\\"\") {\n                    break;\n                }\n                result += text1[j];\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_quotation(\"\\\"Hello\\\", he said.\"));\nconsole.log(extract_quotation(\"\\\"Hello\\\"\"));\nconsole.log(extract_quotation(\"\\\"\\\"\"));\nconsole.log(extract_quotation(\"\\\"Hello\\\" \\\"World\\\"\"));\nconsole.log(extract_quotation(\"\\\"Hello\\\" \\\"World\\\" \\\"!\\\"\"));\nconsole.log(extract_quotation(\"\\\"Hello\\\" \\\"World\\\" \\\"!\\\" \\\"\\\"\"));\nconsole.log(extract_quotation(\"\\\"Hello\\\" \\\"World\\\" \\\"!\\\" \\\"\\\" \\\"\\\"\"));\nconsole.log(extract_quotation(\"\\\"Hello\\\" \\\"World\\\" \\\"!\\\" \\\"\\\" \\\"\\\" \\\"\\\"\"));\nconsole.log(extract_quotation(\"\\\"Hello\\\" \\\"World\\\" \\\"!\\\" \\\"\\\" \\\"\\\" \\\"\\\" \\\"\\\"\"));\nconsole.log(extract_quotation(\"\\\"Hello\\\" \\\"World\\\" \\\"!\\\" \\\"\\\" \\\"\\\" \\\"\\\" \\\"\\\" \\\"\\\"\"));\nconsole.log(extract_quotation(\"\\\"Hello\\\" \\\"World\\\" \\\"!\\\" \\\"\\\" \\\"\\\" \\\"\\\" \\\"\\\" \\\"\\\" \\\"\\\"\"));\nconsole.log(extract_quotation(\"\\\"Hello\\\" \\\"World\\\" \\\"!\\\" \\\"\\\" \\\"\\\" \\\"\\\" \\\"\\\" \\\"\\\" \\\"\\\" \\\"\\\"\"));\nconsole.log(extract_quotation(\"\\\"Hello\\\" \\\"World\\\" \\\"!\\\" \\\"\\\" \\\"\\\" \\\"\\\" \\\"\\\" \\\"\\\" \\\"\\\" \\\"\\\" \\\"\\\"\"));\nconsole.log(extract_quotation(\"\\\"Hello\\\" \\\"World\\\" \\\"!\\\" \\\"\\\" \\\"\\\" \\\"\\\" \\\"\\\" \\\"\\\" \\\"\\\" \\\"\\\" \\\"\\\" \\\"\\\"\"));\nconsole.log(extract_quotation(\"\\\"Hello\\\" \\\"World\\\" \\\"!\\\" \\\"\\\" \\\"\\\"",
    "    let result: string[] = [];\n    let regex = /\"(.*?)\"/g;\n    let match: any;\n    while (match = regex.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\n\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let text2: string = \"\";\n    let text3: string = \"\";\n    let text4: string = \"\";\n    let text5: string = \"\";\n    let text6: string = \"\";\n    let text7: string = \"\";\n    let text8: string = \"\";\n    let text9: string = \"\";\n    let text10: string = \"\";\n    let text11: string = \"\";\n    let text12: string = \"\";\n    let text13: string = \"\";\n    let text14: string = \"\";\n    let text15: string = \"\";\n    let text16: string = \"\";\n    let text17: string = \"\";\n    let text18: string = \"\";\n    let text19: string = \"\";\n    let text20: string = \"\";\n    let text21: string = \"\";\n    let text22: string = \"\";\n    let text23: string = \"\";\n    let text24: string = \"\";\n    let text25: string = \"\";\n    let text26: string = \"\";\n    let text27: string = \"\";\n    let text28: string = \"\";\n    let text29: string = \"\";\n    let text30: string = \"\";\n    let text31: string = \"\";\n    let text32: string = \"\";\n    let text33: string = \"\";\n    let text34: string = \"\";\n    let text35: string = \"\";\n    let text36: string = \"\";\n    let text37: string = \"\";\n    let text38: string = \"\";\n    let text39: string = \"\";\n    let text40: string = \"\";\n    let text41: string = \"\";\n    let text42: string = \"\";\n    let text43: string = \"\";\n    let text44: string = \"\";\n    let text45: string = \"\";\n    let text46: string = \"\";\n    let text47: string = \"\";\n    let text48: string = \"\";\n    let text49: string = \"\";\n    let text50: string = \"\";\n    let text51: string = \"\";\n    let text52: string = \"\";\n   ",
    "    let result: string[] = [];\n    let regex = /\"(.*?)\"/g;\n    let match: any;\n    while (match = regex.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\n\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result = text1.match(/\"(.*?)\"/g);\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    var text2 = text1.split('\"');\n    var text3 = text2.filter(function (x) { return x != \"\"; });\n    return text3;\n}\n",
    "    let result: string[] = [];\n    let index: number = 0;\n    let start: number = 0;\n    let end: number = 0;\n    while (index < text1.length) {\n        if (text1[index] === '\"') {\n            if (start === 0) {\n                start = index;\n            } else {\n                end = index;\n                result.push(text1.substring(start + 1, end));\n                start = 0;\n            }\n        }\n        index++;\n    }\n    return result;\n}\n",
    "    let result: string = \"\";\n    let quotation: boolean = false;\n    for (let i: number = 0; i < text1.length; i++) {\n        if (text1[i] === '\"') {\n            quotation = !quotation;\n        } else if (quotation) {\n            result += text1[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_quotation('\"Python\" is a \"programming language\"'));\nconsole.log(extract_quotation('\"I am a \"tester\"'));\nconsole.log(extract_quotation('\"This\" doesn\\'t make any \"sense\"'));\n",
    "    let result: string[] = [];\n    let regex = /\"([^\"]*)\"/g;\n    let match: any;\n    while (match = regex.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\n\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"Java",
    "    let result: string[] = [];\n    let index: number = 0;\n    let start: number = 0;\n    let end: number = 0;\n    while (index < text1.length) {\n        if (text1[index] == '\"') {\n            if (start == 0) {\n                start = index;\n            } else {\n                end = index;\n                result.push(text1.substring(start + 1, end));\n                start = 0;\n                end = 0;\n            }\n        }\n        index++;\n    }\n    return result;\n}\n",
    "    let result: string[] = [];\n    let regex = /\"(.*?)\"/g;\n    let match: any;\n    while (match = regex.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result: string = \"\";\n    let start: number = text1.indexOf(\"\\\"\");\n    let end: number = text1.indexOf(\"\\\"\", start + 1);\n    result = text1.substring(start + 1, end);\n    return result;\n}\nconsole.log(extract_quotation(\"\\\"Hello\\\"\"));\n",
    "    let result = text1.match(/\"(.*?)\"/g);\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result: string[] = [];\n    let regex = /\"(.*?)\"/g;\n    let match;\n    while (match = regex.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let text2: string = \"\";\n    for (let i: number = 0; i < text1.length; i++) {\n        if (text1[i] == \"\\\"\") {\n            for (let j: number = i + 1; j < text1.length; j++) {\n                if (text1[j] == \"\\\"\") {\n                    return text2;\n                }\n                text2 += text1[j];\n            }\n        }\n    }\n}\n",
    "    let text2 = text1.split('');\n    let text3 = [];\n    for (let i = 0; i < text2.length; i++) {\n        if (text2[i] === '\"') {\n            text3.push(i);\n        }\n    }\n    let text4 = text1.slice(text3[0] + 1, text3[1]);\n    return text4;\n}\nconsole.log(extract_quotation('\"Python\"'));\nconsole.log(extract_quotation('\"PHP\"'));\nconsole.log(extract_quotation('\"JavaScript\"'));\n",
    "    let regex = /\"(.*?)\"/g;\n    let result = text1.match(regex);\n    return result;\n}\nconsole.log(extract_quotation(\"\\\"PHP Exercises\\\" and \\\"Python Exercises\\\"\"));\n",
    "    let result: string[] = [];\n    let regex = /\"(.*?)\"/g;\n    let match: any;\n    while (match = regex.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\n",
    "    let text2: string = text1;\n    let text3: string = \"\";\n    let text4: string = \"\";\n    let text5: string = \"\";\n    let text6: string = \"\";\n    let text7: string = \"\";\n    let text8: string = \"\";\n    let text9: string = \"\";\n    let text10: string = \"\";\n    let text11: string = \"\";\n    let text12: string = \"\";\n    let text13: string = \"\";\n    let text14: string = \"\";\n    let text15: string = \"\";\n    let text16: string = \"\";\n    let text17: string = \"\";\n    let text18: string = \"\";\n    let text19: string = \"\";\n    let text20: string = \"\";\n    let text21: string = \"\";\n    let text22: string = \"\";\n    let text23: string = \"\";\n    let text24: string = \"\";\n    let text25: string = \"\";\n    let text26: string = \"\";\n    let text27: string = \"\";\n    let text28: string = \"\";\n    let text29: string = \"\";\n    let text30: string = \"\";\n    let text31: string = \"\";\n    let text32: string = \"\";\n    let text33: string = \"\";\n    let text34: string = \"\";\n    let text35: string = \"\";\n    let text36: string = \"\";\n    let text37: string = \"\";\n    let text38: string = \"\";\n    let text39: string = \"\";\n    let text40: string = \"\";\n    let text41: string = \"\";\n    let text42: string = \"\";\n    let text43: string = \"\";\n    let text44: string = \"\";\n    let text45: string = \"\";\n    let text46: string = \"\";\n    let text47: string = \"\";\n    let text48: string = \"\";\n    let text49: string = \"\";\n    let text50: string = \"\";\n    let text51: string = \"\";\n    let text52: string = \"\";\n",
    "    let result: string = \"\";\n    let flag: boolean = false;\n    for (let i: number = 0; i < text1.length; i++) {\n        if (text1[i] === '\"') {\n            flag = !flag;\n        }\n        if (flag) {\n            result += text1[i];\n        }\n    }\n    return result;\n}\n",
    "    let reg = /\"(.*?)\"/g;\n    let result = text1.match(reg);\n    return result;\n}\n",
    "    let result: string[] = [];\n    let text2: string = text1.replace(/[\"']/g, '');\n    let text3: string[] = text2.split(' ');\n    for (let i: number = 0; i < text3.length; i++) {\n        if (text3[i].includes('\"')) {\n            result.push(text3[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_quotation('\"Python\" \"PHP\" \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\" is \"the best\" language'));\nconsole.log(extract_quotation('\"PHP\" is \"the best\" language'));\nconsole.log(extract_quotation('\"PHP\" is \"the best\" language'));\nconsole.log(extract_quotation('\"PHP\" is \"the best\" language'));\nconsole.log(extract_quotation('\"PHP\" is \"the best\" language'));\nconsole.log(extract_quotation('\"PHP\" is \"the best\" language'));\nconsole.log(extract_quotation('\"PHP\" is \"the best\" language'));\nconsole.log(extract_quotation('\"PHP\" is \"the best\" language'));\nconsole.log(extract_quotation('\"PHP\" is \"the best\" language'));\nconsole.log(extract_quotation('\"PHP\" is \"the best\" language'));\nconsole.log(extract_quotation('\"PHP\" is \"the best\" language'));\nconsole.log(extract_quotation('\"PHP\" is \"the best\" language'));\nconsole.log(extract_quotation('\"PHP\" is \"the best\" language'));\nconsole.log(extract_quotation('\"PHP\" is \"the best\" language'));\nconsole.log(extract_quotation('\"PHP\" is \"the best\" language'));\nconsole.log(extract_quotation('\"PHP\" is \"the best\" language'));\nconsole.log(extract_quotation('\"PHP",
    "    let result: string[] = [];\n    let regex = /\"(.*?)\"/g;\n    let text: RegExpExecArray | null;\n\n    while (text = regex.exec(text1)) {\n        result.push(text[1]);\n    }\n    return result;\n}\n\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('Python, PHP, JavaScript'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('Python, PHP, JavaScript'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\n",
    "    let text2 = text1.split(\" \");\n    let text3 = [];\n    for (let i = 0; i < text2.length; i++) {\n        if (text2[i].includes('\"')) {\n            text3.push(text2[i]);\n        }\n    }\n    return text3;\n}\nconsole.log(extract_quotation('\"PHP Exercises\"'));\nconsole.log(extract_quotation('\"Python Exercises\"'));\nconsole.log(extract_quotation('\"Laravel Exercises\"'));\n",
    "    let text2 = text1.split(\" \");\n    let text3 = [];\n    for (let i = 0; i < text2.length; i++) {\n        if (text2[i].charAt(0) == '\"') {\n            text3.push(text2[i]);\n        }\n    }\n    return text3;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result: string[] = [];\n    let regex = /\"(.*?)\"/g;\n    let text = text1.match(regex);\n    for (let i = 0; i < text.length; i++) {\n        result.push(text[i].replace(/\"/g, \"\"));\n    }\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result: string[] = [];\n    let text2: string = text1.replace(/[^\"]/g, \"\");\n    for (let i: number = 0; i < text2.length; i++) {\n        if (text2[i] === \"\\\"\") {\n            result.push(text2[i + 1]);\n        }\n    }\n    return result;\n}\nconsole.log(extract_quotation(\"\\\"Hello\\\", he said, \\\"today is a nice day!\\\"\"));\n",
    "    let result: string[] = [];\n    let index: number = 0;\n    let index2: number = 0;\n    while (index < text1.length) {\n        if (text1[index] == '\"') {\n            index2 = index + 1;\n            while (text1[index2] != '\"') {\n                index2++;\n            }\n            result.push(text1.substring(index + 1, index2));\n            index = index2 + 1;\n        }\n        else {\n            index++;\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_quotation('\"Hello\" \"World\"'));\nconsole.log(extract_quotation('\"Hello\" \"World\" \"!\"'));\nconsole.log(extract_quotation('\"Hello\" \"World\" \"!\" \"!\"'));\nconsole.log(extract_quotation('\"Hello\" \"World\" \"!\" \"!\" \"!\"'));\nconsole.log(extract_quotation('\"Hello\" \"World\" \"!\" \"!\" \"!\" \"!\"'));\nconsole.log(extract_quotation('\"Hello\" \"World\" \"!\" \"!\" \"!\" \"!\" \"!\"'));\nconsole.log(extract_quotation('\"Hello\" \"World\" \"!\" \"!\" \"!\" \"!\" \"!\" \"!\"'));\nconsole.log(extract_quotation('\"Hello\" \"World\" \"!\" \"!\" \"!\" \"!\" \"!\" \"!\" \"!\"'));\nconsole.log(extract_quotation('\"Hello\" \"World\" \"!\" \"!\" \"!\" \"!\" \"!\" \"!\" \"!\" \"!\"'));\nconsole.log(extract_quotation('\"Hello\" \"World\" \"!\" \"!\" \"!\" \"!\" \"!\" \"!\" \"!\" \"!\" \"!\"'));\nconsole.log(extract_quotation('\"Hello\" \"World\" \"!\" \"!\" \"!\" \"!\" \"!\" \"!\" \"!\" \"!\" \"!\" \"!\"'));\nconsole.log(extract_quotation('\"Hello\" \"World\" \"!\" \"!\" \"!\" \"!\" \"!\" \"!\" \"!\" \"!\" \"!\" \"!\" \"!\"'));\nconsole.log(extract_quotation('\"Hello",
    "    let result = text1.match(/\"(.*?)\"/g);\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result = text1.match(/\"(.*?)\"/g);\n    return result;\n}\n\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_qu",
    "    let result: string[] = [];\n    let text2: string = text1.replace(/\\s/g, \"\");\n    let text3: string = text2.replace(/\\'/g, \"\\\"\");\n    let text4: string = text3.replace(/\\\u201c/g, \"\\\"\");\n    let text5: string = text4.replace(/\\\u201d/g, \"\\\"\");\n    let text6: string = text5.replace(/\\\u2018/g, \"\\\"\");\n    let text7: string = text6.replace(/\\\u2019/g, \"\\\"\");\n    let text8: string = text7.replace(/\\\u201e/g, \"\\\"\");\n    let text9: string = text8.replace(/\\\u201c/g, \"\\\"\");\n    let text10: string = text9.replace(/\\\u201e/g, \"\\\"\");\n    let text11: string = text10.replace(/\\\u201c/g, \"\\\"\");\n    let text12: string = text11.replace(/\\\u201e/g, \"\\\"\");\n    let text13: string = text12.replace(/\\\u201c/g, \"\\\"\");\n    let text14: string = text13.replace(/\\\u201e/g, \"\\\"\");\n    let text15: string = text14.replace(/\\\u201c/g, \"\\\"\");\n    let text16: string = text15.replace(/\\\u201e/g, \"\\\"\");\n    let text17: string = text16.replace(/\\\u201c/g, \"\\\"\");\n    let text18: string = text17.replace(/\\\u201e/g, \"\\\"\");\n    let text19: string = text18.replace(/\\\u201c/g, \"\\\"\");\n    let text20: string = text19.replace(/\\\u201e/g, \"\\\"\");\n    let text21: string = text20.replace(/\\\u201c/g, \"\\\"\");\n    let text22: string = text21.replace(/\\\u201e/g, \"\\\"\");\n    let text23: string = text22.replace(/\\\u201c/g, \"\\\"\");\n",
    "    let text2 = text1.split(\" \");\n    let text3 = [];\n    for (let i = 0; i < text2.length; i++) {\n        if (text2[i].charAt(0) == '\"') {\n            text3.push(text2[i].substring(1, text2[i].length - 1));\n        }\n    }\n    return text3;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let text = text1.split(\" \");\n    let result = [];\n    for (let i = 0; i < text.length; i++) {\n        if (text[i].includes('\"')) {\n            result.push(text[i].slice(1, text[i].length - 1));\n        }\n    }\n    return result;\n}\n",
    "    let text2 = text1.split(\" \");\n    let text3 = [];\n    for (let i = 0; i < text2.length; i++) {\n        if (text2[i].includes('\"')) {\n            text3.push(text2[i]);\n        }\n    }\n    return text3;\n}\nconsole.log(extract_quotation('\"PHP exercises\", \"PHP exercises again\"'));\n",
    "    let text2 = text1.split(\" \");\n    let text3 = [];\n    for (let i = 0; i < text2.length; i++) {\n        if (text2[i].charAt(0) === '\"' && text2[i].charAt(text2[i].length - 1) === '\"') {\n            text3.push(text2[i].substring(1, text2[i].length - 1));\n        }\n    }\n    return text3;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let regex = /\"(.*?)\"/g;\n    let result = text1.match(regex);\n    return result;\n}\nconsole.log(extract_quotation(\"\\\"PHP Exercises\\\" and \\\"Python Exercises\\\"\"));\n",
    "    let result: string[] = [];\n    let regex = /\"(.*?)\"/g;\n    let match: any;\n    while (match = regex.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\nconsole.log(extract_quotation(\"\\\"PHP Exercises\\\" and \\\"Python Exercises\\\"\"));\n",
    "    let reg = /\"(.*?)\"/g;\n    let result = text1.match(reg);\n    return result;\n}\n",
    "    let text2 = text1.split(\" \");\n    let text3 = [];\n    for (let i = 0; i < text2.length; i++) {\n        if (text2[i].charAt(0) === '\"') {\n            text3.push(text2[i].slice(1, text2[i].length - 1));\n        }\n    }\n    return text3;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result: string = \"\";\n    let index: number = 0;\n    for (let i: number = 0; i < text1.length; i++) {\n        if (text1[i] == '\"') {\n            index = i;\n            break;\n        }\n    }\n    for (let i: number = index + 1; i < text1.length; i++) {\n        if (text1[i] == '\"') {\n            break;\n        }\n        result += text1[i];\n    }\n    return result;\n}\nconsole.log(extract_quotation('\"Python\"'));\nconsole.log(extract_quotation('\"PHP is a widely-used open source general-purpose scripting language.\"'));\n",
    "    let result: string = \"\";\n    for (let i: number = 0; i < text1.length; i++) {\n        if (text1[i] == \"\\\"\") {\n            for (let j: number = i + 1; j < text1.length; j++) {\n                if (text1[j] == \"\\\"\") {\n                    return result;\n                }\n                result += text1[j];\n            }\n        }\n    }\n    return result;\n}\nconsole.log(\"extract_quotation: \" + extract_quotation(\"\\\"Hello\\\"\"));\n",
    "    let result: string = \"\";\n    let text2: string = \"\";\n    for (let i: number = 0; i < text1.length; i++) {\n        if (text1[i] == '\"') {\n            for (let j: number = i + 1; j < text1.length; j++) {\n                if (text1[j] == '\"') {\n                    text2 = text1.slice(i + 1, j);\n                    result = result + \" \" + text2;\n                    break;\n                }\n            }\n        }\n    }\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let text2: string = text1.replace(/[^\"]+/g, '');\n    return text2;\n}\nconsole.log(extract_quotation('\"Python\", \"JavaScript\", \"PHP\"'));\n",
    "    let result = text1.match(/\"(.*?)\"/g);\n    return result;\n}\n\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP",
    "    let text2: string = \"\";\n    let text3: string = \"\";\n    let text4: string = \"\";\n    let text5: string = \"\";\n    let text6: string = \"\";\n    let text7: string = \"\";\n    let text8: string = \"\";\n    let text9: string = \"\";\n    let text10: string = \"\";\n    let text11: string = \"\";\n    let text12: string = \"\";\n    let text13: string = \"\";\n    let text14: string = \"\";\n    let text15: string = \"\";\n    let text16: string = \"\";\n    let text17: string = \"\";\n    let text18: string = \"\";\n    let text19: string = \"\";\n    let text20: string = \"\";\n    let text21: string = \"\";\n    let text22: string = \"\";\n    let text23: string = \"\";\n    let text24: string = \"\";\n    let text25: string = \"\";\n    let text26: string = \"\";\n    let text27: string = \"\";\n    let text28: string = \"\";\n    let text29: string = \"\";\n    let text30: string = \"\";\n    let text31: string = \"\";\n    let text32: string = \"\";\n    let text33: string = \"\";\n    let text34: string = \"\";\n    let text35: string = \"\";\n    let text36: string = \"\";\n    let text37: string = \"\";\n    let text38: string = \"\";\n    let text39: string = \"\";\n    let text40: string = \"\";\n    let text41: string = \"\";\n    let text42: string = \"\";\n    let text43: string = \"\";\n    let text44: string = \"\";\n    let text45: string = \"\";\n    let text46: string = \"\";\n    let text47: string = \"\";\n    let text48: string = \"\";\n    let text49: string = \"\";\n    let text50: string = \"\";\n    let text51: string = \"\";\n    let text52: string = \"\";\n   ",
    "    let result: string[] = [];\n    let regex = /\"(.*?)\"/g;\n    let match: any;\n    while (match = regex.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result = text1.match(/\"(.*?)\"/g);\n    return result;\n}\n\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_qu",
    "    let text2 = text1.split(\" \");\n    let text3 = [];\n    for (let i = 0; i < text2.length; i++) {\n        if (text2[i].charAt(0) == '\"') {\n            text3.push(text2[i].substring(1, text2[i].length - 1));\n        }\n    }\n    return text3;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let pattern: RegExp = /\"(.*?)\"/g;\n    let result: any = pattern.exec(text1);\n    return result[1];\n}\nconsole.log(extract_quotation('\"Hello, world!\"'));\nconsole.log(extract_quotation('\"Hello, world!\" \"Hello, world!\"'));\nconsole.log(extract_quotation('\"Hello, world!\" \"Hello, world!\" \"Hello, world!\"'));\n",
    "    let result: any = [];\n    let regex: RegExp = /\"(.*?)\"/g;\n    let match: any;\n    while (match = regex.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\nconsole.log(extract_quotation(\"\\\"PHP Exercises\\\" and \\\"Python Exercises\\\"\"));\n",
    "  let result = text1.match(/\".*\"/g);\n  return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result: string[] = [];\n    let regexp: RegExp = /\"(.*?)\"/g;\n    let match: RegExpExecArray | null;\n    while (match = regexp.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result: string[] = [];\n    let regex = /\"(.*?)\"/g;\n    let match: RegExpExecArray;\n    while (match = regex.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\n\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let regex = /\"(.*?)\"/g;\n    let result = text1.match(regex);\n    return result;\n}\nconsole.log(extract_quotation(\"\\\"PHP Exercises\\\" and \\\"Python Exercises\\\"\"));\n",
    "    let result = text1.match(/\"(.*?)\"/g);\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let text = text1.split(\" \");\n    let result = [];\n    for (let i = 0; i < text.length; i++) {\n        if (text[i].charAt(0) === '\"' && text[i].charAt(text[i].length - 1) === '\"') {\n            result.push(text[i]);\n        }\n    }\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result: string[] = [];\n    let text2: string = text1.replace(/\\\"/g, \"\");\n    let text3: string[] = text2.split(\" \");\n    for (let i: number = 0; i < text3.length; i++) {\n        if (text3[i].startsWith(\"\\\"\")) {\n            result.push(text3[i]);\n        }\n    }\n    return result;\n}\n",
    "    let text2 = text1.split(\" \");\n    let text3 = [];\n    for (let i = 0; i < text2.length; i++) {\n        if (text2[i].charAt(0) === \"\\\"\") {\n            text3.push(text2[i].substring(1, text2[i].length - 1));\n        }\n    }\n    return text3;\n}\nconsole.log(extract_quotation(\"\\\"Hello\\\" \\\"World\\\"\"));\n",
    "    let result = text1.match(/\"(.*?)\"/g);\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result: string[] = [];\n    let regex = /\"(.*?)\"/g;\n    let match: RegExpExecArray;\n    while (match = regex.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let text2 = text1.split(\" \");\n    let text3 = [];\n    for (let i = 0; i < text2.length; i++) {\n        if (text2[i].startsWith('\"')) {\n            text3.push(text2[i].substring(1, text2[i].length - 1));\n        }\n    }\n    return text3;\n}\n\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result: string[] = [];\n    let regex = /\"([^\"]*)\"/g;\n    let match: any;\n    while (match = regex.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result: any = [];\n    let regex = /\"(.*?)\"/g;\n    let text2: any;\n    while (text2 = regex.exec(text1)) {\n        result.push(text2[1]);\n    }\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result: string[] = [];\n    let start: number = 0;\n    let end: number = 0;\n    for (let i: number = 0; i < text1.length; i++) {\n        if (text1[i] === '\"') {\n            if (start === 0) {\n                start = i;\n            } else {\n                end = i;\n                result.push(text1.substring(start + 1, end));\n                start = 0;\n            }\n        }\n    }\n    return result;\n}\n",
    "    let result: string[] = [];\n    let start: number = text1.indexOf(\"\\\"\");\n    let end: number = text1.indexOf(\"\\\"\", start + 1);\n    while (start > -1 && end > -1) {\n        result.push(text1.substring(start + 1, end));\n        start = text1.indexOf(\"\\\"\", end + 1);\n        end = text1.indexOf(\"\\\"\", start + 1);\n    }\n    return result;\n}\n",
    "    let result: string[] = [];\n    let regex = /\"(.*?)\"/g;\n    let match: any;\n    while (match = regex.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\nconsole.log(extract_quotation(\"\\\"PHP Exercises\\\" and \\\"Python Exercises\\\"\"));\n",
    "    let text2: string = \"\";\n    for (let i: number = 0; i < text1.length; i++) {\n        if (text1[i] == \"\\\"\") {\n            for (let j: number = i + 1; j < text1.length; j++) {\n                if (text1[j] == \"\\\"\") {\n                    break;\n                }\n                text2 += text1[j];\n            }\n            break;\n        }\n    }\n    return text2;\n}\n",
    "    let result = text1.match(/\"(.*?)\"/g);\n    return result;\n}\n\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result: string[] = [];\n    let text2: string = text1.replace(/[^\"]+/g, '');\n    let text3: string = text2.replace(/[\"\"]+/g, ' ');\n    let text4: string = text3.trim();\n    result = text4.split(' ');\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result: string[] = [];\n    let regex = /\"(.*?)\"/g;\n    let match: any;\n    while (match = regex.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result: string[] = [];\n    let reg: RegExp = /\"(.*?)\"/g;\n    let match: RegExpExecArray;\n    while (match = reg.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\n\nconsole.log(extract_quotation('\"hello\" \"world\" \"!\"'));\nconsole.log(extract_quotation('\"hello\" \"world\" \"!\" \"!\"'));\nconsole.log(extract_quotation('\"hello\" \"world\" \"!\" \"!\" \"!\"'));\n",
    "    let result = text1.match(/\"(.*?)\"/g);\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let text2 = text1.split(\" \");\n    let text3 = [];\n    for (let i = 0; i < text2.length; i++) {\n        if (text2[i].charAt(0) === '\"') {\n            text3.push(text2[i].slice(1, text2[i].length - 1));\n        }\n    }\n    return text3;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let text2: string = \"\";\n    for (let i: number = 0; i < text1.length; i++) {\n        if (text1[i] === \"\\\"\") {\n            for (let j: number = i + 1; j < text1.length; j++) {\n                if (text1[j] === \"\\\"\") {\n                    break;\n                } else {\n                    text2 += text1[j];\n                }\n            }\n            break;\n        }\n    }\n    return text2;\n}\nconsole.log(extract_quotation(\"\\\"Hello\\\"\"));\nconsole.log(extract_quotation(\"\\\"Hello\\\" \\\"World\\\"\"));\nconsole.log(extract_quotation(\"\\\"Hello\\\" \\\"World\\\" \\\"!\\\"\"));\nconsole.log(extract_quotation(\"\\\"Hello\\\" \\\"World\\\" \\\"!\\\" \\\"How\\\" \\\"are\\\" \\\"you\\\" \\\"doing\\\" \\\"today\\\" \\\"?\\\"\"));\n",
    "    let text2: string = text1.replace(/[^\"]+/g, '');\n    return text2;\n}\nconsole.log(extract_quotation('\"PHP exercises\", \"PHP exercises\", \"PHP exercises\"'));\n",
    "    let result: string = \"\";\n    for (let i: number = 0; i < text1.length; i++) {\n        if (text1[i] == \"\\\"\") {\n            for (let j: number = i + 1; j < text1.length; j++) {\n                if (text1[j] == \"\\\"\") {\n                    break;\n                }\n                result += text1[j];\n            }\n        }\n    }\n    return result;\n}\nconsole.log(extract_quotation(\"\\\"Hello\\\"\"));\nconsole.log(extract_quotation(\"\\\"Hello\\\" \\\"World\\\"\"));\nconsole.log(extract_quotation(\"\\\"Hello\\\" \\\"World\\\" \\\"!\\\"\"));\n",
    "    let result: string[] = [];\n    let regexp: RegExp = /\"([^\"]*)\"/g;\n    let match: RegExpExecArray | null;\n    while (match = regexp.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\n\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result = text1.match(/\"(.*?)\"/g);\n    return result;\n}\n\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result = [];\n    let start = 0;\n    let end = 0;\n    for (let i = 0; i < text1.length; i++) {\n        if (text1[i] == '\"') {\n            if (start == 0) {\n                start = i;\n            } else {\n                end = i;\n                result.push(text1.substring(start + 1, end));\n                start = 0;\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('Python, PHP, JavaScript'));\n",
    "    let result: string[] = [];\n    let regex = /\"([^\"]*)\"/g;\n    let match;\n    while (match = regex.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\n\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\n",
    "    let result: string[] = [];\n    let regex = /\"(.*?)\"/g;\n    let match: any;\n    while (match = regex.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"JavaScript\", \"PHP\"'));\n",
    "    let result = [];\n    let temp = \"\";\n    for (let i = 0; i < text1.length; i++) {\n        if (text1[i] == \"\\\"\") {\n            temp = \"\";\n            i++;\n            while (text1[i] != \"\\\"\") {\n                temp += text1[i];\n                i++;\n            }\n            result.push(temp);\n        }\n    }\n    return result;\n}\nconsole.log(extract_quotation(\"\\\"PHP Exercises\\\" and \\\"Python Exercises\\\"\"));\n",
    "    let result: any = [];\n    let regex = /\"(.*?)\"/g;\n    let match: any;\n    while (match = regex.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let text2: string = text1.replace(/[^\"]/g, \"\");\n    return text2;\n}\n\nconsole.log(extract_quotation(\"\\\"Hello\\\", \\\"world\\\"\"));\n",
    "    let result: string[] = [];\n    let regex: RegExp = /\"(.*?)\"/g;\n    let match: RegExpExecArray;\n    while (match = regex.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\n\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let text2: string = \"\";\n    for (let i = 0; i < text1.length; i++) {\n        if (text1[i] == \"\\\"\") {\n            for (let j = i + 1; j < text1.length; j++) {\n                if (text1[j] == \"\\\"\") {\n                    break;\n                }\n                text2 += text1[j];\n            }\n            break;\n        }\n    }\n    return text2;\n}\nconsole.log(extract_quotation(\"\\\"Hello\\\"\"));\nconsole.log(extract_quotation(\"\\\"Hello, world!\\\"\"));\nconsole.log(extract_quotation(\"\\\"Hello, world!\\\" is a string.\"));\nconsole.log(extract_quotation(\"\\\"Hello, world!\\\" is a string.\"));\nconsole.log(extract_quotation(\"\\\"Hello, world!\\\" is a string.\"));\nconsole.log(extract_quotation(\"\\\"Hello, world!\\\" is a string.\"));\nconsole.log(extract_quotation(\"\\\"Hello, world!\\\" is a string.\"));\nconsole.log(extract_quotation(\"\\\"Hello, world!\\\" is a string.\"));\nconsole.log(extract_quotation(\"\\\"Hello, world!\\\" is a string.\"));\nconsole.log(extract_quotation(\"\\\"Hello, world!\\\" is a string.\"));\nconsole.log(extract_quotation(\"\\\"Hello, world!\\\" is a string.\"));\nconsole.log(extract_quotation(\"\\\"Hello, world!\\\" is a string.\"));\nconsole.log(extract_quotation(\"\\\"Hello, world!\\\" is a string.\"));\nconsole.log(extract_quotation(\"\\\"Hello, world!\\\" is a string.\"));\nconsole.log(extract_quotation(\"\\\"Hello, world!\\\" is a string.\"));\nconsole.log(extract_quotation(\"\\\"Hello, world!\\\" is a string.\"));\nconsole.log(extract_quotation(\"\\\"Hello, world!\\\" is a string.\"));\nconsole.log(extract_quotation(\"\\\"Hello, world!\\\" is a string.\"));\nconsole.log(extract_qu",
    "    let result: string[] = [];\n    let text: string = text1;\n    let index: number = 0;\n    while (text.indexOf('\"') !== -1) {\n        index = text.indexOf('\"');\n        text = text.slice(index + 1);\n        index = text.indexOf('\"');\n        result.push(text.slice(0, index));\n        text = text.slice(index + 1);\n    }\n    return result;\n}\n",
    "    let result: string[] = [];\n    let regexp: RegExp = /\"([^\"]*)\"/g;\n    let match: RegExpExecArray | null;\n\n    while (match = regexp.exec(text1)) {\n        result.push(match[1]);\n    }\n\n    return result;\n}\n\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('Python, PHP, JavaScript'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('Python, PHP, JavaScript'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('Python, PHP, JavaScript'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('Python, PHP, JavaScript'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('Python, PHP, JavaScript'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('Python, PHP, JavaScript'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python",
    "    let result: any = [];\n    let regex: RegExp = /\"(.*?)\"/g;\n    let match: any;\n    while (match = regex.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result = text1.match(/\"(.*?)\"/g);\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result: string[] = [];\n    let regex = /\"([^\"]*)\"/g;\n    let match: any;\n    while (match = regex.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\",",
    "    let result: string[] = [];\n    let text: string = text1;\n    let index: number = 0;\n    while (text.indexOf('\"') !== -1) {\n        index = text.indexOf('\"');\n        text = text.slice(index + 1);\n        index = text.indexOf('\"');\n        result.push(text.slice(0, index));\n        text = text.slice(index + 1);\n    }\n    return result;\n}\n",
    "    let result = text1.match(/\"(.*?)\"/g);\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let regex = /\"([^\"]*)\"/g;\n    let result = text1.match(regex);\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result: string[] = [];\n    let text: string = text1;\n    let index: number = 0;\n    while (text.indexOf('\"') !== -1) {\n        index = text.indexOf('\"');\n        text = text.slice(index + 1);\n        index = text.indexOf('\"');\n        result.push(text.slice(0, index));\n        text = text.slice(index + 1);\n    }\n    return result;\n}\n",
    "    let text2 = text1.split(\" \");\n    let text3 = [];\n    for (let i = 0; i < text2.length; i++) {\n        if (text2[i].charAt(0) === '\"') {\n            text3.push(text2[i].slice(1, text2[i].length - 1));\n        }\n    }\n    return text3;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result: string[] = [];\n    let text2: string = text1.replace(/\\s/g, \"\");\n    let text3: string = text2.replace(/\\'/g, \"\");\n    let text4: string = text3.replace(/\\`/g, \"\");\n    let text5: string = text4.replace(/\\\u2018/g, \"\");\n    let text6: string = text5.replace(/\\\u2019/g, \"\");\n    let text7: string = text6.replace(/\\\u201c/g, \"\");\n    let text8: string = text7.replace(/\\\u201d/g, \"\");\n    let text9: string = text8.replace(/\\\u201e/g, \"\");\n    let text10: string = text9.replace(/\\\u00ab/g, \"\");\n    let text11: string = text10.replace(/\\\u00bb/g, \"\");\n    let text12: string = text11.replace(/\\\u2039/g, \"\");\n    let text13: string = text12.replace(/\\\u203a/g, \"\");\n    let text14: string = text13.replace(/\\\u201a/g, \"\");\n    let text15: string = text14.replace(/\\\u201e/g, \"\");\n    let text16: string = text15.replace(/\\\u201c/g, \"\");\n    let text17: string = text16.replace(/\\\u201d/g, \"\");\n    let text18: string = text17.replace(/\\\u2018/g, \"\");\n    let text19: string = text18.replace(/\\\u2019/g, \"\");\n    let text20: string = text19.replace(/\\\u201e/g, \"\");\n    let text21: string = text20.replace(/\\\u201c/g, \"\");\n    let text22: string = text21.replace(/\\\u201d/g, \"\");\n    let text23: string = text22.replace(/\\\u2018/g, \"\");\n    let text24: string = text23.replace(/\\\u2019/g, \"\");\n    let",
    "    let result = text1.match(/\"(.*?)\"/g);\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let text2: string = text1.replace(/[^\"]+/g, '');\n    return text2;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result = text1.match(/\"(.*?)\"/g);\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result = text1.match(/\"(.*?)\"/g);\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result = text1.match(/\"(.*?)\"/g);\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result: string[] = [];\n    let regex = /\"(.*?)\"/g;\n    let match: RegExpExecArray | null;\n    while (match = regex.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\",",
    "    let result = text1.match(/\"(.*?)\"/g);\n    return result;\n}\n\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"Python\"'));\n",
    "    let text2: string = \"\";\n    let text3: string = \"\";\n    let text4: string = \"\";\n    let text5: string = \"\";\n    let text6: string = \"\";\n    let text7: string = \"\";\n    let text8: string = \"\";\n    let text9: string = \"\";\n    let text10: string = \"\";\n    let text11: string = \"\";\n    let text12: string = \"\";\n    let text13: string = \"\";\n    let text14: string = \"\";\n    let text15: string = \"\";\n    let text16: string = \"\";\n    let text17: string = \"\";\n    let text18: string = \"\";\n    let text19: string = \"\";\n    let text20: string = \"\";\n    let text21: string = \"\";\n    let text22: string = \"\";\n    let text23: string = \"\";\n    let text24: string = \"\";\n    let text25: string = \"\";\n    let text26: string = \"\";\n    let text27: string = \"\";\n    let text28: string = \"\";\n    let text29: string = \"\";\n    let text30: string = \"\";\n    let text31: string = \"\";\n    let text32: string = \"\";\n    let text33: string = \"\";\n    let text34: string = \"\";\n    let text35: string = \"\";\n    let text36: string = \"\";\n    let text37: string = \"\";\n    let text38: string = \"\";\n    let text39: string = \"\";\n    let text40: string = \"\";\n    let text41: string = \"\";\n    let text42: string = \"\";\n    let text43: string = \"\";\n    let text44: string = \"\";\n    let text45: string = \"\";\n    let text46: string = \"\";\n    let text47: string = \"\";\n    let text48: string = \"\";\n    let text49: string = \"\";\n    let text50: string = \"\";\n    let text51: string = \"\";\n    let text52: string = \"\";\n   ",
    "    let result: any = [];\n    let regex = /\"(.*?)\"/g;\n    let match: any;\n    while (match = regex.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\n\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\nconsole.log(extract_quotation('\"PHP\", \"JavaScript\"'));\n",
    "    let text2: string = \"\";\n    let text3: string = \"\";\n    let text4: string = \"\";\n    let text5: string = \"\";\n    let text6: string = \"\";\n    let text7: string = \"\";\n    let text8: string = \"\";\n    let text9: string = \"\";\n    let text10: string = \"\";\n    let text11: string = \"\";\n    let text12: string = \"\";\n    let text13: string = \"\";\n    let text14: string = \"\";\n    let text15: string = \"\";\n    let text16: string = \"\";\n    let text17: string = \"\";\n    let text18: string = \"\";\n    let text19: string = \"\";\n    let text20: string = \"\";\n    let text21: string = \"\";\n    let text22: string = \"\";\n    let text23: string = \"\";\n    let text24: string = \"\";\n    let text25: string = \"\";\n    let text26: string = \"\";\n    let text27: string = \"\";\n    let text28: string = \"\";\n    let text29: string = \"\";\n    let text30: string = \"\";\n    let text31: string = \"\";\n    let text32: string = \"\";\n    let text33: string = \"\";\n    let text34: string = \"\";\n    let text35: string = \"\";\n    let text36: string = \"\";\n    let text37: string = \"\";\n    let text38: string = \"\";\n    let text39: string = \"\";\n    let text40: string = \"\";\n    let text41: string = \"\";\n    let text42: string = \"\";\n    let text43: string = \"\";\n    let text44: string = \"\";\n    let text45: string = \"\";\n    let text46: string = \"\";\n    let text47: string = \"\";\n    let text48: string = \"\";\n    let text49: string = \"\";\n    let text50: string = \"\";\n    let text51: string = \"\";\n    let text52: string = \"\";\n   ",
    "    let text2 = text1.match(/\"(.*?)\"/g);\n    return text2;\n}\n\nconsole.log(extract_quotation('\"Python\", \"PHP\", \"JavaScript\"'));\n",
    "    let result: string[] = [];\n    let regex = /\"(.*?)\"/g;\n    let match: any;\n    while (match = regex.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\n",
    "    let result: string[] = [];\n    let regex: RegExp = /\"(.*?)\"/g;\n    let match: RegExpExecArray;\n    while (match = regex.exec(text1)) {\n        result.push(match[1]);\n    }\n    return result;\n}\n"
  ]
}
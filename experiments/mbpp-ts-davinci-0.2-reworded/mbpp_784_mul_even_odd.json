{
  "name": "mbpp_784_mul_even_odd",
  "language": "ts",
  "prompt": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1: number[]): number {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_784_mul_even_odd.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let even: number = 1;\n    let odd: number = 1;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = even * list1[i];\n        }\n        else {\n            odd = odd * list1[i];\n        }\n    }\n    return even * odd;\n}\n\nconsole.log(mul_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n",
    "    let even: number = 1;\n    let odd: number = 1;\n    for (let i = 0; i < list1.length; i++) {\n        if (i % 2 == 0) {\n            even = even * list1[i];\n        }\n        else {\n            odd = odd * list1[i];\n        }\n    }\n    return even * odd;\n}\nconsole.log(mul_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n",
    "    let even: number = 1;\n    let odd: number = 1;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = even * list1[i];\n        }\n        else {\n            odd = odd * list1[i];\n        }\n    }\n    return even * odd;\n}\n",
    "    var even: number = 1;\n    var odd: number = 1;\n    for (var i = 0; i < list1.length; i++) {\n        if (i % 2 == 0) {\n            even = even * list1[i];\n        }\n        else {\n            odd = odd * list1[i];\n        }\n    }\n    return even * odd;\n}\n\nconsole.log(mul_even_odd([1, 2, 3, 4, 5]));\nconsole.log(mul_even_odd([1, 2, 3, 4, 5, 6]));\n",
    "    let even_num: number = 0;\n    let odd_num: number = 0;\n    let count_even: number = 0;\n    let count_odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even_num = list1[i];\n            count_even++;\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd_num = list1[i];\n            count_odd++;\n            break;\n        }\n    }\n    if (count_even == 0 || count_odd == 0) {\n        return 0;\n    }\n    else {\n        return even_num * odd_num;\n    }\n}\nconsole.log(mul_even_odd([1, 2, 3, 4, 5, 6]));\nconsole.log(mul_even_odd([1, 3, 5, 7, 9]));\nconsole.log(mul_even_odd([2, 4, 6, 8, 10]));\n",
    "    let even_num = 0;\n    let odd_num = 0;\n    let count = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even_num = list1[i];\n            count++;\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd_num = list1[i];\n            count++;\n            break;\n        }\n    }\n    if (count == 2) {\n        return even_num * odd_num;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(mul_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n",
    "    let even_num: number = 0;\n    let odd_num: number = 0;\n    let count: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even_num = list1[i];\n            count++;\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd_num = list1[i];\n            count++;\n            break;\n        }\n    }\n    if (count == 2) {\n        return even_num * odd_num;\n    }\n    else {\n        return 0;\n    }\n}\nlet list1: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(mul_even_odd(list1));\n",
    "    let even_num = 0;\n    let odd_num = 0;\n    let count = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even_num = list1[i];\n            count++;\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd_num = list1[i];\n            count++;\n            break;\n        }\n    }\n    if (count == 2) {\n        return even_num * odd_num;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(mul_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n",
    "    let even_num: number = 1;\n    let odd_num: number = 1;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even_num = even_num * list1[i];\n        }\n        else {\n            odd_num = odd_num * list1[i];\n        }\n    }\n    return even_num * odd_num;\n}\nlet list1: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(mul_even_odd(list1));\n",
    "    let even = 0;\n    let odd = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even * odd;\n}\nconsole.log(mul_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n",
    "    let even_mul: number = 1;\n    let odd_mul: number = 1;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even_mul *= list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd_mul *= list1[i];\n            break;\n        }\n    }\n    return even_mul * odd_mul;\n}\nconsole.log(mul_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n",
    "    let even: number = 1;\n    let odd: number = 1;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = even * list1[i];\n        }\n        else {\n            odd = odd * list1[i];\n        }\n    }\n    return even * odd;\n}\nconsole.log(mul_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\n",
    "    let even_num: number = 1;\n    let odd_num: number = 1;\n    let count_even: number = 0;\n    let count_odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            if (count_even == 0) {\n                even_num = list1[i];\n                count_even++;\n            }\n        }\n        else {\n            if (count_odd == 0) {\n                odd_num = list1[i];\n                count_odd++;\n            }\n        }\n    }\n    return even_num * odd_num;\n}\nconsole.log(mul_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n",
    "    let even = 0;\n    let odd = 0;\n    let mul = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    mul = even * odd;\n    return mul;\n}\nlet list1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(mul_even_odd(list1));\n",
    "    let even: number = 0;\n    let odd: number = 0;\n    let product: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    product = even * odd;\n    return product;\n}\nlet list1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(mul_even_odd(list1));\n",
    "    let even: number = 1;\n    let odd: number = 1;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = even * list1[i];\n        }\n        else {\n            odd = odd * list1[i];\n        }\n    }\n    return even * odd;\n}\nconsole.log(mul_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n",
    "    let even_num: number = 0;\n    let odd_num: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even_num = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd_num = list1[i];\n            break;\n        }\n    }\n    return even_num * odd_num;\n}\nconsole.log(\"Product of first even and odd number of a given array is: \" + mul_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n",
    "    let even: number = 1;\n    let odd: number = 1;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = even * list1[i];\n        }\n        else {\n            odd = odd * list1[i];\n        }\n    }\n    return even * odd;\n}\n",
    "    let even_num = 0;\n    let odd_num = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even_num = list1[i];\n            break;\n        }\n    }\n    for (let j = 0; j < list1.length; j++) {\n        if (list1[j] % 2 != 0) {\n            odd_num = list1[j];\n            break;\n        }\n    }\n    return even_num * odd_num;\n}\nconsole.log(mul_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n",
    "    let even_product: number = 1;\n    let odd_product: number = 1;\n    for (let i = 0; i < list1.length; i++) {\n        if (i % 2 == 0) {\n            even_product = even_product * list1[i];\n        }\n        else {\n            odd_product = odd_product * list1[i];\n        }\n    }\n    return even_product * odd_product;\n}\nconsole.log(mul_even_odd([1, 2, 3, 4, 5]));\n"
  ]
}
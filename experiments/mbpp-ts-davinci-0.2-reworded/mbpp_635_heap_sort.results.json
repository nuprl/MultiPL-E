{
  "name": "mbpp_635_heap_sort",
  "language": "ts",
  "prompt": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_635_heap_sort.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    const heap = new Heap(iterable);\n    const result = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmp508oatus.ts(3,22): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result: number[] = [];\n    while (heap.size > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmp7q4k6i2k.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result: number[] = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmpr1z6bp46.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result: number[] = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmpr1z6bp46.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmpsnurthue.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmpsnurthue.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result: number[] = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmpr1z6bp46.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result: number[] = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmpr1z6bp46.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted: number[] = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmppmk0_32t.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    const heap = new Heap(iterable);\n    const result = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmp508oatus.ts(3,22): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmpa6jqlaql.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted: number[] = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmppmk0_32t.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmpa6jqlaql.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted: number[] = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmp1vqoesvq.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    return iterable;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124225,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  3,\n  5,\n  7,\n  9,\n  2,\n  4,\n  6,\n  8,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n  3,\n  4,\n  5,\n  6,\n  7,\n  8,\n  9\n]\n    at test (/tmp/tmpj27roi11.js:8:12)\n    at Object.<anonymous> (/tmp/tmpj27roi11.js:12:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1, 3, 5, 7, 9,\n    2, 4, 6, 8, 0\n  ],\n  expected: [\n    0, 1, 2, 3, 4,\n    5, 6, 7, 8, 9\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmpa6jqlaql.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmpa6jqlaql.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted_array: number[] = [];\n    while (heap.size() > 0) {\n        sorted_array.push(heap.pop());\n    }\n    return sorted_array;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124224,
      "stdout": "../../../../tmp/tmpztkje7pt.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmpa6jqlaql.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n  const heap = new Heap(iterable);\n  const sorted = [];\n  while (heap.size() > 0) {\n    sorted.push(heap.pop());\n  }\n  return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124224,
      "stdout": "../../../../tmp/tmpw1b74q26.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmpsnurthue.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmpa6jqlaql.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted: number[] = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmp1vqoesvq.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmpsnurthue.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap();\n    for (let i = 0; i < iterable.length; i++) {\n        heap.insert(iterable[i]);\n    }\n    let sorted = [];\n    for (let i = 0; i < iterable.length; i++) {\n        sorted.push(heap.extract_min());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124224,
      "stdout": "../../../../tmp/tmpcvjyw9tv.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmpa6jqlaql.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    const heap = new Heap(iterable);\n    const sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124224,
      "stdout": "../../../../tmp/tmpyqtlqexo.ts(3,22): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    return heap.sort();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124224,
      "stdout": "../../../../tmp/tmp4nca6s7_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap();\n    for (let i = 0; i < iterable.length; i++) {\n        heap.insert(iterable[i]);\n    }\n    let sorted = [];\n    for (let i = 0; i < iterable.length; i++) {\n        sorted.push(heap.extract_max());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124224,
      "stdout": "../../../../tmp/tmpgjc20r0j.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    heap.sort();\n    return heap.toArray();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124224,
      "stdout": "../../../../tmp/tmp62kc94ig.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    return heap.sort();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124224,
      "stdout": "../../../../tmp/tmp4nca6s7_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap();\n    for (let i = 0; i < iterable.length; i++) {\n        heap.insert(iterable[i]);\n    }\n    let sorted_array = [];\n    while (heap.size() > 0) {\n        sorted_array.push(heap.pop());\n    }\n    return sorted_array;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124224,
      "stdout": "../../../../tmp/tmpclyzhgxw.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmpa6jqlaql.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmpa6jqlaql.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmpa6jqlaql.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmpa6jqlaql.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap: Heap = new Heap(iterable);\n    let sorted: number[] = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124224,
      "stdout": "../../../../tmp/tmprxxxjct0.ts(3,15): error TS2304: Cannot find name 'Heap'.\n../../../../tmp/tmprxxxjct0.ts(3,26): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    //Build a max heap from the iterable\n    let heap = new Heap(iterable);\n    let sorted = [];\n\n    //Pop the max element from the heap and push it to the sorted array\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124224,
      "stdout": "../../../../tmp/tmpom7yrnuh.ts(4,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n  let heap = new Heap(iterable);\n  let sorted = [];\n  while (heap.size > 0) {\n    sorted.push(heap.pop());\n  }\n  return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124224,
      "stdout": "../../../../tmp/tmp68acagw2.ts(3,18): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result = [];\n    while (heap.size) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124224,
      "stdout": "../../../../tmp/tmpishfpv_l.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap();\n    for (let i = 0; i < iterable.length; i++) {\n        heap.insert(iterable[i]);\n    }\n    let sorted = [];\n    for (let i = 0; i < iterable.length; i++) {\n        sorted.push(heap.extract_max());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124224,
      "stdout": "../../../../tmp/tmpgjc20r0j.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmpa6jqlaql.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result = [];\n    while (heap.size > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124224,
      "stdout": "../../../../tmp/tmpg902lw8s.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result: number[] = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmpr1z6bp46.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.length > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124224,
      "stdout": "../../../../tmp/tmp7uhi2i3f.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmpa6jqlaql.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted_array = [];\n    while (heap.size() > 0) {\n        sorted_array.push(heap.pop());\n    }\n    return sorted_array;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124224,
      "stdout": "../../../../tmp/tmpvef9priq.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    const heap = new Heap(iterable);\n    const sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124224,
      "stdout": "../../../../tmp/tmpyqtlqexo.ts(3,22): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmpa6jqlaql.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted: number[] = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmppmk0_32t.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmpa6jqlaql.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmpa6jqlaql.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap: number[] = [];\n    for (let i = 0; i < iterable.length; i++) {\n        heap.push(iterable[i]);\n        heapify(heap, i);\n    }\n    let result: number[] = [];\n    while (heap.length > 0) {\n        result.push(heap.shift());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124224,
      "stdout": "../../../../tmp/tmpmiwp193h.ts(6,9): error TS2304: Cannot find name 'heapify'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmpsnurthue.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmpa6jqlaql.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted_array = [];\n    while (heap.size() > 0) {\n        sorted_array.push(heap.pop());\n    }\n    return sorted_array;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124224,
      "stdout": "../../../../tmp/tmpvef9priq.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted_array = [];\n    while (heap.size() > 0) {\n        sorted_array.push(heap.pop());\n    }\n    return sorted_array;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124224,
      "stdout": "../../../../tmp/tmpvef9priq.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    return heap.sort();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124224,
      "stdout": "../../../../tmp/tmp4nca6s7_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    const heap = new Heap(iterable);\n    const result = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmp508oatus.ts(3,22): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmpa6jqlaql.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    const heap = new Heap(iterable);\n    const result = [];\n    while (heap.size > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124224,
      "stdout": "../../../../tmp/tmp42sc68hv.ts(3,22): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted_array = [];\n    while (heap.size() > 0) {\n        sorted_array.push(heap.pop());\n    }\n    return sorted_array;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124224,
      "stdout": "../../../../tmp/tmpvef9priq.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted: number[] = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmppmk0_32t.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result: number[] = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmpr1z6bp46.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted_array: number[] = [];\n    while (heap.size() > 0) {\n        sorted_array.push(heap.pop());\n    }\n    return sorted_array;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124224,
      "stdout": "../../../../tmp/tmpztkje7pt.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    return iterable;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124225,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  3,\n  5,\n  7,\n  9,\n  2,\n  4,\n  6,\n  8,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n  3,\n  4,\n  5,\n  6,\n  7,\n  8,\n  9\n]\n    at test (/tmp/tmpj27roi11.js:8:12)\n    at Object.<anonymous> (/tmp/tmpj27roi11.js:12:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1, 3, 5, 7, 9,\n    2, 4, 6, 8, 0\n  ],\n  expected: [\n    0, 1, 2, 3, 4,\n    5, 6, 7, 8, 9\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmpa6jqlaql.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmpsnurthue.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result = [];\n    while (heap.size > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124224,
      "stdout": "../../../../tmp/tmpg902lw8s.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted: number[] = [];\n    for (let i = 0; i < iterable.length; i++) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124224,
      "stdout": "../../../../tmp/tmpx8pyq0ca.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.length > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124224,
      "stdout": "../../../../tmp/tmp7uhi2i3f.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted: number[] = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmppmk0_32t.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap();\n    for (let i = 0; i < iterable.length; i++) {\n        heap.insert(iterable[i]);\n    }\n    let result = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124224,
      "stdout": "../../../../tmp/tmp15b_o6k2.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted_array = [];\n    while (heap.size() > 0) {\n        sorted_array.push(heap.pop());\n    }\n    return sorted_array;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124224,
      "stdout": "../../../../tmp/tmpvef9priq.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    const heap = new Heap(iterable);\n    const sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124224,
      "stdout": "../../../../tmp/tmpaximb5m2.ts(3,22): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n  const heap = new Heap(iterable);\n  const result: number[] = [];\n  while (heap.size > 0) {\n    result.push(heap.pop());\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124224,
      "stdout": "../../../../tmp/tmpjlsbrgxz.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    const heap = new Heap(iterable);\n    const result = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmp508oatus.ts(3,22): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result = [];\n    while (heap.size > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124224,
      "stdout": "../../../../tmp/tmpg902lw8s.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmpa6jqlaql.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.length > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124224,
      "stdout": "../../../../tmp/tmp7uhi2i3f.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted_array = [];\n    while (heap.size() > 0) {\n        sorted_array.push(heap.pop());\n    }\n    return sorted_array;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124224,
      "stdout": "../../../../tmp/tmpvef9priq.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmpa6jqlaql.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.length > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124224,
      "stdout": "../../../../tmp/tmp7uhi2i3f.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap();\n    for (let i = 0; i < iterable.length; i++) {\n        heap.insert(iterable[i]);\n    }\n    let result = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124224,
      "stdout": "../../../../tmp/tmp15b_o6k2.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size()) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124224,
      "stdout": "../../../../tmp/tmpixbr3ab8.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    const heap = new Heap(iterable);\n    const sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124224,
      "stdout": "../../../../tmp/tmpyqtlqexo.ts(3,22): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap();\n    for (let i = 0; i < iterable.length; i++) {\n        heap.insert(iterable[i]);\n    }\n    let result = [];\n    for (let i = 0; i < iterable.length; i++) {\n        result.push(heap.extract_max());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "../../../../tmp/tmpm_diwnay.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted: number[] = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmppmk0_32t.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmpa6jqlaql.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result = [];\n    while (heap.size > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124224,
      "stdout": "../../../../tmp/tmpg902lw8s.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmpsnurthue.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.length > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124224,
      "stdout": "../../../../tmp/tmp7uhi2i3f.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n  const heap = new Heap(iterable);\n  const sorted = [];\n  while (heap.size) {\n    sorted.push(heap.pop());\n  }\n  return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "../../../../tmp/tmpn6e49r4u.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmpa6jqlaql.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    for (let i = 0; i < iterable.length; i++) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "../../../../tmp/tmpxuqj_dsm.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap: number[] = [];\n    let result: number[] = [];\n    for (let i = 0; i < iterable.length; i++) {\n        heap_push(heap, iterable[i]);\n    }\n    while (heap.length > 0) {\n        result.push(heap_pop(heap));\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "../../../../tmp/tmphvgzzaux.ts(6,9): error TS2304: Cannot find name 'heap_push'.\n../../../../tmp/tmphvgzzaux.ts(9,21): error TS2304: Cannot find name 'heap_pop'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmpa6jqlaql.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted_array = [];\n    while (heap.size() > 0) {\n        sorted_array.push(heap.pop());\n    }\n    return sorted_array;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124224,
      "stdout": "../../../../tmp/tmpvef9priq.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result = [];\n    while (heap.size > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124224,
      "stdout": "../../../../tmp/tmpg902lw8s.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmpsnurthue.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n  return [];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n  3,\n  4,\n  5,\n  6,\n  7,\n  8,\n  9\n]\n    at test (/tmp/tmp89qc5vt6.js:8:12)\n    at Object.<anonymous> (/tmp/tmp89qc5vt6.js:12:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [\n    0, 1, 2, 3, 4,\n    5, 6, 7, 8, 9\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    return heap.sort();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124224,
      "stdout": "../../../../tmp/tmp4nca6s7_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmpa6jqlaql.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmpsnurthue.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmpa6jqlaql.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted: number[] = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmppmk0_32t.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    return heap.sort();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124224,
      "stdout": "../../../../tmp/tmp4nca6s7_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmpa6jqlaql.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    heap.sort();\n    return heap.heap;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "../../../../tmp/tmpg4q1a5v7.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    return heap.sort();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124224,
      "stdout": "../../../../tmp/tmp4nca6s7_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result = [];\n    while (heap.size() > 0) {\n        result.push(heap.extract_max());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "../../../../tmp/tmp6eng9d_a.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmpa6jqlaql.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    heap.sort();\n    return heap.heap;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "../../../../tmp/tmpg4q1a5v7.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    const heap = new Heap(iterable);\n    const sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124224,
      "stdout": "../../../../tmp/tmpaximb5m2.ts(3,22): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (!heap.is_empty()) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "../../../../tmp/tmp28vr0ko1.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmpsnurthue.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap();\n    heap.build_heap(iterable);\n    let sorted: number[] = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.extract_max());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "../../../../tmp/tmprums5ut_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmpsnurthue.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmprdj84i9g.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmpsnurthue.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    heap.sort();\n    return heap.heap;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "../../../../tmp/tmpg4q1a5v7.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509929,
      "stdout": "../../../../tmp/tmpa6jqlaql.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given array.\nfunction heap_sort(iterable: number[]): number[] {\n    const heap = new Heap(iterable);\n    const result = [];\n    while (heap.size > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124224,
      "stdout": "../../../../tmp/tmp42sc68hv.ts(3,22): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    }
  ]
}
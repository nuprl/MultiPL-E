{
  "name": "mbpp_632_move_zero",
  "language": "ts",
  "prompt": "//Write a tsthon function to move all zeroes to the end of the given array.\nfunction move_zero(num_list: number[]): number[] {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_632_move_zero.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_zero;\n  assert.deepEqual(candidate([1, 0, 2, 0, 3, 4]),[1, 2, 3, 4, 0, 0]);\n  assert.deepEqual(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]),[2, 3, 2, 4, 5, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([0, 1, 0, 1, 1]),[1, 1, 1, 0, 0]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 0, 1, 2]));\nconsole.log(move_zero([10, 20, 0, 30, 0, 10, 20]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        }\n        else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let num_list_new: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            num_list_new.push(num_list[i]);\n        }\n    }\n    return num_list_new.concat(zero_list);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zeros: number[] = [];\n    let non_zeros: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] === 0) {\n            zeros.push(num_list[i]);\n        } else {\n            non_zeros.push(num_list[i]);\n        }\n    }\n    return non_zeros.concat(zeros);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let count = 0;\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            num_list[count++] = num_list[i];\n        }\n    }\n    while (count < num_list.length) {\n        num_list[count++] = 0;\n    }\n    return num_list;\n}\n\nconsole.log(move_zero([12, 0, 10, 0, 8, 12, 7, 6, 0, 4, 10, 12]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] === 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        }\n        else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 0, 1, 2]));\nconsole.log(move_zero([9, 0.0, 0, 9, 1, 2, 0, 1, 0, 1, 0.0, 3, 0, 1, 9, 0, 0, 0, 0, 9]));\nconsole.log(move_zero([\"a\", 0, 0, \"b\", \"c\", \"d\", 0, 1, 0, 1, 0, 3, 0, 1, 9, 0, 0, 0, 0, 9]));\nconsole.log(move_zero([\"a\", 0, 0, \"b\", null, \"c\", \"d\", 0, 1, false, 0, 1, 0, 3, [], 0, 1, 9, 0, 0, {}, 0, 0, 9]));\nconsole.log(move_zero([0, 1, null, 2, false, 1, 0]));\nconsole.log(move_zero([\"a\", \"b\"]));\nconsole.log(move_zero([\"a\"]));\nconsole.log(move_zero([0, 0]));\nconsole.log(move_zero([0]));\nconsole.log(move_zero([false]));\nconsole.log(move_zero([]));",
    "    let zero_list: number[] = [];\n    let num_list_new: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] === 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            num_list_new.push(num_list[i]);\n        }\n    }\n    return num_list_new.concat(zero_list);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let count = 0;\n    let new_list = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            new_list[count] = num_list[i];\n            count++;\n        }\n    }\n    for (let i = count; i < num_list.length; i++) {\n        new_list[i] = 0;\n    }\n    return new_list;\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 0, 1, 2]));\nconsole.log(move_zero([9, 0.0, 0, 9, 1, 2, 0, 1, 0, 1, 0.0, 3, 0, 1, 9, 0, 0, 0, 0, 9]));\nconsole.log(move_zero([\"a\", 0, 0, \"b\", \"c\", \"d\", 0, 1, 0, 1, 0, 3, 0, 1, 9, 0, 0, 0, 0, 9]));\nconsole.log(move_zero([\"a\", 0, 0, \"b\", null, \"c\", \"d\", 0, 1, false, 0, 1, 0, 3, [], 0, 1, 9, 0, 0, {}, 0, 0, 9]));\nconsole.log(move_zero([0, 1, null, 2, false, 1, 0]));\nconsole.log(move_zero([0, 1, null, 2, false, 1, 0]));\nconsole.log(move_zero([0, 1, null, 2, false, 1, 0]));\nconsole.log(move_zero([0, 1, null, 2, false, 1, 0]));\nconsole.log(move_zero([0, 1, null, 2, false, 1, 0]));\nconsole.log(move_zero([0, 1, null, 2, false, 1, 0]));\nconsole.log(move_zero([0, 1, null, 2, false, 1, 0]));\nconsole.log(move_zero([0, 1, null, 2, false, 1, 0]));\nconsole.log(move_zero",
    "    let zero_list: number[] = [];\n    let num_list_new: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] === 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            num_list_new.push(num_list[i]);\n        }\n    }\n    return num_list_new.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 0, 1, 2]));\nconsole.log(move_zero([9, 0.0, 0, 9, 1, 2, 0, 1, 0, 1, 0.0, 3, 0, 1, 9, 0, 0, 0, 0, 9]));\nconsole.log(move_zero([\"a\", 0, 0, \"b\", \"c\", \"d\", 0, 1, 0, 1, 0, 3, 0, 1, 9, 0, 0, 0, 0, 9]));\nconsole.log(move_zero([\"a\", 0, 0, \"b\", null, \"c\", \"d\", 0, 1, false, 0, 1, 0, 3, [], 0, 1, 9, 0, 0, {}, 0, 0, 9]));\nconsole.log(move_zero([0, 1, null, 2, false, 1, 0]));\nconsole.log(move_zero([0, 1, null, 2, false, 1, 0]));\nconsole.log(move_zero([0, 1, null, 2, false, 1, 0]));\nconsole.log(move_zero([0, 1, null, 2, false, 1, 0]));\nconsole.log(move_zero([0, 1, null, 2, false, 1, 0]));\nconsole.log(move_zero([0, 1, null, 2, false, 1, 0]));\nconsole.log(move_zero([0, 1, null, 2, false, 1, 0]));\nconsole.log(move_zero([0, 1, null, 2, false, 1, 0]));\nconsole.log(move_zero",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] === 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] === 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 0, 1, 2]));\nconsole.log(move_zero([9, 0.0, 0, 9, 1, 2, 0, 1, 0, 1, 0.0, 3, 0, 1, 9, 0, 0, 0, 0, 9]));\nconsole.log(move_zero([\"a\", 0, 0, \"b\", \"c\", \"d\", 0, 1, 0, 1, 0, 3, 0, 1, 9, 0, 0, 0, 0, 9]));\nconsole.log(move_zero([\"a\", 0, 0, \"b\", null, \"c\", \"d\", 0, 1, false, 0, 1, 0, 3, [], 0, 1, 9, 0, 0, {}, 0, 0, 9]));\nconsole.log(move_zero([0, 1, null, 2, false, 1, 0]));\nconsole.log(move_zero([\"a\", \"b\"]));\nconsole.log(move_zero([\"a\"]));\nconsole.log(move_zero([0, 0]));\nconsole.log(move_zero([0]));\nconsole.log(move_zero([false]));\nconsole.log(move_zero([]));",
    "    let zero_list: number[] = [];\n    let num_list_new: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            num_list_new.push(num_list[i]);\n        }\n        else {\n            zero_list.push(num_list[i]);\n        }\n    }\n    return num_list_new.concat(zero_list);\n}\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 0, 1, 2]));\nconsole.log(move_zero([9, 0.0, 0, 9, 1, 2, 0, 1, 0, 1, 0.0, 3, 0, 1, 9, 0, 0, 0, 0, 9]));\nconsole.log(move_zero([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(move_zero([1, 2, 3]));\n",
    "    let count = 0;\n    let result = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            result[count] = num_list[i];\n            count++;\n        }\n    }\n    for (let i = count; i < num_list.length; i++) {\n        result[i] = 0;\n    }\n    return result;\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 0, 1, 2]));\nconsole.log(move_zero([9, 0.0, 0, 9, 1, 2, 0, 1, 0, 1, 0.0, 3, 0, 1, 9, 0, 0, 0, 0, 9]));\nconsole.log(move_zero([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(move_zero([1, 2, 3]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let num_list_new: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] === 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            num_list_new.push(num_list[i]);\n        }\n    }\n    return num_list_new.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        }\n        else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 0, 1, 2]));\nconsole.log(move_zero([10, 20, 0, 30, 0, 10, 20]));\n",
    "    let zero_list: number[] = [];\n    let num_list_new: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] === 0) {\n            zero_list.push(0);\n        } else {\n            num_list_new.push(num_list[i]);\n        }\n    }\n    return num_list_new.concat(zero_list);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let count: number = 0;\n    let temp: number = 0;\n    for (let i: number = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            temp = num_list[count];\n            num_list[count] = num_list[i];\n            num_list[i] = temp;\n            count = count + 1;\n        }\n    }\n    return num_list;\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] === 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "  let zero_list: number[] = [];\n  let num_list_new: number[] = [];\n  for (let i = 0; i < num_list.length; i++) {\n    if (num_list[i] === 0) {\n      zero_list.push(num_list[i]);\n    } else {\n      num_list_new.push(num_list[i]);\n    }\n  }\n  return num_list_new.concat(zero_list);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let count = 0;\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            num_list[count++] = num_list[i];\n        }\n    }\n    while (count < num_list.length) {\n        num_list[count++] = 0;\n    }\n    return num_list;\n}\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        }\n        else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\nconsole.log(move_zero([1, 2, 0, 3, 0, 1, 2]));\nconsole.log(move_zero([0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(move_zero([1, 2, 3]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] === 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let num_list_new: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        }\n        else {\n            num_list_new.push(num_list[i]);\n        }\n    }\n    return num_list_new.concat(zero_list);\n}\nconsole.log(move_zero([1, 2, 0, 3, 0, 1, 2]));\nconsole.log(move_zero([9, 0.0, 0, 9, 1, 2, 0, 1, 0, 1, 0.0, 3, 0, 1, 9, 0, 0, 0, 0, 9]));\nconsole.log(move_zero([\"a\", 0, 0, \"b\", \"c\", \"d\", 0, 1, 0, 1, 0, 3, 0, 1, 9, 0, 0, 0, 0, 9]));\nconsole.log(move_zero([\"a\", 0, 0, \"b\", null, \"c\", \"d\", 0, 1, false, 0, 1, 0, 3, [], 0, 1, 9, 0, 0, {}, 0, 0, 9]));\nconsole.log(move_zero([0, 1, null, 2, false, 1, 0]));\nconsole.log(move_zero([0, 1, null, 2, false, 1, 0]));\nconsole.log(move_zero([0, 1, null, 2, false, 1, 0]));\nconsole.log(move_zero([0, 1, null, 2, false, 1, 0]));\nconsole.log(move_zero([0, 1, null, 2, false, 1, 0]));\nconsole.log(move_zero([0, 1, null, 2, false, 1, 0]));\nconsole.log(move_zero([0, 1, null, 2, false, 1, 0]));\nconsole.log(move_zero([0, 1, null, 2, false, 1, 0]));\nconsole.log(move_",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 0, 1, 2]));\nconsole.log(move_zero([9, 0.0, 0, 9, 1, 2, 0, 1, 0, 1, 0.0, 3, 0, 1, 9, 0, 0, 0, 0, 9]));\nconsole.log(move_zero([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(move_zero([1, 2, 3]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 0, 1, 2]));\nconsole.log(move_zero([9, 0.0, 0, 9, 1, 2, 0, 1, 0, 1, 0.0, 3, 0, 1, 9, 0, 0, 0, 0, 9]));\nconsole.log(move_zero([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(move_zero([1, 2, 3]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] === 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let num_list_new: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            num_list_new.push(num_list[i]);\n        }\n    }\n    return num_list_new.concat(zero_list);\n}\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 0, 1, 2]));\nconsole.log(move_zero([9, 0.0, 0, 9, 1, 2, 0, 1, 0, 1, 0.0, 3, 0, 1, 9, 0, 0, 0, 0, 9]));\nconsole.log(move_zero([0, 1, None, 2, False, 1, 0]));\nconsole.log(move_zero([\"a\", \"b\"]));\nconsole.log(move_zero([\"a\"]));\nconsole.log(move_zero([0, 0]));\nconsole.log(move_zero([0]));\nconsole.log(move_zero([]));",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] === 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 0, 1, 2]));\nconsole.log(move_zero([9, 0.0, 0, 9, 1, 2, 0, 1, 0, 1, 0.0, 3, 0, 1, 9, 0, 0, 0, 0, 9]));\nconsole.log(move_zero([\"a\", 0, 0, \"b\", \"c\", \"d\", 0, 1, 0, 1, 0, 3, 0, 1, 9, 0, 0, 0, 0, 9]));\nconsole.log(move_zero([\"a\", 0, 0, \"b\", null, \"c\", \"d\", 0, 1, false, 0, 1, 0, 3, [], 0, 1, 9, 0, 0, {}, 0, 0, 9]));\nconsole.log(move_zero([0, 1, null, 2, false, 1, 0]));\nconsole.log(move_zero([\"a\", \"b\"]));\nconsole.log(move_zero([\"a\"]));\nconsole.log(move_zero([0, 0]));\nconsole.log(move_zero([0]));\nconsole.log(move_zero([false]));\nconsole.log(move_zero([]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        }\n        else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));",
    "    let a: number[] = [];\n    let b: number[] = [];\n    let c: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    c = b.concat(a);\n    return c;\n}\nconsole.log(move_zero([0, 1, 0, 2, 0, 3, 0]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let num_list_new: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        }\n        else {\n            num_list_new.push(num_list[i]);\n        }\n    }\n    return num_list_new.concat(zero_list);\n}\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 0, 1, 2]));\nconsole.log(move_zero([9, 0.0, 0, 9, 1, 2, 0, 1, 0, 1, 0.0, 3, 0, 1, 9, 0, 0, 0, 0, 9]));\nconsole.log(move_zero([\"a\", 0, 0, \"b\", \"c\", \"d\", 0, 1, 0, 1, 0, 3, 0, 1, 9, 0, 0, 0, 0, 9]));\nconsole.log(move_zero([\"a\", 0, 0, \"b\", null, \"c\", \"d\", 0, 1, false, 0, 1, 0, 3, [], 0, 1, 9, 0, 0, {}, 0, 0, 9]));\nconsole.log(move_zero([0, 1, null, 2, false, 1, 0]));\nconsole.log(move_zero([\"a\", \"b\"]));\nconsole.log(move_zero([\"a\"]));\nconsole.log(move_zero([0, 0]));\nconsole.log(move_zero([0]));\nconsole.log(move_zero([false]));\nconsole.log(move_zero([]));\n",
    "  let zero_list: number[] = [];\n  let non_zero_list: number[] = [];\n  for (let i = 0; i < num_list.length; i++) {\n    if (num_list[i] == 0) {\n      zero_list.push(num_list[i]);\n    } else {\n      non_zero_list.push(num_list[i]);\n    }\n  }\n  return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let num_list_new: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            num_list_new.push(num_list[i]);\n        }\n    }\n    return num_list_new.concat(zero_list);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 0, 1, 2]));\nconsole.log(move_zero([10, 20, 0, 30, 0, 10, 20]));\n",
    "    let zero_list: number[] = [];\n    let num_list_new: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] === 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            num_list_new.push(num_list[i]);\n        }\n    }\n    return num_list_new.concat(zero_list);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\nconsole.log(move_zero([1, 2, 0, 3, 0, 1, 2]));\nconsole.log(move_zero([10, 20, 0, 30, 0, 10, 20]));\n",
    "    let count = 0;\n    let length = num_list.length;\n    for (let i = 0; i < length; i++) {\n        if (num_list[i] != 0) {\n            num_list[count] = num_list[i];\n            count++;\n        }\n    }\n    while (count < length) {\n        num_list[count] = 0;\n        count++;\n    }\n    return num_list;\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let num_list_new: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        }\n        else {\n            num_list_new.push(num_list[i]);\n        }\n    }\n    return num_list_new.concat(zero_list);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let count: number = 0;\n    let result: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            result[count] = num_list[i];\n            count++;\n        }\n    }\n    for (let i = count; i < num_list.length; i++) {\n        result[i] = 0;\n    }\n    return result;\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] === 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let count = 0;\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            num_list[count++] = num_list[i];\n        }\n    }\n    while (count < num_list.length) {\n        num_list[count++] = 0;\n    }\n    return num_list;\n}\n\nconsole.log(move_zero([1, 2, 0, 4, 3, 0, 5, 0]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] === 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 0, 1, 2]));\nconsole.log(move_zero([9, 0.0, 0, 9, 1, 2, 0, 1, 0, 1, 0.0, 3, 0, 1, 9, 0, 0, 0, 0, 9]));\nconsole.log(move_zero([\"a\", 0, 0, \"b\", \"c\", \"d\", 0, 1, 0, 1, 0, 3, 0, 1, 9, 0, 0, 0, 0, 9]));\nconsole.log(move_zero([\"a\", 0, 0, \"b\", null, \"c\", \"d\", 0, 1, false, 0, 1, 0, 3, [], 0, 1, 9, 0, 0, {}, 0, 0, 9]));\nconsole.log(move_zero([0, 1, null, 2, false, 1, 0]));\nconsole.log(move_zero([0, 1, null, 2, false, 1, 0]));\nconsole.log(move_zero([\"a\", \"b\"]));\nconsole.log(move_zero([\"a\"]));\nconsole.log(move_zero([0, 0]));\nconsole.log(move_zero([0]));\nconsole.log(move_zero([false]));\nconsole.log(move_zero([]));",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        }\n        else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n",
    "    let zero_list: number[] = [];\n    let num_list_new: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            num_list_new.push(num_list[i]);\n        }\n    }\n    return num_list_new.concat(zero_list);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\nconsole.log(move_zero([1, 2, 0, 3, 0, 1, 2]));\nconsole.log(move_zero([10, 20, 0, 30, 0, 10, 20]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let count: number = 0;\n    let temp: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            temp[count] = num_list[i];\n            count++;\n        }\n    }\n    while (count < num_list.length) {\n        temp[count] = 0;\n        count++;\n    }\n    return temp;\n}\n\nconsole.log(move_zero([0, 1, 0, 2, 0, 3, 0, 4, 0, 5]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        }\n        else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        }\n        else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let num_list_new: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            num_list_new.push(num_list[i]);\n        }\n    }\n    return num_list_new.concat(zero_list);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        }\n        else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 0, 1, 2]));\nconsole.log(move_zero([10, 20, 0, 30, 0, 10, 20]));\n",
    "    let zero_list: number[] = [];\n    let num_list_new: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        }\n        else {\n            num_list_new.push(num_list[i]);\n        }\n    }\n    return num_list_new.concat(zero_list);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let num_list_new: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] === 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            num_list_new.push(num_list[i]);\n        }\n    }\n    return num_list_new.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "  let zero_list: number[] = [];\n  let non_zero_list: number[] = [];\n  for (let i = 0; i < num_list.length; i++) {\n    if (num_list[i] === 0) {\n      zero_list.push(num_list[i]);\n    } else {\n      non_zero_list.push(num_list[i]);\n    }\n  }\n  return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 0, 1, 2]));\nconsole.log(move_zero([10, 20, 0, 30, 0, 10, 20]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] === 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 0, 1, 2]));\nconsole.log(move_zero([10, 20, 0, 30, 0, 10, 20]));\n",
    "    let zero_list: number[] = [];\n    let num_list_new: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] === 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            num_list_new.push(num_list[i]);\n        }\n    }\n    return num_list_new.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    var temp: number[] = [];\n    var count: number = 0;\n    for (var i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            temp[count++] = num_list[i];\n        }\n    }\n    while (count < num_list.length) {\n        temp[count++] = 0;\n    }\n    return temp;\n}\n\nconsole.log(move_zero([1, 2, 0, 4, 3, 0, 5, 0]));\n",
    "    let zero_list: number[] = [];\n    let num_list_new: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] === 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            num_list_new.push(num_list[i]);\n        }\n    }\n    return num_list_new.concat(zero_list);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] === 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 0, 1, 2]));\nconsole.log(move_zero([10, 20, 0, 30, 0, 10, 20]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        }\n        else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 0, 1, 2]));\nconsole.log(move_zero([10, 20, 0, 30, 0, 10, 20]));\n",
    "    let zero_list: number[] = [];\n    let num_list2: number[] = [];\n    for (let i: number = 0; i < num_list.length; i++) {\n        if (num_list[i] === 0) {\n            zero_list.push(num_list[i]);\n        }\n        else {\n            num_list2.push(num_list[i]);\n        }\n    }\n    return num_list2.concat(zero_list);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let num_list_new: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            num_list_new.push(num_list[i]);\n        }\n    }\n    return num_list_new.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] === 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let num_list_new: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        }\n        else {\n            num_list_new.push(num_list[i]);\n        }\n    }\n    return num_list_new.concat(zero_list);\n}\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        }\n        else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let count = 0;\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            num_list[count] = num_list[i];\n            count++;\n        }\n    }\n    while (count < num_list.length) {\n        num_list[count] = 0;\n        count++;\n    }\n    return num_list;\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let num_list_new: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            num_list_new.push(num_list[i]);\n        }\n        else {\n            zero_list.push(num_list[i]);\n        }\n    }\n    return num_list_new.concat(zero_list);\n}\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] === 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        }\n        else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n",
    "    let count = 0;\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            num_list[count] = num_list[i];\n            count++;\n        }\n    }\n    while (count < num_list.length) {\n        num_list[count] = 0;\n        count++;\n    }\n    return num_list;\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] === 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let result: number[] = [];\n    let zeros: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] === 0) {\n            zeros.push(num_list[i]);\n        } else {\n            result.push(num_list[i]);\n        }\n    }\n    return result.concat(zeros);\n}\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] === 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let num_list_new: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] === 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            num_list_new.push(num_list[i]);\n        }\n    }\n    return num_list_new.concat(zero_list);\n}\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let count = 0;\n    let result = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            result[count] = num_list[i];\n            count++;\n        }\n    }\n    while (count < num_list.length) {\n        result[count] = 0;\n        count++;\n    }\n    return result;\n}\n",
    "    let zero_list: number[] = [];\n    let num_list_new: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] === 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            num_list_new.push(num_list[i]);\n        }\n    }\n    return num_list_new.concat(zero_list);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let count = 0;\n    let result = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            result[count++] = num_list[i];\n        }\n    }\n    while (count < num_list.length) {\n        result[count++] = 0;\n    }\n    return result;\n}\n\nconsole.log(move_zero([0, 1, 0, 2, 0, 3, 0, 4, 0, 5]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] === 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let count: number = 0;\n    let result: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            result[count] = num_list[i];\n            count++;\n        }\n    }\n    while (count < num_list.length) {\n        result[count] = 0;\n        count++;\n    }\n    return result;\n}\nconsole.log(move_zero([1, 2, 0, 3, 0, 1, 2]));\nconsole.log(move_zero([9, 0.0, 0, 9, 1, 2, 0, 1, 0, 1, 0.0, 3, 0, 1, 9, 0, 0, 0, 0, 9]));\nconsole.log(move_zero([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(move_zero([1, 2, 3]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] === 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let count = 0;\n    let result = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            result[count] = num_list[i];\n            count++;\n        }\n    }\n    while (count < num_list.length) {\n        result[count] = 0;\n        count++;\n    }\n    return result;\n}\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let num_list_new: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        }\n        else {\n            num_list_new.push(num_list[i]);\n        }\n    }\n    return num_list_new.concat(zero_list);\n}\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 0, 0, 3, 6]));\n",
    "    let count: number = 0;\n    let result: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            result[count] = num_list[i];\n            count++;\n        }\n    }\n    while (count < num_list.length) {\n        result[count] = 0;\n        count++;\n    }\n    return result;\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 0, 1, 2]));\nconsole.log(move_zero([10, 20, 0, 30, 0, 10, 20]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] === 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 0, 1, 2]));\nconsole.log(move_zero([9, 0.0, 0, 9, 1, 2, 0, 1, 0, 1, 0.0, 3, 0, 1, 9, 0, 0, 0, 0, 9]));\nconsole.log(move_zero([0, 1, None, 2, False, 1, 0]));\nconsole.log(move_zero([\"a\", \"b\"]));\nconsole.log(move_zero([\"a\"]));\nconsole.log(move_zero([0, 0]));\nconsole.log(move_zero([0]));\nconsole.log(move_zero([False]));\nconsole.log(move_zero([]));",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        }\n        else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 0, 1, 2]));\nconsole.log(move_zero([9, 0.0, 0, 9, 1, 2, 0, 1, 0, 1, 0.0, 3, 0, 1, 9, 0, 0, 0, 0, 9]));\nconsole.log(move_zero([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(move_zero([1, 2, 3]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let num_list_new: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(0);\n        }\n        else {\n            num_list_new.push(num_list[i]);\n        }\n    }\n    return num_list_new.concat(zero_list);\n}\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let count: number = 0;\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            num_list[count++] = num_list[i];\n        }\n    }\n    while (count < num_list.length) {\n        num_list[count++] = 0;\n    }\n    return num_list;\n}\nconsole.log(move_zero([12, 0, 10, 0, 8, 12, 7, 6, 0, 4, 10, 12]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] === 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let result: number[] = [];\n    let zeros: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] === 0) {\n            zeros.push(num_list[i]);\n        } else {\n            result.push(num_list[i]);\n        }\n    }\n    return result.concat(zeros);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let count: number = 0;\n    let new_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            new_list.push(num_list[i]);\n        }\n        else {\n            count++;\n        }\n    }\n    for (let i = 0; i < count; i++) {\n        new_list.push(0);\n    }\n    return new_list;\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 0, 1, 2]));\nconsole.log(move_zero([9, 0.0, 0, 9, 1, 2, 0, 1, 0, 1, 0.0, 3, 0, 1, 9, 0, 0, 0, 0, 9]));\nconsole.log(move_zero([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(move_zero([1, 2, 3]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] === 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let num_list_new: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            num_list_new.push(num_list[i]);\n        }\n    }\n    return num_list_new.concat(zero_list);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] === 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let num_list_new: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            num_list_new.push(num_list[i]);\n        }\n    }\n    return num_list_new.concat(zero_list);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        }\n        else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let count = 0;\n    let len = num_list.length;\n    for (let i = 0; i < len; i++) {\n        if (num_list[i] != 0) {\n            num_list[count] = num_list[i];\n            count++;\n        }\n    }\n    while (count < len) {\n        num_list[count] = 0;\n        count++;\n    }\n    return num_list;\n}\n\nconsole.log(move_zero([12, 0, 10, 0, 8, 12, 7, 6, 0, 4, 10, 12]));\nconsole.log(move_zero([12, 0, 10, 0, 8, 12, 7, 6, 0, 4, 10, 12]));\nconsole.log(move_zero([12, 0, 10, 0, 8, 12, 7, 6, 0, 4, 10, 12]));\nconsole.log(move_zero([12, 0, 10, 0, 8, 12, 7, 6, 0, 4, 10, 12]));\nconsole.log(move_zero([12, 0, 10, 0, 8, 12, 7, 6, 0, 4, 10, 12]));\nconsole.log(move_zero([12, 0, 10, 0, 8, 12, 7, 6, 0, 4, 10, 12]));\nconsole.log(move_zero([12, 0, 10, 0, 8, 12, 7, 6, 0, 4, 10, 12]));\nconsole.log(move_zero([12, 0, 10, 0, 8, 12, 7, 6, 0, 4, 10, 12]));\nconsole.log(move_zero([12, 0, 10, 0, 8, 12, 7, 6, 0, 4, 10, 12]));\nconsole.log(move_zero([12, 0, 10, 0, 8, 12, 7, 6, 0, 4, 10, 12]));\nconsole.log(move_zero([12, 0, 10, 0, 8, 12, 7, 6, 0, 4, 10, 12]));\nconsole.log(move_zero([12, 0, 10, 0, 8, 12, 7, 6, 0, 4",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i: number = 0; i < num_list.length; i++) {\n        if (num_list[i] === 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 1, 0, 1, 0, 3, 0, 1]));\n",
    "    let zeros: number[] = [];\n    let non_zeros: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zeros.push(num_list[i]);\n        } else {\n            non_zeros.push(num_list[i]);\n        }\n    }\n    return non_zeros.concat(zeros);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] === 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] === 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 0, 1, 2]));\nconsole.log(move_zero([9, 0.0, 0, 9, 1, 2, 0, 1, 0, 1, 0.0, 3, 0, 1, 9, 0, 0, 0, 0, 9]));\nconsole.log(move_zero([\"a\", 0, 0, \"b\", \"c\", \"d\", 0, 1, 0, 1, 0, 3, 0, 1, 9, 0, 0, 0, 0, 9]));\nconsole.log(move_zero([\"a\", 0, 0, \"b\", null, \"c\", \"d\", 0, 1, false, 0, 1, 0, 3, [], 0, 1, 9, 0, 0, {}, 0, 0, 9]));\nconsole.log(move_zero([0, 1, null, 2, false, 1, 0]));\nconsole.log(move_zero([\"a\", \"b\"]));\nconsole.log(move_zero([\"a\"]));\nconsole.log(move_zero([0, 0]));\nconsole.log(move_zero([0]));\nconsole.log(move_zero([false]));\nconsole.log(move_zero([]));\n",
    "    let zero_list: number[] = [];\n    let num_list_new: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        }\n        else {\n            num_list_new.push(num_list[i]);\n        }\n    }\n    return num_list_new.concat(zero_list);\n}\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "  let zero_list: number[] = [];\n  let non_zero_list: number[] = [];\n  for (let i = 0; i < num_list.length; i++) {\n    if (num_list[i] === 0) {\n      zero_list.push(num_list[i]);\n    } else {\n      non_zero_list.push(num_list[i]);\n    }\n  }\n  return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let num_list_new: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            num_list_new.push(num_list[i]);\n        }\n    }\n    return num_list_new.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let num_list_new: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(0);\n        } else {\n            num_list_new.push(num_list[i]);\n        }\n    }\n    return num_list_new.concat(zero_list);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let num_list_new: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] === 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            num_list_new.push(num_list[i]);\n        }\n    }\n    return num_list_new.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n",
    "    let zero_list: number[] = [];\n    let num_list_new: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        }\n        else {\n            num_list_new.push(num_list[i]);\n        }\n    }\n    return num_list_new.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 0, 1, 2]));\nconsole.log(move_zero([10, 20, 0, 30, 0, 10, 20]));\n",
    "    let zero_list: number[] = [];\n    let num_list_new: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            num_list_new.push(num_list[i]);\n        }\n    }\n    return num_list_new.concat(zero_list);\n}\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let count: number = 0;\n    let new_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            new_list[count] = num_list[i];\n            count++;\n        }\n    }\n    while (count < num_list.length) {\n        new_list[count] = 0;\n        count++;\n    }\n    return new_list;\n}\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let num_list_new: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            num_list_new.push(num_list[i]);\n        }\n    }\n    return num_list_new.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 0, 1, 2]));\nconsole.log(move_zero([9, 0.0, 0, 9, 1, 2, 0, 1, 0, 1, 0.0, 3, 0, 1, 9, 0, 0, 0, 0, 9]));\nconsole.log(move_zero([\"a\", 0, 0, \"b\", \"c\", \"d\", 0, 1, 0, 1, 0, 3, 0, 1, 9, 0, 0, 0, 0, 9]));\nconsole.log(move_zero([\"a\", 0, 0, \"b\", null, \"c\", \"d\", 0, 1, false, 0, 1, 0, 3, [], 0, 1, 9, 0, 0, {}, 0, 0, 9]));\nconsole.log(move_zero([0, 1, null, 2, false, 1, 0]));\nconsole.log(move_zero([0, 1, null, 2, false, 1, 0]));\nconsole.log(move_zero([\"a\", \"b\"]));\nconsole.log(move_zero([\"a\"]));\nconsole.log(move_zero([0, 0]));\nconsole.log(move_zero([0]));\nconsole.log(move_zero([false]));\nconsole.log(move_zero([]));",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let count = 0;\n    let length = num_list.length;\n    for (let i = 0; i < length; i++) {\n        if (num_list[i] != 0) {\n            num_list[count] = num_list[i];\n            count++;\n        }\n    }\n    while (count < length) {\n        num_list[count] = 0;\n        count++;\n    }\n    return num_list;\n}\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i: number = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] === 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 0, 1, 2]));\nconsole.log(move_zero([9, 0.0, 0, 9, 1, 2, 0, 1, 0, 1, 0.0, 3, 0, 1, 9, 0, 0, 0, 0, 9]));\nconsole.log(move_zero([\"a\", 0, 0, \"b\", \"c\", \"d\", 0, 1, 0, 1, 0, 3, 0, 1, 9, 0, 0, 0, 0, 9]));\nconsole.log(move_zero([\"a\", 0, 0, \"b\", null, \"c\", \"d\", 0, 1, false, 0, 1, 0, 3, [], 0, 1, 9, 0, 0, {}, 0, 0, 9]));\nconsole.log(move_zero([0, 1, null, 2, false, 1, 0]));\nconsole.log(move_zero([0, 1, null, 2, false, 1, 0]));\nconsole.log(move_zero([\"a\", \"b\"]));\nconsole.log(move_zero([\"a\"]));\nconsole.log(move_zero([0, 0]));\nconsole.log(move_zero([0]));\nconsole.log(move_zero([false]));\nconsole.log(move_zero([]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] === 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let num_list_new: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            num_list_new.push(num_list[i]);\n        }\n    }\n    return num_list_new.concat(zero_list);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let count: number = 0;\n    let temp: number = 0;\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            temp = num_list[count];\n            num_list[count] = num_list[i];\n            num_list[i] = temp;\n            count++;\n        }\n    }\n    return num_list;\n}\nconsole.log(move_zero([1, 2, 0, 4, 3, 0, 5, 0]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] === 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 0, 1, 2]));\nconsole.log(move_zero([9, 0.0, 0, 9, 1, 2, 0, 1, 0, 1, 0.0, 3, 0, 1, 9, 0, 0, 0, 0, 9]));\nconsole.log(move_zero([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(move_zero([1, 2, 3]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 0, 1, 2]));\nconsole.log(move_zero([9, 0.0, 0, 9, 1, 2, 0, 1, 0, 1, 0.0, 3, 0, 1, 9, 0, 0, 0, 0, 9]));\nconsole.log(move_zero([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(move_zero([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "  let zero_list: number[] = [];\n  let non_zero_list: number[] = [];\n  for (let i = 0; i < num_list.length; i++) {\n    if (num_list[i] === 0) {\n      zero_list.push(num_list[i]);\n    } else {\n      non_zero_list.push(num_list[i]);\n    }\n  }\n  return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 1, 0, 1, 0, 3, 0, 1]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let count: number = 0;\n    let new_list: number[] = [];\n    for (let i: number = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            new_list[count] = num_list[i];\n            count++;\n        }\n    }\n    for (let i: number = count; i < num_list.length; i++) {\n        new_list[i] = 0;\n    }\n    return new_list;\n}\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let num_list_new: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        }\n        else {\n            num_list_new.push(num_list[i]);\n        }\n    }\n    return num_list_new.concat(zero_list);\n}\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let num_list_new: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] === 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            num_list_new.push(num_list[i]);\n        }\n    }\n    return num_list_new.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] === 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([1, 2, 0, 3, 4, 0, 5, 6, 0]));\n"
  ]
}
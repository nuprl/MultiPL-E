{
  "name": "mbpp_802_count_rotation",
  "language": "ts",
  "prompt": "//Write a tsthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_802_count_rotation.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let n = arr.length;\n    let low = 0;\n    let high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % n;\n        let prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = low + Math.floor((high - low) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    let n = arr.length;\n    let low = 0;\n    let high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % n;\n        let prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n",
    "    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let n = arr.length;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = low + Math.floor((high - low) / 2);\n        let next = (mid + 1) % n;\n        let prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let n = arr.length;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = low + Math.floor((high - low) / 2);\n        let next = (mid + 1) % n;\n        let prev = (mid + n - 1) % n;\n\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let n = arr.length;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % n;\n        let prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let n = arr.length;\n\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % n;\n        let prev = (mid + n - 1) % n;\n\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let n = arr.length;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % n;\n        let prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let n = arr.length;\n    let low = 0;\n    let high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % n;\n        let prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low < high) {\n        let mid = Math.floor((low + high) / 2);\n        if (mid < high && arr[mid] > arr[mid + 1]) {\n            return mid + 1;\n        }\n        if (mid > low && arr[mid] < arr[mid - 1]) {\n            return mid;\n        }\n        if (arr[low] > arr[mid]) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return 0;\n}\n",
    "  let low = 0;\n  let high = arr.length - 1;\n  while (low <= high) {\n    if (arr[low] <= arr[high]) {\n      return low;\n    }\n    let mid = Math.floor((low + high) / 2);\n    let next = (mid + 1) % arr.length;\n    let prev = (mid + arr.length - 1) % arr.length;\n    if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n      return mid;\n    } else if (arr[mid] <= arr[high]) {\n      high = mid - 1;\n    } else if (arr[mid] >= arr[low]) {\n      low = mid + 1;\n    }\n  }\n  return -1;\n}\n",
    "  let n = arr.length;\n  let low = 0;\n  let high = n - 1;\n  while (low <= high) {\n    if (arr[low] <= arr[high]) {\n      return low;\n    }\n    let mid = Math.floor((low + high) / 2);\n    let next = (mid + 1) % n;\n    let prev = (mid + n - 1) % n;\n    if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n      return mid;\n    } else if (arr[mid] <= arr[high]) {\n      high = mid - 1;\n    } else if (arr[mid] >= arr[low]) {\n      low = mid + 1;\n    }\n  }\n  return -1;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n",
    "    let start = 0;\n    let end = arr.length - 1;\n    let mid = 0;\n    while (start <= end) {\n        if (arr[start] <= arr[end]) {\n            return start;\n        }\n        mid = Math.floor((start + end) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[end]) {\n            end = mid - 1;\n        } else if (arr[mid] >= arr[start]) {\n            start = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low < high) {\n        mid = Math.floor((low + high) / 2);\n        if (arr[mid] > arr[high]) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n    return low;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = low + Math.floor((high - low) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    let n = arr.length;\n    let next = 0;\n    let prev = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = Math.floor((low + high) / 2);\n        next = (mid + 1) % n;\n        prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let n = arr.length;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % n;\n        let prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let n = arr.length;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % n;\n        let prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n",
    "    let n = arr.length;\n    let low = 0;\n    let high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = (low + high) / 2;\n        let next = (mid + 1) % n;\n        let prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let n = arr.length;\n    let low = 0;\n    let high = n - 1;\n    let mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % n;\n        let prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let n = arr.length;\n    let low = 0;\n    let high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % n;\n        let prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let n = arr.length;\n\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % n;\n        let prev = (mid + n - 1) % n;\n\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low < high) {\n        mid = Math.floor((low + high) / 2);\n        if (arr[mid] > arr[high]) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n    return low;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let n = arr.length;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % n;\n        let prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low < high) {\n        let mid = Math.floor((low + high) / 2);\n        if (arr[mid] < arr[high]) {\n            high = mid;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;\n}\n",
    "    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n",
    "  let count = 0;\n  for (let i = 0; i < arr.length - 1; i++) {\n    if (arr[i] > arr[i + 1]) {\n      count++;\n    }\n  }\n  return count;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let n = arr.length;\n\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % n;\n        let prev = (mid + n - 1) % n;\n\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let count = 0;\n    let min = arr[0];\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            count = i;\n        }\n    }\n    return count;\n}\n",
    "    let count = 0;\n    let n = arr.length;\n    for (let i = 0; i < n - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n",
    "    let start = 0;\n    let end = arr.length - 1;\n    let mid = 0;\n    while (start <= end) {\n        mid = Math.floor((start + end) / 2);\n        if (arr[mid] > arr[mid + 1]) {\n            return mid + 1;\n        }\n        if (arr[mid] < arr[mid - 1]) {\n            return mid;\n        }\n        if (arr[start] <= arr[mid]) {\n            start = mid + 1;\n        } else {\n            end = mid - 1;\n        }\n    }\n    return 0;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low < high) {\n        let mid = Math.floor((low + high) / 2);\n        if (mid < high && arr[mid] > arr[mid + 1]) {\n            return mid + 1;\n        }\n        if (mid > low && arr[mid] < arr[mid - 1]) {\n            return mid;\n        }\n        if (arr[low] > arr[mid]) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return 0;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid - 1 + arr.length) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "  let low = 0;\n  let high = arr.length - 1;\n  while (low <= high) {\n    if (arr[low] <= arr[high]) {\n      return low;\n    }\n    let mid = Math.floor((low + high) / 2);\n    let next = (mid + 1) % arr.length;\n    let prev = (mid + arr.length - 1) % arr.length;\n    if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n      return mid;\n    } else if (arr[mid] <= arr[high]) {\n      high = mid - 1;\n    } else if (arr[mid] >= arr[low]) {\n      low = mid + 1;\n    }\n  }\n  return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n",
    "    let n = arr.length;\n    let low = 0;\n    let high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = low + Math.floor((high - low) / 2);\n        let next = (mid + 1) % n;\n        let prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let n = arr.length;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % n;\n        let prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low < high) {\n        let mid = Math.floor((low + high) / 2);\n        if (mid < high && arr[mid] > arr[mid + 1]) {\n            return mid + 1;\n        }\n        if (mid > low && arr[mid] < arr[mid - 1]) {\n            return mid;\n        }\n        if (arr[low] < arr[mid]) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return 0;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid - 1 + arr.length) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "  let low = 0;\n  let high = arr.length - 1;\n  let mid = 0;\n\n  while (low <= high) {\n    if (arr[low] <= arr[high]) {\n      return low;\n    }\n\n    mid = Math.floor((low + high) / 2);\n    let next = (mid + 1) % arr.length;\n    let prev = (mid + arr.length - 1) % arr.length;\n\n    if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n      return mid;\n    } else if (arr[mid] <= arr[high]) {\n      high = mid - 1;\n    } else if (arr[mid] >= arr[low]) {\n      low = mid + 1;\n    }\n  }\n  return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n",
    "    let n = arr.length;\n    let low = 0;\n    let high = n - 1;\n    let mid = 0;\n\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n\n        mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % n;\n        let prev = (mid + n - 1) % n;\n\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let n = arr.length;\n    let low = 0;\n    let high = n - 1;\n    let mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % n;\n        let prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = low + Math.floor((high - low) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n",
    "    let low = 0, high = arr.length - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) return low;\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) return mid;\n        else if (arr[mid] <= arr[high]) high = mid - 1;\n        else if (arr[mid] >= arr[low]) low = mid + 1;\n    }\n    return -1;\n}\n",
    "    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n",
    "  let low = 0;\n  let high = arr.length - 1;\n  while (low < high) {\n    let mid = Math.floor((low + high) / 2);\n    if (arr[mid] > arr[high]) {\n      low = mid + 1;\n    } else {\n      high = mid;\n    }\n  }\n  return low;\n}\n",
    "    let start = 0;\n    let end = arr.length - 1;\n    let mid = 0;\n    while (start <= end) {\n        if (arr[start] <= arr[end]) {\n            return start;\n        }\n        mid = Math.floor((start + end) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[end]) {\n            end = mid - 1;\n        } else if (arr[mid] >= arr[start]) {\n            start = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let n = arr.length;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % n;\n        let prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let n = arr.length;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % n;\n        let prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "  let low = 0;\n  let high = arr.length - 1;\n  while (low <= high) {\n    if (arr[low] <= arr[high]) {\n      return low;\n    }\n    let mid = Math.floor((low + high) / 2);\n    let next = (mid + 1) % arr.length;\n    let prev = (mid + arr.length - 1) % arr.length;\n    if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n      return mid;\n    } else if (arr[mid] <= arr[high]) {\n      high = mid - 1;\n    } else if (arr[mid] >= arr[low]) {\n      low = mid + 1;\n    }\n  }\n  return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low < high) {\n        if (arr[low] < arr[high]) {\n            return low;\n        }\n        mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let count = 0;\n    let min = arr[0];\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            count = i;\n        }\n    }\n    return count;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low < high) {\n        let mid = Math.floor((low + high) / 2);\n        if (arr[mid] > arr[high]) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n    return low;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let n = arr.length;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % n;\n        let prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n",
    "  let low = 0;\n  let high = arr.length - 1;\n  let n = arr.length;\n  while (low <= high) {\n    if (arr[low] <= arr[high]) {\n      return low;\n    }\n    let mid = Math.floor((low + high) / 2);\n    let next = (mid + 1) % n;\n    let prev = (mid + n - 1) % n;\n    if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n      return mid;\n    } else if (arr[mid] <= arr[high]) {\n      high = mid - 1;\n    } else if (arr[mid] >= arr[low]) {\n      low = mid + 1;\n    }\n  }\n  return -1;\n}\n",
    "    let count = 0;\n    let max = arr[0];\n    for (let i = 0; i < arr.length; i++) {\n        if (max > arr[i]) {\n            count = i;\n            break;\n        }\n        max = arr[i];\n    }\n    return count;\n}\n",
    "    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (min > arr[i]) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n",
    "    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (min > arr[i]) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "  let low = 0;\n  let high = arr.length - 1;\n  while (low <= high) {\n    if (arr[low] <= arr[high]) {\n      return low;\n    }\n    let mid = Math.floor((low + high) / 2);\n    let next = (mid + 1) % arr.length;\n    let prev = (mid + arr.length - 1) % arr.length;\n    if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n      return mid;\n    } else if (arr[mid] <= arr[high]) {\n      high = mid - 1;\n    } else if (arr[mid] >= arr[low]) {\n      low = mid + 1;\n    }\n  }\n  return -1;\n}\n",
    "  let low = 0;\n  let high = arr.length - 1;\n  while (low < high) {\n    let mid = Math.floor((low + high) / 2);\n    if (arr[mid] > arr[high]) {\n      low = mid + 1;\n    } else {\n      high = mid;\n    }\n  }\n  return low;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let n = arr.length;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % n;\n        let prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let n = arr.length;\n    let low = 0;\n    let high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % n;\n        let prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low < high) {\n        let mid = Math.floor((low + high) / 2);\n        if (arr[mid] > arr[high]) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n    return low;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let n = arr.length;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % n;\n        let prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "  let low = 0;\n  let high = arr.length - 1;\n  let n = arr.length;\n  while (low <= high) {\n    if (arr[low] <= arr[high]) {\n      return low;\n    }\n    let mid = Math.floor((low + high) / 2);\n    let next = (mid + 1) % n;\n    let prev = (mid + n - 1) % n;\n    if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n      return mid;\n    } else if (arr[mid] <= arr[high]) {\n      high = mid - 1;\n    } else if (arr[mid] >= arr[low]) {\n      low = mid + 1;\n    }\n  }\n  return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "  let low = 0;\n  let high = arr.length - 1;\n  let n = arr.length;\n  while (low <= high) {\n    if (arr[low] <= arr[high]) {\n      return low;\n    }\n    let mid = Math.floor((low + high) / 2);\n    let next = (mid + 1) % n;\n    let prev = (mid + n - 1) % n;\n    if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n      return mid;\n    } else if (arr[mid] <= arr[high]) {\n      high = mid - 1;\n    } else if (arr[mid] >= arr[low]) {\n      low = mid + 1;\n    }\n  }\n  return -1;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low < high) {\n        mid = Math.floor((low + high) / 2);\n        if (arr[mid] > arr[high]) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n    return low;\n}\n\nconsole.log(count_rotation([15, 18, 2, 3, 6, 12]));\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let n = arr.length;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % n;\n        let prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let n = arr.length;\n    let low = 0;\n    let high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % n;\n        let prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low < high) {\n        mid = Math.floor((low + high) / 2);\n        if (arr[mid] > arr[high]) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n    return low;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low < high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0, high = arr.length - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (min > arr[i]) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n",
    "    let min = arr[0];\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (min > arr[i]) {\n            min = arr[i];\n            count = i;\n        }\n    }\n    return count;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n",
    "    let min = arr[0];\n    let min_index = 0;\n    for (let i = 1; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n",
    "  let low = 0;\n  let high = arr.length - 1;\n  let n = arr.length;\n\n  while (low <= high) {\n    if (arr[low] <= arr[high]) {\n      return low;\n    }\n\n    let mid = Math.floor((low + high) / 2);\n    let next = (mid + 1) % n;\n    let prev = (mid + n - 1) % n;\n\n    if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n      return mid;\n    } else if (arr[mid] <= arr[high]) {\n      high = mid - 1;\n    } else if (arr[mid] >= arr[low]) {\n      low = mid + 1;\n    }\n  }\n  return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let n = arr.length;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % n;\n        let prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let count = 0;\n    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] > arr[i + 1]) {\n            count++;\n        }\n        i++;\n    }\n    return count;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low < high) {\n        let mid = Math.floor((low + high) / 2);\n        if (arr[mid] > arr[high]) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n    return low;\n}\n",
    "  let low = 0;\n  let high = arr.length - 1;\n  let mid = 0;\n  while (low <= high) {\n    if (arr[low] <= arr[high]) {\n      return low;\n    }\n    mid = Math.floor((low + high) / 2);\n    let next = (mid + 1) % arr.length;\n    let prev = (mid + arr.length - 1) % arr.length;\n    if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n      return mid;\n    } else if (arr[mid] <= arr[high]) {\n      high = mid - 1;\n    } else if (arr[mid] >= arr[low]) {\n      low = mid + 1;\n    }\n  }\n  return -1;\n}\n",
    "    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n",
    "    let n = arr.length;\n    let low = 0;\n    let high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % n;\n        let prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0, high = arr.length - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let n = arr.length;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % n;\n        let prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n",
    "    let n = arr.length;\n    let low = 0;\n    let high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % n;\n        let prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let count = 0;\n    let min = arr[0];\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            count = i;\n        }\n    }\n    return count;\n}\n",
    "  let low = 0;\n  let high = arr.length - 1;\n  let mid = 0;\n  while (low <= high) {\n    if (arr[low] <= arr[high]) {\n      return low;\n    }\n    mid = Math.floor((low + high) / 2);\n    let next = (mid + 1) % arr.length;\n    let prev = (mid - 1 + arr.length) % arr.length;\n    if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n      return mid;\n    } else if (arr[mid] <= arr[high]) {\n      high = mid - 1;\n    } else if (arr[mid] >= arr[low]) {\n      low = mid + 1;\n    }\n  }\n  return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let n = arr.length;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % n;\n        let prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let n = arr.length;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % n;\n        let prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low < high) {\n        if (arr[low] < arr[high]) {\n            return low;\n        }\n        mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low < high) {\n        let mid = Math.floor((low + high) / 2);\n        if (arr[mid] > arr[high]) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n    return low;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n",
    "  let min = arr[0];\n  let min_index = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] < min) {\n      min = arr[i];\n      min_index = i;\n    }\n  }\n  return min_index;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let n = arr.length;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % n;\n        let prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let n = arr.length;\n    let low = 0;\n    let high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % n;\n        let prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let n = arr.length;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % n;\n        let prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let n = arr.length;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % n;\n        let prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    let n = arr.length;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % n;\n        let prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let n = arr.length;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % n;\n        let prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid - 1 + arr.length) % arr.length;\n\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid - 1 + arr.length) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "  let low = 0;\n  let high = arr.length - 1;\n  let mid = 0;\n  while (low <= high) {\n    if (arr[low] <= arr[high]) {\n      return low;\n    }\n    mid = Math.floor((low + high) / 2);\n    let next = (mid + 1) % arr.length;\n    let prev = (mid + arr.length - 1) % arr.length;\n    if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n      return mid;\n    } else if (arr[mid] <= arr[high]) {\n      high = mid - 1;\n    } else if (arr[mid] >= arr[low]) {\n      low = mid + 1;\n    }\n  }\n  return -1;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n",
    "    let n = arr.length;\n    let low = 0, high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % n;\n        let prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n",
    "    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n"
  ]
}
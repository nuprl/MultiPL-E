{
  "name": "mbpp_794_text_starta_endb",
  "language": "ts",
  "prompt": "//Write a function that matches a string that has an 'a' followed by anything, ending in 'b'.\nfunction text_starta_endb(text: string): boolean {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_794_text_starta_endb.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_starta_endb;\n  assert.deepEqual(candidate(\"aabbbb\"),true);\n  assert.deepEqual(candidate(\"aabAbbbc\"),false);\n  assert.deepEqual(candidate(\"accddbbjjj\"),false);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let regex = /a.*b$/;\n    return regex.test(text);\n}\n",
    "    return /^a.*b$/.test(text);\n}\n",
    "    return /^a.*b$/.test(text);\n}\n",
    "    let regex = /a.*b$/;\n    return regex.test(text);\n}\n",
    "    let reg = /a.+b$/;\n    return reg.test(text);\n}\n",
    "    let reg = /^a.*b$/;\n    return reg.test(text);\n}\n",
    "    let reg = /^a.*b$/;\n    return reg.test(text);\n}\n",
    "    return /^a.*b$/.test(text);\n}\n",
    "    let regex = /a.*b$/;\n    return regex.test(text);\n}\n",
    "    return /^a.*b$/.test(text);\n}\n",
    "    return /^a.*b$/.test(text);\n}\n",
    "    return /^a.*b$/.test(text);\n}\n",
    "    return /^a.*b$/.test(text);\n}\n",
    "    return /^a.*b$/.test(text);\n}\n",
    "    let reg = /a.+b/;\n    return reg.test(text);\n}\n",
    "    let regex = /a.*b$/;\n    return regex.test(text);\n}\n",
    "    let regex = /a.*b$/;\n    return regex.test(text);\n}\n",
    "    let regex = /a.*b$/;\n    return regex.test(text);\n}\n",
    "    return /^a.*b$/.test(text);\n}\n",
    "    let regexp = /a.*b$/;\n    return regexp.test(text);\n}\n"
  ]
}
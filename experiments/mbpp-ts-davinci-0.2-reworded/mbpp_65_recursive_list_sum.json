{
  "name": "mbpp_65_recursive_list_sum",
  "language": "ts",
  "prompt": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_65_recursive_list_sum.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    else {\n        return data_list.reduce((acc, curr) => acc + recursive_list_sum(curr), 0);\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    if (typeof data_list === \"number\") {\n        return data_list;\n    }\n    else {\n        let sum: number = 0;\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n        return sum;\n    }\n}\n",
    "    if (Array.isArray(data_list)) {\n        let sum = 0;\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n        return sum;\n    } else {\n        return data_list;\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8, 9]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\n",
    "    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    } else {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n        return sum;\n    }\n}\n",
    "    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if(Array.isArray(data_list)){\n        for(let i = 0; i < data_list.length; i++){\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    else{\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    if (Array.isArray(data_list)) {\n        return data_list.reduce((acc, val) => acc + recursive_list_sum(val), 0);\n    } else {\n        return data_list;\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (typeof data_list[i] === 'number') {\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (typeof data_list[i] === 'number') {\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, 4, 5]));\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    if (typeof data_list === \"number\") {\n        return data_list;\n    }\n    else {\n        return data_list.reduce((acc, val) => acc + recursive_list_sum(val), 0);\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5], 6], 7, 8]));\n",
    "    let sum: number = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    } else {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, [2, [3, [4, [5]]]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, [4, 5, [6, 7, 8]]]));\n",
    "    if (Array.isArray(data_list)) {\n        return data_list.reduce((acc, val) => acc + recursive_list_sum(val), 0);\n    } else {\n        return data_list;\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, [4, 5, 6, [7, 8, 9]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if(Array.isArray(data_list)){\n        for(let i = 0; i < data_list.length; i++){\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    else{\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1,2,[3,4,[5,6]]]));\n",
    "    let sum: number = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (typeof data_list[i] === 'number') {\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, [2, [3, [4, [5]]]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]]));\n",
    "    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (typeof data_list[i] === 'number') {\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (typeof data_list[i] === 'number') {\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, [4, 5, 6, [7, 8, 9]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, 4, [5, 6, [7, 8, 9]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(recursive_list_sum([[1, 2, 3], [4, 5, 6], [7, 8, 9], [10]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6, [7, 8]]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));\n",
    "    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (typeof data_list[i] === 'number') {\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, [2, [3, [4, [5]]]]]));\n",
    "    let sum = 0;\n    if (typeof data_list === \"number\") {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, [2, [3, [4, [5]]]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6, [7, 8, [9, 10]]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(recursive_list_sum([[1, 2, 3], [4, 5, 6], [7, 8, 9], 10]));\nconsole.log(recursive_list_sum([[[1, 2, 3], [4, 5, 6], [7, 8, 9], 10]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    if (typeof data_list === 'number') {\n        return data_list;\n    } else {\n        return data_list.reduce((a, b) => recursive_list_sum(a) + recursive_list_sum(b), 0);\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, 4, 5]));\nconsole.log(recursive_list_sum([[1, 2], [3, 4], [5, 6]]));\nconsole.log(recursive_list_sum([[[1, 2], [3, 4]], [[5, 6], [7, 8]]]));\nconsole.log(recursive_list_sum([1, [2, [3, 4], [[5]]]]));\n",
    "    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]], 7, 8]));\nconsole.log(recursive_list_sum([1, 2, 3, 4, 5, 6, 7, 8]));\n",
    "    if (typeof data_list === 'number') {\n        return data_list;\n    } else {\n        return data_list.reduce((acc, curr) => acc + recursive_list_sum(curr), 0);\n    }\n}\n",
    "    if (Array.isArray(data_list)) {\n        return data_list.reduce((acc, val) => acc + recursive_list_sum(val), 0);\n    }\n    return data_list;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (typeof data_list[i] === 'number') {\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    } else {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n        return sum;\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, [2, [3, 4], 5], 6]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        data_list.forEach(function (value) {\n            sum += recursive_list_sum(value);\n        });\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));",
    "    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    else {\n        let sum = 0;\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n        return sum;\n    }\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(recursive_list_sum([[1, 2, 3], [4, 5, 6], [7, 8, 9], 10]));\nconsole.log(recursive_list_sum([[[1, 2, 3], [4, 5, 6], [7, 8, 9], 10]]));\nconsole.log(recursive_list_sum([[[1, 2, 3], [4, 5, 6], [7, 8, 9], 10], [[1, 2, 3], [4, 5, 6], [7, 8, 9], 10]]));\nconsole.log(recursive_list_sum([[[1, 2, 3], [4, 5, 6], [7, 8, 9], 10], [[1, 2, 3], [4, 5, 6], [7, 8, 9], 10], [[1, 2, 3], [4, 5, 6], [7, 8, 9], 10]]));\nconsole.log(recursive_list_sum([[[1, 2, 3], [4, 5, 6], [7, 8, 9], 10], [[1, 2, 3], [4, 5, 6], [7, 8, 9], 10], [[1, 2, 3], [4, 5, 6], [7, 8, 9], 10], [[1, 2, 3], [4, 5, 6], [7, 8, 9], 10]]));\nconsole.log(recursive_list_sum([[[1, 2, 3], [4, 5, 6], [7, 8, 9], 10], [[1, 2, 3], [4, 5, 6], [7, 8, 9], 10], [[1, 2, 3], [4, 5, 6], [7, 8,",
    "    if (typeof data_list === \"number\") {\n        return data_list;\n    } else {\n        let sum = 0;\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n        return sum;\n    }\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]], 7, 8]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(recursive_list_sum([1, [2, [3, 4], [[5], 6]], 7, 8, 9, 10]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum = 0;\n    data_list.forEach(function (element) {\n        if (Array.isArray(element)) {\n            sum += recursive_list_sum(element);\n        } else {\n            sum += element;\n        }\n    });\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6, [7, 8]]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let item of data_list) {\n            sum += recursive_list_sum(item);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\n",
    "    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5]]]));\n",
    "    if (typeof data_list === 'number') {\n        return data_list;\n    } else {\n        return data_list.reduce((acc, val) => acc + recursive_list_sum(val), 0);\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    else {\n        return data_list.reduce((sum, element) => sum + recursive_list_sum(element), 0);\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));\n",
    "    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5]]]));\n",
    "    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, [2, [3, [4, [5]]]]]));\n",
    "    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, [2, [3, [4, [5, [6, [7, [8, [9, [10]]]]]]]]]]));\n",
    "    if (Array.isArray(data_list)) {\n        return data_list.reduce((acc, val) => acc + recursive_list_sum(val), 0);\n    } else {\n        return data_list;\n    }\n}\n\nconsole.log(recursive_list_sum([1, [2, [3, [4, [5, [6, [7, [8, [9, [10]]]]]]]]]]));\n",
    "    if (Array.isArray(data_list)) {\n        return data_list.reduce((acc, cur) => acc + recursive_list_sum(cur), 0);\n    } else {\n        return data_list;\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8, 9]));\n",
    "    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(recursive_list_sum([[1, 2, 3], [4, 5, 6], [7, 8, 9], [10]]));\nconsole.log(recursive_list_sum([[[1, 2, 3], [4, 5, 6], [7, 8, 9], [10]]]));\nconsole.log(recursive_list_sum
    "    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    return data_list.reduce((acc, val) => acc + recursive_list_sum(val), 0);\n}\n",
    "    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (data_list instanceof Array) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (typeof data_list[i] === \"number\") {\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (typeof data_list[i] === 'number') {\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, [4, 5, [6, 7, 8]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    if (typeof data_list === \"number\") {\n        return data_list;\n    }\n    else {\n        return data_list.reduce((acc, val) => acc + recursive_list_sum(val), 0);\n    }\n}\n",
    "    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6, [7, 8]]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6, [7, 8, [9, 10]]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6, [7, 8, 9]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, [4, 5, [6, 7, 8]]]));\n",
    "    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    else {\n        return data_list.reduce((acc, cur) => acc + recursive_list_sum(cur), 0);\n    }\n}\n",
    "    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8, [9, 10]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        data_list.forEach(function (element) {\n            sum += recursive_list_sum(element);\n        });\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6, [7, 8]]]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]]));\n",
    "    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));\n",
    "    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    } else {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n        return sum;\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, 4, 5, 6]));\nconsole.log(recursive_list_sum([[1, 2], [3, 4], [5, 6]]));\nconsole.log(recursive_list_sum([[[1, 2], [3, 4]], [[5, 6], [7, 8]]]));\nconsole.log(recursive_list_sum([[[[1, 2], [3, 4]], [[5, 6], [7, 8]]], [[[9, 10], [11, 12]], [[13, 14], [15, 16]]]]));\nconsole.log(recursive_list_sum([[[[[1, 2], [3, 4]], [[5, 6], [7, 8]]], [[[9, 10], [11, 12]], [[13, 14], [15, 16]]]], [[[[17, 18], [19, 20]], [[21, 22], [23, 24]]], [[[25, 26], [27, 28]], [[29, 30], [31, 32]]]]]));\nconsole.log(recursive_list_sum([[[[[[1, 2], [3, 4]], [[5, 6], [7, 8]]], [[[9, 10], [11, 12]], [[13, 14], [15, 16]]]], [[[[17, 18], [19, 20]], [[21, 22], [23, 24]]], [[[25, 26], [27, 28]], [[29, 30], [31, 32]]]]], [[[[[33, 34], [35, 36]], [[37, 38], [39, 40]]], [[[41, 42], [43, 44]], [[45, 46], [47, 48]]]], [[[[49, 50], [51, 52]], [[53, 54], [55,",
    "    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n        else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, [2, [3, [4, [5]]]]]));",
    "    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    if (data_list instanceof Array) {\n        return data_list.reduce((acc, curr) => acc + recursive_list_sum(curr), 0);\n    } else {\n        return data_list;\n    }\n}\n",
    "    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(recursive_list_sum([[1, 2, 3], [4, 5, 6], [7, 8, 9], [10]]));\nconsole.log(recursive_list_sum([[[1, 2, 3], [4, 5, 6], [7, 8, 9], [10]]]));\nconsole.log(recursive_list_sum([[[[[[[[[[1]]]]]]]]]]));\nconsole.log(recursive_list_sum([[[[[[[[[[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]]]]]]]]]]));\n",
    "    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (typeof data_list[i] === 'number') {\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i: number = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, [2, [3, [4, [5, [6, [7, [8, [9, [10]]]]]]]]]]));\n",
    "    if (data_list instanceof Array) {\n        let sum = 0;\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n        return sum;\n    } else {\n        return data_list;\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]], 7, [8, 9]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, 4, 5]));\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5]]]));\nconsole.log(recursive_list_sum([[[[[1]]]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6, [7, 8]]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6, [7, 8, [9, 10]]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, [6, 7]]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, [6, [7, 8]]]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, [6, [7, [8, 9]]]]]));\n",
    "    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6, [7, 8]]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(recursive_list_sum([[1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]]));\nconsole.log(recursive_list_sum([[[1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]]]));\n",
    "    if (Array.isArray(data_list)) {\n        return data_list.reduce((acc, val) => acc + recursive_list_sum(val), 0);\n    } else {\n        return data_list;\n    }\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8, 9]));\n",
    "    if (typeof data_list === \"number\") {\n        return data_list;\n    } else {\n        return data_list.reduce((acc, curr) => acc + recursive_list_sum(curr), 0);\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    else {\n        return data_list.reduce((acc, val) => acc + recursive_list_sum(val), 0);\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n",
    "    if (typeof data_list === \"number\") {\n        return data_list;\n    }\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n",
    "    if (typeof data_list === \"number\") {\n        return data_list;\n    }\n    else {\n        let sum = 0;\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n        return sum;\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n"
  ]
}
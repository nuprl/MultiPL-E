{
  "name": "mbpp_230_replace_blank",
  "language": "ts",
  "prompt": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_230_replace_blank.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    return str1.replace(/ /g, char);\n}\nconsole.log(replace_blank(\"Hello World\", \"*\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "Hello*World\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1.charAt(i) == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1.charAt(i);\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\nconsole.log(replace_blank(\"hello world\", \"*\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "hello*world\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    return str1.replace(/ /g, char);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1.charAt(i) == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1.charAt(i);\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let str2: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            str2 += char;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    return str1.replace(/ /g, char);\n}\nconsole.log(replace_blank(\"Hello World\", \"*\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "Hello*World\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] === \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\nconsole.log(replace_blank(\"hello world\", \"*\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "hello*world\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let str2: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            str2 += char;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1.charAt(i) == \" \") {\n            new_str += char;\n        }\n        else {\n            new_str += str1.charAt(i);\n        }\n    }\n    return new_str;\n}\n\nconsole.log(replace_blank(\"hello world\", \"*\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "hello*world\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1.charAt(i) == \" \") {\n            new_str = new_str + char;\n        } else {\n            new_str = new_str + str1.charAt(i);\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let str2: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            str2 += char;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let str2: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1.charAt(i) == \" \") {\n            str2 += char;\n        } else {\n            str2 += str1.charAt(i);\n        }\n    }\n    return str2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\nconsole.log(replace_blank(\"This is a test\", \"*\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "This*is*a*test\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        }\n        else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\nconsole.log(replace_blank(\"Hello World\", \"*\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "Hello*World\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_string: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_string += char;\n        } else {\n            new_string += str1[i];\n        }\n    }\n    return new_string;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\nconsole.log(replace_blank(\"This is a test\", \"*\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "This*is*a*test\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\nconsole.log(replace_blank(\"This is a test\", \"*\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "This*is*a*test\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] === \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let str2: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            str2 += char;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconsole.log(replace_blank(\"This is a test\", \"*\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "This*is*a*test\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = '';\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] === ' ') {\n            new_str += char;\n        }\n        else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\nconsole.log(replace_blank('hello world', '*'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "hello*world\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    return str1.replace(/ /g, char);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let str2: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1.charAt(i) == \" \") {\n            str2 = str2 + char;\n        } else {\n            str2 = str2 + str1.charAt(i);\n        }\n    }\n    return str2;\n}\nconsole.log(replace_blank(\"Hello World\", \"*\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "Hello*World\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] === \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let newStr: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            newStr += char;\n        } else {\n            newStr += str1[i];\n        }\n    }\n    return newStr;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1.charAt(i) == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1.charAt(i);\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        }\n        else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\nconsole.log(replace_blank(\"The quick brown fox jumps over the lazy dog\", \"*\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "The*quick*brown*fox*jumps*over*the*lazy*dog\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] === \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\nconsole.log(replace_blank(\"I am a string\", \"*\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "I*am*a*string\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\nconsole.log(replace_blank(\"hello world\", \"*\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "hello*world\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    return str1.replace(/ /g, char);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\nconsole.log(replace_blank(\"hello world\", \"*\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "hello*world\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] === \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        }\n        else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\nconsole.log(replace_blank(\"This is a test\", \"*\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "This*is*a*test\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1.charAt(i) == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1.charAt(i);\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let newStr: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            newStr += char;\n        } else {\n            newStr += str1[i];\n        }\n    }\n    return newStr;\n}\nconsole.log(replace_blank(\"This is a test\", \"*\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "This*is*a*test\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let str2: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1.charAt(i) == \" \") {\n            str2 += char;\n        } else {\n            str2 += str1.charAt(i);\n        }\n    }\n    return str2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        }\n        else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    return str1.replace(/ /g, char);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\nconsole.log(replace_blank(\"This is a string\", \"*\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "This*is*a*string\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    return str1.replace(/ /g, char);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\nconsole.log(replace_blank(\"hello world\", \"*\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "hello*world\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\nconsole.log(replace_blank(\"Hello World\", \"*\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "Hello*World\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    return str1.replace(/ /g, char);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1.charAt(i) == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1.charAt(i);\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    return str1.replace(/ /g, char);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let newStr: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            newStr += char;\n        } else {\n            newStr += str1[i];\n        }\n    }\n    return newStr;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1.charAt(i) == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1.charAt(i);\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        }\n        else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\nconsole.log(replace_blank(\"This is a test\", \"*\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "This*is*a*test\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\nconsole.log(replace_blank(\"This is a test\", \"*\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "This*is*a*test\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str = new_str + char;\n        } else {\n            new_str = new_str + str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1.charAt(i) == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1.charAt(i);\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str = '';\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == ' ') {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\nconsole.log(replace_blank('hello world', '*'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123770,
      "stdout": "hello*world\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let str2: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            str2 += char;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\nconsole.log(replace_blank(\"This is a string\", \"*\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123770,
      "stdout": "This*is*a*string\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] === \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\nconsole.log(replace_blank(\"Hello World\", \"*\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123770,
      "stdout": "Hello*World\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1.charAt(i) == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1.charAt(i);\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        }\n        else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str = new_str + char;\n        }\n        else {\n            new_str = new_str + str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1.charAt(i) == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1.charAt(i);\n        }\n    }\n    return new_str;\n}\nconsole.log(replace_blank(\"hello world\", \"*\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123770,
      "stdout": "hello*world\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] === \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\nconsole.log(replace_blank(\"hello world\", \"*\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123770,
      "stdout": "hello*world\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    return str1.replace(/ /g, char);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    return str1.replace(/ /g, char);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1.charAt(i) == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1.charAt(i);\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    return str1.replace(/ /g, char);\n}\nconsole.log(replace_blank(\"Hello World\", \"*\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "Hello*World\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] === \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        }\n        else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\nconsole.log(replace_blank(\"This is a test\", \"*\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123770,
      "stdout": "This*is*a*test\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] === \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\nconsole.log(replace_blank(\"hello world\", \"*\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123770,
      "stdout": "hello*world\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\nconsole.log(replace_blank(\"This is a test\", \"*\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "This*is*a*test\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        }\n        else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        }\n        else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\nconsole.log(replace_blank(\"This is a test\", \"*\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123770,
      "stdout": "This*is*a*test\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        }\n        else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\nconsole.log(replace_blank(\"This is a test\", \"*\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123770,
      "stdout": "This*is*a*test\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    return str1.replace(/ /g, char);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\nconsole.log(replace_blank(\"Hello World\", \"*\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123770,
      "stdout": "Hello*World\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\nconsole.log(replace_blank(\"Hello World\", \"*\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123770,
      "stdout": "Hello*World\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\nconsole.log(replace_blank(\"This is a string\", \"*\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "This*is*a*string\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let newStr: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            newStr += char;\n        } else {\n            newStr += str1[i];\n        }\n    }\n    return newStr;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\nconsole.log(replace_blank(\"This is a string\", \"*\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "This*is*a*string\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    return str1.replace(/ /g, char);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = '';\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] === ' ') {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = '';\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == ' ') {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] === \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\nconsole.log(replace_blank(\"This is a test\", \"*\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123770,
      "stdout": "This*is*a*test\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] === \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1.charAt(i) == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1.charAt(i);\n        }\n    }\n    return new_str;\n}\nconsole.log(replace_blank(\"This is a test\", \"*\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123770,
      "stdout": "This*is*a*test\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1.charAt(i) == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1.charAt(i);\n        }\n    }\n    return new_str;\n}\nconsole.log(replace_blank(\"hello world\", \"*\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123770,
      "stdout": "hello*world\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    return str1.replace(/ /g, char);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1.charAt(i) == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1.charAt(i);\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        }\n        else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1.charAt(i) == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1.charAt(i);\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let str2: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            str2 += char;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1.charAt(i) == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1.charAt(i);\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n  let new_str: string = \"\";\n  for (let i: number = 0; i < str1.length; i++) {\n    if (str1[i] === \" \") {\n      new_str += char;\n    } else {\n      new_str += str1[i];\n    }\n  }\n  return new_str;\n}\n\nconsole.log(replace_blank(\"This is a test\", \"*\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123770,
      "stdout": "This*is*a*test\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\nconsole.log(replace_blank(\"hello world\", \"*\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "hello*world\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1.charAt(i) == \" \") {\n            new_str = new_str + char;\n        } else {\n            new_str = new_str + str1.charAt(i);\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\nconsole.log(replace_blank(\"Hello World\", \"*\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123770,
      "stdout": "Hello*World\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        }\n        else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\nconsole.log(replace_blank(\"This is a string\", \"*\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123770,
      "stdout": "This*is*a*string\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    return str1.replace(/ /g, char);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        }\n        else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\nconsole.log(replace_blank(\"hello world\", \"*\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123770,
      "stdout": "hello*world\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = '';\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == ' ') {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] === \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\nconsole.log(replace_blank(\"hello world\", \"*\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "hello*world\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let newStr: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            newStr += char;\n        } else {\n            newStr += str1[i];\n        }\n    }\n    return newStr;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        }\n        else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let str2: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            str2 += char;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\n\nconsole.log(replace_blank(\"This is a test\", \"*\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123770,
      "stdout": "This*is*a*test\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] === \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\nconsole.log(replace_blank(\"Hello World\", \"*\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123770,
      "stdout": "Hello*World\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\nconsole.log(replace_blank(\"This is a test\", \"*\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "This*is*a*test\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let str2: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            str2 += char;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconsole.log(replace_blank(\"This is a test\", \"*\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123771,
      "stdout": "This*is*a*test\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = str1.replace(/ /g, char);\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123771,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] === \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1.charAt(i) == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1.charAt(i);\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1.charAt(i) == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1.charAt(i);\n        }\n    }\n    return new_str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1665510609,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nfunction replace_blank(str1: string, char: string): string {\n    let new_str: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \" \") {\n            new_str += char;\n        } else {\n            new_str += str1[i];\n        }\n    }\n    return new_str;\n}\nconsole.log(replace_blank(\"This is a test\", \"*\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_blank;\n  assert.deepEqual(candidate(\"hello people\", \"@\"),\"hello@people\");\n  assert.deepEqual(candidate(\"python program language\", \"$\"),\"python$program$language\");\n  assert.deepEqual(candidate(\"blank space\", \"-\"),\"blank-space\");\n}\n\ntest();",
      "timestamp": 1666123767,
      "stdout": "This*is*a*test\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
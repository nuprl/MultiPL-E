{
  "name": "mbpp_308_large_product",
  "language": "ts",
  "prompt": "//Write a function to find the specified number of largest products from two given arrays, selecting one factor from each array.\nfunction large_product(nums1: number[], nums2: number[], N: number): number[] {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_308_large_product.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = large_product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6], [3, 6, 8, 9, 10, 6], 3),[60, 54, 50]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6], [3, 6, 8, 9, 10, 6], 4),[60, 54, 50, 48]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6], [3, 6, 8, 9, 10, 6], 5),[60, 54, 50, 48, 45]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let result: number[] = [];\n    let max: number = 0;\n    let max_idx: number = 0;\n    let max_idx2: number = 0;\n    for (let i = 0; i < N; i++) {\n        max = 0;\n        for (let j = 0; j < nums1.length; j++) {\n            for (let k = 0; k < nums2.length; k++) {\n                if (nums1[j] * nums2[k] > max) {\n                    max = nums1[j] * nums2[k];\n                    max_idx = j;\n                    max_idx2 = k;\n                }\n            }\n        }\n        result.push(max);\n        nums1[max_idx] = 0;\n        nums2[max_idx2] = 0;\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    let max: number = 0;\n    let max_index: number = 0;\n    for (let i = 0; i < N; i++) {\n        max = 0;\n        for (let j = 0; j < nums1.length; j++) {\n            for (let k = 0; k < nums2.length; k++) {\n                if (nums1[j] * nums2[k] > max) {\n                    max = nums1[j] * nums2[k];\n                    max_index = j;\n                }\n            }\n        }\n        result.push(max);\n        nums1.splice(max_index, 1);\n    }\n    return result;\n}\n",
    "    let res: number[] = [];\n    let map: Map<number, number> = new Map();\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            let product = nums1[i] * nums2[j];\n            if (map.has(product)) {\n                map.set(product, map.get(product) + 1);\n            } else {\n                map.set(product, 1);\n            }\n        }\n    }\n    let sorted = Array.from(map.keys()).sort((a, b) => b - a);\n    for (let i = 0; i < N; i++) {\n        res.push(sorted[i]);\n    }\n    return res;\n}\n",
    "    let products = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    const products = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let result: number[] = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    result.sort((a, b) => b - a);\n    return result.slice(0, N);\n}\n\nconsole.log(large_product([1, 2, 3, 4, 5], [5, 4, 3, 2, 1], 3));\nconsole.log(large_product([1, 2, 3, 4, 5], [5, 4, 3, 2, 1], 5));\nconsole.log(large_product([1, 2, 3, 4, 5], [5, 4, 3, 2, 1], 10));\n",
    "    let result: number[] = [];\n    let sorted1: number[] = nums1.sort((a, b) => b - a);\n    let sorted2: number[] = nums2.sort((a, b) => b - a);\n    let i: number = 0;\n    let j: number = 0;\n    while (result.length < N) {\n        if (sorted1[i] * sorted2[j] > sorted1[i] * sorted2[j + 1]) {\n            result.push(sorted1[i] * sorted2[j]);\n            j++;\n        } else {\n            result.push(sorted1[i] * sorted2[j + 1]);\n            i++;\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    let max1: number = 0;\n    let max2: number = 0;\n    let max3: number = 0;\n    let max4: number = 0;\n    let max5: number = 0;\n    let max6: number = 0;\n    let max7: number = 0;\n    let max8: number = 0;\n    let max9: number = 0;\n    let max10: number = 0;\n    let max11: number = 0;\n    let max12: number = 0;\n    let max13: number = 0;\n    let max14: number = 0;\n    let max15: number = 0;\n    let max16: number = 0;\n    let max17: number = 0;\n    let max18: number = 0;\n    let max19: number = 0;\n    let max20: number = 0;\n    let max21: number = 0;\n    let max22: number = 0;\n    let max23: number = 0;\n    let max24: number = 0;\n    let max25: number = 0;\n    let max26: number = 0;\n    let max27: number = 0;\n    let max28: number = 0;\n    let max29: number = 0;\n    let max30: number = 0;\n    let max31: number = 0;\n    let max32: number = 0;\n    let max33: number = 0;\n    let max34: number = 0;\n    let max35: number = 0;\n    let max36: number = 0;\n    let max37: number = 0;\n    let max38: number = 0;\n    let max39: number = 0;\n    let max40: number = 0;\n    let max41: number = 0;\n    let max42: number = 0;\n    let max43: number = 0;\n    let max44: number = 0;\n    let max45: number = 0;\n    let max46: number = 0;\n    let max47: number = 0;\n    let max48: number = 0;\n    let max49: number = 0;\n    let max50: number = 0;\n    let",
    "    let res: number[] = [];\n    for (let i = 0; i < N; i++) {\n        let max = -Infinity;\n        let max_index = -1;\n        for (let j = 0; j < nums1.length; j++) {\n            for (let k = 0; k < nums2.length; k++) {\n                if (nums1[j] * nums2[k] > max) {\n                    max = nums1[j] * nums2[k];\n                    max_index = [j, k];\n                }\n            }\n        }\n        res.push(max);\n        nums1.splice(max_index[0], 1);\n        nums2.splice(max_index[1], 1);\n    }\n    return res;\n}\n",
    "    let result: number[] = [];\n    let max1: number = 0;\n    let max2: number = 0;\n    let max1_index: number = 0;\n    let max2_index: number = 0;\n    for (let i = 0; i < N; i++) {\n        for (let j = 0; j < nums1.length; j++) {\n            if (nums1[j] > max1) {\n                max1 = nums1[j];\n                max1_index = j;\n            }\n        }\n        for (let k = 0; k < nums2.length; k++) {\n            if (nums2[k] > max2) {\n                max2 = nums2[k];\n                max2_index = k;\n            }\n        }\n        result.push(max1 * max2);\n        nums1[max1_index] = 0;\n        nums2[max2_index] = 0;\n        max1 = 0;\n        max2 = 0;\n    }\n    return result;\n}\n",
    "    let result = [];\n    for (let i = 0; i < N; i++) {\n        let max = 0;\n        let max_index = 0;\n        for (let j = 0; j < nums1.length; j++) {\n            if (nums1[j] > max) {\n                max = nums1[j];\n                max_index = j;\n            }\n        }\n        nums1[max_index] = 0;\n        max = 0;\n        max_index = 0;\n        for (let j = 0; j < nums2.length; j++) {\n            if (nums2[j] > max) {\n                max = nums2[j];\n                max_index = j;\n            }\n        }\n        nums2[max_index] = 0;\n        result.push(max * max);\n    }\n    return result;\n}\n",
    "    let products = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let result: number[] = [];\n    for (let i = 0; i < N; i++) {\n        let max1 = Math.max(...nums1);\n        let max2 = Math.max(...nums2);\n        result.push(max1 * max2);\n        nums1.splice(nums1.indexOf(max1), 1);\n        nums2.splice(nums2.indexOf(max2), 1);\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    let max1: number = 0;\n    let max2: number = 0;\n    let max3: number = 0;\n    let max4: number = 0;\n    let max5: number = 0;\n    let max6: number = 0;\n    let max7: number = 0;\n    let max8: number = 0;\n    let max9: number = 0;\n    let max10: number = 0;\n    let max11: number = 0;\n    let max12: number = 0;\n    let max13: number = 0;\n    let max14: number = 0;\n    let max15: number = 0;\n    let max16: number = 0;\n    let max17: number = 0;\n    let max18: number = 0;\n    let max19: number = 0;\n    let max20: number = 0;\n    let max21: number = 0;\n    let max22: number = 0;\n    let max23: number = 0;\n    let max24: number = 0;\n    let max25: number = 0;\n    let max26: number = 0;\n    let max27: number = 0;\n    let max28: number = 0;\n    let max29: number = 0;\n    let max30: number = 0;\n    let max31: number = 0;\n    let max32: number = 0;\n    let max33: number = 0;\n    let max34: number = 0;\n    let max35: number = 0;\n    let max36: number = 0;\n    let max37: number = 0;\n    let max38: number = 0;\n    let max39: number = 0;\n    let max40: number = 0;\n    let max41: number = 0;\n    let max42: number = 0;\n    let max43: number = 0;\n    let max44: number = 0;\n    let max45: number = 0;\n    let max46: number = 0;\n    let max47: number = 0;\n    let max48: number = 0;\n    let max49: number = 0;\n    let max50: number = 0;\n    let",
    "    let res: number[] = [];\n    for (let i = 0; i < N; i++) {\n        let max = Number.MIN_SAFE_INTEGER;\n        let max_index = 0;\n        for (let j = 0; j < nums1.length; j++) {\n            if (nums1[j] > max) {\n                max = nums1[j];\n                max_index = j;\n            }\n        }\n        nums1[max_index] = Number.MIN_SAFE_INTEGER;\n        max = Number.MIN_SAFE_INTEGER;\n        for (let j = 0; j < nums2.length; j++) {\n            if (nums2[j] > max) {\n                max = nums2[j];\n            }\n        }\n        res.push(max * max_index);\n    }\n    return res;\n}\n",
    "    let products = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let result: number[] = [];\n    let i: number = 0;\n    let j: number = 0;\n    let k: number = 0;\n    let temp: number = 0;\n    let temp1: number = 0;\n    let temp2: number = 0;\n    let temp3: number = 0;\n    let temp4: number = 0;\n    let temp5: number = 0;\n    let temp6: number = 0;\n    let temp7: number = 0;\n    let temp8: number = 0;\n    let temp9: number = 0;\n    let temp10: number = 0;\n    let temp11: number = 0;\n    let temp12: number = 0;\n    let temp13: number = 0;\n    let temp14: number = 0;\n    let temp15: number = 0;\n    let temp16: number = 0;\n    let temp17: number = 0;\n    let temp18: number = 0;\n    let temp19: number = 0;\n    let temp20: number = 0;\n    let temp21: number = 0;\n    let temp22: number = 0;\n    let temp23: number = 0;\n    let temp24: number = 0;\n    let temp25: number = 0;\n    let temp26: number = 0;\n    let temp27: number = 0;\n    let temp28: number = 0;\n    let temp29: number = 0;\n    let temp30: number = 0;\n    let temp31: number = 0;\n    let temp32: number = 0;\n    let temp33: number = 0;\n    let temp34: number = 0;\n    let temp35: number = 0;\n    let temp36: number = 0;\n    let temp37: number = 0;\n    let temp38: number = 0;\n    let temp39: number = 0;\n    let temp40: number = 0;\n    let temp41: number = 0;\n    let temp42: number = 0;\n    let temp43: number = 0;\n    let temp44: number = 0;\n    let temp45: number = 0;\n    let temp46: number = 0;\n    let temp47: number",
    "    let result: number[] = [];\n    let n1: number = nums1.length;\n    let n2: number = nums2.length;\n    let i: number = 0;\n    let j: number = 0;\n    let k: number = 0;\n    let temp: number = 0;\n    let temp1: number = 0;\n    let temp2: number = 0;\n    let temp3: number = 0;\n    let temp4: number = 0;\n    let temp5: number = 0;\n    let temp6: number = 0;\n    let temp7: number = 0;\n    let temp8: number = 0;\n    let temp9: number = 0;\n    let temp10: number = 0;\n    let temp11: number = 0;\n    let temp12: number = 0;\n    let temp13: number = 0;\n    let temp14: number = 0;\n    let temp15: number = 0;\n    let temp16: number = 0;\n    let temp17: number = 0;\n    let temp18: number = 0;\n    let temp19: number = 0;\n    let temp20: number = 0;\n    let temp21: number = 0;\n    let temp22: number = 0;\n    let temp23: number = 0;\n    let temp24: number = 0;\n    let temp25: number = 0;\n    let temp26: number = 0;\n    let temp27: number = 0;\n    let temp28: number = 0;\n    let temp29: number = 0;\n    let temp30: number = 0;\n    let temp31: number = 0;\n    let temp32: number = 0;\n    let temp33: number = 0;\n    let temp34: number = 0;\n    let temp35: number = 0;\n    let temp36: number = 0;\n    let temp37: number = 0;\n    let temp38: number = 0;\n    let temp39: number = 0;\n    let temp40: number = 0;\n    let temp41: number = 0;\n    let temp42: number = 0;\n    let temp43: number = 0;\n    let temp44: number = 0",
    "    let res: number[] = [];\n    let i: number = 0;\n    let j: number = 0;\n    let k: number = 0;\n    let m: number = nums1.length;\n    let n: number = nums2.length;\n    let temp: number = 0;\n    let temp1: number = 0;\n    let temp2: number = 0;\n    let temp3: number = 0;\n    let temp4: number = 0;\n    let temp5: number = 0;\n    let temp6: number = 0;\n    let temp7: number = 0;\n    let temp8: number = 0;\n    let temp9: number = 0;\n    let temp10: number = 0;\n    let temp11: number = 0;\n    let temp12: number = 0;\n    let temp13: number = 0;\n    let temp14: number = 0;\n    let temp15: number = 0;\n    let temp16: number = 0;\n    let temp17: number = 0;\n    let temp18: number = 0;\n    let temp19: number = 0;\n    let temp20: number = 0;\n    let temp21: number = 0;\n    let temp22: number = 0;\n    let temp23: number = 0;\n    let temp24: number = 0;\n    let temp25: number = 0;\n    let temp26: number = 0;\n    let temp27: number = 0;\n    let temp28: number = 0;\n    let temp29: number = 0;\n    let temp30: number = 0;\n    let temp31: number = 0;\n    let temp32: number = 0;\n    let temp33: number = 0;\n    let temp34: number = 0;\n    let temp35: number = 0;\n    let temp36: number = 0;\n    let temp37: number = 0;\n    let temp38: number = 0;\n    let temp39: number = 0;\n    let temp40: number = 0;\n    let temp41: number = 0;\n    let temp42: number = 0;\n    let temp43: number = 0;\n    let temp44: number = 0;\n",
    "    let res: number[] = [];\n    let i = 0;\n    let j = 0;\n    while (N > 0) {\n        if (nums1[i] * nums2[j] > nums1[i + 1] * nums2[j + 1]) {\n            res.push(nums1[i] * nums2[j]);\n            i++;\n        } else {\n            res.push(nums1[i + 1] * nums2[j + 1]);\n            j++;\n        }\n        N--;\n    }\n    return res;\n}\n"
  ]
}
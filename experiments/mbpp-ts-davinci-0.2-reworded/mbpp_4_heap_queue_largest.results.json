{
  "name": "mbpp_4_heap_queue_largest",
  "language": "ts",
  "prompt": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_4_heap_queue_largest.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n  let heap = new Heap<number>();\n  for (let num of nums) {\n    heap.push(num);\n    if (heap.size() > n) {\n      heap.pop();\n    }\n  }\n  return heap.toArray();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmpu1zqo5ge.ts(3,18): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n  let heap = new Heap(nums, (a, b) => b - a);\n  let result = [];\n  for (let i = 0; i < n; i++) {\n    result.push(heap.pop());\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmp_sobcx66.ts(3,18): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmplkaabzgu.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    const heap = new Heap([], null, ((a, b) => b - a));\n    for (let i = 0; i < nums.length; i++) {\n        heap.push(nums[i]);\n    }\n    const topNums = [];\n    for (let i = 0; i < n; i++) {\n        topNums.push(heap.pop());\n    }\n    return topNums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510505,
      "stdout": "../../../../tmp/tmpllpb8ijn.ts(3,22): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>((a, b) => a - b);\n    for (let num of nums) {\n        heap.push(num);\n        if (heap.size() > n) {\n            heap.pop();\n        }\n    }\n    let result = [];\n    while (!heap.empty()) {\n        result.push(heap.pop());\n    }\n    return result.reverse();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmpuza1p6cm.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>((a, b) => a - b);\n    for (let num of nums) {\n        heap.push(num);\n        if (heap.size() > n) {\n            heap.pop();\n        }\n    }\n    let result = [];\n    while (!heap.empty()) {\n        result.push(heap.pop());\n    }\n    return result.reverse();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmpuza1p6cm.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums, (a, b) => a < b);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510505,
      "stdout": "../../../../tmp/tmpukrm9qw8.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>((a, b) => b - a);\n    for (let num of nums) {\n        heap.push(num);\n    }\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmp9rogjm_y.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmplkaabzgu.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmplkaabzgu.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n  let heap = new Heap(nums, true);\n  let result = [];\n  for (let i = 0; i < n; i++) {\n    result.push(heap.pop());\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmp38s7kg3f.ts(3,18): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>((a, b) => a - b);\n    for (let num of nums) {\n        heap.push(num);\n        if (heap.size() > n) {\n            heap.pop();\n        }\n    }\n    let result = [];\n    while (!heap.empty()) {\n        result.push(heap.pop());\n    }\n    return result.reverse();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmpuza1p6cm.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums, (a, b) => b - a);\n    let res = [];\n    for (let i = 0; i < n; i++) {\n        res.push(heap.pop());\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510505,
      "stdout": "../../../../tmp/tmpbo9xnd6c.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>((a, b) => a - b);\n    for (let num of nums) {\n        heap.push(num);\n        if (heap.size() > n) {\n            heap.pop();\n        }\n    }\n    let result = [];\n    while (!heap.empty()) {\n        result.push(heap.pop());\n    }\n    return result.reverse();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmpuza1p6cm.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap();\n    for (let i = 0; i < nums.length; i++) {\n        heap.insert(nums[i]);\n    }\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510505,
      "stdout": "../../../../tmp/tmpfi6ywa1e.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums, (a, b) => a - b);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmpjkgw9lza.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmplkaabzgu.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>();\n    for (let i = 0; i < n; i++) {\n        heap.push(nums[i]);\n    }\n    for (let i = n; i < nums.length; i++) {\n        if (heap.peek() < nums[i]) {\n            heap.pop();\n            heap.push(nums[i]);\n        }\n    }\n    let result = [];\n    while (!heap.isEmpty()) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmph33bo71p.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>(nums, (a, b) => b - a);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmp1oy_r45z.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums, (a, b) => b - a);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmpll7u1csr.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap();\n    for (let i = 0; i < nums.length; i++) {\n        heap.insert(nums[i]);\n    }\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\nconsole.log(heap_queue_largest([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "../../../../tmp/tmp65oiwxs5.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums, (a, b) => a - b);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmpjkgw9lza.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>();\n    for (let i = 0; i < nums.length; i++) {\n        heap.add(nums[i]);\n    }\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.remove());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "../../../../tmp/tmp6qnogj0i.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n  let heap = new Heap<number>(nums, (a, b) => a - b);\n  let result: number[] = [];\n  for (let i = 0; i < n; i++) {\n    result.push(heap.pop());\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "../../../../tmp/tmpq5zr_mbh.ts(3,18): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>((a, b) => b - a);\n    for (let num of nums) {\n        heap.push(num);\n    }\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmp9rogjm_y.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmplkaabzgu.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>((a, b) => b - a);\n    for (let num of nums) {\n        heap.push(num);\n    }\n    let result: number[] = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "../../../../tmp/tmp14jesus3.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmplkaabzgu.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>((a, b) => b - a);\n    for (let num of nums) {\n        heap.push(num);\n    }\n    let res = [];\n    for (let i = 0; i < n; i++) {\n        res.push(heap.pop());\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "../../../../tmp/tmpc44f3wys.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums, true);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "../../../../tmp/tmp2mka5k5l.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new HeapQueue<number>((a, b) => a - b);\n    for (let i = 0; i < n; i++) {\n        heap.push(nums[i]);\n    }\n    for (let i = n; i < nums.length; i++) {\n        if (nums[i] > heap.peek()) {\n            heap.pop();\n            heap.push(nums[i]);\n        }\n    }\n    let result = [];\n    while (!heap.empty()) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "../../../../tmp/tmp5rayfj6w.ts(3,20): error TS2304: Cannot find name 'HeapQueue'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmplkaabzgu.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>((a, b) => b - a);\n    for (let num of nums) {\n        heap.push(num);\n    }\n    let result: number[] = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "../../../../tmp/tmp14jesus3.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums);\n    heap.build_max_heap();\n    let result: number[] = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.extract_max());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "../../../../tmp/tmpjgdim97s.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmplkaabzgu.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>((a, b) => b - a);\n    for (let num of nums) {\n        heap.push(num);\n    }\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmp9rogjm_y.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>((a, b) => b - a);\n    for (let num of nums) {\n        heap.push(num);\n    }\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmp9rogjm_y.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>((a, b) => a - b);\n    for (let num of nums) {\n        heap.push(num);\n        if (heap.size() > n) {\n            heap.pop();\n        }\n    }\n    return heap.toArray().reverse();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "../../../../tmp/tmpur0s0jcu.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums);\n    heap.build_max_heap();\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.extract_max());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "../../../../tmp/tmpy75qdgzl.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>((a, b) => b - a);\n    for (let num of nums) {\n        heap.push(num);\n    }\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmp9rogjm_y.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums);\n    let result = [];\n    while (n > 0) {\n        result.push(heap.pop());\n        n--;\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "../../../../tmp/tmppxi481zq.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmplkaabzgu.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n  let heap = new HeapQueue();\n  for (let i = 0; i < nums.length; i++) {\n    heap.push(nums[i]);\n    if (heap.size() > n) {\n      heap.pop();\n    }\n  }\n  let result = [];\n  while (heap.size() > 0) {\n    result.push(heap.pop());\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "../../../../tmp/tmpqyc1p2sc.ts(3,18): error TS2304: Cannot find name 'HeapQueue'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new HeapQueue<number>((a, b) => a - b);\n    for (let num of nums) {\n        heap.push(num);\n        if (heap.size() > n) {\n            heap.pop();\n        }\n    }\n    let result = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result.reverse();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "../../../../tmp/tmp2eowmthe.ts(3,20): error TS2304: Cannot find name 'HeapQueue'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>((a, b) => b - a);\n    for (let num of nums) {\n        heap.push(num);\n    }\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmp9rogjm_y.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums, (a, b) => a - b);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmpjkgw9lza.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums, (a, b) => b - a);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmpll7u1csr.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap();\n    for (let i = 0; i < nums.length; i++) {\n        heap.insert(nums[i]);\n    }\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510505,
      "stdout": "../../../../tmp/tmpfi6ywa1e.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmplkaabzgu.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmplkaabzgu.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new HeapQueue<number>();\n    for (let i = 0; i < n; i++) {\n        heap.push(nums[i]);\n    }\n    for (let i = n; i < nums.length; i++) {\n        if (nums[i] > heap.peek()) {\n            heap.pop();\n            heap.push(nums[i]);\n        }\n    }\n    let result = [];\n    while (!heap.isEmpty()) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "../../../../tmp/tmpmjv_pkq9.ts(3,20): error TS2304: Cannot find name 'HeapQueue'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums, \"max\");\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "../../../../tmp/tmp2_75xo1o.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>((a, b) => b - a);\n    for (let num of nums) {\n        heap.push(num);\n    }\n    let result: number[] = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "../../../../tmp/tmp14jesus3.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>(nums, (a, b) => a - b);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "../../../../tmp/tmp1kzrsxgn.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap();\n    for (let i = 0; i < nums.length; i++) {\n        heap.insert(nums[i]);\n    }\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510505,
      "stdout": "../../../../tmp/tmpfi6ywa1e.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmplkaabzgu.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums, (a, b) => a - b);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmpjkgw9lza.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>(nums);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "../../../../tmp/tmp6ehtf8jl.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap();\n    for (let i = 0; i < nums.length; i++) {\n        heap.insert(nums[i]);\n    }\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510505,
      "stdout": "../../../../tmp/tmpfi6ywa1e.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums, (a, b) => b - a);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmpll7u1csr.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new HeapQueue<number>();\n    for (let i = 0; i < nums.length; i++) {\n        heap.push(nums[i]);\n    }\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "../../../../tmp/tmpcz10r2i6.ts(3,20): error TS2304: Cannot find name 'HeapQueue'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums);\n    heap.build_max_heap();\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.extract_max());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "../../../../tmp/tmpy75qdgzl.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap();\n    let result = [];\n    for (let i = 0; i < nums.length; i++) {\n        heap.insert(nums[i]);\n    }\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "../../../../tmp/tmp6rut4m51.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>(nums, (a, b) => b - a);\n    let result: number[] = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "../../../../tmp/tmpx2yl5l_r.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>((a, b) => a - b);\n    for (let num of nums) {\n        heap.push(num);\n        if (heap.size() > n) {\n            heap.pop();\n        }\n    }\n    let result = [];\n    while (!heap.empty()) {\n        result.push(heap.pop());\n    }\n    return result.reverse();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmpuza1p6cm.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmplkaabzgu.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n  let heap = new Heap(nums);\n  let largest = [];\n  for (let i = 0; i < n; i++) {\n    largest.push(heap.pop());\n  }\n  return largest;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "../../../../tmp/tmpfuq5pf4z.ts(3,18): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap: number[] = [];\n    for (let i = 0; i < n; i++) {\n        heap.push(nums[i]);\n    }\n    heap_queue_build(heap);\n    for (let i = n; i < nums.length; i++) {\n        if (nums[i] > heap[0]) {\n            heap[0] = nums[i];\n            heap_queue_heapify(heap, 0);\n        }\n    }\n    return heap;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "../../../../tmp/tmps722kvfm.ts(7,5): error TS2304: Cannot find name 'heap_queue_build'.\n../../../../tmp/tmps722kvfm.ts(11,13): error TS2304: Cannot find name 'heap_queue_heapify'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmplkaabzgu.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>(nums, (a, b) => a - b);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "../../../../tmp/tmp1kzrsxgn.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>();\n    for (let i = 0; i < nums.length; i++) {\n        heap.add(nums[i]);\n    }\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.remove());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "../../../../tmp/tmp6qnogj0i.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums, (a, b) => a - b);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmpjkgw9lza.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    if (nums.length < n) {\n        return nums;\n    }\n    let heap = new Heap(nums);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "../../../../tmp/tmppkv50b48.ts(6,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums, (a, b) => b - a);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmpll7u1csr.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>((a, b) => b - a);\n    for (let num of nums) {\n        heap.push(num);\n    }\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmp9rogjm_y.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums, (a, b) => a > b);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123548,
      "stdout": "../../../../tmp/tmpm_8g_ozb.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmplkaabzgu.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums, (a, b) => b - a);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmpll7u1csr.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmplkaabzgu.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums, (a, b) => a - b);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmpjkgw9lza.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    const heap = new Heap(nums, (a, b) => a < b);\n    const result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123549,
      "stdout": "../../../../tmp/tmpvaxd8lh2.ts(3,22): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new HeapQueue<number>();\n    for (let i = 0; i < nums.length; i++) {\n        heap.push(nums[i]);\n    }\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "../../../../tmp/tmpcz10r2i6.ts(3,20): error TS2304: Cannot find name 'HeapQueue'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums);\n    let result: number[] = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123549,
      "stdout": "../../../../tmp/tmpnqiiw5d1.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>((a, b) => a - b);\n    for (let num of nums) {\n        heap.push(num);\n        if (heap.size() > n) {\n            heap.pop();\n        }\n    }\n    let result = [];\n    while (!heap.isEmpty()) {\n        result.push(heap.pop());\n    }\n    return result.reverse();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123549,
      "stdout": "../../../../tmp/tmph5ikwalq.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums, n, 'max');\n    let result = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123549,
      "stdout": "../../../../tmp/tmprfuun8sj.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmplkaabzgu.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>((a, b) => b - a);\n    for (let num of nums) {\n        heap.push(num);\n    }\n    let res = [];\n    for (let i = 0; i < n; i++) {\n        res.push(heap.pop());\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "../../../../tmp/tmpc44f3wys.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmplkaabzgu.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmplkaabzgu.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap();\n    for (let i = 0; i < nums.length; i++) {\n        heap.insert(nums[i]);\n    }\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510505,
      "stdout": "../../../../tmp/tmpfi6ywa1e.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums);\n    let largest = [];\n    for (let i = 0; i < n; i++) {\n        largest.push(heap.pop());\n    }\n    return largest;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123549,
      "stdout": "../../../../tmp/tmp3inkncn9.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new HeapQueue<number>((a, b) => b - a);\n    for (let num of nums) {\n        heap.push(num);\n    }\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123549,
      "stdout": "../../../../tmp/tmpzpfww_im.ts(3,20): error TS2304: Cannot find name 'HeapQueue'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>((a, b) => b - a);\n    for (let num of nums) {\n        heap.push(num);\n    }\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmp9rogjm_y.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>((a, b) => a - b);\n    for (let i = 0; i < nums.length; i++) {\n        heap.push(nums[i]);\n    }\n    let res: number[] = [];\n    for (let i = 0; i < n; i++) {\n        res.push(heap.pop());\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123549,
      "stdout": "../../../../tmp/tmp6ymf7nsc.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>(nums, (a, b) => b - a);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.dequeue());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123549,
      "stdout": "../../../../tmp/tmpxux1spq1.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmplkaabzgu.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>();\n    for (let i = 0; i < n; i++) {\n        heap.push(nums[i]);\n    }\n    for (let i = n; i < nums.length; i++) {\n        if (nums[i] > heap.peek()) {\n            heap.pop();\n            heap.push(nums[i]);\n        }\n    }\n    let result = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123549,
      "stdout": "../../../../tmp/tmpe9z3fpbi.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>(nums);\n    let result: number[] = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123549,
      "stdout": "../../../../tmp/tmp2reik4kj.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new HeapQueue<number>();\n    for (let i = 0; i < n; i++) {\n        heap.push(nums[i]);\n    }\n    for (let i = n; i < nums.length; i++) {\n        if (nums[i] > heap.peek()) {\n            heap.pop();\n            heap.push(nums[i]);\n        }\n    }\n    let result = [];\n    while (!heap.isEmpty()) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "../../../../tmp/tmpmjv_pkq9.ts(3,20): error TS2304: Cannot find name 'HeapQueue'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n  let heap = new Heap(nums, (a, b) => b - a);\n  let res = [];\n  for (let i = 0; i < n; i++) {\n    res.push(heap.pop());\n  }\n  return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123549,
      "stdout": "../../../../tmp/tmp3q3vxhuh.ts(3,18): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmplkaabzgu.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new HeapQueue<number>((a, b) => a - b);\n    for (let num of nums) {\n        heap.push(num);\n        if (heap.size() > n) {\n            heap.pop();\n        }\n    }\n    let result: number[] = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123549,
      "stdout": "../../../../tmp/tmpjh1mj7ju.ts(3,20): error TS2304: Cannot find name 'HeapQueue'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums, (a, b) => b - a);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmpll7u1csr.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap();\n    for (let i = 0; i < nums.length; i++) {\n        heap.insert(nums[i]);\n    }\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510505,
      "stdout": "../../../../tmp/tmpfi6ywa1e.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums);\n    let result: number[] = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123549,
      "stdout": "../../../../tmp/tmpnqiiw5d1.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.remove_max());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123549,
      "stdout": "../../../../tmp/tmpxwont66x.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmplkaabzgu.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>((a, b) => b - a);\n    for (let num of nums) {\n        heap.push(num);\n    }\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmp9rogjm_y.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    if (nums.length < n) {\n        return nums;\n    }\n    let heap = new Heap(nums);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "../../../../tmp/tmppkv50b48.ts(6,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmplkaabzgu.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>(nums, (a, b) => b - a);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmp1oy_r45z.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmplkaabzgu.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums, n, \"max\");\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123549,
      "stdout": "../../../../tmp/tmpyqkkamaf.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    if (nums.length < n) {\n        return nums;\n    }\n    let heap = new Heap(nums);\n    let largest = [];\n    for (let i = 0; i < n; i++) {\n        largest.push(heap.pop());\n    }\n    return largest;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123549,
      "stdout": "../../../../tmp/tmpfat8u5x_.ts(6,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums, 'max');\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123549,
      "stdout": "../../../../tmp/tmp38gxjvfh.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new HeapQueue<number>();\n    for (let i = 0; i < n; i++) {\n        heap.insert(nums[i]);\n    }\n    for (let i = n; i < nums.length; i++) {\n        if (nums[i] > heap.peek()) {\n            heap.pop();\n            heap.insert(nums[i]);\n        }\n    }\n    let result: number[] = [];\n    while (!heap.isEmpty()) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123549,
      "stdout": "../../../../tmp/tmpin3ahsvz.ts(3,20): error TS2304: Cannot find name 'HeapQueue'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap();\n    for (let i = 0; i < nums.length; i++) {\n        heap.insert(nums[i]);\n    }\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.extract_max());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123549,
      "stdout": "../../../../tmp/tmpnb37iu2i.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums, false);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123549,
      "stdout": "../../../../tmp/tmpzhm8pa3_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>((a, b) => a - b);\n    for (let num of nums) {\n        heap.push(num);\n        if (heap.size() > n) {\n            heap.pop();\n        }\n    }\n    let result: number[] = [];\n    while (!heap.empty()) {\n        result.push(heap.pop()!);\n    }\n    return result.reverse();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123549,
      "stdout": "../../../../tmp/tmp10myfv6_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>((a, b) => b - a);\n    for (let num of nums) {\n        heap.push(num);\n    }\n    let result: number[] = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "../../../../tmp/tmp14jesus3.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>((a, b) => b - a);\n    for (let num of nums) {\n        heap.push(num);\n    }\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmp9rogjm_y.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmplkaabzgu.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    const heap = new Heap(nums, (a, b) => b - a);\n    const result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123549,
      "stdout": "../../../../tmp/tmpdk0rbkxf.ts(3,22): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums, 'max');\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123549,
      "stdout": "../../../../tmp/tmp38gxjvfh.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    const heap = new Heap(nums);\n    const result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123549,
      "stdout": "../../../../tmp/tmp51zk_lp3.ts(3,22): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>((a, b) => b - a);\n    for (let num of nums) {\n        heap.push(num);\n    }\n    let result: number[] = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "../../../../tmp/tmp14jesus3.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums, (a, b) => a < b);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510505,
      "stdout": "../../../../tmp/tmpukrm9qw8.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>((a, b) => b - a);\n    for (let num of nums) {\n        heap.push(num);\n    }\n    let res: number[] = [];\n    for (let i = 0; i < n; i++) {\n        res.push(heap.pop());\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123551,
      "stdout": "../../../../tmp/tmps7kql5lz.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap();\n    for (let i = 0; i < nums.length; i++) {\n        heap.insert(nums[i]);\n    }\n    let result: number[] = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123551,
      "stdout": "../../../../tmp/tmp5zex6ruh.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmplkaabzgu.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmplkaabzgu.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmplkaabzgu.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums, (a, b) => b - a);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmpll7u1csr.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>((a, b) => a - b);\n    for (let num of nums) {\n        heap.push(num);\n        if (heap.size() > n) {\n            heap.pop();\n        }\n    }\n    let result = [];\n    while (!heap.empty()) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123551,
      "stdout": "../../../../tmp/tmph4f0wtpd.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>((a, b) => b - a);\n    for (let num of nums) {\n        heap.push(num);\n    }\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmp9rogjm_y.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>(nums, (a, b) => b - a);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmp1oy_r45z.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>((a, b) => b - a);\n    for (let num of nums) {\n        heap.push(num);\n    }\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmp9rogjm_y.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new HeapQueue(nums);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123551,
      "stdout": "../../../../tmp/tmpaudaxepv.ts(3,20): error TS2304: Cannot find name 'HeapQueue'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n  let heap = new Heap(nums);\n  let result = [];\n  for (let i = 0; i < n; i++) {\n    result.push(heap.pop());\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123551,
      "stdout": "../../../../tmp/tmpu0sqnaay.ts(3,18): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums, (a, b) => b - a);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmpll7u1csr.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n  let heap = new Heap(nums);\n  let result = [];\n  for (let i = 0; i < n; i++) {\n    result.push(heap.pop());\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123551,
      "stdout": "../../../../tmp/tmpu0sqnaay.ts(3,18): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums, (a, b) => a > b);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123548,
      "stdout": "../../../../tmp/tmpm_8g_ozb.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>(nums, (a, b) => a - b);\n    let result: number[] = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123551,
      "stdout": "../../../../tmp/tmp_0z_5i93.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>((a, b) => b - a);\n    for (let num of nums) {\n        heap.push(num);\n    }\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmp9rogjm_y.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n  let heap = new Heap();\n  for (let i = 0; i < nums.length; i++) {\n    heap.insert(nums[i]);\n  }\n  let result = [];\n  for (let i = 0; i < n; i++) {\n    result.push(heap.remove());\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123551,
      "stdout": "../../../../tmp/tmp8819xm52.ts(3,18): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>((a, b) => a - b);\n    for (let i = 0; i < nums.length; i++) {\n        heap.push(nums[i]);\n        if (heap.size() > n) {\n            heap.pop();\n        }\n    }\n    let result = [];\n    while (!heap.empty()) {\n        result.push(heap.pop());\n    }\n    return result.reverse();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123551,
      "stdout": "../../../../tmp/tmpfd36um_w.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    const heap = new HeapQueue<number>((a, b) => a - b);\n    for (const num of nums) {\n        heap.push(num);\n        if (heap.size() > n) {\n            heap.pop();\n        }\n    }\n    const result = [];\n    while (!heap.empty()) {\n        result.push(heap.pop());\n    }\n    return result.reverse();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123551,
      "stdout": "../../../../tmp/tmpbf4nmhpu.ts(3,22): error TS2304: Cannot find name 'HeapQueue'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums, \"max\");\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "../../../../tmp/tmp2_75xo1o.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmplkaabzgu.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>(nums, (a, b) => a - b);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "../../../../tmp/tmp1kzrsxgn.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n  let heap = new Heap(nums);\n  let result = [];\n  for (let i = 0; i < n; i++) {\n    result.push(heap.pop());\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123551,
      "stdout": "../../../../tmp/tmpu0sqnaay.ts(3,18): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>(nums, (a, b) => a - b);\n    let result: number[] = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123551,
      "stdout": "../../../../tmp/tmp_0z_5i93.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n  let heap = new HeapQueue<number>((a, b) => b - a);\n  for (let num of nums) {\n    heap.push(num);\n  }\n  let result = [];\n  for (let i = 0; i < n; i++) {\n    result.push(heap.pop());\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123551,
      "stdout": "../../../../tmp/tmpm2qz6ngc.ts(3,18): error TS2304: Cannot find name 'HeapQueue'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap();\n    for (let i = 0; i < nums.length; i++) {\n        heap.insert(nums[i]);\n    }\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.extract_max());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123549,
      "stdout": "../../../../tmp/tmpnb37iu2i.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap();\n    for (let i = 0; i < nums.length; i++) {\n        heap.insert(nums[i]);\n    }\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510505,
      "stdout": "../../../../tmp/tmpfi6ywa1e.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    const heap = new Heap<number>((a, b) => b - a);\n    for (const num of nums) {\n        heap.push(num);\n    }\n    const result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123551,
      "stdout": "../../../../tmp/tmpbumzldo6.ts(3,22): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>((a, b) => b - a);\n    for (let num of nums) {\n        heap.push(num);\n        if (heap.size() > n) {\n            heap.pop();\n        }\n    }\n    return heap.toArray();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123551,
      "stdout": "../../../../tmp/tmp2lsdu80f.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n  let heap = new Heap(nums, (a, b) => b - a);\n  let result = [];\n  for (let i = 0; i < n; i++) {\n    result.push(heap.pop());\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmp_sobcx66.ts(3,18): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums, (a, b) => a - b);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmpjkgw9lza.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>((a, b) => b - a);\n    for (let num of nums) {\n        heap.push(num);\n    }\n    let res = [];\n    for (let i = 0; i < n; i++) {\n        res.push(heap.pop());\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "../../../../tmp/tmpc44f3wys.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    //TODO: implement\n    return [];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123552,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  85,\n  75,\n  65\n]\n    at test (/tmp/tmpnj62eu4_.js:9:12)\n    at Object.<anonymous> (/tmp/tmpnj62eu4_.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ 85, 75, 65 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmplkaabzgu.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums);\n    let result: number[] = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.extract_max());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123552,
      "stdout": "../../../../tmp/tmpvtmtx05h.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums, (a, b) => a - b);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmpjkgw9lza.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n  let heap = new HeapQueue(nums);\n  let result = [];\n  for (let i = 0; i < n; i++) {\n    result.push(heap.pop());\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123551,
      "stdout": "../../../../tmp/tmppaxhgspk.ts(3,18): error TS2304: Cannot find name 'HeapQueue'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    if (nums.length < n) {\n        return [];\n    }\n    let heap = new Heap();\n    for (let i = 0; i < n; i++) {\n        heap.insert(nums[i]);\n    }\n    for (let i = n; i < nums.length; i++) {\n        if (nums[i] > heap.peek()) {\n            heap.pop();\n            heap.insert(nums[i]);\n        }\n    }\n    let result = [];\n    while (!heap.isEmpty()) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123552,
      "stdout": "../../../../tmp/tmpy8ysrmul.ts(6,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmplkaabzgu.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums, \"max\");\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "../../../../tmp/tmp2_75xo1o.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>((a, b) => b - a);\n    for (let num of nums) {\n        heap.push(num);\n    }\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmp9rogjm_y.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>();\n    for (let i = 0; i < n; i++) {\n        heap.add(nums[i]);\n    }\n    for (let i = n; i < nums.length; i++) {\n        if (nums[i] > heap.peek()) {\n            heap.poll();\n            heap.add(nums[i]);\n        }\n    }\n    return heap.toArray();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123552,
      "stdout": "../../../../tmp/tmpao2kvcbc.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmplkaabzgu.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n  let heap = new HeapQueue(nums);\n  let result = [];\n  for (let i = 0; i < n; i++) {\n    result.push(heap.pop());\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123551,
      "stdout": "../../../../tmp/tmppaxhgspk.ts(3,18): error TS2304: Cannot find name 'HeapQueue'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums, (a, b) => b - a);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmpll7u1csr.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>((a, b) => a - b);\n    for (let num of nums) {\n        heap.push(num);\n        if (heap.size() > n) heap.pop();\n    }\n    return heap.toArray().reverse();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123551,
      "stdout": "../../../../tmp/tmp43mt1ru8.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums, (a, b) => b - a);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmpll7u1csr.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n  let heap = new Heap(nums, (a, b) => a > b);\n  let result = [];\n  for (let i = 0; i < n; i++) {\n    result.push(heap.pop());\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123551,
      "stdout": "../../../../tmp/tmpou6_djjt.ts(3,18): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums, (a, b) => a < b);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510505,
      "stdout": "../../../../tmp/tmpukrm9qw8.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums);\n    heap.build_max_heap();\n    let result: number[] = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.extract_max());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "../../../../tmp/tmpjgdim97s.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmplkaabzgu.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>(nums, (a, b) => a - b);\n    let result: number[] = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123551,
      "stdout": "../../../../tmp/tmp_0z_5i93.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>((a, b) => a - b);\n    for (let num of nums) {\n        heap.push(num);\n    }\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123552,
      "stdout": "../../../../tmp/tmpm3oa4n8p.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>((a, b) => b - a);\n    for (let num of nums) {\n        heap.push(num);\n    }\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmp9rogjm_y.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmplkaabzgu.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new HeapQueue<number>();\n    for (let i = 0; i < n; i++) {\n        heap.push(nums[i]);\n    }\n    for (let i = n; i < nums.length; i++) {\n        if (nums[i] > heap.peek()) {\n            heap.pop();\n            heap.push(nums[i]);\n        }\n    }\n    let result = [];\n    while (!heap.isEmpty()) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "../../../../tmp/tmpmjv_pkq9.ts(3,20): error TS2304: Cannot find name 'HeapQueue'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>((a, b) => a - b);\n    for (let num of nums) {\n        heap.push(num);\n        if (heap.size() > n) {\n            heap.pop();\n        }\n    }\n    let result: number[] = [];\n    while (!heap.empty()) {\n        result.push(heap.pop()!);\n    }\n    return result.reverse();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123549,
      "stdout": "../../../../tmp/tmp10myfv6_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>();\n    for (let i = 0; i < n; i++) {\n        heap.push(nums[i]);\n    }\n    for (let i = n; i < nums.length; i++) {\n        if (nums[i] > heap.peek()) {\n            heap.pop();\n            heap.push(nums[i]);\n        }\n    }\n    return heap.toArray();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123552,
      "stdout": "../../../../tmp/tmp6jf0obwv.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums, (a, b) => a < b);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510505,
      "stdout": "../../../../tmp/tmpukrm9qw8.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums, \"max\");\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "../../../../tmp/tmp2_75xo1o.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n  let heap = new Heap();\n  for (let i = 0; i < nums.length; i++) {\n    heap.insert(nums[i]);\n  }\n  let result = [];\n  for (let i = 0; i < n; i++) {\n    result.push(heap.delete_max());\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123552,
      "stdout": "../../../../tmp/tmp9nu5chau.ts(3,18): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums, (a, b) => a - b);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmpjkgw9lza.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmplkaabzgu.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmplkaabzgu.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmplkaabzgu.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums);\n    let result: number[] = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123549,
      "stdout": "../../../../tmp/tmpnqiiw5d1.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    const heap = new Heap(nums, (a, b) => b - a);\n    const result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123549,
      "stdout": "../../../../tmp/tmpdk0rbkxf.ts(3,22): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap: number[] = [];\n    for (let i = 0; i < n; i++) {\n        heap.push(nums[i]);\n    }\n    heap_queue_build(heap);\n    for (let i = n; i < nums.length; i++) {\n        if (nums[i] > heap[0]) {\n            heap[0] = nums[i];\n            heap_queue_heapify(heap, 0);\n        }\n    }\n    return heap;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "../../../../tmp/tmps722kvfm.ts(7,5): error TS2304: Cannot find name 'heap_queue_build'.\n../../../../tmp/tmps722kvfm.ts(11,13): error TS2304: Cannot find name 'heap_queue_heapify'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>((a, b) => b - a);\n    for (let num of nums) {\n        heap.push(num);\n    }\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmp9rogjm_y.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap(nums);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "../../../../tmp/tmplkaabzgu.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>((a, b) => a - b);\n    for (let num of nums) {\n        heap.push(num);\n        if (heap.size() > n) {\n            heap.pop();\n        }\n    }\n    let result = [];\n    while (!heap.empty()) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123551,
      "stdout": "../../../../tmp/tmph4f0wtpd.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the n largest integers from a given array of numbers, returned in descending order.\nfunction heap_queue_largest(nums: number[], n: number): number[] {\n    let heap = new Heap<number>((a, b) => b - a);\n    for (let num of nums) {\n        heap.push(num);\n    }\n    let result: number[] = [];\n    for (let i = 0; i < n; i++) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_queue_largest;\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3),[85, 75, 65]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2),[85, 75]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5),[85, 75, 65, 58, 35]);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "../../../../tmp/tmp14jesus3.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    }
  ]
}
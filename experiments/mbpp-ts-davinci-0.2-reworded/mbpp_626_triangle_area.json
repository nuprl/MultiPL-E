{
  "name": "mbpp_626_triangle_area",
  "language": "ts",
  "prompt": "//Write a tsthon function to find the area of the largest triangle that can be inscribed in a semicircle with a given radius.\nfunction triangle_area(r: number): number | undefined {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_626_triangle_area.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(-1),undefined);\n  assert.deepEqual(candidate(0),0);\n  assert.deepEqual(candidate(2),4);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let s: number = r * 2;\n    let area: number = (Math.sqrt(3) / 4) * Math.pow(s, 2);\n    return area;\n}\n\nconsole.log(triangle_area(3));\n",
    "    let a = r * Math.sqrt(3) / 2;\n    let area = a * a * Math.sqrt(3) / 4;\n    return area;\n}\n",
    "    const s = r * 2;\n    const a = s * s;\n    const b = Math.sqrt(a - r * r);\n    const c = Math.sqrt(a - b * b);\n    const p = (a + b + c) / 2;\n    return Math.sqrt(p * (p - a) * (p - b) * (p - c));\n}\n",
    "    let area: number | undefined;\n    let s: number;\n    let a: number;\n    let b: number;\n    let c: number;\n    if (r > 0) {\n        s = r * 2;\n        a = s / 2;\n        b = s / 2;\n        c = Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));\n        area = (a * b) / 2;\n    }\n    return area;\n}\n",
    "    let s = r * 2;\n    let area = (s * (s - r) * (s - r) * (s - r)) ** 0.5;\n    return area;\n}\n\nconsole.log(triangle_area(5));\nconsole.log(triangle_area(7));\nconsole.log(triangle_area(9));\n",
    "    let a = r * Math.sqrt(3) / 2;\n    let area = a * a * Math.sqrt(3) / 4;\n    return area;\n}\n\nconsole.log(triangle_area(5));\n",
    "    let a = 0;\n    let b = 0;\n    let c = 0;\n    let s = 0;\n    let area = 0;\n    let max_area = 0;\n    let max_a = 0;\n    let max_b = 0;\n    let max_c = 0;\n    for (a = 1; a < r; a++) {\n        for (b = 1; b < r; b++) {\n            for (c = 1; c < r; c++) {\n                if (a + b > c && a + c > b && b + c > a) {\n                    s = (a + b + c) / 2;\n                    area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n                    if (area > max_area) {\n                        max_area = area;\n                        max_a = a;\n                        max_b = b;\n                        max_c = c;\n                    }\n                }\n            }\n        }\n    }\n    return max_area;\n}\n",
    "    let a = r * Math.sqrt(3) / 2;\n    let b = r / 2;\n    let c = r;\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;\n}\n\nconsole.log(triangle_area(5));\n",
    "    let a = r * Math.sqrt(3) / 2;\n    let b = r / 2;\n    let c = r;\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;\n}\n\nconsole.log(triangle_area(5));\nconsole.log(triangle_area(7));\nconsole.log(triangle_area(9));\n",
    "    const s = (r * 2) * Math.sqrt(3) / 2;\n    return s ? Math.sqrt(s * (s - r) * (s - r) * (s - r)) : undefined;\n}\n",
    "    let s = r * Math.sqrt(3) / 2;\n    return s * s / 4;\n}\n",
    "    let area: number | undefined;\n    let side: number;\n    let height: number;\n    if (r > 0) {\n        side = 2 * r * Math.sin(Math.PI / 3);\n        height = r * Math.cos(Math.PI / 3);\n        area = 0.5 * side * height;\n    }\n    return area;\n}\n\nconsole.log(triangle_area(5));\nconsole.log(triangle_area(7));\nconsole.log(triangle_area(10));\n",
    "    let a = r * 2;\n    let b = r * 2;\n    let c = Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;\n}\n\nconsole.log(triangle_area(5));\n",
    "    let s = r * Math.sqrt(3) / 2;\n    return s * s / 4;\n}\n",
    "    let s = r * 2;\n    let area = (s * s * Math.sqrt(3)) / 4;\n    return area;\n}\n\nconsole.log(triangle_area(2));\n",
    "    let a = r * r * Math.sqrt(3) / 4;\n    return a;\n}\n\nconsole.log(triangle_area(5));\n",
    "    let a = r;\n    let b = r;\n    let c = Math.sqrt(2 * r * r);\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;\n}\nconsole.log(triangle_area(5));\n",
    "    let a = r * Math.sqrt(3) / 2;\n    let b = r / 2;\n    let c = r;\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;\n}\n",
    "    let area: number | undefined;\n    if (r > 0) {\n        area = (Math.sqrt(3) / 4) * r * r;\n    }\n    return area;\n}\n\nconsole.log(triangle_area(5));\nconsole.log(triangle_area(-5));\n",
    "    let s = r * Math.sqrt(3) / 2;\n    return s * s / 2;\n}\n"
  ]
}
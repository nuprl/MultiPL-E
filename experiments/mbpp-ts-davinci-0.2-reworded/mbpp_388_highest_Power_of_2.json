{
  "name": "mbpp_388_highest_Power_of_2",
  "language": "ts",
  "prompt": "//Write a tsthon function to find the highest power of 2 that is less than or equal to n.\nfunction highest_Power_of_2(n: number): number {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_388_highest_Power_of_2.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = highest_Power_of_2;\n  assert.deepEqual(candidate(10),8);\n  assert.deepEqual(candidate(19),16);\n  assert.deepEqual(candidate(32),32);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let res = 0;\n    for (let i = n; i >= 1; i--) {\n        if (i % 2 == 0) {\n            res = i;\n            break;\n        }\n    }\n    return res;\n}\n",
    "    let res = 0;\n    for (let i = n; i >= 1; i--) {\n        if (i % 2 == 0) {\n            res = i;\n            break;\n        }\n    }\n    return res;\n}\n",
    "    let res = 0;\n    while (n > 0) {\n        res++;\n        n = n >> 1;\n    }\n    return res;\n}\n",
    "    let res = 0;\n    for (let i = n; i >= 1; i--) {\n        if (i & (i - 1) == 0) {\n            res = i;\n            break;\n        }\n    }\n    return res;\n}\nconsole.log(highest_Power_of_2(16));\nconsole.log(highest_Power_of_2(18));\nconsole.log(highest_Power_of_2(256));\n",
    "    let res = 0;\n    for (let i = n; i >= 1; i--) {\n        if (i % 2 == 0) {\n            res = i;\n            break;\n        }\n    }\n    return res;\n}\n",
    "    let res = 0;\n    for (let i = n; i >= 1; i--) {\n        // If i is a power of 2\n        if ((i & (i - 1)) == 0) {\n            res = i;\n            break;\n        }\n    }\n    return res;\n}\n",
    "    let res = 0;\n    while (n > 0) {\n        n = n >> 1;\n        res++;\n    }\n    return 1 << (res - 1);\n}\n",
    "    let res = 0;\n    for (let i = n; i >= 1; i--) {\n        if (i % 2 == 0) {\n            res = i;\n            break;\n        }\n    }\n    return res;\n}\nconsole.log(highest_Power_of_2(16));\nconsole.log(highest_Power_of_2(18));\nconsole.log(highest_Power_of_2(256));\n",
    "    let res = 0;\n    for (let i = n; i >= 1; i--) {\n        if (i & (i - 1) == 0) {\n            res = i;\n            break;\n        }\n    }\n    return res;\n}\n",
    "    let res = 0;\n    for (let i = n; i >= 1; i--) {\n        if (i & (i - 1)) {\n            continue;\n        } else {\n            res = i;\n            break;\n        }\n    }\n    return res;\n}\n",
    "    let res = 0;\n    for (let i = n; i >= 1; i--) {\n        if (i & (i - 1) == 0) {\n            res = i;\n            break;\n        }\n    }\n    return res;\n}\n",
    "    let res = 0;\n    for (let i = n; i >= 1; i--) {\n        if (i % 2 == 0) {\n            res = i;\n            break;\n        }\n    }\n    return res;\n}\nconsole.log(highest_Power_of_2(16));\nconsole.log(highest_Power_of_2(18));\nconsole.log(highest_Power_of_2(256));\n",
    "    let res = 0;\n    for (let i = n; i >= 1; i--) {\n        if (i & (i - 1) == 0) {\n            res = i;\n            break;\n        }\n    }\n    return res;\n}\n",
    "    let res = 0;\n    for (let i = n; i >= 1; i--) {\n        if (i & (i - 1) == 0) {\n            res = i;\n            break;\n        }\n    }\n    return res;\n}\n",
    "    let res = 0;\n    for (let i = n; i >= 1; i--) {\n        if (i % 2 == 0) {\n            res = i;\n            break;\n        }\n    }\n    return res;\n}\nconsole.log(highest_Power_of_2(16));\nconsole.log(highest_Power_of_2(18));\nconsole.log(highest_Power_of_2(19));\nconsole.log(highest_Power_of_2(20));\nconsole.log(highest_Power_of_2(21));\nconsole.log(highest_Power_of_2(22));\nconsole.log(highest_Power_of_2(23));\nconsole.log(highest_Power_of_2(24));\nconsole.log(highest_Power_of_2(25));\nconsole.log(highest_Power_of_2(26));\nconsole.log(highest_Power_of_2(27));\nconsole.log(highest_Power_of_2(28));\nconsole.log(highest_Power_of_2(29));\nconsole.log(highest_Power_of_2(30));\nconsole.log(highest_Power_of_2(31));\nconsole.log(highest_Power_of_2(32));\nconsole.log(highest_Power_of_2(33));\nconsole.log(highest_Power_of_2(34));\nconsole.log(highest_Power_of_2(35));\nconsole.log(highest_Power_of_2(36));\nconsole.log(highest_Power_of_2(37));\nconsole.log(highest_Power_of_2(38));\nconsole.log(highest_Power_of_2(39));\nconsole.log(highest_Power_of_2(40));\nconsole.log(highest_Power_of_2(41));\nconsole.log(highest_Power_of_2(42));\nconsole.log(highest_Power_of_2(43));\nconsole.log(highest_Power_of_2(44));\nconsole.log(highest_Power_of_2(45));\nconsole.log(highest_Power_of_2(46));\nconsole.log",
    "    let res = 0;\n    for (let i = n; i >= 1; i--) {\n        if (i & (i - 1) == 0) {\n            res = i;\n            break;\n        }\n    }\n    return res;\n}\n",
    "    let res = 0;\n    for (let i = n; i >= 1; i--) {\n        if (i & (i - 1) == 0) {\n            res = i;\n            break;\n        }\n    }\n    return res;\n}\n",
    "    let res = 0;\n    for (let i = n; i >= 1; i--) {\n        if (i % 2 == 0) {\n            res = i;\n            break;\n        }\n    }\n    return res;\n}\n",
    "    let res = 0;\n    for (let i = n; i >= 1; i--) {\n        if (i % 2 == 0) {\n            res = i;\n            break;\n        }\n    }\n    return res;\n}\n",
    "    let res: number = 0;\n    for (let i = n; i >= 1; i--) {\n        if (i & (i - 1) == 0) {\n            res = i;\n            break;\n        }\n    }\n    return res;\n}\n"
  ]
}
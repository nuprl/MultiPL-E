{
  "name": "mbpp_222_check_type",
  "language": "ts",
  "prompt": "//Write a function to check if all the elements in array have same data type or not.\nfunction check_type(test_tuple: any): boolean {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_222_check_type.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_type;\n  assert.deepEqual(candidate([5, 6, 7, 3, 5, 6]),true);\n  assert.deepEqual(candidate([1, 2, \"4\"]),false);\n  assert.deepEqual(candidate([3, 2, 1, 4, 5]),true);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    var first_element = test_tuple[0];\n    for (var i = 1; i < test_tuple.length; i++) {\n        if (typeof first_element != typeof test_tuple[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    var _result: boolean = true;\n    var _first_type: string = typeof test_tuple[0];\n    for (var i = 1; i < test_tuple.length; i++) {\n        if (typeof test_tuple[i] != _first_type) {\n            _result = false;\n            break;\n        }\n    }\n    return _result;\n}\n\nconsole.log(check_type([1, 2, 3, 4, 5]));\nconsole.log(check_type([1, 2, 3, 4, \"5\"]));\nconsole.log(check_type([1, 2, 3, 4, 5, \"5\"]));\n",
    "    var first_type = typeof test_tuple[0];\n    for (var i = 1; i < test_tuple.length; i++) {\n        if (typeof test_tuple[i] != first_type) {\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    var _len = test_tuple.length;\n    var _result = true;\n    for (var i = 0; i < _len - 1; i++) {\n        if (typeof test_tuple[i] != typeof test_tuple[i + 1]) {\n            _result = false;\n        }\n    }\n    return _result;\n}\n",
    "    var first_element = test_tuple[0];\n    var i: number;\n    for (i = 1; i < test_tuple.length; i++) {\n        if (typeof first_element != typeof test_tuple[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(check_type([1, 2, 3, 4, 5]));\nconsole.log(check_type([1, 2, 3, 4, \"5\"]));\n",
    "    var first_type = typeof test_tuple[0];\n    for (var i = 1; i < test_tuple.length; i++) {\n        if (typeof test_tuple[i] != first_type) {\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    var _result: boolean = false;\n    var _first_element: any = test_tuple[0];\n    var _first_element_type: string = typeof _first_element;\n    for (var i = 1; i < test_tuple.length; i++) {\n        if (typeof test_tuple[i] === _first_element_type) {\n            _result = true;\n        }\n        else {\n            _result = false;\n            break;\n        }\n    }\n    return _result;\n}\n",
    "    var _type: any = typeof test_tuple[0];\n    for (var i = 1; i < test_tuple.length; i++) {\n        if (typeof test_tuple[i] !== _type) {\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    var _type: string = typeof test_tuple[0];\n    for (var i = 1; i < test_tuple.length; i++) {\n        if (typeof test_tuple[i] !== _type) {\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    var first_element = test_tuple[0];\n    for (var i = 1; i < test_tuple.length; i++) {\n        if (typeof first_element != typeof test_tuple[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(check_type([1, 2, 3, 4, 5]));\nconsole.log(check_type([1, 2, 3, 4, \"5\"]));\nconsole.log(check_type([1, 2, 3, 4, 5, \"5\"]));\n",
    "    let first_type = typeof test_tuple[0];\n    for (let i = 1; i < test_tuple.length; i++) {\n        if (typeof test_tuple[i] !== first_type) {\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    var first_type = typeof test_tuple[0];\n    for (var i = 1; i < test_tuple.length; i++) {\n        if (typeof test_tuple[i] != first_type) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(check_type([1, 2, 3, 4, 5]));\nconsole.log(check_type([1, 2, 3, 4, \"5\"]));\n",
    "    let first_type = typeof test_tuple[0];\n    for (let i = 1; i < test_tuple.length; i++) {\n        if (typeof test_tuple[i] !== first_type) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(check_type([1, 2, 3, 4, 5]));\nconsole.log(check_type([1, 2, 3, 4, \"5\"]));\n",
    "    var first_type = typeof test_tuple[0];\n    for (var i = 1; i < test_tuple.length; i++) {\n        if (typeof test_tuple[i] != first_type) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(check_type([1, 2, 3, 4, 5]));\nconsole.log(check_type([1, 2, 3, 4, \"5\"]));\n",
    "    var _type: string = typeof test_tuple[0];\n    for (var i = 1; i < test_tuple.length; i++) {\n        if (typeof test_tuple[i] != _type) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(check_type([1, 2, 3, 4, 5]));\nconsole.log(check_type([1, 2, 3, 4, \"5\"]));\n",
    "    var _type = typeof test_tuple[0];\n    for (var i = 1; i < test_tuple.length; i++) {\n        if (typeof test_tuple[i] != _type) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(check_type([1, 2, 3, 4, 5]));\nconsole.log(check_type([1, \"2\", 3, 4, 5]));\n",
    "    var result: boolean = true;\n    var first_type: string = typeof test_tuple[0];\n    for (var i = 1; i < test_tuple.length; i++) {\n        if (typeof test_tuple[i] != first_type) {\n            result = false;\n            break;\n        }\n    }\n    return result;\n}\n",
    "    var first_type = typeof test_tuple[0];\n    for (var i = 1; i < test_tuple.length; i++) {\n        if (typeof test_tuple[i] !== first_type) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(check_type([1, 2, 3, 4, 5]));\nconsole.log(check_type([1, 2, 3, 4, \"5\"]));\n",
    "    let type: any = typeof test_tuple[0];\n    for (let i = 1; i < test_tuple.length; i++) {\n        if (typeof test_tuple[i] !== type) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(check_type([1, 2, 3, 4, 5]));\nconsole.log(check_type([1, 2, 3, 4, \"5\"]));\n",
    "    var result = test_tuple[0];\n    for (var i = 1; i < test_tuple.length; i++) {\n        if (typeof test_tuple[i] !== typeof result) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(check_type([1, 2, 3, 4, 5]));\nconsole.log(check_type([1, 2, 3, 4, \"5\"]));\n"
  ]
}
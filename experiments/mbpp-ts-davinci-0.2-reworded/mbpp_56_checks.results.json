{
  "name": "mbpp_56_checks",
  "language": "ts",
  "prompt": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_56_checks.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let r: number = 0;\n    let n1: number = n;\n    while (n1 > 0) {\n        r = r * 10 + n1 % 10;\n        n1 = Math.floor(n1 / 10);\n    }\n    return n == r + r - 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1665510558,
      "stdout": "../../../../tmp/tmpx_wcszl6.ts(60,1): error TS1005: ',' expected.\n../../../../tmp/tmpx_wcszl6.ts(60,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let r = 0;\n    let t = n;\n    while (t > 0) {\n        r = r * 10 + t % 10;\n        t = Math.floor(t / 10);\n    }\n    return n === 2 * r - 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1665510558,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n.toString();\n    let reverse = num.split(\"\").reverse().join(\"\");\n    let num2 = parseInt(reverse);\n    if (n == num2 * 2 - 1) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(checks(12));\nconsole.log(checks(11));\nconsole.log(checks(10));\nconsole.log(checks(9));\nconsole.log(checks(8));\nconsole.log(checks(7));\nconsole.log(checks(6));\nconsole.log(checks(5));\nconsole.log(checks(4));\nconsole.log(checks(3));\nconsole.log(checks(2));\nconsole.log(checks(1));\nconsole.log(checks(0));\nconsole.log(checks(-1));\nconsole.log(checks(-2));\nconsole.log(checks(-3));\nconsole.log(checks(-4));\nconsole.log(checks(-5));\nconsole.log(checks(-6));\nconsole.log(checks(-7));\nconsole.log(checks(-8));\nconsole.log(checks(-9));\nconsole.log(checks(-10));\nconsole.log(checks(-11));\nconsole.log(checks(-12));\nconsole.log(checks(-13));\nconsole.log(checks(-14));\nconsole.log(checks(-15));\nconsole.log(checks(-16));\nconsole.log(checks(-17));\nconsole.log(checks(-18));\nconsole.log(checks(-19));\nconsole.log(checks(-20));\nconsole.log(checks(-21));\nconsole.log(checks(-22));\nconsole.log(checks(-23));\nconsole.log(checks(-24));\nconsole.log(checks(-25));\nconsole.log(checks(-26));\nconsole.log(checks(-27));\nconsole.log(checks(-28));\nconsole.log(checks(-29));\nconsole.log(checks(-30));\nconsole.log(checks(-31));\nconsole.log(checks(-32));\nconsole.log(checks(-33));\nconsole.log(checks(-34));\nconsole.log(checks(-35));\nconsole.log(checks(-36\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1665510558,
      "stdout": "../../../../tmp/tmp5vj8jv2j.ts(62,1): error TS1005: ',' expected.\n../../../../tmp/tmp5vj8jv2j.ts(62,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let num = n;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n == rev * 2 - 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(21));\nconsole.log(checks(13));\nconsole.log(checks(23));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61));\nconsole.log(checks(62));\nconsole.log(checks(63));\nconsole.log(checks(64));\nconsole.log(checks(65));\nconsole.log(checks(66));\nconsole.log(checks(67));\nconsole.log(checks(68));\nconsole.log(checks(69));\nconsole.log(checks(70));\nconsole.log(checks(71));\nconsole.log(checks(72));\nconsole.log(checks(73));\nconsole.log(checks(74));\nconsole.log(checks(75));\nconsole.log(checks(76));\nconsole.log(checks(77));\nconsole.log(checks(78));\nconsole.log(checks(79));\nconsole.log(checks(80));\nconsole.log(checks(81));\nconsole.log(checks(82));\nconsole.log(checks(83));\nconsole.log(checks(84));\nconsole.log(checks(85));\nconsole.log(checks(86));\nconsole.log(checks(87));\nconsole.log(checks(88\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1665510558,
      "stdout": "../../../../tmp/tmpn8wd3tsp.ts(61,1): error TS1005: ',' expected.\n../../../../tmp/tmpn8wd3tsp.ts(61,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let num = n;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n === rev + rev - 1;\n}\nconsole.log(checks(12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1665510558,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n.toString();\n    let rev = num.split(\"\").reverse().join(\"\");\n    if (n == (2 * parseInt(rev) - 1)) {\n        return true;\n    }\n    return false;\n}\nconsole.log(checks(12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1665510558,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let num = n;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return (n - rev == 1);\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1665510558,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpayadhmoi.js:66:12)\n    at Object.<anonymous> (/tmp/tmpayadhmoi.js:68:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let num = n;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n == rev + 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(121));\nconsole.log(checks(123));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1665510558,
      "stdout": "false\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp7mwa3o9x.js:19:12)\n    at Object.<anonymous> (/tmp/tmp7mwa3o9x.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let temp = n;\n    while (temp > 0) {\n        rev = rev * 10 + temp % 10;\n        temp = Math.floor(temp / 10);\n    }\n    return (n - rev == 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1665510558,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmptwib86o8.js:16:12)\n    at Object.<anonymous> (/tmp/tmptwib86o8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let reverse = 0;\n    let num = n;\n    while (num > 0) {\n        reverse = reverse * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    if (n - reverse == 1) {\n        return true;\n    }\n    return false;\n}\nconsole.log(checks(12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1665510558,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpv2digybi.js:20:12)\n    at Object.<anonymous> (/tmp/tmpv2digybi.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let r: number = 0;\n    let t: number = n;\n    while (t > 0) {\n        r = r * 10 + t % 10;\n        t = Math.floor(t / 10);\n    }\n    return n == r * 2 - 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1665510558,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n.toString();\n    let rev = num.split('').reverse().join('');\n    let num2 = (n + 1) / 2;\n    let rev2 = rev.split('').reverse().join('');\n    if (num2 == rev2) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(checks(12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1665510558,
      "stdout": "../../../../tmp/tmpjoluqnyh.ts(7,9): error TS2367: This condition will always return 'false' since the types 'number' and 'string' have no overlap.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let r = 0;\n    let m = n;\n    while (m > 0) {\n        r = r * 10 + m % 10;\n        m = Math.floor(m / 10);\n    }\n    return n == r * 2 - 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(123));\nconsole.log(checks(12321));\nconsole.log(checks(12345));\nconsole.log(checks(1234));\nconsole.log(checks(123454321));\nconsole.log(checks(123456789));\nconsole.log(checks(12345678));\nconsole.log(checks(1234567));\nconsole.log(checks(123456));\nconsole.log(checks(12345));\nconsole.log(checks(1234));\nconsole.log(checks(123));\nconsole.log(checks(12));\nconsole.log(checks(1));\nconsole.log(checks(0));\nconsole.log(checks(12345678901));\nconsole.log(checks(123456789012));\nconsole.log(checks(1234567890123));\nconsole.log(checks(12345678901234));\nconsole.log(checks(123456789012345));\nconsole.log(checks(1234567890123456));\nconsole.log(checks(12345678901234567));\nconsole.log(checks(123456789012345678));\nconsole.log(checks(1234567890123456789));\nconsole.log(checks(12345678901234567890));\nconsole.log(checks(123456789012345678901));\nconsole.log(checks(1234567890123456789012));\nconsole.log(checks(12345678901234567890123));\nconsole.log(checks(123456789012345678901234));\nconsole.log(checks(1234567890123456789012345));\nconsole.log(checks(12345678901234567890123456));\nconsole.log(checks(123456789012345678901234567));\nconsole.log\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1665510558,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n.toString();\n    let reverse = num.split('').reverse().join('');\n    return n === (2 * parseInt(reverse) - 1);\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61));\nconsole.log(checks(62));\nconsole.log(checks(63\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1665510558,
      "stdout": "../../../../tmp/tmpwrt6zcki.ts(59,1): error TS1005: ',' expected.\n../../../../tmp/tmpwrt6zcki.ts(59,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let num = n;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return (n - rev == 1);\n}\nconsole.log(checks(12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1665510558,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmphac58_u_.js:17:12)\n    at Object.<anonymous> (/tmp/tmphac58_u_.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let num = n;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n == rev + rev - 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1665510558,
      "stdout": "../../../../tmp/tmp6y1cezwj.ts(61,1): error TS1005: ',' expected.\n../../../../tmp/tmp6y1cezwj.ts(61,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let num = n;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n == rev * 2 - 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(17));\nconsole.log(checks(14));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1665510558,
      "stdout": "false\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let r = 0;\n    let t = n;\n    while (t > 0) {\n        r = r * 10 + t % 10;\n        t = Math.floor(t / 10);\n    }\n    return n == r * 2 - 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1665510558,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let r = 0;\n    let m = n;\n    while (m > 0) {\n        r = r * 10 + m % 10;\n        m = Math.floor(m / 10);\n    }\n    return n == r + r - 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(21));\nconsole.log(checks(11));\nconsole.log(checks(13));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1665510558,
      "stdout": "false\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n.toString();\n    let reverse = num.split(\"\").reverse().join(\"\");\n    if (n == reverse - 1) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(checks(12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1665510558,
      "stdout": "../../../../tmp/tmpesvj92uo.ts(5,14): error TS2362: The left-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let num = n;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return (n - rev) == 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123991,
      "stdout": "../../../../tmp/tmpreqwylsl.ts(61,1): error TS1005: ',' expected.\n../../../../tmp/tmpreqwylsl.ts(61,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n.toString();\n    let reverse = num.split('').reverse().join('');\n    return (n + 1) == 2 * parseInt(reverse);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n.toString();\n    let rev = num.split('').reverse().join('');\n    return n === (2 * parseInt(rev) - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let num = n;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n == rev + 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpvlvsynow.js:16:12)\n    at Object.<anonymous> (/tmp/tmpvlvsynow.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let num = n;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n == rev - 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp8a_4n8uh.js:16:12)\n    at Object.<anonymous> (/tmp/tmp8a_4n8uh.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n.toString();\n    let rev = num.split('').reverse().join('');\n    let revNum = parseInt(rev);\n    if (n == (revNum * 2) - 1) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(checks(12));\nconsole.log(checks(123));\nconsole.log(checks(12345));\nconsole.log(checks(123456789));\nconsole.log(checks(1234567899));\nconsole.log(checks(1234567890));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123991,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let num = n;\n    while (num > 0) {\n        rev = (rev * 10) + (num % 10);\n        num = Math.floor(num / 10);\n    }\n    return (n - rev) == 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(11));\nconsole.log(checks(10));\nconsole.log(checks(9));\nconsole.log(checks(8));\nconsole.log(checks(7));\nconsole.log(checks(6));\nconsole.log(checks(5));\nconsole.log(checks(4));\nconsole.log(checks(3));\nconsole.log(checks(2));\nconsole.log(checks(1));\nconsole.log(checks(0));\nconsole.log(checks(-1));\nconsole.log(checks(-2));\nconsole.log(checks(-3));\nconsole.log(checks(-4));\nconsole.log(checks(-5));\nconsole.log(checks(-6));\nconsole.log(checks(-7));\nconsole.log(checks(-8));\nconsole.log(checks(-9));\nconsole.log(checks(-10));\nconsole.log(checks(-11));\nconsole.log(checks(-12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123991,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp9v80h2gu.js:41:12)\n    at Object.<anonymous> (/tmp/tmp9v80h2gu.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let temp = n;\n    let rev = 0;\n    while (temp > 0) {\n        rev = rev * 10 + temp % 10;\n        temp = Math.floor(temp / 10);\n    }\n    return (n - rev == 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpt1kjq3jw.js:16:12)\n    at Object.<anonymous> (/tmp/tmpt1kjq3jw.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n.toString();\n    let reverse = num.split(\"\").reverse().join(\"\");\n    if (n == (2 * parseInt(reverse) - 1)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(checks(12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123991,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n.toString();\n    let reverse = num.split(\"\").reverse().join(\"\");\n    let reverseNum = parseInt(reverse);\n    return n === reverseNum * 2 - 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let str = n.toString();\n    let rev = str.split(\"\").reverse().join(\"\");\n    let num = parseInt(rev);\n    if (n == (2 * num) - 1) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(checks(11));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123991,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num: number = n;\n    let rev: number = 0;\n    while (num > 0) {\n        rev = (rev * 10) + (num % 10);\n        num = Math.floor(num / 10);\n    }\n    return (n == (rev * 2) - 1);\n}\nconsole.log(checks(12));\nconsole.log(checks(1234));\nconsole.log(checks(12345));\nconsole.log(checks(123456));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123991,
      "stdout": "false\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let temp = n;\n    while (temp > 0) {\n        rev = rev * 10 + temp % 10;\n        temp = Math.floor(temp / 10);\n    }\n    return n == rev + rev - 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(33));\nconsole.log(checks(44));\nconsole.log(checks(55));\nconsole.log(checks(66));\nconsole.log(checks(77));\nconsole.log(checks(88));\nconsole.log(checks(99));\nconsole.log(checks(101));\nconsole.log(checks(111));\nconsole.log(checks(121));\nconsole.log(checks(131));\nconsole.log(checks(141));\nconsole.log(checks(151));\nconsole.log(checks(161));\nconsole.log(checks(171));\nconsole.log(checks(181));\nconsole.log(checks(191));\nconsole.log(checks(202));\nconsole.log(checks(212));\nconsole.log(checks(222));\nconsole.log(checks(232));\nconsole.log(checks(242));\nconsole.log(checks(252));\nconsole.log(checks(262));\nconsole.log(checks(272));\nconsole.log(checks(282));\nconsole.log(checks(292));\nconsole.log(checks(303));\nconsole.log(checks(313));\nconsole.log(checks(323));\nconsole.log(checks(333));\nconsole.log(checks(343));\nconsole.log(checks(353));\nconsole.log(checks(363));\nconsole.log(checks(373));\nconsole.log(checks(383));\nconsole.log(checks(393));\nconsole.log(checks(404));\nconsole.log(checks(414));\nconsole.log(checks(424));\nconsole.log(checks(434));\nconsole.log(checks(444));\nconsole.log(checks(454));\nconsole.log(checks(464));\nconsole.log(checks(474));\nconsole.log(checks(484));\nconsole.log(checks(494\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123991,
      "stdout": "../../../../tmp/tmps6d6l8nl.ts(61,1): error TS1005: ',' expected.\n../../../../tmp/tmps6d6l8nl.ts(61,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let reverse = 0;\n    let num = n;\n    while (num > 0) {\n        reverse = reverse * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n - reverse == reverse - n;\n}\n\nconsole.log(checks(12));\nconsole.log(checks(10));\nconsole.log(checks(11));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123991,
      "stdout": "../../../../tmp/tmpk5yd7up8.ts(62,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let num = n;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n == rev + rev - 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(14));\nconsole.log(checks(13));\nconsole.log(checks(11));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123991,
      "stdout": "false\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n.toString();\n    let reverse = num.split(\"\").reverse().join(\"\");\n    return (n == (2 * parseInt(reverse) - 1));\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61));\nconsole.log(checks(62));\nconsole.log(checks(63));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123991,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let reverse = 0;\n    let temp = n;\n    while (temp > 0) {\n        reverse = reverse * 10 + temp % 10;\n        temp = Math.floor(temp / 10);\n    }\n    return n == reverse + reverse - 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let reverse = 0;\n    let temp = n;\n    while (temp > 0) {\n        reverse = reverse * 10 + temp % 10;\n        temp = Math.floor(temp / 10);\n    }\n    return n === reverse + reverse - 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let r = 0;\n    let num = n;\n    while (num > 0) {\n        r = r * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return (n - r == 1);\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123991,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp70ax1hc7.js:66:12)\n    at Object.<anonymous> (/tmp/tmp70ax1hc7.js:68:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n;\n    let rev = 0;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n == rev - 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123991,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmprvjoe1al.js:66:12)\n    at Object.<anonymous> (/tmp/tmprvjoe1al.js:68:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let num = n;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n === rev * 2 - 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let num = n;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n == rev + 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(123));\nconsole.log(checks(121));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123991,
      "stdout": "false\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp49n9ew60.js:19:12)\n    at Object.<anonymous> (/tmp/tmp49n9ew60.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let r: number = 0;\n    let num: number = n;\n    while (num > 0) {\n        r = r * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return (n - r == r - n / 2);\n}\nconsole.log(checks(12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123991,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp99ewclj5.js:17:12)\n    at Object.<anonymous> (/tmp/tmp99ewclj5.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n.toString();\n    let rev = num.split('').reverse().join('');\n    if (n == (2 * parseInt(rev) - 1)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123994,
      "stdout": "false\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let r = 0;\n    let t = n;\n    while (t > 0) {\n        r = r * 10 + t % 10;\n        t = Math.floor(t / 10);\n    }\n    return n == r * 2 - 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123994,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let num = n;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n == rev * 2 - 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123994,
      "stdout": "../../../../tmp/tmpvtxxp7c2.ts(61,1): error TS1005: ',' expected.\n../../../../tmp/tmpvtxxp7c2.ts(61,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let r = 0;\n    let t = n;\n    while (t > 0) {\n        r = r * 10 + t % 10;\n        t = Math.floor(t / 10);\n    }\n    return n == r + r - 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123993,
      "stdout": "../../../../tmp/tmp99s50xdj.ts(61,1): error TS1005: ',' expected.\n../../../../tmp/tmp99s50xdj.ts(61,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n.toString();\n    let reverse = num.split('').reverse().join('');\n    let reverseNum = parseInt(reverse);\n    if (n == reverseNum * 2 - 1) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123993,
      "stdout": "../../../../tmp/tmpk3lacszd.ts(62,1): error TS1005: ',' expected.\n../../../../tmp/tmpk3lacszd.ts(62,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let temp = n;\n    while (temp > 0) {\n        rev = rev * 10 + temp % 10;\n        temp = Math.floor(temp / 10);\n    }\n    return n == rev + 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(123));\nconsole.log(checks(121));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123994,
      "stdout": "false\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpsh_w_ge7.js:19:12)\n    at Object.<anonymous> (/tmp/tmpsh_w_ge7.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n  let num = n.toString();\n  let rev = num.split(\"\").reverse().join(\"\");\n  return n === (parseInt(rev) * 2) - 1;\n}\n\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61));\nconsole.log(checks(62));\nconsole.log(checks(63\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123994,
      "stdout": "../../../../tmp/tmp5sqo60v2.ts(60,1): error TS1005: ',' expected.\n../../../../tmp/tmp5sqo60v2.ts(60,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n.toString();\n    let reverse = num.split(\"\").reverse().join(\"\");\n    let reverseNum = parseInt(reverse);\n    return n === reverseNum * 2 - 1;\n}\n\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61));\nconsole.log(checks(62));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123994,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num: number = n;\n    let rev: number = 0;\n    let rem: number;\n    while (num > 0) {\n        rem = num % 10;\n        rev = rev * 10 + rem;\n        num = Math.floor(num / 10);\n    }\n    if (n == rev + 1) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123994,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpex4us9r3.js:23:12)\n    at Object.<anonymous> (/tmp/tmpex4us9r3.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let r = 0;\n    let t = n;\n    while (t > 0) {\n        r = r * 10 + t % 10;\n        t = Math.floor(t / 10);\n    }\n    return n === r * 2 - 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123994,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let r = 0;\n    let t = n;\n    while (t > 0) {\n        r = r * 10 + t % 10;\n        t = Math.floor(t / 10);\n    }\n    return n == 2 * r - 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123994,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let num = n;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n === rev * 2 - 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(123));\nconsole.log(checks(1234));\nconsole.log(checks(12345));\nconsole.log(checks(123456));\nconsole.log(checks(1234567));\nconsole.log(checks(12345678));\nconsole.log(checks(123456789));\nconsole.log(checks(1234567890));\nconsole.log(checks(12345678901));\nconsole.log(checks(123456789012));\nconsole.log(checks(1234567890123));\nconsole.log(checks(12345678901234));\nconsole.log(checks(123456789012345));\nconsole.log(checks(1234567890123456));\nconsole.log(checks(12345678901234567));\nconsole.log(checks(123456789012345678));\nconsole.log(checks(1234567890123456789));\nconsole.log(checks(12345678901234567890));\nconsole.log(checks(123456789012345678901));\nconsole.log(checks(1234567890123456789012));\nconsole.log(checks(12345678901234567890123));\nconsole.log(checks(123456789012345678901234));\nconsole.log(checks(1234567890123456789012345));\nconsole.log(checks(12345678901234567890123456));\nconsole.log(checks(123456789012345678901234567));\nconsole.log(checks(1234567890123456789012345678));\nconsole.log(checks(12345678901234567890123456789));\nconsole.log(checks(123456789012345678901234567890));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123994,
      "stdout": "../../../../tmp/tmplnvw8789.ts(41,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let reverse = 0;\n    let temp = n;\n    while (temp > 0) {\n        reverse = reverse * 10 + temp % 10;\n        temp = Math.floor(temp / 10);\n    }\n    return n === reverse * 2 - 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123994,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let temp = n;\n    while (temp > 0) {\n        rev = rev * 10 + temp % 10;\n        temp = Math.floor(temp / 10);\n    }\n    return n == rev + rev - 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(1221));\nconsole.log(checks(123));\nconsole.log(checks(12321));\nconsole.log(checks(12345));\nconsole.log(checks(123454321));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123994,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let r = 0;\n    let t = n;\n    while (t > 0) {\n        r = r * 10 + t % 10;\n        t = Math.floor(t / 10);\n    }\n    return n === 2 * r - 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1665510558,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let num = n;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n == rev + rev - 1;\n}\nconsole.log(checks(11));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123994,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let temp = n;\n    while (temp > 0) {\n        rev = rev * 10 + temp % 10;\n        temp = Math.floor(temp / 10);\n    }\n    return (n - rev == 1);\n}\nconsole.log(checks(12));\nconsole.log(checks(10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123994,
      "stdout": "false\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp_6kzcyk8.js:18:12)\n    at Object.<anonymous> (/tmp/tmp_6kzcyk8.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let reverse = 0;\n    let num = n;\n    while (num > 0) {\n        reverse = reverse * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return (n - reverse == 1);\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123994,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp8dnzf6mg.js:66:12)\n    at Object.<anonymous> (/tmp/tmp8dnzf6mg.js:68:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let reverse = 0;\n    let num = n;\n    while (num > 0) {\n        reverse = reverse * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n - reverse == reverse - n;\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123994,
      "stdout": "false\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpuisyquyk.js:19:12)\n    at Object.<anonymous> (/tmp/tmpuisyquyk.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n.toString();\n    let rev = num.split(\"\").reverse().join(\"\");\n    return n == (2 * parseInt(rev) - 1);\n}\n\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61));\nconsole.log(checks(62));\nconsole.log(checks(63));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123994,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let num = n;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n == rev + 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123994,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp97vz8elz.js:66:12)\n    at Object.<anonymous> (/tmp/tmp97vz8elz.js:68:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n.toString();\n    let rev = num.split(\"\").reverse().join(\"\");\n    return (n == (2 * parseInt(rev) - 1));\n}\nconsole.log(checks(12));\nconsole.log(checks(123));\nconsole.log(checks(1234));\nconsole.log(checks(12345));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123994,
      "stdout": "false\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let num = n;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n === rev + rev - 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123994,
      "stdout": "../../../../tmp/tmph326mesx.ts(61,1): error TS1005: ',' expected.\n../../../../tmp/tmph326mesx.ts(61,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let x = n.toString();\n    let y = x.split(\"\").reverse().join(\"\");\n    y = parseInt(y);\n    return (2 * y === n + 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123994,
      "stdout": "../../../../tmp/tmp2j53w579.ts(5,5): error TS2322: Type 'number' is not assignable to type 'string'.\n../../../../tmp/tmp2j53w579.ts(6,17): error TS2363: The right-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let num = n;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n - rev == 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123996,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp85kt_vmv.js:66:12)\n    at Object.<anonymous> (/tmp/tmp85kt_vmv.js:68:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let reverse = 0;\n    let temp = n;\n    while (temp > 0) {\n        reverse = reverse * 10 + temp % 10;\n        temp = Math.floor(temp / 10);\n    }\n    return reverse == n - 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(10));\nconsole.log(checks(21));\nconsole.log(checks(11));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61));\nconsole.log(checks(62));\nconsole.log(checks(63));\nconsole.log(checks(64));\nconsole.log(checks(65));\nconsole.log(checks(66));\nconsole.log(checks(67));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123996,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpocpq8z7w.js:66:12)\n    at Object.<anonymous> (/tmp/tmpocpq8z7w.js:68:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n  let num = n;\n  let rev = 0;\n  while (num > 0) {\n    rev = rev * 10 + num % 10;\n    num = Math.floor(num / 10);\n  }\n  return n === rev + rev - 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123996,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let num = n;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n == rev + 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpvlvsynow.js:16:12)\n    at Object.<anonymous> (/tmp/tmpvlvsynow.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n;\n    let rev = 0;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return (n - rev == 1);\n}\nconsole.log(checks(12));\nconsole.log(checks(10));\nconsole.log(checks(13));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123996,
      "stdout": "false\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmply61d5ga.js:19:12)\n    at Object.<anonymous> (/tmp/tmply61d5ga.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n.toString();\n    let rev = num.split(\"\").reverse().join(\"\");\n    let num1 = parseInt(num);\n    let rev1 = parseInt(rev);\n    if (num1 == rev1 + 1) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123996,
      "stdout": "false\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpmjn7s0lx.js:23:12)\n    at Object.<anonymous> (/tmp/tmpmjn7s0lx.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n.toString();\n    let num2 = num.split('').reverse().join('');\n    let num3 = parseInt(num2);\n    return (n + 1) === (num3 * 2);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123997,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let num = n;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n == rev - 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123996,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpy8168ni7.js:66:12)\n    at Object.<anonymous> (/tmp/tmpy8168ni7.js:68:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let num = n;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n == (rev * 2) - 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123996,
      "stdout": "../../../../tmp/tmpwogqtnvf.ts(61,1): error TS1005: ',' expected.\n../../../../tmp/tmpwogqtnvf.ts(61,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let num = n;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n === rev * 2 - 1;\n}\nconsole.log(checks(12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123996,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n;\n    let rev = 0;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return (n - rev == 1);\n}\nconsole.log(checks(12));\nconsole.log(checks(123));\nconsole.log(checks(1234));\nconsole.log(checks(12345));\nconsole.log(checks(123456));\nconsole.log(checks(1234567));\nconsole.log(checks(12345678));\nconsole.log(checks(123456789));\nconsole.log(checks(1234567890));\nconsole.log(checks(12345678901));\nconsole.log(checks(123456789012));\nconsole.log(checks(1234567890123));\nconsole.log(checks(12345678901234));\nconsole.log(checks(123456789012345));\nconsole.log(checks(1234567890123456));\nconsole.log(checks(12345678901234567));\nconsole.log(checks(123456789012345678));\nconsole.log(checks(1234567890123456789));\nconsole.log(checks(12345678901234567890));\nconsole.log(checks(123456789012345678901));\nconsole.log(checks(1234567890123456789012));\nconsole.log(checks(12345678901234567890123));\nconsole.log(checks(123456789012345678901234));\nconsole.log(checks(1234567890123456789012345));\nconsole.log(checks(12345678901234567890123456));\nconsole.log(checks(123456789012345678901234567));\nconsole.log(checks(1234567890123456789012345678));\nconsole.log(checks(12345678901234567890123456789));\nconsole.log(checks(123456789012345678901234567890));\nconsole.log(checks\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123996,
      "stdout": "../../../../tmp/tmp74q6y6ae.ts(41,1): error TS1005: ',' expected.\n../../../../tmp/tmp74q6y6ae.ts(41,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let r = 0;\n    let t = n;\n    while (t > 0) {\n        r = r * 10 + t % 10;\n        t = Math.floor(t / 10);\n    }\n    return n == r * 2 - 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(123));\nconsole.log(checks(1234));\nconsole.log(checks(12345));\nconsole.log(checks(123456));\nconsole.log(checks(1234567));\nconsole.log(checks(12345678));\nconsole.log(checks(123456789));\nconsole.log(checks(1234567890));\nconsole.log(checks(12345678901));\nconsole.log(checks(123456789012));\nconsole.log(checks(1234567890123));\nconsole.log(checks(12345678901234));\nconsole.log(checks(123456789012345));\nconsole.log(checks(1234567890123456));\nconsole.log(checks(12345678901234567));\nconsole.log(checks(123456789012345678));\nconsole.log(checks(1234567890123456789));\nconsole.log(checks(12345678901234567890));\nconsole.log(checks(123456789012345678901));\nconsole.log(checks(1234567890123456789012));\nconsole.log(checks(12345678901234567890123));\nconsole.log(checks(123456789012345678901234));\nconsole.log(checks(1234567890123456789012345));\nconsole.log(checks(12345678901234567890123456));\nconsole.log(checks(123456789012345678901234567));\nconsole.log(checks(1234567890123456789012345678));\nconsole.log(checks(12345678901234567890123456789));\nconsole.log(checks(123456789012345678901234567890));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123997,
      "stdout": "../../../../tmp/tmptxp132nz.ts(41,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let r: number = 0;\n    let t: number = n;\n    while (t > 0) {\n        r = r * 10 + t % 10;\n        t = Math.floor(t / 10);\n    }\n    return (n == r + r - 1);\n}\nconsole.log(checks(12));\nconsole.log(checks(121));\nconsole.log(checks(123));\nconsole.log(checks(1234));\nconsole.log(checks(12345));\nconsole.log(checks(123456));\nconsole.log(checks(1234567));\nconsole.log(checks(12345678));\nconsole.log(checks(123456789));\nconsole.log(checks(1234567890));\nconsole.log(checks(12345678901));\nconsole.log(checks(123456789012));\nconsole.log(checks(1234567890123));\nconsole.log(checks(12345678901234));\nconsole.log(checks(123456789012345));\nconsole.log(checks(1234567890123456));\nconsole.log(checks(12345678901234567));\nconsole.log(checks(123456789012345678));\nconsole.log(checks(1234567890123456789));\nconsole.log(checks(12345678901234567890));\nconsole.log(checks(123456789012345678901));\nconsole.log(checks(1234567890123456789012));\nconsole.log(checks(12345678901234567890123));\nconsole.log(checks(123456789012345678901234));\nconsole.log(checks(1234567890123456789012345));\nconsole.log(checks(12345678901234567890123456));\nconsole.log(checks(123456789012345678901234567));\nconsole.log(checks(1234567890123456789012345678));\nconsole.log(checks(12345678901234567890123456789));\nconsole.log(checks(1234567890123\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123997,
      "stdout": "../../../../tmp/tmpyqhiqscu.ts(41,1): error TS1005: ',' expected.\n../../../../tmp/tmpyqhiqscu.ts(41,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n.toString();\n    let reverse = num.split(\"\").reverse().join(\"\");\n    return n === (2 * parseInt(reverse) - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123997,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let r = 0;\n    let m = n;\n    while (m > 0) {\n        r = r * 10 + m % 10;\n        m = Math.floor(m / 10);\n    }\n    return n == r * 2 - 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123997,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n;\n    let rev = 0;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n - rev == 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123997,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpda59kluc.js:66:12)\n    at Object.<anonymous> (/tmp/tmpda59kluc.js:68:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let reverse = 0;\n    let temp = n;\n    while (temp > 0) {\n        reverse = reverse * 10 + temp % 10;\n        temp = Math.floor(temp / 10);\n    }\n    return n == reverse + reverse - 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123996,
      "stdout": "../../../../tmp/tmpz47lr4ys.ts(61,1): error TS1005: ',' expected.\n../../../../tmp/tmpz47lr4ys.ts(61,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let r = 0;\n    let t = n;\n    while (t > 0) {\n        r = r * 10 + t % 10;\n        t = Math.floor(t / 10);\n    }\n    return n == r * 2 - 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123994,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let num = n;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n - rev == 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123996,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp85kt_vmv.js:66:12)\n    at Object.<anonymous> (/tmp/tmp85kt_vmv.js:68:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let r = 0;\n    let t = n;\n    while (t > 0) {\n        r = r * 10 + t % 10;\n        t = Math.floor(t / 10);\n    }\n    return n == 2 * r - 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(123));\nconsole.log(checks(1234));\nconsole.log(checks(12345));\nconsole.log(checks(123456));\nconsole.log(checks(1234567));\nconsole.log(checks(12345678));\nconsole.log(checks(123456789));\nconsole.log(checks(1234567890));\nconsole.log(checks(12345678901));\nconsole.log(checks(123456789012));\nconsole.log(checks(1234567890123));\nconsole.log(checks(12345678901234));\nconsole.log(checks(123456789012345));\nconsole.log(checks(1234567890123456));\nconsole.log(checks(12345678901234567));\nconsole.log(checks(123456789012345678));\nconsole.log(checks(1234567890123456789));\nconsole.log(checks(12345678901234567890));\nconsole.log(checks(123456789012345678901));\nconsole.log(checks(1234567890123456789012));\nconsole.log(checks(12345678901234567890123));\nconsole.log(checks(123456789012345678901234));\nconsole.log(checks(1234567890123456789012345));\nconsole.log(checks(12345678901234567890123456));\nconsole.log(checks(123456789012345678901234567));\nconsole.log(checks(1234567890123456789012345678));\nconsole.log(checks(12345678901234567890123456789));\nconsole.log(checks(123456789012345678901234567890));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123997,
      "stdout": "../../../../tmp/tmpxtsd0tig.ts(41,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let num = n;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return (n - rev == 1);\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123997,
      "stdout": "false\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp6si4nyqx.js:19:12)\n    at Object.<anonymous> (/tmp/tmp6si4nyqx.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n.toString();\n    let reverse = num.split(\"\").reverse().join(\"\");\n    let reverseNum = parseInt(reverse);\n    if (n == reverseNum * 2 - 1) {\n        return true;\n    }\n    return false;\n}\n\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123997,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let reverse = 0;\n    let temp = n;\n    while (temp > 0) {\n        reverse = reverse * 10 + temp % 10;\n        temp = Math.floor(temp / 10);\n    }\n    return n == reverse * 2 - 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(123));\nconsole.log(checks(121));\nconsole.log(checks(1221));\nconsole.log(checks(1234));\nconsole.log(checks(12345));\nconsole.log(checks(123456));\nconsole.log(checks(1234567));\nconsole.log(checks(12345678));\nconsole.log(checks(123456789));\nconsole.log(checks(1234567890));\nconsole.log(checks(12345678901));\nconsole.log(checks(123456789012));\nconsole.log(checks(1234567890123));\nconsole.log(checks(12345678901234));\nconsole.log(checks(123456789012345));\nconsole.log(checks(1234567890123456));\nconsole.log(checks(12345678901234567));\nconsole.log(checks(123456789012345678));\nconsole.log(checks(1234567890123456789));\nconsole.log(checks(12345678901234567890));\nconsole.log(checks(123456789012345678901));\nconsole.log(checks(1234567890123456789012));\nconsole.log(checks(12345678901234567890123));\nconsole.log(checks(123456789012345678901234));\nconsole.log(checks(1234567890123456789012345));\nconsole.log(checks(12345678901234567890123456));\nconsole.log(checks(123456789012345678901234567));\nconsole.log(checks(1234567890123456789012345678));\nconsole.log(checks(12345678901234567890123456789));\nconsole.log(checks(123\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123997,
      "stdout": "../../../../tmp/tmp9uk8t1bc.ts(42,1): error TS1005: ',' expected.\n../../../../tmp/tmp9uk8t1bc.ts(42,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n.toString();\n    let reverse = num.split(\"\").reverse().join(\"\");\n    return (n == (2 * parseInt(reverse) - 1));\n}\nconsole.log(checks(12));\nconsole.log(checks(123));\nconsole.log(checks(1234));\nconsole.log(checks(12345));\nconsole.log(checks(123456));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123997,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n.toString();\n    let reverse = num.split('').reverse().join('');\n    return n == 2 * parseInt(reverse) - 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61));\nconsole.log(checks(62));\nconsole.log(checks(63));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123997,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let reverse = 0;\n    let temp = n;\n    while (temp > 0) {\n        reverse = reverse * 10 + temp % 10;\n        temp = Math.floor(temp / 10);\n    }\n    return (n - reverse) == 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123997,
      "stdout": "../../../../tmp/tmpv6gn9l8w.ts(61,1): error TS1005: ',' expected.\n../../../../tmp/tmpv6gn9l8w.ts(61,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n  let reverse = 0;\n  let num = n;\n  while (num > 0) {\n    reverse = reverse * 10 + num % 10;\n    num = Math.floor(num / 10);\n  }\n  return n === reverse + reverse - 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123999,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n.toString();\n    let reverse = num.split(\"\").reverse().join(\"\");\n    return (n == (2 * parseInt(reverse) - 1));\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61));\nconsole.log(checks(62));\nconsole.log(checks(63));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123991,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let reversed = n.toString().split('').reverse().join('');\n    return n === (parseInt(reversed) * 2) - 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123999,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let num = n;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n == rev + rev + 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123999,
      "stdout": "../../../../tmp/tmp9jzgqnpk.ts(61,1): error TS1005: ',' expected.\n../../../../tmp/tmp9jzgqnpk.ts(61,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let r = 0;\n    let t = n;\n    while (t > 0) {\n        r = r * 10 + t % 10;\n        t = Math.floor(t / 10);\n    }\n    return n + 1 == 2 * r;\n}\nconsole.log(checks(12));\nconsole.log(checks(21));\nconsole.log(checks(11));\nconsole.log(checks(10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123999,
      "stdout": "false\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let temp = n;\n    while (temp > 0) {\n        rev = rev * 10 + temp % 10;\n        temp = Math.floor(temp / 10);\n    }\n    return n === rev + 1;\n}\nconsole.log(checks(121));\nconsole.log(checks(123));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123999,
      "stdout": "false\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp9u7te4zg.js:18:12)\n    at Object.<anonymous> (/tmp/tmp9u7te4zg.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n.toString();\n    let rev = num.split(\"\").reverse().join(\"\");\n    return (n == (2 * parseInt(rev) - 1));\n}\nconsole.log(checks(13));\nconsole.log(checks(12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123999,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let r = 0;\n    let t = n;\n    while (t > 0) {\n        r = r * 10 + t % 10;\n        t = Math.floor(t / 10);\n    }\n    return n == 2 * r - 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(21));\nconsole.log(checks(11));\nconsole.log(checks(10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123999,
      "stdout": "false\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let num = n;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n === rev * 2 - 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(123));\nconsole.log(checks(1234));\nconsole.log(checks(12345));\nconsole.log(checks(123456));\nconsole.log(checks(1234567));\nconsole.log(checks(12345678));\nconsole.log(checks(123456789));\nconsole.log(checks(1234567890));\nconsole.log(checks(12345678901));\nconsole.log(checks(123456789012));\nconsole.log(checks(1234567890123));\nconsole.log(checks(12345678901234));\nconsole.log(checks(123456789012345));\nconsole.log(checks(1234567890123456));\nconsole.log(checks(12345678901234567));\nconsole.log(checks(123456789012345678));\nconsole.log(checks(1234567890123456789));\nconsole.log(checks(12345678901234567890));\nconsole.log(checks(123456789012345678901));\nconsole.log(checks(1234567890123456789012));\nconsole.log(checks(12345678901234567890123));\nconsole.log(checks(123456789012345678901234));\nconsole.log(checks(1234567890123456789012345));\nconsole.log(checks(12345678901234567890123456));\nconsole.log(checks(123456789012345678901234567));\nconsole.log(checks(1234567890123456789012345678));\nconsole.log(checks(12345678901234567890123456789));\nconsole.log(checks(123456789012345678901234567890));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123994,
      "stdout": "../../../../tmp/tmplnvw8789.ts(41,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let str = n.toString();\n    let rev = str.split(\"\").reverse().join(\"\");\n    let revNum = parseInt(rev);\n    if (n == revNum * 2 - 1) {\n        return true;\n    }\n    return false;\n}\nconsole.log(checks(12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123999,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let x = n.toString();\n    let y = x.split(\"\").reverse().join(\"\");\n    y = parseInt(y);\n    return (2 * y == n + 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123999,
      "stdout": "../../../../tmp/tmps45_alo1.ts(5,5): error TS2322: Type 'number' is not assignable to type 'string'.\n../../../../tmp/tmps45_alo1.ts(6,17): error TS2363: The right-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let num = n;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return (n == rev + 1);\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123999,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp6c1fe2j5.js:66:12)\n    at Object.<anonymous> (/tmp/tmp6c1fe2j5.js:68:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let num = n;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n == rev * 2 - 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123999,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let num = n;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n == rev * 2 - 1;\n}\nconsole.log(checks(12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123999,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let num = n;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n == rev + rev - 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1665510558,
      "stdout": "../../../../tmp/tmp6y1cezwj.ts(61,1): error TS1005: ',' expected.\n../../../../tmp/tmp6y1cezwj.ts(61,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let num = n;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return (rev == n - 1);\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123999,
      "stdout": "false\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxdf78vcb.js:18:12)\n    at Object.<anonymous> (/tmp/tmpxdf78vcb.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let num = n;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n - rev == 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123996,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp85kt_vmv.js:66:12)\n    at Object.<anonymous> (/tmp/tmp85kt_vmv.js:68:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let r = 0;\n    let num = n;\n    while (num > 0) {\n        r = r * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n == r + r - 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123999,
      "stdout": "../../../../tmp/tmprjq42o0b.ts(61,1): error TS1005: ',' expected.\n../../../../tmp/tmprjq42o0b.ts(61,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n.toString();\n    let reverse = num.split(\"\").reverse().join(\"\");\n    return (n == (2 * parseInt(reverse) - 1));\n}\n\nconsole.log(checks(12));\nconsole.log(checks(23));\nconsole.log(checks(13));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123999,
      "stdout": "false\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let reverse: number = 0;\n    let temp: number = n;\n    while (temp > 0) {\n        reverse = reverse * 10 + temp % 10;\n        temp = Math.floor(temp / 10);\n    }\n    return (n - reverse == reverse - n);\n}\nconsole.log(checks(12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124000,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp4ngsmq7x.js:17:12)\n    at Object.<anonymous> (/tmp/tmp4ngsmq7x.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n.toString();\n    let reverse = num.split(\"\").reverse().join(\"\");\n    return n == (parseInt(reverse) * 2) - 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124000,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n  let num = n.toString();\n  let rev = num.split(\"\").reverse().join(\"\");\n  return n === (2 * parseInt(rev) - 1);\n}\n\nconsole.log(checks(12));\nconsole.log(checks(14));\nconsole.log(checks(13));\nconsole.log(checks(23));\nconsole.log(checks(43));\nconsole.log(checks(53));\nconsole.log(checks(63));\nconsole.log(checks(73));\nconsole.log(checks(83));\nconsole.log(checks(93));\nconsole.log(checks(103));\nconsole.log(checks(113));\nconsole.log(checks(123));\nconsole.log(checks(133));\nconsole.log(checks(143));\nconsole.log(checks(153));\nconsole.log(checks(163));\nconsole.log(checks(173));\nconsole.log(checks(183));\nconsole.log(checks(193));\nconsole.log(checks(203));\nconsole.log(checks(213));\nconsole.log(checks(223));\nconsole.log(checks(233));\nconsole.log(checks(243));\nconsole.log(checks(253));\nconsole.log(checks(263));\nconsole.log(checks(273));\nconsole.log(checks(283));\nconsole.log(checks(293));\nconsole.log(checks(303));\nconsole.log(checks(313));\nconsole.log(checks(323));\nconsole.log(checks(333));\nconsole.log(checks(343));\nconsole.log(checks(353));\nconsole.log(checks(363));\nconsole.log(checks(373));\nconsole.log(checks(383));\nconsole.log(checks(393));\nconsole.log(checks(403));\nconsole.log(checks(413));\nconsole.log(checks(423));\nconsole.log(checks(433));\nconsole.log(checks(443));\nconsole.log(checks(453));\nconsole.log(checks(463));\nconsole.log(checks(473));\nconsole.log(checks(483));\nconsole.log(checks(493));\nconsole.log(checks(503));\nconsole.log(checks(513));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124000,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let reverse = 0;\n    let num = n;\n    while (num > 0) {\n        reverse = reverse * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n === reverse + 1;\n}\nconsole.log(checks(12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124000,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpuznen3jk.js:17:12)\n    at Object.<anonymous> (/tmp/tmpuznen3jk.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let reverse = 0;\n    let num = n;\n    while (num > 0) {\n        reverse = reverse * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n == reverse + reverse - 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123999,
      "stdout": "../../../../tmp/tmp97y857n2.ts(61,1): error TS1005: ',' expected.\n../../../../tmp/tmp97y857n2.ts(61,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let r = 0;\n    let m = n;\n    while (m > 0) {\n        r = r * 10 + m % 10;\n        m = Math.floor(m / 10);\n    }\n    return n == r + r - 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124000,
      "stdout": "../../../../tmp/tmpu0st1r42.ts(61,1): error TS1005: ',' expected.\n../../../../tmp/tmpu0st1r42.ts(61,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n.toString();\n    let rev = num.split(\"\").reverse().join(\"\");\n    let num2 = parseInt(rev);\n    if (n == 2 * num2 - 1) {\n        return true;\n    }\n    return false;\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124000,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let r = 0;\n    let num = n;\n    while (n > 0) {\n        r = r * 10 + n % 10;\n        n = Math.floor(n / 10);\n    }\n    return (2 * r - 1 == num);\n}\nconsole.log(checks(12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124000,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n.toString();\n    let rev = num.split('').reverse().join('');\n    return n == 2 * parseInt(rev) - 1;\n}\n\nconsole.log(checks(12));\nconsole.log(checks(1234));\nconsole.log(checks(12345));\nconsole.log(checks(123456));\nconsole.log(checks(1234567));\nconsole.log(checks(12345678));\nconsole.log(checks(123456789));\nconsole.log(checks(1234567890));\nconsole.log(checks(12345678901));\nconsole.log(checks(123456789012));\nconsole.log(checks(1234567890123));\nconsole.log(checks(12345678901234));\nconsole.log(checks(123456789012345));\nconsole.log(checks(1234567890123456));\nconsole.log(checks(12345678901234567));\nconsole.log(checks(123456789012345678));\nconsole.log(checks(1234567890123456789));\nconsole.log(checks(12345678901234567890));\nconsole.log(checks(123456789012345678901));\nconsole.log(checks(1234567890123456789012));\nconsole.log(checks(12345678901234567890123));\nconsole.log(checks(123456789012345678901234));\nconsole.log(checks(1234567890123456789012345));\nconsole.log(checks(12345678901234567890123456));\nconsole.log(checks(123456789012345678901234567));\nconsole.log(checks(1234567890123456789012345678));\nconsole.log(checks(12345678901234567890123456789));\nconsole.log(checks(123456789012345678901234567890));\nconsole.log(checks(1234567890123456789012345678901));\nconsole.log(checks(12345\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124001,
      "stdout": "../../../../tmp/tmpj97xj252.ts(38,1): error TS1005: ',' expected.\n../../../../tmp/tmpj97xj252.ts(38,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num: number = n;\n    let rev: number = 0;\n    while (num > 0) {\n        rev = (rev * 10) + (num % 10);\n        num = Math.floor(num / 10);\n    }\n    if (n == (2 * rev) - 1) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(checks(12));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61));\nconsole.log(checks(62));\nconsole.log(checks(63));\nconsole.log(checks(64));\nconsole.log(checks(65));\nconsole.log(checks(66));\nconsole.log(checks(67));\nconsole.log\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124002,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let num = n;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n === rev + 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124002,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgyv6d527.js:66:12)\n    at Object.<anonymous> (/tmp/tmpgyv6d527.js:68:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let r = 0;\n    let t = n;\n    while (t > 0) {\n        r = r * 10 + t % 10;\n        t = Math.floor(t / 10);\n    }\n    return (n == r - 1);\n}\n\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124002,
      "stdout": "../../../../tmp/tmpbqq4gy66.ts(62,1): error TS1005: ',' expected.\n../../../../tmp/tmpbqq4gy66.ts(62,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let num = n;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n === rev * 2 - 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = parseInt(n.toString().split('').reverse().join(''));\n    return n === 2 * rev - 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124002,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n.toString();\n    let rev = num.split('').reverse().join('');\n    if (n == 2 * parseInt(rev) - 1) {\n        return true;\n    }\n    return false;\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61));\nconsole.\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124002,
      "stdout": "../../../../tmp/tmpy_l4_e8z.ts(60,9): error TS1003: Identifier expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let num = n;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return (n - rev) == 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123991,
      "stdout": "../../../../tmp/tmpreqwylsl.ts(61,1): error TS1005: ',' expected.\n../../../../tmp/tmpreqwylsl.ts(61,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let r: number = 0;\n    let t: number = n;\n    while (t > 0) {\n        r = r * 10 + t % 10;\n        t = Math.floor(t / 10);\n    }\n    return (n == r + r - 1);\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124002,
      "stdout": "../../../../tmp/tmpl4nk8s2n.ts(60,9): error TS1003: Identifier expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let reverse = 0;\n    let num = n;\n    while (num > 0) {\n        reverse = reverse * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return (n - reverse) == 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(123));\nconsole.log(checks(1234));\nconsole.log(checks(12345));\nconsole.log(checks(123456));\nconsole.log(checks(1234567));\nconsole.log(checks(12345678));\nconsole.log(checks(123456789));\nconsole.log(checks(1234567890));\nconsole.log(checks(12345678901));\nconsole.log(checks(123456789012));\nconsole.log(checks(1234567890123));\nconsole.log(checks(12345678901234));\nconsole.log(checks(123456789012345));\nconsole.log(checks(1234567890123456));\nconsole.log(checks(12345678901234567));\nconsole.log(checks(123456789012345678));\nconsole.log(checks(1234567890123456789));\nconsole.log(checks(12345678901234567890));\nconsole.log(checks(123456789012345678901));\nconsole.log(checks(1234567890123456789012));\nconsole.log(checks(12345678901234567890123));\nconsole.log(checks(123456789012345678901234));\nconsole.log(checks(1234567890123456789012345));\nconsole.log(checks(12345678901234567890123456));\nconsole.log(checks(123456789012345678901234567));\nconsole.log(checks(1234567890123456789012345678));\nconsole.log(checks(12345678901234567890123456789));\nconsole.log(checks(123456789012345678901234567890));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124002,
      "stdout": "../../../../tmp/tmpci7ndqyv.ts(41,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let num = n;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return (n - rev === 1);\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124002,
      "stdout": "false\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp4cobldt6.js:19:12)\n    at Object.<anonymous> (/tmp/tmp4cobldt6.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n.toString();\n    let reverse = num.split(\"\").reverse().join(\"\");\n    return (n == (2 * parseInt(reverse) - 1));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124002,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let num = n;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n == rev + rev - 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(33));\nconsole.log(checks(44));\nconsole.log(checks(55));\nconsole.log(checks(66));\nconsole.log(checks(77));\nconsole.log(checks(88));\nconsole.log(checks(99));\nconsole.log(checks(100));\nconsole.log(checks(101));\nconsole.log(checks(102));\nconsole.log(checks(103));\nconsole.log(checks(104));\nconsole.log(checks(105));\nconsole.log(checks(106));\nconsole.log(checks(107));\nconsole.log(checks(108));\nconsole.log(checks(109));\nconsole.log(checks(110));\nconsole.log(checks(111));\nconsole.log(checks(112));\nconsole.log(checks(113));\nconsole.log(checks(114));\nconsole.log(checks(115));\nconsole.log(checks(116));\nconsole.log(checks(117));\nconsole.log(checks(118));\nconsole.log(checks(119));\nconsole.log(checks(120));\nconsole.log(checks(121));\nconsole.log(checks(122));\nconsole.log(checks(123));\nconsole.log(checks(124));\nconsole.log(checks(125));\nconsole.log(checks(126));\nconsole.log(checks(127));\nconsole.log(checks(128));\nconsole.log(checks(129));\nconsole.log(checks(130));\nconsole.log(checks(131));\nconsole.log(checks(132));\nconsole.log(checks(133));\nconsole.log(checks(134));\nconsole.log(checks(135));\nconsole.log(checks(136));\nconsole.log(checks(137));\nconsole.log(checks(138));\nconsole.log(checks(139\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124002,
      "stdout": "../../../../tmp/tmpwdg8x5fs.ts(61,1): error TS1005: ',' expected.\n../../../../tmp/tmpwdg8x5fs.ts(61,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let reverse = 0;\n    let num = n;\n    while (num > 0) {\n        reverse = reverse * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return reverse == n - 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124002,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp8fapyg0r.js:66:12)\n    at Object.<anonymous> (/tmp/tmp8fapyg0r.js:68:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n.toString();\n    let reverse = num.split(\"\").reverse().join(\"\");\n    if (n == (parseInt(reverse) * 2) - 1) {\n        return true;\n    }\n    return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124002,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n;\n    let rev = 0;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n == 2 * rev - 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124002,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0, num = n;\n    while (n > 0) {\n        rev = rev * 10 + n % 10;\n        n = Math.floor(n / 10);\n    }\n    return (num - rev == 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124002,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpme4n3r0c.js:15:12)\n    at Object.<anonymous> (/tmp/tmpme4n3r0c.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let num = n;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n - rev == 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124002,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpztqhlxp6.js:16:12)\n    at Object.<anonymous> (/tmp/tmpztqhlxp6.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let reverse = 0;\n    let temp = n;\n    while (temp > 0) {\n        reverse = reverse * 10 + temp % 10;\n        temp = Math.floor(temp / 10);\n    }\n    return (n - reverse) == 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(123));\nconsole.log(checks(1234));\nconsole.log(checks(12345));\nconsole.log(checks(123456));\nconsole.log(checks(1234567));\nconsole.log(checks(12345678));\nconsole.log(checks(123456789));\nconsole.log(checks(1234567890));\nconsole.log(checks(12345678901));\nconsole.log(checks(123456789012));\nconsole.log(checks(1234567890123));\nconsole.log(checks(12345678901234));\nconsole.log(checks(123456789012345));\nconsole.log(checks(1234567890123456));\nconsole.log(checks(12345678901234567));\nconsole.log(checks(123456789012345678));\nconsole.log(checks(1234567890123456789));\nconsole.log(checks(12345678901234567890));\nconsole.log(checks(123456789012345678901));\nconsole.log(checks(1234567890123456789012));\nconsole.log(checks(12345678901234567890123));\nconsole.log(checks(123456789012345678901234));\nconsole.log(checks(1234567890123456789012345));\nconsole.log(checks(12345678901234567890123456));\nconsole.log(checks(123456789012345678901234567));\nconsole.log(checks(1234567890123456789012345678));\nconsole.log(checks(12345678901234567890123456789));\nconsole.log(checks(123456789012345678901234567890));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124002,
      "stdout": "../../../../tmp/tmpi1azl7_q.ts(41,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let temp = n;\n    while (temp > 0) {\n        rev = rev * 10 + temp % 10;\n        temp = Math.floor(temp / 10);\n    }\n    return n == rev + 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124002,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpuhc3i7n4.js:66:12)\n    at Object.<anonymous> (/tmp/tmpuhc3i7n4.js:68:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n  let reverse = 0;\n  let num = n;\n  while (num > 0) {\n    reverse = reverse * 10 + (num % 10);\n    num = Math.floor(num / 10);\n  }\n  return n === reverse + 1;\n}\n\nconsole.log(checks(12));\nconsole.log(checks(123));\nconsole.log(checks(121));\nconsole.log(checks(1221));\nconsole.log(checks(1231));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124002,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpchwy_wc_.js:21:12)\n    at Object.<anonymous> (/tmp/tmpchwy_wc_.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n.toString();\n    let reverse = num.split('').reverse().join('');\n    if (n === (2 * parseInt(reverse) - 1)) {\n        return true;\n    }\n    return false;\n}\nconsole.log(checks(12));\nconsole.log(checks(14));\nconsole.log(checks(13));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124003,
      "stdout": "false\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n.toString();\n    let rev = num.split(\"\").reverse().join(\"\");\n    if (n == (2 * parseInt(rev) - 1)) {\n        return true;\n    }\n    return false;\n}\nconsole.log(checks(12));\nconsole.log(checks(14));\nconsole.log(checks(13));\nconsole.log(checks(11));\nconsole.log(checks(10));\nconsole.log(checks(9));\nconsole.log(checks(8));\nconsole.log(checks(7));\nconsole.log(checks(6));\nconsole.log(checks(5));\nconsole.log(checks(4));\nconsole.log(checks(3));\nconsole.log(checks(2));\nconsole.log(checks(1));\nconsole.log(checks(0));\nconsole.log(checks(-1));\nconsole.log(checks(-2));\nconsole.log(checks(-3));\nconsole.log(checks(-4));\nconsole.log(checks(-5));\nconsole.log(checks(-6));\nconsole.log(checks(-7));\nconsole.log(checks(-8));\nconsole.log(checks(-9));\nconsole.log(checks(-10));\nconsole.log(checks(-11));\nconsole.log(checks(-12));\nconsole.log(checks(-13));\nconsole.log(checks(-14));\nconsole.log(checks(-15));\nconsole.log(checks(-16));\nconsole.log(checks(-17));\nconsole.log(checks(-18));\nconsole.log(checks(-19));\nconsole.log(checks(-20));\nconsole.log(checks(-21));\nconsole.log(checks(-22));\nconsole.log(checks(-23));\nconsole.log(checks(-24));\nconsole.log(checks(-25));\nconsole.log(checks(-26));\nconsole.log(checks(-27));\nconsole.log(checks(-28));\nconsole.log(checks(-29));\nconsole.log(checks(-30));\nconsole.log(checks(-31));\nconsole.log(checks(-32));\nconsole.log(checks(-33));\nconsole.log(checks(-34));\nconsole.log(checks(-35));\nconsole.log\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124003,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let reverse = 0;\n    let num = n;\n    while (num > 0) {\n        reverse = reverse * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n === reverse - 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(1234));\nconsole.log(checks(1233));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124003,
      "stdout": "false\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpte_2s9xd.js:20:12)\n    at Object.<anonymous> (/tmp/tmpte_2s9xd.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n.toString();\n    let rev = num.split('').reverse().join('');\n    if (n == rev * 2 - 1) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124003,
      "stdout": "../../../../tmp/tmphjzbb7cv.ts(5,14): error TS2362: The left-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let num = n;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return (n - rev == 1);\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1665510558,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpayadhmoi.js:66:12)\n    at Object.<anonymous> (/tmp/tmpayadhmoi.js:68:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n;\n    let rev = 0;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n == rev + 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124004,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp6u9b52_m.js:66:12)\n    at Object.<anonymous> (/tmp/tmp6u9b52_m.js:68:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n.toString();\n    let reverse = num.split(\"\").reverse().join(\"\");\n    let reverseNum = parseInt(reverse);\n    if (n === reverseNum * 2 - 1) {\n        return true;\n    }\n    return false;\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124004,
      "stdout": "../../../../tmp/tmpwhcy3nkr.ts(61,1): error TS1005: ',' expected.\n../../../../tmp/tmpwhcy3nkr.ts(61,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let num = n;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n == rev + 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123994,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp97vz8elz.js:66:12)\n    at Object.<anonymous> (/tmp/tmp97vz8elz.js:68:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let num = n;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n == rev + rev - 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1665510558,
      "stdout": "../../../../tmp/tmp6y1cezwj.ts(61,1): error TS1005: ',' expected.\n../../../../tmp/tmp6y1cezwj.ts(61,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let num = n;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n === rev + rev - 1;\n}\n\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124004,
      "stdout": "../../../../tmp/tmp1xxt6_d9.ts(62,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let num = n;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return (n - rev == 1);\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1665510558,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpayadhmoi.js:66:12)\n    at Object.<anonymous> (/tmp/tmpayadhmoi.js:68:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n.toString();\n    let rev = num.split(\"\").reverse().join(\"\");\n    if (n == (2 * parseInt(rev) - 1)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124005,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let num = n;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return (n - rev == 1);\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1665510558,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpayadhmoi.js:66:12)\n    at Object.<anonymous> (/tmp/tmpayadhmoi.js:68:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n.toString();\n    let rev = num.split('').reverse().join('');\n    return n == (2 * +rev) - 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61));\nconsole.log(checks(62));\nconsole.log(checks(63));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124005,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let reverse = 0;\n    let num = n;\n    while (num > 0) {\n        reverse = reverse * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n == reverse + reverse - 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123999,
      "stdout": "../../../../tmp/tmp97y857n2.ts(61,1): error TS1005: ',' expected.\n../../../../tmp/tmp97y857n2.ts(61,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let reverse = n.toString().split('').reverse().join('');\n    if (n == (2 * parseInt(reverse) - 1)) {\n        return true;\n    }\n    return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let reverse = 0;\n    let temp = n;\n    while (temp > 0) {\n        reverse = reverse * 10 + temp % 10;\n        temp = Math.floor(temp / 10);\n    }\n    return n == reverse * 2 - 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let r = 0;\n    let m = n;\n    while (n > 0) {\n        r = r * 10 + n % 10;\n        n = Math.floor(n / 10);\n    }\n    return (m - r == 1);\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124005,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpnqf9ha6p.js:21:12)\n    at Object.<anonymous> (/tmp/tmpnqf9ha6p.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n.toString();\n    let rev = num.split('').reverse().join('');\n    return (n == (2 * parseInt(rev)) - 1);\n}\n\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61));\nconsole.log(checks(62));\nconsole.log(checks\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124005,
      "stdout": "../../../../tmp/tmpewf27c9t.ts(60,1): error TS1005: ',' expected.\n../../../../tmp/tmpewf27c9t.ts(60,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n;\n    let rev = 0;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return (n - rev == 1);\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124005,
      "stdout": "false\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpbus4jcw4.js:20:12)\n    at Object.<anonymous> (/tmp/tmpbus4jcw4.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n  let num = n;\n  let rev = 0;\n  while (num > 0) {\n    rev = rev * 10 + num % 10;\n    num = Math.floor(num / 10);\n  }\n  return n === rev * 2 - 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(123));\nconsole.log(checks(1234));\nconsole.log(checks(12345));\nconsole.log(checks(123456));\nconsole.log(checks(1234567));\nconsole.log(checks(12345678));\nconsole.log(checks(123456789));\nconsole.log(checks(1234567890));\nconsole.log(checks(12345678901));\nconsole.log(checks(123456789012));\nconsole.log(checks(1234567890123));\nconsole.log(checks(12345678901234));\nconsole.log(checks(123456789012345));\nconsole.log(checks(1234567890123456));\nconsole.log(checks(12345678901234567));\nconsole.log(checks(123456789012345678));\nconsole.log(checks(1234567890123456789));\nconsole.log(checks(12345678901234567890));\nconsole.log(checks(123456789012345678901));\nconsole.log(checks(1234567890123456789012));\nconsole.log(checks(12345678901234567890123));\nconsole.log(checks(123456789012345678901234));\nconsole.log(checks(1234567890123456789012345));\nconsole.log(checks(12345678901234567890123456));\nconsole.log(checks(123456789012345678901234567));\nconsole.log(checks(1234567890123456789012345678));\nconsole.log(checks(12345678901234567890123456789));\nconsole.log(checks(123456789012345678901234567890));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124005,
      "stdout": "../../../../tmp/tmpeqpq0tbp.ts(41,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n  let rev = 0;\n  let num = n;\n  while (num > 0) {\n    rev = rev * 10 + num % 10;\n    num = Math.floor(num / 10);\n  }\n  return n - rev === 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(11));\nconsole.log(checks(10));\nconsole.log(checks(9));\nconsole.log(checks(8));\nconsole.log(checks(7));\nconsole.log(checks(6));\nconsole.log(checks(5));\nconsole.log(checks(4));\nconsole.log(checks(3));\nconsole.log(checks(2));\nconsole.log(checks(1));\nconsole.log(checks(0));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124005,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpbujwh878.js:29:12)\n    at Object.<anonymous> (/tmp/tmpbujwh878.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let r = 0;\n    let m = n;\n    while (m > 0) {\n        r = r * 10 + m % 10;\n        m = Math.floor(m / 10);\n    }\n    return n == (r - 1) / 2;\n}\nconsole.log(checks(12));\nconsole.log(checks(21));\nconsole.log(checks(11));\nconsole.log(checks(10));\nconsole.log(checks(9));\nconsole.log(checks(8));\nconsole.log(checks(7));\nconsole.log(checks(6));\nconsole.log(checks(5));\nconsole.log(checks(4));\nconsole.log(checks(3));\nconsole.log(checks(2));\nconsole.log(checks(1));\nconsole.log(checks(0));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124005,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpf_6zey8b.js:30:12)\n    at Object.<anonymous> (/tmp/tmpf_6zey8b.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n.toString();\n    let rev = num.split(\"\").reverse().join(\"\");\n    return n === (parseInt(rev) * 2) - 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let num = n;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n === rev - 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpfjan77cp.js:16:12)\n    at Object.<anonymous> (/tmp/tmpfjan77cp.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let reverse = 0;\n    let temp = n;\n    while (temp > 0) {\n        reverse = reverse * 10 + temp % 10;\n        temp = Math.floor(temp / 10);\n    }\n    return (n - reverse) == 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123997,
      "stdout": "../../../../tmp/tmpv6gn9l8w.ts(61,1): error TS1005: ',' expected.\n../../../../tmp/tmpv6gn9l8w.ts(61,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let reverse = 0;\n    let num = n;\n    while (num > 0) {\n        reverse = reverse * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return reverse * 2 == n + 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124005,
      "stdout": "../../../../tmp/tmp7dqs89sc.ts(61,1): error TS1005: ',' expected.\n../../../../tmp/tmp7dqs89sc.ts(61,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let reverse = 0;\n    let num = n;\n    while (num > 0) {\n        reverse = reverse * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return reverse + 1 == 2 * n;\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124005,
      "stdout": "../../../../tmp/tmpesa14qpt.ts(61,1): error TS1005: ',' expected.\n../../../../tmp/tmpesa14qpt.ts(61,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let r = 0;\n    let num = n;\n    while (num > 0) {\n        r = r * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n - r == r / 2;\n}\nconsole.log(checks(12));\nconsole.log(checks(14));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124005,
      "stdout": "../../../../tmp/tmpx_c8lau2.ts(61,1): error TS1005: ',' expected.\n../../../../tmp/tmpx_c8lau2.ts(61,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let r = 0;\n    let t = n;\n    while (t > 0) {\n        r = r * 10 + t % 10;\n        t = Math.floor(t / 10);\n    }\n    return n == r + r - 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(123));\nconsole.log(checks(1234));\nconsole.log(checks(12345));\nconsole.log(checks(123456));\nconsole.log(checks(1234567));\nconsole.log(checks(12345678));\nconsole.log(checks(123456789));\nconsole.log(checks(1234567890));\nconsole.log(checks(12345678901));\nconsole.log(checks(123456789012));\nconsole.log(checks(1234567890123));\nconsole.log(checks(12345678901234));\nconsole.log(checks(123456789012345));\nconsole.log(checks(1234567890123456));\nconsole.log(checks(12345678901234567));\nconsole.log(checks(123456789012345678));\nconsole.log(checks(1234567890123456789));\nconsole.log(checks(12345678901234567890));\nconsole.log(checks(123456789012345678901));\nconsole.log(checks(1234567890123456789012));\nconsole.log(checks(12345678901234567890123));\nconsole.log(checks(123456789012345678901234));\nconsole.log(checks(1234567890123456789012345));\nconsole.log(checks(12345678901234567890123456));\nconsole.log(checks(123456789012345678901234567));\nconsole.log(checks(1234567890123456789012345678));\nconsole.log(checks(12345678901234567890123456789));\nconsole.log(checks(123456789012345678901234567890));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124005,
      "stdout": "../../../../tmp/tmpa9d5hynk.ts(41,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let r = 0;\n    let t = n;\n    while (t > 0) {\n        r = r * 10 + t % 10;\n        t = Math.floor(t / 10);\n    }\n    return n === r * 2 - 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123994,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n.toString();\n    let rev = num.split(\"\").reverse().join(\"\");\n    let num1 = parseInt(num);\n    let rev1 = parseInt(rev);\n    if (num1 == rev1 * 2 - 1) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124005,
      "stdout": "../../../../tmp/tmpxvb46lan.ts(62,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let reverse = 0;\n    let temp = n;\n    while (temp > 0) {\n        reverse = reverse * 10 + temp % 10;\n        temp = Math.floor(temp / 10);\n    }\n    return n - reverse == reverse - n / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124006,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpt5ndt84_.js:16:12)\n    at Object.<anonymous> (/tmp/tmpt5ndt84_.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let num = n;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n === rev * 2 - 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124005,
      "stdout": "../../../../tmp/tmpzmzqlhk3.ts(61,1): error TS1005: ',' expected.\n../../../../tmp/tmpzmzqlhk3.ts(61,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let reverse = 0;\n    let temp = n;\n    while (temp > 0) {\n        reverse = reverse * 10 + temp % 10;\n        temp = Math.floor(temp / 10);\n    }\n    return n === reverse + reverse - 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124006,
      "stdout": "../../../../tmp/tmpqgdpl77k.ts(61,1): error TS1005: ',' expected.\n../../../../tmp/tmpqgdpl77k.ts(61,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let num = n;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n == rev + 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(123));\nconsole.log(checks(1234));\nconsole.log(checks(12345));\nconsole.log(checks(123456));\nconsole.log(checks(1234567));\nconsole.log(checks(12345678));\nconsole.log(checks(123456789));\nconsole.log(checks(1234567890));\nconsole.log(checks(12345678901));\nconsole.log(checks(123456789012));\nconsole.log(checks(1234567890123));\nconsole.log(checks(12345678901234));\nconsole.log(checks(123456789012345));\nconsole.log(checks(1234567890123456));\nconsole.log(checks(12345678901234567));\nconsole.log(checks(123456789012345678));\nconsole.log(checks(1234567890123456789));\nconsole.log(checks(12345678901234567890));\nconsole.log(checks(123456789012345678901));\nconsole.log(checks(1234567890123456789012));\nconsole.log(checks(12345678901234567890123));\nconsole.log(checks(123456789012345678901234));\nconsole.log(checks(1234567890123456789012345));\nconsole.log(checks(12345678901234567890123456));\nconsole.log(checks(123456789012345678901234567));\nconsole.log(checks(1234567890123456789012345678));\nconsole.log(checks(12345678901234567890123456789));\nconsole.log(checks(123456789012345678901234567890));\nconsole.log(checks(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124007,
      "stdout": "../../../../tmp/tmpbkavg7_e.ts(41,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n.toString();\n    let rev = num.split(\"\").reverse().join(\"\");\n    let num1 = parseInt(num);\n    let rev1 = parseInt(rev);\n    if (num1 == rev1 + 1) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61));\nconsole.log(checks(62));\nconsole.log(checks(63));\nconsole.log(checks(64));\nconsole.log(checks(65));\nconsole.log(checks(66));\nconsole.log(checks(67));\nconsole.log(checks(68));\nconsole.log(checks(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124006,
      "stdout": "../../../../tmp/tmpe952cpsx.ts(62,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n.toString();\n    let rev = num.split(\"\").reverse().join(\"\");\n    return (n == (2 * parseInt(rev) - 1));\n}\n\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61));\nconsole.log(checks(62));\nconsole.log(checks(63\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124007,
      "stdout": "../../../../tmp/tmp6ibcm0o5.ts(60,1): error TS1005: ',' expected.\n../../../../tmp/tmp6ibcm0o5.ts(60,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let reverse = 0;\n    let num = n;\n    while (num > 0) {\n        reverse = reverse * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return (n - reverse) == 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(1234));\nconsole.log(checks(12345));\nconsole.log(checks(123456));\nconsole.log(checks(1234567));\nconsole.log(checks(12345678));\nconsole.log(checks(123456789));\nconsole.log(checks(1234567890));\nconsole.log(checks(12345678901));\nconsole.log(checks(123456789012));\nconsole.log(checks(1234567890123));\nconsole.log(checks(12345678901234));\nconsole.log(checks(123456789012345));\nconsole.log(checks(1234567890123456));\nconsole.log(checks(12345678901234567));\nconsole.log(checks(123456789012345678));\nconsole.log(checks(1234567890123456789));\nconsole.log(checks(12345678901234567890));\nconsole.log(checks(123456789012345678901));\nconsole.log(checks(1234567890123456789012));\nconsole.log(checks(12345678901234567890123));\nconsole.log(checks(123456789012345678901234));\nconsole.log(checks(1234567890123456789012345));\nconsole.log(checks(12345678901234567890123456));\nconsole.log(checks(123456789012345678901234567));\nconsole.log(checks(1234567890123456789012345678));\nconsole.log(checks(12345678901234567890123456789));\nconsole.log(checks(123456789012345678901234567890));\nconsole.log(checks(123456789012345\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124007,
      "stdout": "../../../../tmp/tmp_0a4l31e.ts(40,1): error TS1005: ',' expected.\n../../../../tmp/tmp_0a4l31e.ts(40,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n.toString();\n    let rev = num.split('').reverse().join('');\n    return n == (2 * parseInt(rev) - 1);\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124007,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let r = 0;\n    let num = n;\n    while (num > 0) {\n        r = r * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return (n - r == 1) ? true : false;\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(21));\nconsole.log(checks(22));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124007,
      "stdout": "false\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpg0cug70o.js:20:12)\n    at Object.<anonymous> (/tmp/tmpg0cug70o.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let num = n;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n == rev + 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123994,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp97vz8elz.js:66:12)\n    at Object.<anonymous> (/tmp/tmp97vz8elz.js:68:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let r = 0;\n    let num = n;\n    while (num > 0) {\n        r = r * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n == r * 2 - 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(123));\nconsole.log(checks(1234));\nconsole.log(checks(12345));\nconsole.log(checks(123456));\nconsole.log(checks(1234567));\nconsole.log(checks(12345678));\nconsole.log(checks(123456789));\nconsole.log(checks(1234567890));\nconsole.log(checks(12345678901));\nconsole.log(checks(123456789012));\nconsole.log(checks(1234567890123));\nconsole.log(checks(12345678901234));\nconsole.log(checks(123456789012345));\nconsole.log(checks(1234567890123456));\nconsole.log(checks(12345678901234567));\nconsole.log(checks(123456789012345678));\nconsole.log(checks(1234567890123456789));\nconsole.log(checks(12345678901234567890));\nconsole.log(checks(123456789012345678901));\nconsole.log(checks(1234567890123456789012));\nconsole.log(checks(12345678901234567890123));\nconsole.log(checks(123456789012345678901234));\nconsole.log(checks(1234567890123456789012345));\nconsole.log(checks(12345678901234567890123456));\nconsole.log(checks(123456789012345678901234567));\nconsole.log(checks(1234567890123456789012345678));\nconsole.log(checks(12345678901234567890123456789));\nconsole.log(checks(123456789012345678901234567890));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124007,
      "stdout": "../../../../tmp/tmplfz5gxam.ts(41,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let r = 0;\n    let temp = n;\n    while (temp > 0) {\n        r = r * 10 + temp % 10;\n        temp = Math.floor(temp / 10);\n    }\n    return n == r + r - 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124007,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let reverse = 0;\n    let temp = n;\n    while (temp > 0) {\n        reverse = reverse * 10 + temp % 10;\n        temp = Math.floor(temp / 10);\n    }\n    return n === reverse + reverse - 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let rev = 0;\n    let num = n;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n == rev + 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666123994,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp97vz8elz.js:66:12)\n    at Object.<anonymous> (/tmp/tmp97vz8elz.js:68:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let r = 0;\n    let t = n;\n    while (t > 0) {\n        r = r * 10 + t % 10;\n        t = Math.floor(t / 10);\n    }\n    return n == (r - 1) / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124007,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpx5wbgg_r.js:16:12)\n    at Object.<anonymous> (/tmp/tmpx5wbgg_r.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let reverse = 0;\n    let num = n;\n    while (num > 0) {\n        reverse = reverse * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n == reverse - 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124008,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpd5b_eaxs.js:66:12)\n    at Object.<anonymous> (/tmp/tmpd5b_eaxs.js:68:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let r = 0;\n    let num = n;\n    while (num > 0) {\n        r = r * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return r == n - 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124007,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpreh16riu.js:16:12)\n    at Object.<anonymous> (/tmp/tmpreh16riu.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let reverse = 0;\n    let temp = n;\n    while (temp != 0) {\n        reverse = reverse * 10 + temp % 10;\n        temp = Math.floor(temp / 10);\n    }\n    if (n - reverse == 1) {\n        return true;\n    }\n    return false;\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124007,
      "stdout": "false\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpog5y2xs1.js:23:12)\n    at Object.<anonymous> (/tmp/tmpog5y2xs1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let r = 0;\n    let t = n;\n    while (t > 0) {\n        r = r * 10 + t % 10;\n        t = Math.floor(t / 10);\n    }\n    return n == r * 2 - 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1665510558,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let reverse = 0;\n    let num = n;\n    while (num > 0) {\n        reverse = reverse * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n === reverse * 2 - 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124007,
      "stdout": "../../../../tmp/tmpzae_l96u.ts(61,1): error TS1005: ',' expected.\n../../../../tmp/tmpzae_l96u.ts(61,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let reverse = 0;\n    let num = n;\n    while (num > 0) {\n        reverse = reverse * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return n === reverse + reverse - 1;\n}\n\nconsole.log(checks(12));\nconsole.log(checks(1221));\nconsole.log(checks(123));\nconsole.log(checks(1234));\nconsole.log(checks(12345));\nconsole.log(checks(123456));\nconsole.log(checks(1234567));\nconsole.log(checks(12345678));\nconsole.log(checks(123456789));\nconsole.log(checks(1234567890));\nconsole.log(checks(12345678901));\nconsole.log(checks(123456789012));\nconsole.log(checks(1234567890123));\nconsole.log(checks(12345678901234));\nconsole.log(checks(123456789012345));\nconsole.log(checks(1234567890123456));\nconsole.log(checks(12345678901234567));\nconsole.log(checks(123456789012345678));\nconsole.log(checks(1234567890123456789));\nconsole.log(checks(12345678901234567890));\nconsole.log(checks(123456789012345678901));\nconsole.log(checks(1234567890123456789012));\nconsole.log(checks(12345678901234567890123));\nconsole.log(checks(123456789012345678901234));\nconsole.log(checks(1234567890123456789012345));\nconsole.log(checks(12345678901234567890123456));\nconsole.log(checks(123456789012345678901234567));\nconsole.log(checks(1234567890123456789012345678));\nconsole.log(checks(12345678901234567890123456789));\nconsole.log(checks(1234567890123456789\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124007,
      "stdout": "../../../../tmp/tmpv62r0otz.ts(42,1): error TS1005: ',' expected.\n../../../../tmp/tmpv62r0otz.ts(42,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num: number = n;\n    let rev: number = 0;\n    while (num > 0) {\n        rev = rev * 10 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return (n == rev + 1);\n}\nconsole.log(checks(12));\nconsole.log(checks(121));\nconsole.log(checks(123));\nconsole.log(checks(1234));\nconsole.log(checks(12345));\nconsole.log(checks(123456));\nconsole.log(checks(1234567));\nconsole.log(checks(12345678));\nconsole.log(checks(123456789));\nconsole.log(checks(1234567890));\nconsole.log(checks(12345678901));\nconsole.log(checks(123456789012));\nconsole.log(checks(1234567890123));\nconsole.log(checks(12345678901234));\nconsole.log(checks(123456789012345));\nconsole.log(checks(1234567890123456));\nconsole.log(checks(12345678901234567));\nconsole.log(checks(123456789012345678));\nconsole.log(checks(1234567890123456789));\nconsole.log(checks(12345678901234567890));\nconsole.log(checks(123456789012345678901));\nconsole.log(checks(1234567890123456789012));\nconsole.log(checks(12345678901234567890123));\nconsole.log(checks(123456789012345678901234));\nconsole.log(checks(1234567890123456789012345));\nconsole.log(checks(12345678901234567890123456));\nconsole.log(checks(123456789012345678901234567));\nconsole.log(checks(1234567890123456789012345678));\nconsole.log(checks(12345678901234567890123456789));\nconsole.log(checks(12345678901234567\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124007,
      "stdout": "../../../../tmp/tmpvg5kgle1.ts(41,1): error TS1005: ',' expected.\n../../../../tmp/tmpvg5kgle1.ts(41,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n.toString();\n    let rev = num.split(\"\").reverse().join(\"\");\n    return n == 2 * parseInt(rev) - 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61));\nconsole.log(checks(62));\nconsole.log(checks(63));\nconsole.log(checks(64));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124008,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n.toString();\n    let rev = num.split(\"\").reverse().join(\"\");\n    return n == (2 * Number(rev) - 1);\n}\nconsole.log(checks(12));\nconsole.log(checks(13));\nconsole.log(checks(14));\nconsole.log(checks(15));\nconsole.log(checks(16));\nconsole.log(checks(17));\nconsole.log(checks(18));\nconsole.log(checks(19));\nconsole.log(checks(20));\nconsole.log(checks(21));\nconsole.log(checks(22));\nconsole.log(checks(23));\nconsole.log(checks(24));\nconsole.log(checks(25));\nconsole.log(checks(26));\nconsole.log(checks(27));\nconsole.log(checks(28));\nconsole.log(checks(29));\nconsole.log(checks(30));\nconsole.log(checks(31));\nconsole.log(checks(32));\nconsole.log(checks(33));\nconsole.log(checks(34));\nconsole.log(checks(35));\nconsole.log(checks(36));\nconsole.log(checks(37));\nconsole.log(checks(38));\nconsole.log(checks(39));\nconsole.log(checks(40));\nconsole.log(checks(41));\nconsole.log(checks(42));\nconsole.log(checks(43));\nconsole.log(checks(44));\nconsole.log(checks(45));\nconsole.log(checks(46));\nconsole.log(checks(47));\nconsole.log(checks(48));\nconsole.log(checks(49));\nconsole.log(checks(50));\nconsole.log(checks(51));\nconsole.log(checks(52));\nconsole.log(checks(53));\nconsole.log(checks(54));\nconsole.log(checks(55));\nconsole.log(checks(56));\nconsole.log(checks(57));\nconsole.log(checks(58));\nconsole.log(checks(59));\nconsole.log(checks(60));\nconsole.log(checks(61));\nconsole.log(checks(62));\nconsole.log(checks(63));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124008,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let num = n.toString();\n    let rev = num.split(\"\").reverse().join(\"\");\n    if (n == (2 * parseInt(rev) - 1)) {\n        return true;\n    }\n    return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let reverse = 0;\n    let temp = n;\n    while (temp > 0) {\n        reverse = reverse * 10 + temp % 10;\n        temp = Math.floor(temp / 10);\n    }\n    return n == reverse - 1;\n}\nconsole.log(checks(12));\nconsole.log(checks(12));\nconsole.log(checks(12));\nconsole.log(checks(12));\nconsole.log(checks(12));\nconsole.log(checks(12));\nconsole.log(checks(12));\nconsole.log(checks(12));\nconsole.log(checks(12));\nconsole.log(checks(12));\nconsole.log(checks(12));\nconsole.log(checks(12));\nconsole.log(checks(12));\nconsole.log(checks(12));\nconsole.log(checks(12));\nconsole.log(checks(12));\nconsole.log(checks(12));\nconsole.log(checks(12));\nconsole.log(checks(12));\nconsole.log(checks(12));\nconsole.log(checks(12));\nconsole.log(checks(12));\nconsole.log(checks(12));\nconsole.log(checks(12));\nconsole.log(checks(12));\nconsole.log(checks(12));\nconsole.log(checks(12));\nconsole.log(checks(12));\nconsole.log(checks(12));\nconsole.log(checks(12));\nconsole.log(checks(12));\nconsole.log(checks(12));\nconsole.log(checks(12));\nconsole.log(checks(12));\nconsole.log(checks(12));\nconsole.log(checks(12));\nconsole.log(checks(12));\nconsole.log(checks(12));\nconsole.log(checks(12));\nconsole.log(checks(12));\nconsole.log(checks(12));\nconsole.log(checks(12));\nconsole.log(checks(12));\nconsole.log(checks(12));\nconsole.log(checks(12));\nconsole.log(checks(12));\nconsole.log(checks(12));\nconsole.log(checks(12));\nconsole.log(checks(12));\nconsole.log(checks(12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124008,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpkr1vv5t9.js:66:12)\n    at Object.<anonymous> (/tmp/tmpkr1vv5t9.js:68:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check if a given number is one less than twice its reverse.\nfunction checks(n: number): boolean {\n    let reverse: number = 0;\n    let temp: number = n;\n    while (temp > 0) {\n        reverse = reverse * 10 + temp % 10;\n        temp = Math.floor(temp / 10);\n    }\n    return (n - reverse == reverse - n);\n}\nconsole.log(checks(12));\nconsole.log(checks(123));\nconsole.log(checks(1234));\nconsole.log(checks(12345));\nconsole.log(checks(123456));\nconsole.log(checks(1234567));\nconsole.log(checks(12345678));\nconsole.log(checks(123456789));\nconsole.log(checks(1234567890));\nconsole.log(checks(12345678901));\nconsole.log(checks(123456789012));\nconsole.log(checks(1234567890123));\nconsole.log(checks(12345678901234));\nconsole.log(checks(123456789012345));\nconsole.log(checks(1234567890123456));\nconsole.log(checks(12345678901234567));\nconsole.log(checks(123456789012345678));\nconsole.log(checks(1234567890123456789));\nconsole.log(checks(12345678901234567890));\nconsole.log(checks(123456789012345678901));\nconsole.log(checks(1234567890123456789012));\nconsole.log(checks(12345678901234567890123));\nconsole.log(checks(123456789012345678901234));\nconsole.log(checks(1234567890123456789012345));\nconsole.log(checks(12345678901234567890123456));\nconsole.log(checks(123456789012345678901234567));\nconsole.log(checks(1234567890123456789012345678));\nconsole.log(checks(12345678901234567890123456789));\nconsole.log(checks(123456789012345678901234567890));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = checks;\n  assert.deepEqual(candidate(70),false);\n  assert.deepEqual(candidate(23),false);\n  assert.deepEqual(candidate(73),true);\n}\n\ntest();",
      "timestamp": 1666124008,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpcakc1ani.js:45:12)\n    at Object.<anonymous> (/tmp/tmpcakc1ani.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    }
  ]
}
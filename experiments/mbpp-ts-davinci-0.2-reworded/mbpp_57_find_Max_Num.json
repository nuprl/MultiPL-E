{
  "name": "mbpp_57_find_Max_Num",
  "language": "ts",
  "prompt": "//Write a tsthon function to find the largest number that can be formed with the given array of digits.\nfunction find_Max_Num(arr: number[]): number {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_57_find_Max_Num.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Max_Num;\n  assert.deepEqual(candidate([1, 2, 3]),321);\n  assert.deepEqual(candidate([4, 5, 6, 1]),6541);\n  assert.deepEqual(candidate([1, 2, 3, 9]),9321);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let maxNum: number = 0;\n    let len: number = arr.length;\n    for (let i: number = 0; i < len; i++) {\n        for (let j: number = i + 1; j < len; j++) {\n            if (arr[i] < arr[j]) {\n                let temp: number = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    for (let i: number = 0; i < len; i++) {\n        maxNum = maxNum * 10 + arr[i];\n    }\n    return maxNum;\n}\nconsole.log(find_Max_Num([1, 34, 3, 98, 9, 76, 45, 4]));\n",
    "    let maxNum: number = 0;\n    let len: number = arr.length;\n    for (let i: number = 0; i < len; i++) {\n        for (let j: number = i + 1; j < len; j++) {\n            if (arr[i] < arr[j]) {\n                let temp: number = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    for (let i: number = 0; i < len; i++) {\n        maxNum = maxNum * 10 + arr[i];\n    }\n    return maxNum;\n}\n\nconsole.log(find_Max_Num([1, 34, 3, 98, 9, 76, 45, 4]));\n",
    "    let max: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let num: number = 0;\n        for (let j = i; j < arr.length; j++) {\n            num = num * 10 + arr[j];\n            if (num > max) {\n                max = num;\n            }\n        }\n    }\n    return max;\n}\n\nconsole.log(find_Max_Num([1, 2, 3, 4, 5]));\nconsole.log(find_Max_Num([5, 4, 3, 2, 1]));\nconsole.log(find_Max_Num([5, 4, 3, 2, 1, 0]));\nconsole.log(find_Max_Num([5, 4, 3, 2, 1, 0, 9]));\nconsole.log(find_Max_Num([5, 4, 3, 2, 1, 0, 9, 8]));\nconsole.log(find_Max_Num([5, 4, 3, 2, 1, 0, 9, 8, 7]));\nconsole.log(find_Max_Num([5, 4, 3, 2, 1, 0, 9, 8, 7, 6]));\nconsole.log(find_Max_Num([5, 4, 3, 2, 1, 0, 9, 8, 7, 6, 5]));\nconsole.log(find_Max_Num([5, 4, 3, 2, 1, 0, 9, 8, 7, 6, 5, 4]));\nconsole.log(find_Max_Num([5, 4, 3, 2, 1, 0, 9, 8, 7, 6, 5, 4, 3]));\nconsole.log(find_Max_Num([5, 4, 3, 2, 1, 0, 9, 8, 7, 6, 5, 4, 3, 2]));\nconsole.log(find_Max_Num([5, 4, 3, 2, 1, 0, 9, 8, 7, 6, 5, 4, 3, 2, 1]));\nconsole.log(find_Max_Num([5, 4, 3, 2, 1, 0, 9, 8, 7, 6, 5, 4, 3, 2, 1",
    "    let maxNum: number = 0;\n    let temp: number = 0;\n    let i: number = 0;\n    let j: number = 0;\n    let k: number = 0;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (arr[i] > arr[j]) {\n                temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    for (k = 0; k < arr.length; k++) {\n        maxNum = maxNum * 10 + arr[k];\n    }\n    return maxNum;\n}\n",
    "    let maxNum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let num = arr[i];\n        let numStr = num.toString();\n        let numArr = numStr.split(\"\");\n        let numArrSort = numArr.sort((a, b) => b - a);\n        let numSort = numArrSort.join(\"\");\n        let numSortNum = parseInt(numSort);\n        if (numSortNum > maxNum) {\n            maxNum = numSortNum;\n        }\n    }\n    return maxNum;\n}\nconsole.log(find_Max_Num([1, 34, 3, 98, 9, 76, 45, 4]));\n",
    "  let maxNum = 0;\n  for (let i = 0; i < arr.length; i++) {\n    let num = arr[i];\n    let numStr = num.toString();\n    let numArr = numStr.split(\"\");\n    let numArrSort = numArr.sort((a, b) => b - a);\n    let numStrSort = numArrSort.join(\"\");\n    let numSort = parseInt(numStrSort);\n    if (numSort > maxNum) {\n      maxNum = numSort;\n    }\n  }\n  return maxNum;\n}\nconsole.log(find_Max_Num([1, 34, 3, 98, 9, 76, 45, 4]));\n",
    "  let maxNum = 0;\n  for (let i = 0; i < arr.length; i++) {\n    let num = 0;\n    for (let j = i; j < arr.length; j++) {\n      num = num * 10 + arr[j];\n      if (num > maxNum) {\n        maxNum = num;\n      }\n    }\n  }\n  return maxNum;\n}\n\nconsole.log(find_Max_Num([1, 2, 3, 4, 5]));\nconsole.log(find_Max_Num([5, 3, 1, 9, 8]));\nconsole.log(find_Max_Num([9, 1, 2, 3, 9]));\nconsole.log(find_Max_Num([1, 9, 8, 7, 6, 5, 4, 3, 2, 1]));\nconsole.log(find_Max_Num([5, 3, 8, 9, 1, 2, 4, 6, 7]));\n",
    "    let maxNum: number = 0;\n    let temp: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] < arr[j]) {\n                temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    for (let i = 0; i < arr.length; i++) {\n        maxNum = maxNum * 10 + arr[i];\n    }\n    return maxNum;\n}\nconsole.log(find_Max_Num([1, 34, 3, 98, 9, 76, 45, 4]));\n",
    "  let maxNum = 0;\n  for (let i = 0; i < arr.length; i++) {\n    let num = arr[i];\n    for (let j = 0; j < arr.length; j++) {\n      if (i !== j) {\n        num = num * 10 + arr[j];\n      }\n    }\n    if (num > maxNum) {\n      maxNum = num;\n    }\n  }\n  return maxNum;\n}\n\nconsole.log(find_Max_Num([1, 2, 3, 4, 5]));\nconsole.log(find_Max_Num([5, 5, 5, 5, 5]));\n",
    "    let maxNum = 0;\n    arr.sort((a, b) => {\n        return b - a;\n    });\n    for (let i = 0; i < arr.length; i++) {\n        maxNum = maxNum * 10 + arr[i];\n    }\n    return maxNum;\n}\nconsole.log(find_Max_Num([1, 2, 3, 4, 5]));\nconsole.log(find_Max_Num([5, 3, 1, 4, 0]));\nconsole.log(find_Max_Num([9, 9, 9, 9, 9]));\n",
    "    let maxNum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let num: number = arr[i];\n        for (let j = 0; j < arr.length; j++) {\n            if (i != j) {\n                num = num * 10 + arr[j];\n            }\n        }\n        if (num > maxNum) {\n            maxNum = num;\n        }\n    }\n    return maxNum;\n}\n\nconsole.log(find_Max_Num([1, 2, 3, 4]));\nconsole.log(find_Max_Num([4, 6, 7, 1]));\nconsole.log(find_Max_Num([1, 2, 3, 4, 5, 6, 7, 8, 9, 0]));\n",
    "    let max = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let num = 0;\n        for (let j = i; j < arr.length; j++) {\n            num = num * 10 + arr[j];\n            if (num > max) {\n                max = num;\n            }\n        }\n    }\n    return max;\n}\n\nconsole.log(find_Max_Num([1, 2, 3, 4, 5]));\nconsole.log(find_Max_Num([5, 4, 3, 2, 1]));\nconsole.log(find_Max_Num([5, 4, 3, 2, 0]));\nconsole.log(find_Max_Num([9, 9, 9, 9, 9]));\nconsole.log(find_Max_Num([9, 9, 9, 9, 0]));\nconsole.log(find_Max_Num([9, 9, 9, 9, 1]));\nconsole.log(find_Max_Num([9, 9, 9, 9, 2]));\nconsole.log(find_Max_Num([9, 9, 9, 9, 3]));\nconsole.log(find_Max_Num([9, 9, 9, 9, 4]));\nconsole.log(find_Max_Num([9, 9, 9, 9, 5]));\nconsole.log(find_Max_Num([9, 9, 9, 9, 6]));\nconsole.log(find_Max_Num([9, 9, 9, 9, 7]));\nconsole.log(find_Max_Num([9, 9, 9, 9, 8]));\nconsole.log(find_Max_Num([9, 9, 9, 9, 9]));\nconsole.log(find_Max_Num([9, 9, 9, 9, 9]));\nconsole.log(find_Max_Num([9, 9, 9, 9, 9]));\nconsole.log(find_Max_Num([9, 9, 9, 9, 9]));\nconsole.log(find_Max_Num([9, 9, 9, 9, 9]));\nconsole.log(find_Max_Num([9, 9, 9, 9, 9]));",
    "    let maxNum = 0;\n    let str = '';\n    for (let i = 0; i < arr.length; i++) {\n        str += arr[i];\n    }\n    let num = parseInt(str);\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] < arr[j]) {\n                let temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    let str1 = '';\n    for (let i = 0; i < arr.length; i++) {\n        str1 += arr[i];\n    }\n    maxNum = parseInt(str1);\n    return maxNum;\n}\n",
    "    let maxNum: number = 0;\n    let arrLength: number = arr.length;\n    for (let i = 0; i < arrLength; i++) {\n        let num: number = 0;\n        for (let j = 0; j < arrLength; j++) {\n            num = num * 10 + arr[j];\n        }\n        if (num > maxNum) {\n            maxNum = num;\n        }\n        let temp: number = arr[0];\n        for (let k = 0; k < arrLength - 1; k++) {\n            arr[k] = arr[k + 1];\n        }\n        arr[arrLength - 1] = temp;\n    }\n    return maxNum;\n}\n\nconsole.log(find_Max_Num([1, 2, 3, 4, 5]));\nconsole.log(find_Max_Num([5, 5, 5, 5, 5]));\n",
    "    let max: number = 0;\n    let max_str: string = \"\";\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] < arr[j]) {\n                let temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    for (let i = 0; i < arr.length; i++) {\n        max_str += arr[i];\n    }\n    max = parseInt(max_str);\n    return max;\n}\n\nconsole.log(find_Max_Num([1, 34, 3, 98, 9, 76, 45, 4]));\n",
    "    let max = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let num = arr[i];\n        let str = num.toString();\n        let strArr = str.split('');\n        let strArrSort = strArr.sort();\n        let strSort = strArrSort.join('');\n        let numSort = parseInt(strSort);\n        if (numSort > max) {\n            max = numSort;\n        }\n    }\n    return max;\n}\n\nconsole.log(find_Max_Num([23, 12, 34, 56, 78]));\nconsole.log(find_Max_Num([23, 12, 34, 56, 78, 99, 100]));\nconsole.log(find_Max_Num([23, 12, 34, 56, 78, 99, 100, 1]));\nconsole.log(find_Max_Num([23, 12, 34, 56, 78, 99, 100, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50]));\n",
    "    let max_num: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let num: number = 0;\n        for (let j = i; j < arr.length; j++) {\n            num = num * 10 + arr[j];\n            if (num > max_num) {\n                max_num = num;\n            }\n        }\n    }\n    return max_num;\n}\n\nconsole.log(find_Max_Num([1, 34, 3, 98, 9, 76, 45, 4]));\n",
    "    let maxNum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let num = arr[i];\n        let numStr = num.toString();\n        let numStrArr = numStr.split('');\n        let numStrArrSort = numStrArr.sort((a, b) => {\n            return b - a;\n        });\n        let numStrSort = numStrArrSort.join('');\n        let numSort = parseInt(numStrSort);\n        if (numSort > maxNum) {\n            maxNum = numSort;\n        }\n    }\n    return maxNum;\n}\n\nconsole.log(find_Max_Num([1, 34, 3, 98, 9, 76, 45, 4]));\n",
    "  let maxNum = 0;\n  for (let i = 0; i < arr.length; i++) {\n    let num = arr[i];\n    for (let j = 0; j < arr.length; j++) {\n      if (i !== j) {\n        num = num * 10 + arr[j];\n      }\n    }\n    if (num > maxNum) {\n      maxNum = num;\n    }\n  }\n  return maxNum;\n}\n\nconsole.log(find_Max_Num([1, 2, 3]));\nconsole.log(find_Max_Num([3, 30, 34, 5, 9]));\nconsole.log(find_Max_Num([1, 2, 3, 4, 5]));\nconsole.log(find_Max_Num([1, 2, 3, 4, 5, 6]));\n",
    "    let maxNum = 0;\n    let maxNumStr = \"\";\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] < arr[j]) {\n                let temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    for (let i = 0; i < arr.length; i++) {\n        maxNumStr += arr[i];\n    }\n    maxNum = parseInt(maxNumStr);\n    return maxNum;\n}\n\nconsole.log(find_Max_Num([1, 34, 3, 98, 9, 76, 45, 4]));\n"
  ]
}
{
  "name": "mbpp_131_reverse_vowels",
  "language": "ts",
  "prompt": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_131_reverse_vowels.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let left: number = 0;\n    let right: number = strArr.length - 1;\n    while (left < right) {\n        while (vowels.indexOf(strArr[left]) === -1 && left < right) {\n            left++;\n        }\n        while (vowels.indexOf(strArr[right]) === -1 && left < right) {\n            right--;\n        }\n        [strArr[left], strArr[right]] = [strArr[right], strArr[left]];\n        left++;\n        right--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) === -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) === -1) {\n            j--;\n        }\n        if (i < j) {\n            let temp: string = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        }\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n  let vowels: string = 'aeiouAEIOU';\n  let strArr: string[] = str1.split('');\n  let i: number = 0;\n  let j: number = strArr.length - 1;\n  while (i < j) {\n    while (i < j && vowels.indexOf(strArr[i]) == -1) {\n      i++;\n    }\n    while (i < j && vowels.indexOf(strArr[j]) == -1) {\n      j--;\n    }\n    [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n    i++;\n    j--;\n  }\n  return strArr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('Hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "Holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('Hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "Holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"w3resource\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "Hollo Werld\nPython\nw3resuorce\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i = 0;\n    let j = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) == -1) {\n            j--;\n        }\n        let temp = strArr[i];\n        strArr[i] = strArr[j];\n        strArr[j] = temp;\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"w3resource\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "Hollo Werld\nPython\nw3resuorce\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"w3resource\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "Hollo Werld\nPython\nw3resuorce\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) == -1) {\n            j--;\n        }\n        let temp: string = strArr[i];\n        strArr[i] = strArr[j];\n        strArr[j] = temp;\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels(\"Hello!\"));\nconsole.log(reverse_vowels(\"Tomatoes\"));\nconsole.log(reverse_vowels(\"Reverse Vowels In A String\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"why try, shy fly?\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "Holle!\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n  let vowels: string = 'aeiouAEIOU';\n  let strArr: string[] = str1.split('');\n  let i: number = 0;\n  let j: number = strArr.length - 1;\n  while (i < j) {\n    while (i < j && vowels.indexOf(strArr[i]) == -1) {\n      i++;\n    }\n    while (i < j && vowels.indexOf(strArr[j]) == -1) {\n      j--;\n    }\n    [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n    i++;\n    j--;\n  }\n  return strArr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i = 0;\n    let j = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) === -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) === -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('codewarriors'));\nconsole.log(reverse_vowels('Hello World'));\nconsole.log(reverse_vowels('Hello Codewarriors'));\nconsole.log(reverse_vowels('Hello Codewarriors'));\nconsole.log(reverse_vowels('Hello Codewarriors'));\nconsole.log(reverse_vowels('Hello Codewarriors'));\nconsole.log(reverse_vowels('Hello Codewarriors'));\nconsole.log(reverse_vowels('Hello Codewarriors'));\nconsole.log(reverse_vowels('Hello Codewarriors'));\nconsole.log(reverse_vowels('Hello Codewarriors'));\nconsole.log(reverse_vowels('Hello Codewarriors'));\nconsole.log(reverse_vowels('Hello Codewarriors'));\nconsole.log(reverse_vowels('Hello Codewarriors'));\nconsole.log(reverse_vowels('Hello Codewarriors'));\nconsole.log(reverse_vowels('Hello Codewarriors'));\nconsole.log(reverse_vowels('Hello Codewarriors'));\nconsole.log(reverse_vowels('Hello Codewarriors'));\nconsole.log(reverse_vowels\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "../../../../tmp/tmp5r04195q.ts(39,1): error TS1005: ',' expected.\n../../../../tmp/tmp5r04195q.ts(39,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split(\"\");\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) == -1) {\n            j--;\n        }\n        let temp: string = strArr[i];\n        strArr[i] = strArr[j];\n        strArr[j] = temp;\n        i++;\n        j--;\n    }\n    return strArr.join(\"\");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123540,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels(\"Hello!\"));\nconsole.log(reverse_vowels(\"Tomatoes\"));\nconsole.log(reverse_vowels(\"Reverse Vowels In A String\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"why try, shy fly?\"));\n\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123540,
      "stdout": "Holle!\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels('Hello World'));\nconsole.log(reverse_vowels('Python'));\nconsole.log(reverse_vowels('aA'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123540,
      "stdout": "Hollo Werld\nPython\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i = 0;\n    let j = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) == -1) {\n            j--;\n        }\n        let temp = strArr[i];\n        strArr[i] = strArr[j];\n        strArr[j] = temp;\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123540,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) == -1) {\n            j--;\n        }\n        let temp: string = strArr[i];\n        strArr[i] = strArr[j];\n        strArr[j] = temp;\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i = 0;\n    let j = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) == -1) {\n            j--;\n        }\n        if (i < j) {\n            let temp = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        }\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('Hello'));\nconsole.log(reverse_vowels('Tomatoes'));\nconsole.log(reverse_vowels('Reverse Vowels In A String'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('why try, shy fly?'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "Holle\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i = 0;\n    let j = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) == -1) {\n            j--;\n        }\n        let temp = strArr[i];\n        strArr[i] = strArr[j];\n        strArr[j] = temp;\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels(\"Hello!\"));\nconsole.log(reverse_vowels(\"Tomatoes\"));\nconsole.log(reverse_vowels(\"Reverse Vowels In A String\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"why try, shy fly?\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123540,
      "stdout": "Holle!\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i = 0;\n    let j = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) === -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) === -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('codewarriors'));\nconsole.log(reverse_vowels('Hello!'));\nconsole.log(reverse_vowels('Tomatoes'));\nconsole.log(reverse_vowels('Reverse Vowels In A String'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('why try, shy fly?'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "codiwarreors\nHolle!\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"e\"));\nconsole.log(reverse_vowels(\"aA\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123540,
      "stdout": "Hollo Werld\nPython\ne\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i = 0;\n    let j = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('codewarriors'));\nconsole.log(reverse_vowels('Hello World'));\nconsole.log(reverse_vowels('United States'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('why try, shy fly?'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123540,
      "stdout": "codiwarreors\nHollo Werld\nenated StitUs\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i = 0;\n    let j = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) === -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) === -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('Hello!'));\nconsole.log(reverse_vowels('Tomatoes'));\nconsole.log(reverse_vowels('Reverse Vowels In A String'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('why try, shy fly?'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123540,
      "stdout": "Holle!\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split(\"\");\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) == -1) {\n            j--;\n        }\n        let temp: string = strArr[i];\n        strArr[i] = strArr[j];\n        strArr[j] = temp;\n        i++;\n        j--;\n    }\n    return strArr.join(\"\");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123540,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i = 0;\n    let j = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) === -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) === -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123540,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) == -1) {\n            j--;\n        }\n        let temp: string = strArr[i];\n        strArr[i] = strArr[j];\n        strArr[j] = temp;\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split(\"\");\n    let vowelArr: string[] = [];\n    let indexArr: number[] = [];\n    for (let i: number = 0; i < strArr.length; i++) {\n        if (vowels.indexOf(strArr[i].toLowerCase()) !== -1) {\n            vowelArr.push(strArr[i]);\n            indexArr.push(i);\n        }\n    }\n    for (let j: number = 0; j < indexArr.length; j++) {\n        strArr[indexArr[j]] = vowelArr.pop();\n    }\n    return strArr.join(\"\");\n}\n\nconsole.log(reverse_vowels(\"Hello!\"));\nconsole.log(reverse_vowels(\"Tomatoes\"));\nconsole.log(reverse_vowels(\"Reverse Vowels In A String\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"why try, shy fly?\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123540,
      "stdout": "Holle!\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i = 0;\n    let j = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) == -1) {\n            j--;\n        }\n        let temp = strArr[i];\n        strArr[i] = strArr[j];\n        strArr[j] = temp;\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123540,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i = 0;\n    let j = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) === -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) === -1) {\n            j--;\n        }\n        let temp = strArr[i];\n        strArr[i] = strArr[j];\n        strArr[j] = temp;\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123540,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123540,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split(\"\");\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) == -1) {\n            j--;\n        }\n        let temp: string = strArr[i];\n        strArr[i] = strArr[j];\n        strArr[j] = temp;\n        i++;\n        j--;\n    }\n    return strArr.join(\"\");\n}\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"aA\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123540,
      "stdout": "Hollo Werld\nPython\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: Set<string> = new Set(['a', 'e', 'i', 'o', 'u']);\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && !vowels.has(strArr[i].toLowerCase())) {\n            i++;\n        }\n        while (i < j && !vowels.has(strArr[j].toLowerCase())) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123540,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) === -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) === -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('codewarriors'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('Tomatoes'));\nconsole.log(reverse_vowels('Reverse Vowels In A String'));\nconsole.log(reverse_vowels('aeiou is a vowel'));\nconsole.log(reverse_vowels('why try, shy fly?'));\nconsole.log(reverse_vowels('aeiou is a vowel'));\nconsole.log(reverse_vowels('why try, shy fly?'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123540,
      "stdout": "codiwarreors\nuoiea\nholle\nTemotaos\nRivArsI Vewols en e Streng\neoaiu os i vewal\nwhy try, shy fly?\neoaiu os i vewal\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"w3resource\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "Hollo Werld\nPython\nw3resuorce\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n  let vowels: string[] = [];\n  let result: string = \"\";\n  let str: string = str1.toLowerCase();\n\n  for (let i: number = 0; i < str.length; i++) {\n    if (str[i] === \"a\" || str[i] === \"e\" || str[i] === \"i\" || str[i] === \"o\" || str[i] === \"u\") {\n      vowels.push(str[i]);\n    }\n  }\n  for (let i: number = 0; i < str.length; i++) {\n    if (str[i] === \"a\" || str[i] === \"e\" || str[i] === \"i\" || str[i] === \"o\" || str[i] === \"u\") {\n      result += vowels.pop();\n    } else {\n      result += str[i];\n    }\n  }\n  return result;\n}\n\nconsole.log(reverse_vowels(\"Hello!\"));\nconsole.log(reverse_vowels(\"Tomatoes\"));\nconsole.log(reverse_vowels(\"Reverse Vowels In A String\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"why try, shy fly?\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123540,
      "stdout": "holle!\ntemotaos\nrivarsi vewols en e streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python'\n\nshould loosely deep-equal\n\n'Python'\n    at test (/tmp/tmpecs2ofjl.js:29:12)\n    at Object.<anonymous> (/tmp/tmpecs2ofjl.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python',\n  expected: 'Python',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"w3resource\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "Hollo Werld\nPython\nw3resuorce\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels(\"Hello!\"));\nconsole.log(reverse_vowels(\"Tomatoes\"));\nconsole.log(reverse_vowels(\"Reverse Vowels In A String\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"why try, shy fly?\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123540,
      "stdout": "Holle!\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n  let vowels: string = 'aeiouAEIOU';\n  let strArr: string[] = str1.split('');\n  let i: number = 0;\n  let j: number = strArr.length - 1;\n  while (i < j) {\n    while (i < j && vowels.indexOf(strArr[i]) == -1) {\n      i++;\n    }\n    while (i < j && vowels.indexOf(strArr[j]) == -1) {\n      j--;\n    }\n    [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n    i++;\n    j--;\n  }\n  return strArr.join('');\n}\n\nconsole.log(reverse_vowels('codewarriors'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123542,
      "stdout": "codiwarreors\nuoiea\nholle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) == -1) {\n            j--;\n        }\n        let temp: string = strArr[i];\n        strArr[i] = strArr[j];\n        strArr[j] = temp;\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels(\"Hello!\"));\nconsole.log(reverse_vowels(\"Tomatoes\"));\nconsole.log(reverse_vowels(\"Reverse Vowels In A String\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"why try, shy fly?\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123540,
      "stdout": "Holle!\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: Set<string> = new Set(['a', 'e', 'i', 'o', 'u']);\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && !vowels.has(strArr[i].toLowerCase())) {\n            i++;\n        }\n        while (i < j && !vowels.has(strArr[j].toLowerCase())) {\n            j--;\n        }\n        if (i < j) {\n            let temp: string = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        }\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('Hello World'));\nconsole.log(reverse_vowels('Hello'));\nconsole.log(reverse_vowels('Tomatoes'));\nconsole.log(reverse_vowels('Reverse Vowels In A String'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('why try, shy fly?'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123542,
      "stdout": "Hollo Werld\nHolle\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        let temp: string = strArr[i];\n        strArr[i] = strArr[j];\n        strArr[j] = temp;\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123542,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    var vowels: string[] = [];\n    var vowels_index: number[] = [];\n    var str_arr: string[] = str1.split(\"\");\n    for (var i = 0; i < str1.length; i++) {\n        if (str1[i] == \"a\" || str1[i] == \"e\" || str1[i] == \"i\" || str1[i] == \"o\" || str1[i] == \"u\") {\n            vowels.push(str1[i]);\n            vowels_index.push(i);\n        }\n    }\n    for (var i = 0; i < vowels_index.length; i++) {\n        str_arr[vowels_index[i]] = vowels.pop();\n    }\n    return str_arr.join(\"\");\n}\n\nconsole.log(reverse_vowels(\"hello\"));\nconsole.log(reverse_vowels(\"leetcode\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123542,
      "stdout": "holle\nleotcede\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'USA'\n\nshould loosely deep-equal\n\n'ASU'\n    at test (/tmp/tmpvu9mq85w.js:23:12)\n    at Object.<anonymous> (/tmp/tmpvu9mq85w.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'USA',\n  expected: 'ASU',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\nconsole.log(reverse_vowels('aA'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123542,
      "stdout": "holle\nleotcede\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: Set<string> = new Set(['a', 'e', 'i', 'o', 'u']);\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && !vowels.has(strArr[i].toLowerCase())) {\n            i++;\n        }\n        while (i < j && !vowels.has(strArr[j].toLowerCase())) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123542,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"w3resource\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "Hollo Werld\nPython\nw3resuorce\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('Hello'));\nconsole.log(reverse_vowels('Tomatoes'));\nconsole.log(reverse_vowels('Reverse Vowels In A String'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('why try, shy fly?'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "Holle\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i = 0;\n    let j = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) === -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) === -1) {\n            j--;\n        }\n        let temp = strArr[i];\n        strArr[i] = strArr[j];\n        strArr[j] = temp;\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123540,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('Hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "Holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"w3resource\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "Hollo Werld\nPython\nw3resuorce\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"w3resource\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "Hollo Werld\nPython\nw3resuorce\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels('javascriptloops'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123542,
      "stdout": "jovoscriptlaaps\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i = 0;\n    let j = strArr.length - 1;\n\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) == -1) {\n            i++;\n        }\n\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) == -1) {\n            j--;\n        }\n\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('Hello World'));\nconsole.log(reverse_vowels('Hello'));\nconsole.log(reverse_vowels('Tomatoes'));\nconsole.log(reverse_vowels('Reverse Vowels In A String'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('why try, shy fly?'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "Hollo Werld\nHolle\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('Hello'));\nconsole.log(reverse_vowels('Tomatoes'));\nconsole.log(reverse_vowels('Reverse Vowels In A String'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('why try, shy fly?'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123542,
      "stdout": "Holle\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    var vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    var str: string[] = str1.split('');\n    var i: number = 0;\n    var j: number = str.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str[i].toLowerCase()) != -1) {\n            if (vowels.indexOf(str[j].toLowerCase()) != -1) {\n                var temp: string = str[i];\n                str[i] = str[j];\n                str[j] = temp;\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str.join('');\n}\nconsole.log(reverse_vowels(\"Hello!\"));\nconsole.log(reverse_vowels(\"Tomatoes\"));\nconsole.log(reverse_vowels(\"Reverse Vowels In A String\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"why try, shy fly?\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "Holle!\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels(\"Hello!\"));\nconsole.log(reverse_vowels(\"Tomatoes\"));\nconsole.log(reverse_vowels(\"Reverse Vowels In A String\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"why try, shy fly?\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123540,
      "stdout": "Holle!\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) == -1) {\n            j--;\n        }\n        let temp: string = strArr[i];\n        strArr[i] = strArr[j];\n        strArr[j] = temp;\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"w3resource\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "Hollo Werld\nPython\nw3resuorce\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) === -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) === -1) {\n            j--;\n        }\n        if (i < j) {\n            let temp: string = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        }\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(strArr[i].toLowerCase()) !== -1 && vowels.indexOf(strArr[j].toLowerCase()) !== -1) {\n            let temp: string = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(strArr[i].toLowerCase()) === -1) {\n            i++;\n        }\n        else if (vowels.indexOf(strArr[j].toLowerCase()) === -1) {\n            j--;\n        }\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels(\"Hello!\"));\nconsole.log(reverse_vowels(\"Tomatoes\"));\nconsole.log(reverse_vowels(\"Reverse Vowels In A String\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"why try, shy fly?\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123542,
      "stdout": "Holle!\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels(\"Hello!\"));\nconsole.log(reverse_vowels(\"Tomatoes\"));\nconsole.log(reverse_vowels(\"Reverse Vowels In A String\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"why try, shy fly?\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123540,
      "stdout": "Holle!\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i = 0;\n    let j = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels(\"Hello!\"));\nconsole.log(reverse_vowels(\"Tomatoes\"));\nconsole.log(reverse_vowels(\"Reverse Vowels In A String\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"why try, shy fly?\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "Holle!\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) == -1) {\n            j--;\n        }\n        let temp: string = strArr[i];\n        strArr[i] = strArr[j];\n        strArr[j] = temp;\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i = 0;\n    let j = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) == -1) {\n            j--;\n        }\n        if (i < j) {\n            let temp = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        }\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels(\"Hello!\"));\nconsole.log(reverse_vowels(\"Tomatoes\"));\nconsole.log(reverse_vowels(\"Reverse Vowels In A String\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"why try, shy fly?\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "Holle!\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"w3resource\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "Hollo Werld\nPython\nw3resuorce\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    var vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    var strArr: string[] = str1.split('');\n    var i: number = 0;\n    var j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) == -1) {\n            j--;\n        }\n        var temp = strArr[i];\n        strArr[i] = strArr[j];\n        strArr[j] = temp;\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"United States\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "Hollo Werld\nPython\nenated StitUs\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) == -1) {\n            j--;\n        }\n        let temp: string = strArr[i];\n        strArr[i] = strArr[j];\n        strArr[j] = temp;\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n  let vowels: string = 'aeiouAEIOU';\n  let strArr: string[] = str1.split('');\n  let i: number = 0;\n  let j: number = strArr.length - 1;\n\n  while (i < j) {\n    while (i < j && !vowels.includes(strArr[i])) {\n      i++;\n    }\n    while (i < j && !vowels.includes(strArr[j])) {\n      j--;\n    }\n    [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n    i++;\n    j--;\n  }\n  return strArr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"w3resource\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "Hollo Werld\nPython\nw3resuorce\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i = 0;\n    let j = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n  let vowels: string = 'aeiouAEIOU';\n  let strArr: string[] = str1.split('');\n  let i: number = 0;\n  let j: number = strArr.length - 1;\n\n  while (i < j) {\n    while (i < j && vowels.indexOf(strArr[i]) == -1) {\n      i++;\n    }\n    while (i < j && vowels.indexOf(strArr[j]) == -1) {\n      j--;\n    }\n    [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n    i++;\n    j--;\n  }\n  return strArr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('Hello'));\nconsole.log(reverse_vowels('Tomatoes'));\nconsole.log(reverse_vowels('Reverse Vowels In A String'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('why try, shy fly?'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123542,
      "stdout": "Holle\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: Set<string> = new Set(['a', 'e', 'i', 'o', 'u']);\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && !vowels.has(strArr[i].toLowerCase())) {\n            i++;\n        }\n        while (i < j && !vowels.has(strArr[j].toLowerCase())) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('codewars'));\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('apple'));\nconsole.log(reverse_vowels('a.b,.'));\nconsole.log(reverse_vowels('a.b,.'));\nconsole.log(reverse_vowels('a.b,.'));\nconsole.log(reverse_vowels('a.b,.'));\nconsole.log(reverse_vowels('a.b,.'));\nconsole.log(reverse_vowels('a.b,.'));\nconsole.log(reverse_vowels('a.b,.'));\nconsole.log(reverse_vowels('a.b,.'));\nconsole.log(reverse_vowels('a.b,.'));\nconsole.log(reverse_vowels('a.b,.'));\nconsole.log(reverse_vowels('a.b,.'));\nconsole.log(reverse_vowels('a.b,.'));\nconsole.log(reverse_vowels('a.b,.'));\nconsole.log(reverse_vowels('a.b,.'));\nconsole.log(reverse_vowels('a.b,.'));\nconsole.log(reverse_v\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123542,
      "stdout": "../../../../tmp/tmpekw7u69q.ts(40,1): error TS1005: ',' expected.\n../../../../tmp/tmpekw7u69q.ts(40,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"w3resource\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "Hollo Werld\nPython\nw3resuorce\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('Hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "Holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('codewarriors'));\nconsole.log(reverse_vowels('Hello World'));\nconsole.log(reverse_vowels('Hello World'));\nconsole.log(reverse_vowels('Hello World'));\nconsole.log(reverse_vowels('Hello World'));\nconsole.log(reverse_vowels('Hello World'));\nconsole.log(reverse_vowels('Hello World'));\nconsole.log(reverse_vowels('Hello World'));\nconsole.log(reverse_vowels('Hello World'));\nconsole.log(reverse_vowels('Hello World'));\nconsole.log(reverse_vowels('Hello World'));\nconsole.log(reverse_vowels('Hello World'));\nconsole.log(reverse_vowels('Hello World'));\nconsole.log(reverse_vowels('Hello World'));\nconsole.log(reverse_vowels('Hello World'));\nconsole.log(reverse_vowels('Hello World'));\nconsole.log(reverse_vowels('Hello World'));\nconsole.log(reverse_vowels('Hello World'));\nconsole.log(reverse_vowels('Hello World'));\nconsole.log(reverse_vowels('Hello World'));\nconsole.log(reverse\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "../../../../tmp/tmpmabc44n5.ts(42,1): error TS1005: ',' expected.\n../../../../tmp/tmpmabc44n5.ts(42,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"w3resource\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "Hollo Werld\nPython\nw3resuorce\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) == -1) {\n            j--;\n        }\n        let temp: string = strArr[i];\n        strArr[i] = strArr[j];\n        strArr[j] = temp;\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels(\"Hello!\"));\nconsole.log(reverse_vowels(\"Tomatoes\"));\nconsole.log(reverse_vowels(\"Reverse Vowels In A String\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"why try, shy fly?\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "Holle!\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"e\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123545,
      "stdout": "Hollo Werld\nPython\ne\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"e\"));\nconsole.log(reverse_vowels(\"aA\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123540,
      "stdout": "Hollo Werld\nPython\ne\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels('Hello'));\nconsole.log(reverse_vowels('Tomatoes'));\nconsole.log(reverse_vowels('Reverse Vowels In A String'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('why try, shy fly?'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123545,
      "stdout": "Holle\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n  let vowels: string = 'aeiouAEIOU';\n  let strArr: string[] = str1.split('');\n  let i: number = 0;\n  let j: number = strArr.length - 1;\n  while (i < j) {\n    while (i < j && vowels.indexOf(strArr[i]) == -1) {\n      i++;\n    }\n    while (i < j && vowels.indexOf(strArr[j]) == -1) {\n      j--;\n    }\n    [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n    i++;\n    j--;\n  }\n  return strArr.join('');\n}\n\nconsole.log(reverse_vowels('codewarriors'));\nconsole.log(reverse_vowels('Hello!'));\nconsole.log(reverse_vowels('Tomatoes'));\nconsole.log(reverse_vowels('Reverse Vowels In A String'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('why try, shy fly?'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123545,
      "stdout": "codiwarreors\nHolle!\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i = 0;\n    let j = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) == -1) {\n            j--;\n        }\n        let temp = strArr[i];\n        strArr[i] = strArr[j];\n        strArr[j] = temp;\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels(\"hello\"));\nconsole.log(reverse_vowels(\"leetcode\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123545,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && !vowels.includes(strArr[i])) {\n            i++;\n        }\n        while (i < j && !vowels.includes(strArr[j])) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\nconsole.log(reverse_vowels('aA'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123545,
      "stdout": "holle\nleotcede\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels(\"Hello!\"));\nconsole.log(reverse_vowels(\"Tomatoes\"));\nconsole.log(reverse_vowels(\"Reverse Vowels In A String\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"why try, shy fly?\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "Holle!\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\nconsole.log(reverse_vowels('aA'));\nconsole.log(reverse_vowels('a'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('aeiouAEIOU'));\nconsole.log(reverse_vowels('aeiouAEIOUaeiou'));\nconsole.log(reverse_vowels('aeiouAEIOUaeiouaeiouAEIOU'));\nconsole.log(reverse_vowels('aeiouAEIOUaeiouaeiouAEIOUaeiou'));\nconsole.log(reverse_vowels('aeiouAEIOUaeiouaeiouAEIOUaeiouaeiou'));\nconsole.log(reverse_vowels('aeiouAEIOUaeiouaeiouAEIOUaeiouaeiouAEIOU'));\nconsole.log(reverse_vowels('aeiouAEIOUaeiouaeiouAEIOUaeiouaeiouAEIOUaeiou'));\nconsole.log(reverse_vowels('aeiouAEIOUaeiouaeiouAEIOUaeiouaeiouAEIOUaeiouae\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123545,
      "stdout": "../../../../tmp/tmph88wctof.ts(33,76): error TS1002: Unterminated string literal.\n../../../../tmp/tmph88wctof.ts(34,1): error TS1005: ',' expected.\n../../../../tmp/tmph88wctof.ts(34,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        let temp: string = strArr[i];\n        strArr[i] = strArr[j];\n        strArr[j] = temp;\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) == -1) {\n            j--;\n        }\n        let temp: string = strArr[i];\n        strArr[i] = strArr[j];\n        strArr[j] = temp;\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels(\"Hello!\"));\nconsole.log(reverse_vowels(\"Tomatoes\"));\nconsole.log(reverse_vowels(\"Reverse Vowels In A String\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"why try, shy fly?\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "Holle!\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n  let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n  let strArr: string[] = str1.split('');\n  let i = 0;\n  let j = strArr.length - 1;\n\n  while (i < j) {\n    while (i < j && vowels.indexOf(strArr[i].toLowerCase()) == -1) {\n      i++;\n    }\n\n    while (i < j && vowels.indexOf(strArr[j].toLowerCase()) == -1) {\n      j--;\n    }\n\n    [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n    i++;\n    j--;\n  }\n\n  return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i = 0;\n    let j = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) == -1) {\n            j--;\n        }\n        let temp = strArr[i];\n        strArr[i] = strArr[j];\n        strArr[j] = temp;\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123540,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"w3resource\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "Hollo Werld\nPython\nw3resuorce\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"aA\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123545,
      "stdout": "Hollo Werld\nPython\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels('Hello'));\nconsole.log(reverse_vowels('Tomatoes'));\nconsole.log(reverse_vowels('Reverse Vowels In A String'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('why try, shy fly?'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123545,
      "stdout": "Holle\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i = 0;\n    let j = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) === -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) === -1) {\n            j--;\n        }\n        let temp = strArr[i];\n        strArr[i] = strArr[j];\n        strArr[j] = temp;\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\nconsole.log(reverse_vowels('aA'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123545,
      "stdout": "holle\nleotcede\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) == -1) {\n            j--;\n        }\n        let temp: string = strArr[i];\n        strArr[i] = strArr[j];\n        strArr[j] = temp;\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels(\"Hello!\"));\nconsole.log(reverse_vowels(\"Tomatoes\"));\nconsole.log(reverse_vowels(\"Reverse Vowels In A String\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"why try, shy fly?\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "Holle!\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"w3resource\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "Hollo Werld\nPython\nw3resuorce\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    const vowels = 'aeiouAEIOU';\n    let strArr = str1.split('');\n    let i = 0;\n    let j = strArr.length - 1;\n    while (i < j) {\n        while (i < j && !vowels.includes(strArr[i])) {\n            i++;\n        }\n        while (i < j && !vowels.includes(strArr[j])) {\n            j--;\n        }\n        if (i < j) {\n            [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n            i++;\n            j--;\n        }\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n\n    while (i < j) {\n\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) == -1) {\n            i++;\n        }\n\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) == -1) {\n            j--;\n        }\n\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\nconsole.log(reverse_vowels('aA'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123545,
      "stdout": "holle\nleotcede\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels(\"Hello!\"));\nconsole.log(reverse_vowels(\"Tomatoes\"));\nconsole.log(reverse_vowels(\"Reverse Vowels In A String\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"why try, shy fly?\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123540,
      "stdout": "Holle!\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) === -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) === -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123545,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        let temp: string = strArr[i];\n        strArr[i] = strArr[j];\n        strArr[j] = temp;\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('Hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123545,
      "stdout": "Holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) === -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) === -1) {\n            j--;\n        }\n        if (i < j) {\n            let temp: string = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        }\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123545,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n\n    while (i < j) {\n\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) == -1) {\n            i++;\n        }\n\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) == -1) {\n            j--;\n        }\n\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('codewarriors'));\nconsole.log(reverse_vowels('Hello!'));\nconsole.log(reverse_vowels('Tomatoes'));\nconsole.log(reverse_vowels('Reverse Vowels In A String'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('why try, shy fly?'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123545,
      "stdout": "codiwarreors\nHolle!\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = [];\n    let result: string = '';\n    let str: string = str1.toLowerCase();\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] == 'a' || str[i] == 'e' || str[i] == 'i' || str[i] == 'o' || str[i] == 'u') {\n            vowels.push(str[i]);\n        }\n    }\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] == 'a' || str[i] == 'e' || str[i] == 'i' || str[i] == 'o' || str[i] == 'u') {\n            result += vowels.pop();\n        } else {\n            result += str[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(reverse_vowels('Hello'));\nconsole.log(reverse_vowels('Tomatoes'));\nconsole.log(reverse_vowels('Reverse Vowels In A String'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('why try, shy fly?'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123545,
      "stdout": "holle\ntemotaos\nrivarsi vewols en e streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'python'\n\nshould loosely deep-equal\n\n'Python'\n    at test (/tmp/tmpjfpxhztq.js:29:12)\n    at Object.<anonymous> (/tmp/tmpjfpxhztq.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'python',\n  expected: 'Python',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\nconsole.log(reverse_vowels('aA'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123545,
      "stdout": "holle\nleotcede\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels('Hello'));\nconsole.log(reverse_vowels('Tomatoes'));\nconsole.log(reverse_vowels('Reverse Vowels In A String'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('why try, shy fly?'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123545,
      "stdout": "Holle\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels(\"leetcode\"));\nconsole.log(reverse_vowels(\"hello\"));\nconsole.log(reverse_vowels(\"aA\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123545,
      "stdout": "leotcede\nholle\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split(\"\");\n    let vowelArr: string[] = [];\n    let vowelIndices: number[] = [];\n    for (let i: number = 0; i < strArr.length; i++) {\n        if (vowels.includes(strArr[i].toLowerCase())) {\n            vowelArr.push(strArr[i]);\n            vowelIndices.push(i);\n        }\n    }\n    vowelArr.reverse();\n    for (let i: number = 0; i < vowelIndices.length; i++) {\n        strArr[vowelIndices[i]] = vowelArr[i];\n    }\n    return strArr.join(\"\");\n}\n\nconsole.log(reverse_vowels(\"Hello!\"));\nconsole.log(reverse_vowels(\"Tomatoes\"));\nconsole.log(reverse_vowels(\"Reverse Vowels In A String\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"why try, shy fly?\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "Holle!\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(strArr[i].toLowerCase()) === -1) {\n            i++;\n            continue;\n        }\n        if (vowels.indexOf(strArr[j].toLowerCase()) === -1) {\n            j--;\n            continue;\n        }\n        let temp: string = strArr[i];\n        strArr[i] = strArr[j];\n        strArr[j] = temp;\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels(\"Hello!\"));\nconsole.log(reverse_vowels(\"Tomatoes\"));\nconsole.log(reverse_vowels(\"Reverse Vowels In A String\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"why try, shy fly?\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "Holle!\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i = 0;\n    let j = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels(\"Hello!\"));\nconsole.log(reverse_vowels(\"Tomatoes\"));\nconsole.log(reverse_vowels(\"Reverse Vowels In A String\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"why try, shy fly?\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "Holle!\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        let temp: string = strArr[i];\n        strArr[i] = strArr[j];\n        strArr[j] = temp;\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123545,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i = 0;\n    let j = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) == -1) {\n            j--;\n        }\n        if (i < j) {\n            let temp = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        }\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"aA\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123547,
      "stdout": "Hollo Werld\nPython\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split(\"\");\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(strArr[i].toLowerCase()) !== -1) {\n            if (vowels.indexOf(strArr[j].toLowerCase()) !== -1) {\n                let temp: string = strArr[i];\n                strArr[i] = strArr[j];\n                strArr[j] = temp;\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return strArr.join(\"\");\n}\n\nconsole.log(reverse_vowels(\"Hello!\"));\nconsole.log(reverse_vowels(\"Tomatoes\"));\nconsole.log(reverse_vowels(\"Reverse Vowels In A String\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"why try, shy fly?\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123547,
      "stdout": "Holle!\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels('codewarriors'));\nconsole.log(reverse_vowels('Hello!'));\nconsole.log(reverse_vowels('Tomatoes'));\nconsole.log(reverse_vowels('Reverse Vowels In A String'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('why try, shy fly?'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123547,
      "stdout": "codiwarreors\nHolle!\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\nconsole.log(reverse_vowels('aA'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123545,
      "stdout": "holle\nleotcede\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'];\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(strArr[i]) !== -1 && vowels.indexOf(strArr[j]) !== -1) {\n            let temp: string = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(strArr[i]) !== -1) {\n            j--;\n        }\n        else if (vowels.indexOf(strArr[j]) !== -1) {\n            i++;\n        }\n        else {\n            i++;\n            j--;\n        }\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"aA\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123545,
      "stdout": "Hollo Werld\nPython\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels('javascriptloops'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123542,
      "stdout": "jovoscriptlaaps\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i = 0;\n    let j = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) == -1) {\n            j--;\n        }\n        let temp = strArr[i];\n        strArr[i] = strArr[j];\n        strArr[j] = temp;\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"aA\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123547,
      "stdout": "Hollo Werld\nPython\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('Hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "Holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i].toLowerCase()) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j].toLowerCase()) == -1) {\n            j--;\n        }\n        let temp: string = strArr[i];\n        strArr[i] = strArr[j];\n        strArr[j] = temp;\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123539,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels(\"Hello!\"));\nconsole.log(reverse_vowels(\"Tomatoes\"));\nconsole.log(reverse_vowels(\"Reverse Vowels In A String\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"why try, shy fly?\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123540,
      "stdout": "Holle!\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels(\"Hello!\"));\nconsole.log(reverse_vowels(\"Tomatoes\"));\nconsole.log(reverse_vowels(\"Reverse Vowels In A String\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"why try, shy fly?\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123540,
      "stdout": "Holle!\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_17_square_perimeter",
  "language": "ts",
  "prompt": "//Write a function that returns the perimeter of a square given its side length as input.\nfunction square_perimeter(a: number): number {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_17_square_perimeter.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_perimeter;\n  assert.deepEqual(candidate(10),40);\n  assert.deepEqual(candidate(5),20);\n  assert.deepEqual(candidate(4),16);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    return 4 * a;\n}\n",
    "    return a * 4;\n}\n",
    "    return 4 * a;\n}\n",
    "  return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "  return a * 4;\n}\n",
    "    return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "  return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "    return a * 4;\n}\n",
    "    return a * 4;\n}\n",
    "    return 4 * a;\n}\n",
    "    return 4 * a;\n}\nconsole.log(square_perimeter(5));\n",
    "    return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "    return a * 4;\n}\n",
    "    return a * 4;\n}\n",
    "    return a * 4;\n}\n",
    "    return a * 4;\n}\n",
    "    return a * 4;\n}\n",
    "    return 4 * a;\n}\nconsole.log(square_perimeter(5));\n",
    "    return a * 4;\n}\n",
    "    return 4 * a;\n}\n",
    "    return a * 4;\n}\n",
    "    return 4 * a;\n}\n",
    "    return a * 4;\n}\n",
    "    return 4 * a;\n}\n",
    "    return a * 4;\n}\n",
    "  return a * 4;\n}\n",
    "  return a * 4;\n}\n",
    "    return a * 4;\n}\n",
    "    return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "    return a * 4;\n}\n",
    "    return 4 * a;\n}\n",
    "    return a * 4;\n}\n",
    "    return a * 4;\n}\n",
    "    return 4 * a;\n}\nconsole.log(square_perimeter(4));\n",
    "    return 4 * a;\n}\n",
    "    return a * 4;\n}\n",
    "    return 4 * a;\n}\n",
    "    return a * 4;\n}\n",
    "    return 4 * a;\n}\n",
    "    return a * 4;\n}\n",
    "    return 4 * a;\n}\n",
    "    return a * 4;\n}\n",
    "    return a * 4;\n}\n",
    "  return a * 4;\n}\n",
    "    return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "  return a * 4;\n}\n",
    "    return 4 * a;\n}\n",
    "    return a * 4;\n}\n",
    "    return 4 * a;\n}\n",
    "  return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "    return a * 4;\n}\n",
    "    return a * 4;\n}\n\nconsole.log(square_perimeter(4));\n",
    "    return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "  return a * 4;\n}\n",
    "    return a * 4;\n}\n",
    "  return 4 * a;\n}\n",
    "    return a * 4;\n}\n",
    "    return a * 4;\n}\n",
    "    return a * 4;\n}\nconsole.log(square_perimeter(5));\n",
    "    return a * 4;\n}\n",
    "    return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "    return a * 4;\n}\n",
    "    return a * 4;\n}\n",
    "    return a * 4;\n}\n",
    "    return 4 * a;\n}\n",
    "    return a * 4;\n}\n",
    "    return 4 * a;\n}\n",
    "    return a * 4;\n}\n",
    "    return a * 4;\n}\n",
    "    return a * 4;\n}\n",
    "  return 4 * a;\n}\n",
    "    return a * 4;\n}\n",
    "    return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "  return a * 4;\n}\n",
    "    return a * 4;\n}\n",
    "    return 4 * a;\n}\n",
    "  return a * 4;\n}\n",
    "  return a * 4;\n}\n",
    "    return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "    return a * 4;\n}\n",
    "    return 4 * a;\n}\n",
    "  return 4 * a;\n}\n",
    "    return a * 4;\n}\n",
    "    return 4 * a;\n}\n",
    "    return a * 4;\n}\n",
    "    return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "    return a * 4;\n}\n",
    "    return a * 4;\n}\n",
    "    return a * 4;\n}\n",
    "    return 4 * a;\n}\n",
    "  return a * 4;\n}\n",
    "    return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "    return 4 * a;\n}\nconsole.log(square_perimeter(4));\n",
    "    return a * 4;\n}\n",
    "    return a * 4;\n}\n",
    "    return a * 4;\n}\n",
    "    return 4 * a;\n}\nconsole.log(square_perimeter(4));\n",
    "    return a * 4;\n}\n",
    "  return a * 4;\n}\n",
    "    return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "  return a * 4;\n}\n",
    "    return 4 * a;\n}\n",
    "    return a * 4;\n}\n",
    "    return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "    return a * 4;\n}\n",
    "    return 4 * a;\n}\n",
    "    return a * 4;\n}\n",
    "    return a * 4;\n}\n",
    "    return a * 4;\n}\n",
    "    return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "    return a * 4;\n}\n",
    "  return a * 4;\n}\n",
    "    return 4 * a;\n}\n",
    "    return a * 4;\n}\n",
    "    return 4 * a;\n}\n",
    "  return a * 4;\n}\n",
    "    return a * 4;\n}\n",
    "    return a * 4;\n}\n",
    "    return 4 * a;\n}\n",
    "    return a * 4;\n}\n",
    "    return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "  return a * 4;\n}\n",
    "  return a * 4;\n}\n",
    "    return a * 4;\n}\n",
    "    return a * 4;\n}\n",
    "    return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "    return a * 4;\n}\n",
    "    return a * 4;\n}\n",
    "    return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "  return a * 4;\n}\n",
    "    return 4 * a;\n}\n",
    "    return a * 4;\n}\n",
    "    return a * 4;\n}\n",
    "  return a * 4;\n}\n",
    "    return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "    return a * 4;\n}\n",
    "    return 4 * a;\n}\n",
    "    return a * 4;\n}\n",
    "  return a * 4;\n}\n",
    "    return 4 * a;\n}\n",
    "    return a * 4;\n}\n",
    "    return a * 4;\n}\n",
    "  return a * 4;\n}\n",
    "    return 4 * a;\n}\n",
    "    return 4 * a;\n}\n",
    "    return a * 4;\n}\n",
    "    return a * 4;\n}\n",
    "    return 4 * a;\n}\nconsole.log(square_perimeter(10));\n",
    "    return 4 * a;\n}\n"
  ]
}
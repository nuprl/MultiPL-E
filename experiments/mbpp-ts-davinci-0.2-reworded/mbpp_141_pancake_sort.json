{
  "name": "mbpp_141_pancake_sort",
  "language": "ts",
  "prompt": "//Write a function to sort an array of elements.\nfunction pancake_sort(nums: number[]): number[] {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_141_pancake_sort.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx !== i) {\n            flip(nums, max_idx);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = i;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "  for (let i = nums.length - 1; i >= 0; i--) {\n    let max_index = find_max_index(nums, i);\n    if (max_index !== i) {\n      flip(nums, max_index);\n      flip(nums, i);\n    }\n  }\n  return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    //base case\n    if (nums.length <= 1) {\n        return nums;\n    }\n    //find the max value\n    let max = nums[0];\n    let maxIndex = 0;\n    for (let i = 1; i < nums.length; i++) {\n        if (nums[i] > max) {\n            max = nums[i];\n            maxIndex = i;\n        }\n    }\n    //flip the max value to the front\n    flip(nums, maxIndex);\n    //flip the max value to the back\n    flip(nums, nums.length - 1);\n    //recurse\n    return pancake_sort(nums.slice(0, nums.length - 1));\n}\n",
    "    let n = nums.length;\n    let result = [];\n    for (let i = 0; i < n; i++) {\n        let max = Math.max(...nums);\n        let index = nums.indexOf(max);\n        result.push(index + 1);\n        nums = nums.slice(0, index + 1).reverse().concat(nums.slice(index + 1));\n        result.push(n - i);\n        nums = nums.slice(0, n - i).reverse().concat(nums.slice(n - i));\n    }\n    return result;\n}\n",
    "    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = find_max(nums, i);\n        if (max_idx != i) {\n            flip(nums, max_idx);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = 0; i < nums.length; i++) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    let n = nums.length;\n    while (n > 1) {\n        let max_index = find_max(nums, n);\n        if (max_index != n - 1) {\n            flip(nums, max_index);\n            flip(nums, n - 1);\n        }\n        n--;\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx !== i) {\n            flip(nums, max_idx);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    let result: number[] = [];\n    let max: number = nums.length;\n    for (let i = 0; i < nums.length; i++) {\n        let index: number = nums.indexOf(max);\n        if (index == max - 1) {\n            max--;\n            continue;\n        }\n        if (index != 0) {\n            result.push(index + 1);\n            nums = flip(nums, index);\n        }\n        result.push(max);\n        nums = flip(nums, max - 1);\n        max--;\n    }\n    return result;\n}\n",
    "    for (let i = 0; i < nums.length; i++) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index != i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "  for (let i = nums.length - 1; i > 0; i--) {\n    let max = 0;\n    for (let j = 1; j <= i; j++) {\n      if (nums[j] > nums[max]) {\n        max = j;\n      }\n    }\n    if (max !== i) {\n      flip(nums, max);\n      flip(nums, i);\n    }\n  }\n  return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max = nums[0];\n        let maxIndex = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                maxIndex = j;\n            }\n        }\n        if (maxIndex !== i) {\n            flip(nums, maxIndex);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max = nums[0];\n        let maxIndex = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                maxIndex = j;\n            }\n        }\n        flip(nums, maxIndex);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    let curr_size: number = nums.length;\n    while (curr_size > 1) {\n        let max_idx: number = find_max(nums, curr_size);\n        if (max_idx != curr_size - 1) {\n            flip(nums, max_idx);\n            flip(nums, curr_size - 1);\n        }\n        curr_size--;\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    let i = nums.length;\n    while (i > 1) {\n        let max_index = find_max_index(nums, i);\n        if (max_index !== i - 1) {\n            flip(nums, max_index);\n            flip(nums, i - 1);\n        }\n        i--;\n    }\n    return nums;\n}\n",
    "    let end = nums.length - 1;\n    while (end > 0) {\n        let max_index = 0;\n        for (let i = 0; i <= end; i++) {\n            if (nums[i] > nums[max_index]) {\n                max_index = i;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, end);\n        end--;\n    }\n    return nums;\n}\n",
    "    let result: number[] = [];\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max = nums[0];\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                max_index = j;\n            }\n        }\n        if (max_index != i) {\n            if (max_index != 0) {\n                result.push(max_index + 1);\n                nums = flip(nums, max_index);\n            }\n            result.push(i + 1);\n            nums = flip(nums, i);\n        }\n    }\n    return result;\n}\n",
    "    for (let i = nums.length; i > 1; i--) {\n        let max_index = 0;\n        for (let j = 1; j < i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i - 1);\n    }\n    return nums;\n}\n",
    "    for (let i = 0; i < nums.length; i++) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index != i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = 0; i < nums.length; i++) {\n        let max_index = find_max(nums, nums.length - i);\n        flip(nums, max_index);\n        flip(nums, nums.length - i - 1);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max = nums[0];\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                max_index = j;\n            }\n        }\n        if (max_index != i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    let n = nums.length;\n    for (let i = 0; i < n; i++) {\n        let max = nums[0];\n        let max_index = 0;\n        for (let j = 1; j < n - i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, n - i - 1);\n    }\n    return nums;\n}\n",
    "  for (let i = nums.length - 1; i > 0; i--) {\n    let max_index = find_max_index(nums, i);\n    if (max_index !== i) {\n      flip(nums, max_index);\n      flip(nums, i);\n    }\n  }\n  return nums;\n}\n",
    "    let result: number[] = [];\n    let max: number = nums.length;\n    for (let i = 0; i < nums.length; i++) {\n        let max_index: number = nums.indexOf(Math.max(...nums));\n        if (max_index == max - 1) {\n            result.push(max);\n            max--;\n        } else if (max_index == 0) {\n            result.push(max);\n            result.push(max);\n            max--;\n        } else {\n            result.push(max_index + 1);\n            result.push(max);\n            max--;\n        }\n        nums.splice(0, max_index + 1, ...nums.slice(0, max_index + 1).reverse());\n        nums.splice(0, max, ...nums.slice(0, max).reverse());\n    }\n    return result;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    let result: number[] = [];\n    let max: number = nums.length;\n    while (max > 0) {\n        let index: number = nums.indexOf(max);\n        if (index != max - 1) {\n            if (index != 0) {\n                result.push(index + 1);\n                nums = flip(nums, index + 1);\n            }\n            result.push(max);\n            nums = flip(nums, max);\n        }\n        max--;\n    }\n    return result;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = i;\n        for (let j = 0; j < i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        if (max_index != i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "  for (let i = nums.length - 1; i >= 0; i--) {\n    let max = 0;\n    for (let j = 0; j <= i; j++) {\n      if (nums[j] > nums[max]) {\n        max = j;\n      }\n    }\n    flip(nums, max);\n    flip(nums, i);\n  }\n  return nums;\n}\n",
    "    for (let i = 0; i < nums.length; i++) {\n        let max_index = find_max_index(nums, i);\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "  for (let i = nums.length - 1; i >= 0; i--) {\n    let max_index = i;\n    for (let j = 0; j < i; j++) {\n      if (nums[j] > nums[max_index]) {\n        max_index = j;\n      }\n    }\n    if (max_index !== i) {\n      flip(nums, max_index);\n      flip(nums, i);\n    }\n  }\n  return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index != i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "  for (let i = nums.length; i > 1; i--) {\n    let max_index = 0;\n    for (let j = 1; j < i; j++) {\n      if (nums[j] > nums[max_index]) {\n        max_index = j;\n      }\n    }\n    flip(nums, max_index);\n    flip(nums, i - 1);\n  }\n  return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index != i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    let i = nums.length;\n    while (i > 1) {\n        let max_index = find_max_index(nums, i);\n        if (max_index != i - 1) {\n            flip(nums, max_index);\n            flip(nums, i - 1);\n        }\n        i--;\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    let n = nums.length;\n    while (n > 1) {\n        let max_idx = 0;\n        for (let i = 0; i < n; i++) {\n            if (nums[i] > nums[max_idx]) {\n                max_idx = i;\n            }\n        }\n        flip(nums, max_idx);\n        flip(nums, n - 1);\n        n--;\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = 0; i < nums.length; i++) {\n        let max = Math.max(...nums.slice(0, nums.length - i));\n        let maxIndex = nums.indexOf(max);\n        if (maxIndex !== nums.length - i - 1) {\n            nums = flip(nums, maxIndex);\n            nums = flip(nums, nums.length - i - 1);\n        }\n    }\n    return nums;\n}\n",
    "    let i: number = 0;\n    let j: number = nums.length - 1;\n    while (i < j) {\n        let max: number = Math.max(...nums.slice(i, j + 1));\n        let max_index: number = nums.indexOf(max);\n        if (max_index === j) {\n            i++;\n            continue;\n        }\n        if (max_index !== i) {\n            nums = flip(nums, max_index);\n        }\n        nums = flip(nums, j);\n        i++;\n        j--;\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_idx]) {\n                max_idx = j;\n            }\n        }\n        flip(nums, max_idx);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = i;\n        for (let j = 0; j < i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index != i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    let n = nums.length;\n    while (n > 1) {\n        let max_index = find_max(nums, n);\n        if (max_index != n - 1) {\n            flip(nums, max_index);\n            flip(nums, n - 1);\n        }\n        n--;\n    }\n    return nums;\n}\n",
    "    let i = nums.length;\n    while (i > 1) {\n        let max_index = find_max_index(nums, i);\n        if (max_index != i - 1) {\n            flip(nums, max_index);\n            flip(nums, i - 1);\n        }\n        i--;\n    }\n    return nums;\n}\n",
    "  for (let i = nums.length - 1; i >= 0; i--) {\n    let max_index = find_max_index(nums, i);\n    if (max_index != i) {\n      flip(nums, max_index);\n      flip(nums, i);\n    }\n  }\n  return nums;\n}\n",
    "  for (let i = nums.length - 1; i > 0; i--) {\n    let maxIndex = 0;\n    for (let j = 1; j <= i; j++) {\n      if (nums[j] > nums[maxIndex]) {\n        maxIndex = j;\n      }\n    }\n    flip(nums, maxIndex);\n    flip(nums, i);\n  }\n  return nums;\n}\n",
    "    let n = nums.length;\n    for (let i = n; i > 1; i--) {\n        let max_idx = find_max(nums, i);\n        if (max_idx != i - 1) {\n            flip(nums, max_idx);\n            flip(nums, i - 1);\n        }\n    }\n    return nums;\n}\n",
    "  for (let i = nums.length - 1; i > 0; i--) {\n    let max_index = 0;\n    for (let j = 1; j <= i; j++) {\n      if (nums[j] > nums[max_index]) {\n        max_index = j;\n      }\n    }\n    flip(nums, max_index);\n    flip(nums, i);\n  }\n  return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "  for (let i = nums.length - 1; i > 0; i--) {\n    let max = nums[0];\n    let maxIndex = 0;\n    for (let j = 0; j <= i; j++) {\n      if (nums[j] > max) {\n        max = nums[j];\n        maxIndex = j;\n      }\n    }\n    flip(nums, maxIndex);\n    flip(nums, i);\n  }\n  return nums;\n}\n",
    "    let n = nums.length;\n    for (let i = n; i > 1; i--) {\n        let max_index = find_max(nums, i);\n        if (max_index != i - 1) {\n            flip(nums, max_index);\n            flip(nums, i - 1);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx != i) {\n            flip(nums, max_idx);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max = find_max(nums, i);\n        flip(nums, max);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index != i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length; i > 1; i--) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i - 1);\n    }\n    return nums;\n}\n",
    "  for (let i = nums.length - 1; i >= 0; i--) {\n    let max = nums[0];\n    let maxIndex = 0;\n    for (let j = 0; j <= i; j++) {\n      if (nums[j] > max) {\n        max = nums[j];\n        maxIndex = j;\n      }\n    }\n    if (maxIndex !== i) {\n      flip(nums, maxIndex);\n      flip(nums, i);\n    }\n  }\n  return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx !== i) {\n            flip(nums, max_idx);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "  for (let i = nums.length - 1; i >= 0; i--) {\n    let max_index = 0;\n    for (let j = 0; j <= i; j++) {\n      if (nums[j] > nums[max_index]) {\n        max_index = j;\n      }\n    }\n    flip(nums, max_index);\n    flip(nums, i);\n  }\n  return nums;\n}\n",
    "    let result: number[] = [];\n    let max_index: number = nums.length - 1;\n    let max_value: number = nums[max_index];\n    let max_value_index: number = max_index;\n    let i: number = 0;\n    let j: number = 0;\n    let temp: number = 0;\n\n    for (i = max_index; i > 0; i--) {\n        max_value = nums[i];\n        max_value_index = i;\n        for (j = 0; j < i; j++) {\n            if (nums[j] > max_value) {\n                max_value = nums[j];\n                max_value_index = j;\n            }\n        }\n        if (max_value_index !== i) {\n            result.push(max_value_index + 1);\n            result.push(i + 1);\n            for (j = 0; j < (max_value_index + 1) / 2; j++) {\n                temp = nums[j];\n                nums[j] = nums[max_value_index - j];\n                nums[max_value_index - j] = temp;\n            }\n            for (j = 0; j < (i + 1) / 2; j++) {\n                temp = nums[j];\n                nums[j] = nums[i - j];\n                nums[i - j] = temp;\n            }\n        }\n    }\n    return result;\n}\n",
    "  for (let i = nums.length - 1; i >= 1; i--) {\n    let max_idx = 0;\n    for (let j = 1; j <= i; j++) {\n      if (nums[j] > nums[max_idx]) {\n        max_idx = j;\n      }\n    }\n    flip(nums, max_idx);\n    flip(nums, i);\n  }\n  return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = i;\n        for (let j = 0; j < i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max = nums[0];\n        let maxIndex = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                maxIndex = j;\n            }\n        }\n        if (maxIndex !== i) {\n            flip(nums, maxIndex);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx !== i) {\n            flip(nums, max_idx);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = i;\n        for (let j = 0; j < i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    let result: number[] = [];\n    let max_index: number = nums.length - 1;\n    let max_value: number = nums[max_index];\n    let max_value_index: number = max_index;\n    let temp: number;\n    let i: number;\n    let j: number;\n    for (i = 0; i < nums.length; i++) {\n        for (j = 0; j < max_index; j++) {\n            if (nums[j] > max_value) {\n                max_value = nums[j];\n                max_value_index = j;\n            }\n        }\n        if (max_value_index !== max_index) {\n            if (max_value_index !== 0) {\n                result.push(max_value_index + 1);\n                for (j = 0; j < max_value_index / 2; j++) {\n                    temp = nums[j];\n                    nums[j] = nums[max_value_index - j];\n                    nums[max_value_index - j] = temp;\n                }\n            }\n            result.push(max_index + 1);\n            for (j = 0; j < max_index / 2; j++) {\n                temp = nums[j];\n                nums[j] = nums[max_index - j];\n                nums[max_index - j] = temp;\n            }\n        }\n        max_index--;\n        max_value = nums[max_index];\n        max_value_index = max_index;\n    }\n    return result;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    let sorted = false;\n    while (!sorted) {\n        sorted = true;\n        for (let i = 0; i < nums.length - 1; i++) {\n            if (nums[i] > nums[i + 1]) {\n                sorted = false;\n                nums = flip(nums, i + 1);\n            }\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max = nums[0];\n        let maxIndex = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                maxIndex = j;\n            }\n        }\n        flip(nums, maxIndex);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    let end = nums.length - 1;\n    while (end > 0) {\n        let max = 0;\n        for (let i = 0; i <= end; i++) {\n            if (nums[i] > nums[max]) {\n                max = i;\n            }\n        }\n        if (max !== end) {\n            flip(nums, max);\n            flip(nums, end);\n        }\n        end--;\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max = nums[0];\n        let maxIndex = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                maxIndex = j;\n            }\n        }\n        if (maxIndex !== i) {\n            flip(nums, maxIndex);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_idx = find_max_idx(nums, i);\n        flip(nums, max_idx);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = i;\n        for (let j = 0; j < i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "  let curr_size = nums.length;\n  while (curr_size > 1) {\n    let max_idx = find_max(nums, curr_size);\n    if (max_idx != curr_size - 1) {\n      flip(nums, max_idx);\n      flip(nums, curr_size - 1);\n    }\n    curr_size--;\n  }\n  return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max = nums[0];\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                max_index = j;\n            }\n        }\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx !== i) {\n            flip(nums, max_idx);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = 0; i < nums.length; i++) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = find_max(nums, i);\n        if (max_idx != i) {\n            flip(nums, max_idx);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    let curr_size = nums.length;\n    while (curr_size > 1) {\n        let max_idx = find_max(nums, curr_size);\n        if (max_idx != curr_size - 1) {\n            flip(nums, max_idx);\n            flip(nums, curr_size - 1);\n        }\n        curr_size--;\n    }\n    return nums;\n}\n",
    "  for (let i = nums.length; i > 1; i--) {\n    let max_index = nums.indexOf(Math.max(...nums.slice(0, i)));\n    if (max_index === i - 1) {\n      continue;\n    }\n    if (max_index > 0) {\n      nums = flip(nums, max_index + 1);\n    }\n    nums = flip(nums, i);\n  }\n  return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = i;\n        for (let j = 0; j < i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = i;\n        for (let j = 0; j < i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = i;\n        for (let j = 0; j < i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_idx = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_idx]) {\n                max_idx = j;\n            }\n        }\n        flip(nums, max_idx);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length; i > 1; i--) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i - 1);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max = nums[0];\n        let maxIndex = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                maxIndex = j;\n            }\n        }\n        if (maxIndex != i) {\n            flip(nums, maxIndex);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    let n = nums.length;\n    while (n > 1) {\n        let max_index = 0;\n        for (let i = 1; i < n; i++) {\n            if (nums[i] > nums[max_index]) {\n                max_index = i;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, n - 1);\n        n--;\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx != i) {\n            flip(nums, max_idx);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    let curr_size = nums.length;\n    while (curr_size > 1) {\n        let max_idx = find_max(nums, curr_size);\n        if (max_idx != curr_size - 1) {\n            flip(nums, max_idx);\n            flip(nums, curr_size - 1);\n        }\n        curr_size--;\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index != i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max = nums[0];\n        let maxIndex = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                maxIndex = j;\n            }\n        }\n        if (maxIndex !== i) {\n            flip(nums, maxIndex);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index != i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    let i = nums.length;\n    while (i > 1) {\n        let max_index = find_max_index(nums, i);\n        if (max_index != i - 1) {\n            flip(nums, max_index);\n            flip(nums, i - 1);\n        }\n        i--;\n    }\n    return nums;\n}\n",
    "    let sorted = false;\n    while (!sorted) {\n        sorted = true;\n        for (let i = 0; i < nums.length - 1; i++) {\n            if (nums[i] > nums[i + 1]) {\n                sorted = false;\n                nums = flip(nums, i + 1);\n            }\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = i;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        if (max_index != i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        if (max_index != i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx != i) {\n            flip(nums, max_idx);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_idx = find_max_index(nums, i);\n        flip(nums, max_idx);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length; i > 1; i--) {\n        let max_idx = 0;\n        for (let j = 1; j < i; j++) {\n            if (nums[j] > nums[max_idx]) {\n                max_idx = j;\n            }\n        }\n        flip(nums, max_idx);\n        flip(nums, i - 1);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max = nums[0];\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "  for (let i = nums.length - 1; i >= 0; i--) {\n    let max_index = 0;\n    for (let j = 0; j <= i; j++) {\n      if (nums[j] > nums[max_index]) {\n        max_index = j;\n      }\n    }\n    flip(nums, max_index);\n    flip(nums, i);\n  }\n  return nums;\n}\n",
    "    let n = nums.length;\n    while (n > 1) {\n        let max_index = 0;\n        for (let i = 0; i < n; i++) {\n            if (nums[i] > nums[max_index]) {\n                max_index = i;\n            }\n        }\n        if (max_index !== n - 1) {\n            flip(nums, max_index);\n            flip(nums, n - 1);\n        }\n        n--;\n    }\n    return nums;\n}\n",
    "    let i = nums.length - 1;\n    while (i > 0) {\n        let max = nums[0];\n        let maxIndex = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                maxIndex = j;\n            }\n        }\n        if (maxIndex !== i) {\n            flip(nums, maxIndex);\n            flip(nums, i);\n        }\n        i--;\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx !== i) {\n            flip(nums, max_idx);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    let n = nums.length;\n    for (let i = 0; i < n; i++) {\n        let max = Math.max(...nums.slice(0, n - i));\n        let idx = nums.indexOf(max);\n        nums = flip(nums, idx);\n        nums = flip(nums, n - i - 1);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx != i) {\n            flip(nums, max_idx);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    let n = nums.length;\n    for (let i = n; i > 1; i--) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx != i - 1) {\n            flip(nums, max_idx);\n            flip(nums, i - 1);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let maxIndex = findMaxIndex(nums, i);\n        if (maxIndex !== i) {\n            flip(nums, maxIndex);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    let current_size = nums.length;\n    while (current_size > 1) {\n        let mi = findMax(nums, current_size);\n        if (mi != current_size - 1) {\n            flip(nums, mi);\n            flip(nums, current_size - 1);\n        }\n        current_size--;\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    let i = nums.length;\n    while (i > 1) {\n        let max_index = find_max_index(nums, i);\n        if (max_index != i - 1) {\n            flip(nums, max_index);\n            flip(nums, i - 1);\n        }\n        i--;\n    }\n    return nums;\n}\n",
    "  for (let i = nums.length - 1; i > 0; i--) {\n    let maxIndex = 0;\n    for (let j = 0; j <= i; j++) {\n      if (nums[j] > nums[maxIndex]) {\n        maxIndex = j;\n      }\n    }\n    flip(nums, maxIndex);\n    flip(nums, i);\n  }\n  return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = i;\n        for (let j = 0; j < i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "  for (let i = nums.length - 1; i > 0; i--) {\n    let max_index = i;\n    for (let j = 0; j < i; j++) {\n      if (nums[j] > nums[max_index]) {\n        max_index = j;\n      }\n    }\n    if (max_index !== i) {\n      flip(nums, max_index);\n      flip(nums, i);\n    }\n  }\n  return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    let n = nums.length;\n    for (let i = n; i > 1; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index != i - 1) {\n            flip(nums, max_index);\n            flip(nums, i - 1);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = 0; i < nums.length; i++) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max = nums[0];\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = i;\n        for (let j = 0; j < i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max = nums[0];\n        let maxIndex = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                maxIndex = j;\n            }\n        }\n        if (maxIndex !== i) {\n            flip(nums, maxIndex);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = 0; i < nums.length; i++) {\n        let max = Math.max(...nums.slice(0, nums.length - i));\n        let max_index = nums.indexOf(max);\n        flip(nums, max_index);\n        flip(nums, nums.length - i - 1);\n    }\n    return nums;\n}\n",
    "    const result: number[] = [];\n    let max_index = nums.length - 1;\n    while (max_index > 0) {\n        let max_value = nums[0];\n        let max_value_index = 0;\n        for (let i = 1; i <= max_index; i++) {\n            if (nums[i] > max_value) {\n                max_value = nums[i];\n                max_value_index = i;\n            }\n        }\n        if (max_value_index == max_index) {\n            max_index--;\n            continue;\n        }\n        if (max_value_index > 0) {\n            result.push(max_value_index + 1);\n            flip(nums, max_value_index);\n        }\n        result.push(max_index + 1);\n        flip(nums, max_index);\n        max_index--;\n    }\n    return result;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index != i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx !== i) {\n            flip(nums, max_idx);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "  let sorted = false;\n  while (!sorted) {\n    sorted = true;\n    for (let i = 0; i < nums.length - 1; i++) {\n      if (nums[i] > nums[i + 1]) {\n        sorted = false;\n        nums = flip(nums, i + 1);\n      }\n    }\n  }\n  return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max = nums[0];\n        let maxIndex = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                maxIndex = j;\n            }\n        }\n        if (maxIndex == i) {\n            continue;\n        }\n        flip(nums, maxIndex);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = 0; i < nums.length; i++) {\n        let max = Math.max(...nums.slice(0, nums.length - i));\n        let max_index = nums.indexOf(max);\n        nums = flip(nums, max_index + 1);\n        nums = flip(nums, nums.length - i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    let sorted = false;\n    while (!sorted) {\n        sorted = true;\n        for (let i = 0; i < nums.length - 1; i++) {\n            if (nums[i] > nums[i + 1]) {\n                sorted = false;\n                nums = flip(nums, i + 1);\n            }\n        }\n    }\n    return nums;\n}\n",
    "    let result: number[] = [];\n    let max: number = nums.length;\n    while (max > 0) {\n        let index: number = nums.indexOf(max);\n        if (index < max - 1) {\n            if (index > 0) {\n                result.push(index + 1);\n                nums = flip(nums, index + 1);\n            }\n            result.push(max);\n            nums = flip(nums, max);\n        }\n        max--;\n    }\n    return result;\n}\n",
    "  for (let i = nums.length - 1; i > 0; i--) {\n    let max_idx = 0;\n    for (let j = 0; j <= i; j++) {\n      if (nums[j] > nums[max_idx]) {\n        max_idx = j;\n      }\n    }\n    flip(nums, max_idx);\n    flip(nums, i);\n  }\n  return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = i;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        if (max_index != i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index != i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    let end = nums.length - 1;\n    while (end > 0) {\n        let max_index = 0;\n        for (let i = 0; i <= end; i++) {\n            if (nums[i] > nums[max_index]) {\n                max_index = i;\n            }\n        }\n        if (max_index != end) {\n            flip(nums, max_index);\n            flip(nums, end);\n        }\n        end--;\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    let n = nums.length;\n    while (n > 1) {\n        let max_index = 0;\n        for (let i = 1; i < n; i++) {\n            if (nums[i] > nums[max_index]) {\n                max_index = i;\n            }\n        }\n        reverse(nums, max_index);\n        reverse(nums, n - 1);\n        n--;\n    }\n    return nums;\n}\n",
    "    let len = nums.length;\n    for (let i = 0; i < len; i++) {\n        let max = Math.max(...nums.slice(0, len - i));\n        let index = nums.indexOf(max);\n        nums = flip(nums, index + 1);\n        nums = flip(nums, len - i);\n    }\n    return nums;\n}\n",
    "    let result: number[] = [];\n    let max: number = nums.length;\n    for (let i = 0; i < nums.length; i++) {\n        let index: number = nums.indexOf(max);\n        if (index === nums.length - 1) {\n            max--;\n            continue;\n        }\n        if (index !== 0) {\n            result.push(index + 1);\n            nums = flip(nums, index);\n        }\n        result.push(max);\n        nums = flip(nums, max - 1);\n        max--;\n    }\n    return result;\n}\n",
    "    let n = nums.length;\n    while (n > 1) {\n        let max_index = find_max_index(nums, n);\n        flip(nums, max_index);\n        flip(nums, n - 1);\n        n--;\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max = nums[0], max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                max_index = j;\n            }\n        }\n        if (max_index != i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    let end = nums.length - 1;\n    while (end > 0) {\n        let max_index = find_max_index(nums, end);\n        if (max_index != end) {\n            flip(nums, max_index);\n            flip(nums, end);\n        }\n        end--;\n    }\n    return nums;\n}\n"
  ]
}
{
  "name": "mbpp_128_long_words",
  "language": "ts",
  "prompt": "//Write a function to find words that are longer than n characters from a given array of words.\nfunction long_words(n: number, str: string): string[] {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_128_long_words.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = long_words;\n  assert.deepEqual(candidate(3, \"python is a programming language\"),[\"python\", \"programming\", \"language\"]);\n  assert.deepEqual(candidate(2, \"writing a program\"),[\"writing\", \"program\"]);\n  assert.deepEqual(candidate(5, \"sorting list\"),[\"sorting\"]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let strArr = str.split(\" \");\n    let result = [];\n    for (let i = 0; i < strArr.length; i++) {\n        if (strArr[i].length > n) {\n            result.push(strArr[i]);\n        }\n    }\n    return result;\n}\nconsole.log(long_words(3, \"The quick brown fox jumps over the lazy dog\"));\nconsole.log(long_words(4, \"The quick brown fox jumps over the lazy dog\"));\n",
    "    let words: string[] = str.split(\" \");\n    let longWords: string[] = [];\n    for (let i = 0; i < words.length; i++) {\n        if (words[i].length > n) {\n            longWords.push(words[i]);\n        }\n    }\n    return longWords;\n}\n\nconsole.log(long_words(3, \"The quick brown fox jumps over the lazy dog\"));\n",
    "    let strArr = str.split(\" \");\n    let result = [];\n    for (let i = 0; i < strArr.length; i++) {\n        if (strArr[i].length > n) {\n            result.push(strArr[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(long_words(3, \"The quick brown fox jumps over the lazy dog\"));\nconsole.log(long_words(4, \"The quick brown fox jumps over the lazy dog\"));\n",
    "    let str_array: string[] = str.split(\" \");\n    let result: string[] = [];\n    for (let i = 0; i < str_array.length; i++) {\n        if (str_array[i].length > n) {\n            result.push(str_array[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(long_words(3, \"The quick brown fox jumps over the lazy dog\"));\nconsole.log(long_words(2, \"The quick brown fox jumps over the lazy dog\"));\n",
    "    let words = str.split(\" \");\n    let result = [];\n    for (let i = 0; i < words.length; i++) {\n        if (words[i].length > n) {\n            result.push(words[i]);\n        }\n    }\n    return result;\n}\nconsole.log(long_words(3, \"The quick brown fox jumps over the lazy dog\"));\n",
    "    let strArr = str.split(\" \");\n    let result = [];\n\n    for (let i = 0; i < strArr.length; i++) {\n        if (strArr[i].length > n) {\n            result.push(strArr[i]);\n        }\n    }\n\n    return result;\n}\n\nconsole.log(long_words(3, \"The quick brown fox jumps over the lazy dog\"));\nconsole.log(long_words(3, \"The quick brown fox jumps over the lazy dog\"));\n",
    "    let words = str.split(\" \");\n    let result = [];\n    for (let i = 0; i < words.length; i++) {\n        if (words[i].length > n) {\n            result.push(words[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(long_words(3, \"The quick brown fox jumps over the lazy dog\"));\nconsole.log(long_words(4, \"The quick brown fox jumps over the lazy dog\"));\n",
    "    let words: string[] = str.split(\" \");\n    let longWords: string[] = [];\n\n    for (let i = 0; i < words.length; i++) {\n        if (words[i].length > n) {\n            longWords.push(words[i]);\n        }\n    }\n    return longWords;\n}\n\nconsole.log(long_words(3, \"The quick brown fox jumps over the lazy dog\"));\nconsole.log(long_words(2, \"Google do a barrel roll\"));\n",
    "    let words = str.split(\" \");\n    let longWords = [];\n    for (let i = 0; i < words.length; i++) {\n        if (words[i].length > n) {\n            longWords.push(words[i]);\n        }\n    }\n    return longWords;\n}\n\nconsole.log(long_words(3, \"The quick brown fox jumps over the lazy dog\"));\nconsole.log(long_words(2, \"The quick brown fox jumps over the lazy dog\"));\n",
    "    let words = str.split(\" \");\n    let result = [];\n\n    for (let i = 0; i < words.length; i++) {\n        if (words[i].length > n) {\n            result.push(words[i]);\n        }\n    }\n\n    return result;\n}\n\nconsole.log(long_words(3, \"The quick brown fox jumps over the lazy dog\"));\nconsole.log(long_words(4, \"The quick brown fox jumps over the lazy dog\"));\n",
    "    let words: string[] = str.split(' ');\n    let longWords: string[] = [];\n    for (let i = 0; i < words.length; i++) {\n        if (words[i].length > n) {\n            longWords.push(words[i]);\n        }\n    }\n    return longWords;\n}\n\nconsole.log(long_words(3, \"The quick brown fox jumps over the lazy dog\"));\nconsole.log(long_words(2, \"The quick brown fox jumps over the lazy dog\"));\n",
    "    let str_array: string[] = str.split(\" \");\n    let result: string[] = [];\n    for (let i = 0; i < str_array.length; i++) {\n        if (str_array[i].length > n) {\n            result.push(str_array[i]);\n        }\n    }\n    return result;\n}\nconsole.log(long_words(3, \"The quick brown fox jumps over the lazy dog\"));\n",
    "    let words: string[] = str.split(\" \");\n    let result: string[] = [];\n    for (let i = 0; i < words.length; i++) {\n        if (words[i].length > n) {\n            result.push(words[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(long_words(3, \"The quick brown fox jumps over the lazy dog\"));\nconsole.log(long_words(4, \"The quick brown fox jumps over the lazy dog\"));\n",
    "    let words = str.split(\" \");\n    let result = [];\n    for (let i = 0; i < words.length; i++) {\n        if (words[i].length > n) {\n            result.push(words[i]);\n        }\n    }\n    return result;\n}\nconsole.log(long_words(3, \"The quick brown fox jumps over the lazy dog\"));\n",
    "    var words = str.split(\" \");\n    var result = [];\n    for (var i = 0; i < words.length; i++) {\n        if (words[i].length > n) {\n            result.push(words[i]);\n        }\n    }\n    return result;\n}\nconsole.log(long_words(3, \"The quick brown fox jumps over the lazy dog\"));\n",
    "    let words = str.split(\" \");\n    let result = [];\n\n    for (let i = 0; i < words.length; i++) {\n        if (words[i].length > n) {\n            result.push(words[i]);\n        }\n    }\n\n    return result;\n}\n\nconsole.log(long_words(3, \"The quick brown fox jumps over the lazy dog\"));\nconsole.log(long_words(3, \"The quick brown fox jumps over the lazy dog\").length);\n",
    "    let str_array: string[] = str.split(\" \");\n    let result: string[] = [];\n    for (let i = 0; i < str_array.length; i++) {\n        if (str_array[i].length > n) {\n            result.push(str_array[i]);\n        }\n    }\n    return result;\n}\nconsole.log(long_words(3, \"The quick brown fox jumps over the lazy dog\"));\n",
    "    let words = str.split(\" \");\n    let result = [];\n\n    for (let i = 0; i < words.length; i++) {\n        if (words[i].length > n) {\n            result.push(words[i]);\n        }\n    }\n\n    return result;\n}\n\nconsole.log(long_words(3, \"The quick brown fox jumps over the lazy dog\"));\nconsole.log(long_words(4, \"The quick brown fox jumps over the lazy dog\"));\n",
    "    let words: string[] = str.split(\" \");\n    let result: string[] = [];\n\n    for (let i: number = 0; i < words.length; i++) {\n        if (words[i].length > n) {\n            result.push(words[i]);\n        }\n    }\n\n    return result;\n}\n\nconsole.log(long_words(3, \"The quick brown fox jumps over the lazy dog\"));\n",
    "    let words: string[] = str.split(\" \");\n    let longWords: string[] = [];\n    for (let i = 0; i < words.length; i++) {\n        if (words[i].length > n) {\n            longWords.push(words[i]);\n        }\n    }\n    return longWords;\n}\nconsole.log(long_words(3, \"The quick brown fox jumps over the lazy dog\"));\n"
  ]
}
{
  "name": "mbpp_266_lateralsurface_cube",
  "language": "ts",
  "prompt": "//Write a function to find the lateral surface area of a cube given its side length.\nfunction lateralsurface_cube(l: number): number {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_266_lateralsurface_cube.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = lateralsurface_cube;\n  assert.deepEqual(candidate(5),100);\n  assert.deepEqual(candidate(9),324);\n  assert.deepEqual(candidate(10),400);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    let result = 4 * l * l;\n    return result;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\nconsole.log(lateralsurface_cube(5));\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return l * l * 4;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\nconsole.log(lateralsurface_cube(5));\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "  return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\nconsole.log(lateralsurface_cube(2));\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "  return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\nconsole.log(lateralsurface_cube(2));\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\nconsole.log(lateralsurface_cube(5));\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n",
    "    return 4 * l * l;\n}\n"
  ]
}
{
  "name": "mbpp_244_next_Perfect_Square",
  "language": "ts",
  "prompt": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_244_next_Perfect_Square.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\n\nconsole.log(next_Perfect_Square(5));\nconsole.log(next_Perfect_Square(12));\nconsole.log(next_Perfect_Square(15));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "9\n16\n16\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmph1kj98xg.js:17:12)\n    at Object.<anonymous> (/tmp/tmph1kj98xg.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    var i = 1;\n    var result = 0;\n    while (result < N) {\n        result = i * i;\n        i++;\n    }\n    return result;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmp72viggb5.js:17:12)\n    at Object.<anonymous> (/tmp/tmp72viggb5.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let next_perfect_square: number = 0;\n    let i: number = 1;\n    while (next_perfect_square < N) {\n        next_perfect_square = i * i;\n        i++;\n    }\n    return next_perfect_square;\n}\n\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpdu_zgydp.js:17:12)\n    at Object.<anonymous> (/tmp/tmpdu_zgydp.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmp8zbrisan.js:15:12)\n    at Object.<anonymous> (/tmp/tmp8zbrisan.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmp5mwdyb5u.js:14:12)\n    at Object.<anonymous> (/tmp/tmp5mwdyb5u.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\n\nconsole.log(next_Perfect_Square(15));\nconsole.log(next_Perfect_Square(5));\nconsole.log(next_Perfect_Square(12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "16\n9\n16\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    var i = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(5));\nconsole.log(next_Perfect_Square(12));\nconsole.log(next_Perfect_Square(15));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "9\n16\n16\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpddw2tnhg.js:17:12)\n    at Object.<anonymous> (/tmp/tmpddw2tnhg.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let next_Perfect_Square: number = 0;\n    let i: number = 1;\n    while (next_Perfect_Square < N) {\n        next_Perfect_Square = i * i;\n        i++;\n    }\n    return next_Perfect_Square;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpp15wzdun.js:17:12)\n    at Object.<anonymous> (/tmp/tmpp15wzdun.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    let result: number = 0;\n    while (result < N) {\n        result = i * i;\n        i++;\n    }\n    return result;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpq555avv4.js:17:12)\n    at Object.<anonymous> (/tmp/tmpq555avv4.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(5));\nconsole.log(next_Perfect_Square(15));\nconsole.log(next_Perfect_Square(25));\nconsole.log(next_Perfect_Square(37));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "9\n16\n36\n49\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpchwhfpf3.js:15:12)\n    at Object.<anonymous> (/tmp/tmpchwhfpf3.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmp8zbrisan.js:15:12)\n    at Object.<anonymous> (/tmp/tmp8zbrisan.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    var i: number = 1;\n    var result: number = 0;\n    while (result < N) {\n        result = i * i;\n        i++;\n    }\n    return result;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmp5yolalue.js:17:12)\n    at Object.<anonymous> (/tmp/tmp5yolalue.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\n\nconsole.log(next_Perfect_Square(5));\nconsole.log(next_Perfect_Square(6));\nconsole.log(next_Perfect_Square(36));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "9\n9\n49\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    let result = 0;\n    while (result < N) {\n        result = i * i;\n        i++;\n    }\n    return result;\n}\n\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmp19elhobr.js:17:12)\n    at Object.<anonymous> (/tmp/tmp19elhobr.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmp8zbrisan.js:15:12)\n    at Object.<anonymous> (/tmp/tmp8zbrisan.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    var i = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    var num = 1;\n    var i = 1;\n    while (num < N) {\n        num = i * i;\n        i++;\n    }\n    return num;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpua3p7eyn.js:17:12)\n    at Object.<anonymous> (/tmp/tmpua3p7eyn.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\n\nconsole.log(next_Perfect_Square(5));\nconsole.log(next_Perfect_Square(10));\nconsole.log(next_Perfect_Square(15));\nconsole.log(next_Perfect_Square(20));\nconsole.log(next_Perfect_Square(25));\nconsole.log(next_Perfect_Square(30));\nconsole.log(next_Perfect_Square(35));\nconsole.log(next_Perfect_Square(40));\nconsole.log(next_Perfect_Square(45));\nconsole.log(next_Perfect_Square(50));\nconsole.log(next_Perfect_Square(55));\nconsole.log(next_Perfect_Square(60));\nconsole.log(next_Perfect_Square(65));\nconsole.log(next_Perfect_Square(70));\nconsole.log(next_Perfect_Square(75));\nconsole.log(next_Perfect_Square(80));\nconsole.log(next_Perfect_Square(85));\nconsole.log(next_Perfect_Square(90));\nconsole.log(next_Perfect_Square(95));\nconsole.log(next_Perfect_Square(100));\nconsole.log(next_Perfect_Square(105));\nconsole.log(next_Perfect_Square(110));\nconsole.log(next_Perfect_Square(115));\nconsole.log(next_Perfect_Square(120));\nconsole.log(next_Perfect_Square(125));\nconsole.log(next_Perfect_Square(130));\nconsole.log(next_Perfect_Square(135));\nconsole.log(next_Perfect_Square(140));\nconsole.log(next_Perfect_Square(145));\nconsole.log(next_Perfect_Square(150));\nconsole.log(next_Perfect_Square(155));\nconsole.log(next_Perfect_Square(160));\nconsole.log(next_Perfect_Square(165));\nconsole.log(next_Perfect_Square(170));\nconsole.log(next_Perfect_Square(175));\nconsole.log(next_Perfect_Square(180));\nconsole.log(next_Perfect_\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "../../../../tmp/tmpy_63qr73.ts(47,1): error TS1005: ',' expected.\n../../../../tmp/tmpy_63qr73.ts(47,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(5));\nconsole.log(next_Perfect_Square(12));\nconsole.log(next_Perfect_Square(15));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "9\n16\n16\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpboz1zu22.js:17:12)\n    at Object.<anonymous> (/tmp/tmpboz1zu22.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (true) {\n        if (i * i > N) {\n            return i * i;\n        }\n        i++;\n    }\n}\n\nconsole.log(next_Perfect_Square(5));\nconsole.log(next_Perfect_Square(12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "9\n16\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    let result: number = 0;\n    while (result < N) {\n        result = i * i;\n        i++;\n    }\n    return result;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpq555avv4.js:17:12)\n    at Object.<anonymous> (/tmp/tmpq555avv4.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmp8zbrisan.js:15:12)\n    at Object.<anonymous> (/tmp/tmp8zbrisan.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let next_Perfect_Square: number = 0;\n    let i: number = 1;\n    while (true) {\n        if (i * i > N) {\n            next_Perfect_Square = i * i;\n            break;\n        }\n        i++;\n    }\n    return next_Perfect_Square;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    let j: number = 1;\n    while (i < N) {\n        i = i + j;\n        j = j + 2;\n    }\n    return i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "26\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n37\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmpb57wvqpz.js:15:12)\n    at Object.<anonymous> (/tmp/tmpb57wvqpz.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 37,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(5));\nconsole.log(next_Perfect_Square(6));\nconsole.log(next_Perfect_Square(7));\nconsole.log(next_Perfect_Square(8));\nconsole.log(next_Perfect_Square(9));\nconsole.log(next_Perfect_Square(10));\nconsole.log(next_Perfect_Square(11));\nconsole.log(next_Perfect_Square(12));\nconsole.log(next_Perfect_Square(13));\nconsole.log(next_Perfect_Square(14));\nconsole.log(next_Perfect_Square(15));\nconsole.log(next_Perfect_Square(16));\nconsole.log(next_Perfect_Square(17));\nconsole.log(next_Perfect_Square(18));\nconsole.log(next_Perfect_Square(19));\nconsole.log(next_Perfect_Square(20));\nconsole.log(next_Perfect_Square(21));\nconsole.log(next_Perfect_Square(22));\nconsole.log(next_Perfect_Square(23));\nconsole.log(next_Perfect_Square(24));\nconsole.log(next_Perfect_Square(25));\nconsole.log(next_Perfect_Square(26));\nconsole.log(next_Perfect_Square(27));\nconsole.log(next_Perfect_Square(28));\nconsole.log(next_Perfect_Square(29));\nconsole.log(next_Perfect_Square(30));\nconsole.log(next_Perfect_Square(31));\nconsole.log(next_Perfect_Square(32));\nconsole.log(next_Perfect_Square(33));\nconsole.log(next_Perfect_Square(34));\nconsole.log(next_Perfect_Square(35));\nconsole.log(next_Perfect_Square(36));\nconsole.log(next_Perfect_Square(37));\nconsole.log(next_Perfect_Square(38));\nconsole.log(next_Perfect_Square(39));\nconsole.log(next_Perfect_Square(40));\nconsole.log(next_Perfect\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122780,
      "stdout": "../../../../tmp/tmpumbvtpeu.ts(46,1): error TS1005: ',' expected.\n../../../../tmp/tmpumbvtpeu.ts(46,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    var i: number = 1;\n    var num: number = 0;\n    while (num < N) {\n        num = i * i;\n        i++;\n    }\n    return num;\n}\nconsole.log(\"Next Perfect Square is: \" + next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "Next Perfect Square is: 25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmptr7sy4il.js:17:12)\n    at Object.<anonymous> (/tmp/tmptr7sy4il.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(36));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "36\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmp6014_wzw.js:15:12)\n    at Object.<anonymous> (/tmp/tmp6014_wzw.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    var i = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmp1wzmyd_c.js:15:12)\n    at Object.<anonymous> (/tmp/tmp1wzmyd_c.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmp8zbrisan.js:15:12)\n    at Object.<anonymous> (/tmp/tmp8zbrisan.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmp8zbrisan.js:15:12)\n    at Object.<anonymous> (/tmp/tmp8zbrisan.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    var i = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpetb3ygqv.js:14:12)\n    at Object.<anonymous> (/tmp/tmpetb3ygqv.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(5));\nconsole.log(next_Perfect_Square(8));\nconsole.log(next_Perfect_Square(15));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "9\n9\n16\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmp23p7ucs3.js:17:12)\n    at Object.<anonymous> (/tmp/tmp23p7ucs3.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let sqrt_N: number = Math.sqrt(N);\n    let next_Perfect_Square: number = Math.pow((sqrt_N + 1), 2);\n    return next_Perfect_Square;\n}\n\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "36\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n47.83215956619923\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmp0iqlqcr_.js:11:12)\n    at Object.<anonymous> (/tmp/tmp0iqlqcr_.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 47.83215956619923,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (true) {\n        if (i * i > N) {\n            return i * i;\n        }\n        i++;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(5));\nconsole.log(next_Perfect_Square(6));\nconsole.log(next_Perfect_Square(7));\nconsole.log(next_Perfect_Square(8));\nconsole.log(next_Perfect_Square(9));\nconsole.log(next_Perfect_Square(10));\nconsole.log(next_Perfect_Square(11));\nconsole.log(next_Perfect_Square(12));\nconsole.log(next_Perfect_Square(13));\nconsole.log(next_Perfect_Square(14));\nconsole.log(next_Perfect_Square(15));\nconsole.log(next_Perfect_Square(16));\nconsole.log(next_Perfect_Square(17));\nconsole.log(next_Perfect_Square(18));\nconsole.log(next_Perfect_Square(19));\nconsole.log(next_Perfect_Square(20));\nconsole.log(next_Perfect_Square(21));\nconsole.log(next_Perfect_Square(22));\nconsole.log(next_Perfect_Square(23));\nconsole.log(next_Perfect_Square(24));\nconsole.log(next_Perfect_Square(25));\nconsole.log(next_Perfect_Square(26));\nconsole.log(next_Perfect_Square(27));\nconsole.log(next_Perfect_Square(28));\nconsole.log(next_Perfect_Square(29));\nconsole.log(next_Perfect_Square(30));\nconsole.log(next_Perfect_Square(31));\nconsole.log(next_Perfect_Square(32));\nconsole.log(next_Perfect_Square(33));\nconsole.log(next_Perfect_Square(34));\nconsole.log(next_Perfect_Square(35));\nconsole.log(next_Perfect_Square(36));\nconsole.log(next_Perfect_Square(37));\nconsole.log(next_Perfect_Square(38));\nconsole.log(next_Perfect_Square(39));\nconsole.log(next_Perfect_Square(40));\nconsole.log(next_Perfect_Square\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "../../../../tmp/tmphgagd58a.ts(46,1): error TS1005: ',' expected.\n../../../../tmp/tmphgagd58a.ts(46,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    var sqrt = Math.sqrt(N);\n    var next_Perfect_Square = Math.ceil(sqrt);\n    return next_Perfect_Square * next_Perfect_Square;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpvh4vkpse.js:13:12)\n    at Object.<anonymous> (/tmp/tmpvh4vkpse.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\n\nconsole.log(next_Perfect_Square(5));\nconsole.log(next_Perfect_Square(6));\nconsole.log(next_Perfect_Square(7));\nconsole.log(next_Perfect_Square(8));\nconsole.log(next_Perfect_Square(9));\nconsole.log(next_Perfect_Square(10));\nconsole.log(next_Perfect_Square(11));\nconsole.log(next_Perfect_Square(12));\nconsole.log(next_Perfect_Square(13));\nconsole.log(next_Perfect_Square(14));\nconsole.log(next_Perfect_Square(15));\nconsole.log(next_Perfect_Square(16));\nconsole.log(next_Perfect_Square(17));\nconsole.log(next_Perfect_Square(18));\nconsole.log(next_Perfect_Square(19));\nconsole.log(next_Perfect_Square(20));\nconsole.log(next_Perfect_Square(21));\nconsole.log(next_Perfect_Square(22));\nconsole.log(next_Perfect_Square(23));\nconsole.log(next_Perfect_Square(24));\nconsole.log(next_Perfect_Square(25));\nconsole.log(next_Perfect_Square(26));\nconsole.log(next_Perfect_Square(27));\nconsole.log(next_Perfect_Square(28));\nconsole.log(next_Perfect_Square(29));\nconsole.log(next_Perfect_Square(30));\nconsole.log(next_Perfect_Square(31));\nconsole.log(next_Perfect_Square(32));\nconsole.log(next_Perfect_Square(33));\nconsole.log(next_Perfect_Square(34));\nconsole.log(next_Perfect_Square(35));\nconsole.log(next_Perfect_Square(36));\nconsole.log(next_Perfect_Square(37));\nconsole.log(next_Perfect_Square(38));\nconsole.log(next_Perfect_Square(39));\nconsole.log(next_Perfect_Square(40));\nconsole.log(next_Perfect_\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "../../../../tmp/tmp53t0040d.ts(47,1): error TS1005: ',' expected.\n../../../../tmp/tmp53t0040d.ts(47,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(5));\nconsole.log(next_Perfect_Square(6));\nconsole.log(next_Perfect_Square(36));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "9\n9\n49\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(5));\nconsole.log(next_Perfect_Square(12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "9\n16\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\n\nconsole.log(next_Perfect_Square(5));\nconsole.log(next_Perfect_Square(12));\nconsole.log(next_Perfect_Square(15));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "9\n16\n16\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let next_Perfect_Square = 0;\n    let i = 1;\n    while (next_Perfect_Square < N) {\n        next_Perfect_Square = i * i;\n        i++;\n    }\n    return next_Perfect_Square;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpietwiqcv.js:17:12)\n    at Object.<anonymous> (/tmp/tmpietwiqcv.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let next_Perfect_Square: number = 0;\n    let i: number = 1;\n    while (i <= N) {\n        if (i * i > N) {\n            next_Perfect_Square = i * i;\n            break;\n        }\n        i++;\n    }\n    return next_Perfect_Square;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    let perfect_Square: number = 0;\n    while (perfect_Square < N) {\n        perfect_Square = i * i;\n        i++;\n    }\n    return perfect_Square;\n}\nconsole.log(\"Next Perfect Square greater than \" + N + \" is \" + next_Perfect_Square(N));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122783,
      "stdout": "../../../../tmp/tmplvf_i0e1.ts(11,51): error TS2304: Cannot find name 'N'.\n../../../../tmp/tmplvf_i0e1.ts(11,84): error TS2304: Cannot find name 'N'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(5));\nconsole.log(next_Perfect_Square(12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "9\n16\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\n\nconsole.log(next_Perfect_Square(9));\nconsole.log(next_Perfect_Square(25));\nconsole.log(next_Perfect_Square(37));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122784,
      "stdout": "9\n25\n49\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpokbvjkx6.js:17:12)\n    at Object.<anonymous> (/tmp/tmpokbvjkx6.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    let result = 0;\n    while (result < N) {\n        result = i * i;\n        i++;\n    }\n    return result;\n}\n\nconsole.log(next_Perfect_Square(10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122784,
      "stdout": "16\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpejkxv3a_.js:17:12)\n    at Object.<anonymous> (/tmp/tmpejkxv3a_.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let x = 1;\n    while (true) {\n        if (x * x > N) {\n            return x * x;\n        }\n        x++;\n    }\n}\nconsole.log(next_Perfect_Square(5));\nconsole.log(next_Perfect_Square(8));\nconsole.log(next_Perfect_Square(15));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122784,
      "stdout": "9\n9\n16\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122784,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpdbolj5yo.js:14:12)\n    at Object.<anonymous> (/tmp/tmpdbolj5yo.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122784,
      "stdout": "16\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmp7lham2z6.js:15:12)\n    at Object.<anonymous> (/tmp/tmp7lham2z6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\n\nconsole.log(next_Perfect_Square(5));\nconsole.log(next_Perfect_Square(6));\nconsole.log(next_Perfect_Square(36));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122784,
      "stdout": "9\n9\n49\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    var next_Perfect_Square = 0;\n    var i = 1;\n    while (next_Perfect_Square < N) {\n        next_Perfect_Square = i * i;\n        i++;\n    }\n    return next_Perfect_Square;\n}\nconsole.log(\"Next Perfect Square is : \" + next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122784,
      "stdout": "Next Perfect Square is : 25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpoet_wzhu.js:17:12)\n    at Object.<anonymous> (/tmp/tmpoet_wzhu.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(5));\nconsole.log(next_Perfect_Square(6));\nconsole.log(next_Perfect_Square(7));\nconsole.log(next_Perfect_Square(8));\nconsole.log(next_Perfect_Square(9));\nconsole.log(next_Perfect_Square(10));\nconsole.log(next_Perfect_Square(11));\nconsole.log(next_Perfect_Square(12));\nconsole.log(next_Perfect_Square(13));\nconsole.log(next_Perfect_Square(14));\nconsole.log(next_Perfect_Square(15));\nconsole.log(next_Perfect_Square(16));\nconsole.log(next_Perfect_Square(17));\nconsole.log(next_Perfect_Square(18));\nconsole.log(next_Perfect_Square(19));\nconsole.log(next_Perfect_Square(20));\nconsole.log(next_Perfect_Square(21));\nconsole.log(next_Perfect_Square(22));\nconsole.log(next_Perfect_Square(23));\nconsole.log(next_Perfect_Square(24));\nconsole.log(next_Perfect_Square(25));\nconsole.log(next_Perfect_Square(26));\nconsole.log(next_Perfect_Square(27));\nconsole.log(next_Perfect_Square(28));\nconsole.log(next_Perfect_Square(29));\nconsole.log(next_Perfect_Square(30));\nconsole.log(next_Perfect_Square(31));\nconsole.log(next_Perfect_Square(32));\nconsole.log(next_Perfect_Square(33));\nconsole.log(next_Perfect_Square(34));\nconsole.log(next_Perfect_Square(35));\nconsole.log(next_Perfect_Square(36));\nconsole.log(next_Perfect_Square(37));\nconsole.log(next_Perfect_Square(38));\nconsole.log(next_Perfect_Square(39));\nconsole.log(next_Perfect_Square(40));\nconsole.log(next_Perfect\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122783,
      "stdout": "../../../../tmp/tmpmchxd33d.ts(46,1): error TS1005: ',' expected.\n../../../../tmp/tmpmchxd33d.ts(46,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmp8zbrisan.js:15:12)\n    at Object.<anonymous> (/tmp/tmp8zbrisan.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    var i = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmp8zbrisan.js:15:12)\n    at Object.<anonymous> (/tmp/tmp8zbrisan.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\n\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122784,
      "stdout": "36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(5));\nconsole.log(next_Perfect_Square(6));\nconsole.log(next_Perfect_Square(36));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "9\n9\n49\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    let num: number = 0;\n    while (num < N) {\n        num = i * i;\n        i++;\n    }\n    return num;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122784,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmp6xk5bttb.js:17:12)\n    at Object.<anonymous> (/tmp/tmp6xk5bttb.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let square = 1;\n    let count = 1;\n    while (square < N) {\n        count += 2;\n        square += count;\n    }\n    return square;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122784,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpy48nanf2.js:17:12)\n    at Object.<anonymous> (/tmp/tmpy48nanf2.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122784,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpdbolj5yo.js:14:12)\n    at Object.<anonymous> (/tmp/tmpdbolj5yo.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    var next_Perfect_Square = 0;\n    var i = 1;\n    while (next_Perfect_Square < N) {\n        next_Perfect_Square = i * i;\n        i++;\n    }\n    return next_Perfect_Square;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122784,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmprn2jeufj.js:16:12)\n    at Object.<anonymous> (/tmp/tmprn2jeufj.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\n\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122784,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmppwqh_zbk.js:15:12)\n    at Object.<anonymous> (/tmp/tmppwqh_zbk.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(5));\nconsole.log(next_Perfect_Square(12));\nconsole.log(next_Perfect_Square(15));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122784,
      "stdout": "9\n16\n16\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmph3bgz_2o.js:17:12)\n    at Object.<anonymous> (/tmp/tmph3bgz_2o.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(5));\nconsole.log(next_Perfect_Square(6));\nconsole.log(next_Perfect_Square(7));\nconsole.log(next_Perfect_Square(8));\nconsole.log(next_Perfect_Square(9));\nconsole.log(next_Perfect_Square(10));\nconsole.log(next_Perfect_Square(11));\nconsole.log(next_Perfect_Square(12));\nconsole.log(next_Perfect_Square(13));\nconsole.log(next_Perfect_Square(14));\nconsole.log(next_Perfect_Square(15));\nconsole.log(next_Perfect_Square(16));\nconsole.log(next_Perfect_Square(17));\nconsole.log(next_Perfect_Square(18));\nconsole.log(next_Perfect_Square(19));\nconsole.log(next_Perfect_Square(20));\nconsole.log(next_Perfect_Square(21));\nconsole.log(next_Perfect_Square(22));\nconsole.log(next_Perfect_Square(23));\nconsole.log(next_Perfect_Square(24));\nconsole.log(next_Perfect_Square(25));\nconsole.log(next_Perfect_Square(26));\nconsole.log(next_Perfect_Square(27));\nconsole.log(next_Perfect_Square(28));\nconsole.log(next_Perfect_Square(29));\nconsole.log(next_Perfect_Square(30));\nconsole.log(next_Perfect_Square(31));\nconsole.log(next_Perfect_Square(32));\nconsole.log(next_Perfect_Square(33));\nconsole.log(next_Perfect_Square(34));\nconsole.log(next_Perfect_Square(35));\nconsole.log(next_Perfect_Square(36));\nconsole.log(next_Perfect_Square(37));\nconsole.log(next_Perfect_Square(38));\nconsole.log(next_Perfect_Square(39));\nconsole.log(next_Perfect_Square(40));\nconsole.log(next_Perfect\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122780,
      "stdout": "../../../../tmp/tmpumbvtpeu.ts(46,1): error TS1005: ',' expected.\n../../../../tmp/tmpumbvtpeu.ts(46,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\n\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122784,
      "stdout": "36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\n\nconsole.log(next_Perfect_Square(5));\nconsole.log(next_Perfect_Square(12));\nconsole.log(next_Perfect_Square(15));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "9\n16\n16\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122784,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpdbolj5yo.js:14:12)\n    at Object.<anonymous> (/tmp/tmpdbolj5yo.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\n\nconsole.log(next_Perfect_Square(5));\nconsole.log(next_Perfect_Square(6));\nconsole.log(next_Perfect_Square(7));\nconsole.log(next_Perfect_Square(8));\nconsole.log(next_Perfect_Square(9));\nconsole.log(next_Perfect_Square(10));\nconsole.log(next_Perfect_Square(11));\nconsole.log(next_Perfect_Square(12));\nconsole.log(next_Perfect_Square(13));\nconsole.log(next_Perfect_Square(14));\nconsole.log(next_Perfect_Square(15));\nconsole.log(next_Perfect_Square(16));\nconsole.log(next_Perfect_Square(17));\nconsole.log(next_Perfect_Square(18));\nconsole.log(next_Perfect_Square(19));\nconsole.log(next_Perfect_Square(20));\nconsole.log(next_Perfect_Square(21));\nconsole.log(next_Perfect_Square(22));\nconsole.log(next_Perfect_Square(23));\nconsole.log(next_Perfect_Square(24));\nconsole.log(next_Perfect_Square(25));\nconsole.log(next_Perfect_Square(26));\nconsole.log(next_Perfect_Square(27));\nconsole.log(next_Perfect_Square(28));\nconsole.log(next_Perfect_Square(29));\nconsole.log(next_Perfect_Square(30));\nconsole.log(next_Perfect_Square(31));\nconsole.log(next_Perfect_Square(32));\nconsole.log(next_Perfect_Square(33));\nconsole.log(next_Perfect_Square(34));\nconsole.log(next_Perfect_Square(35));\nconsole.log(next_Perfect_Square(36));\nconsole.log(next_Perfect_Square(37));\nconsole.log(next_Perfect_Square(38));\nconsole.log(next_Perfect_Square(39));\nconsole.log(next_Perfect_Square(40));\nconsole.log(next_Perfect_\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "../../../../tmp/tmp53t0040d.ts(47,1): error TS1005: ',' expected.\n../../../../tmp/tmp53t0040d.ts(47,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (true) {\n        if (i * i > N) {\n            return i * i;\n        }\n        i++;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(5));\nconsole.log(next_Perfect_Square(12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122784,
      "stdout": "9\n16\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmp8zbrisan.js:15:12)\n    at Object.<anonymous> (/tmp/tmp8zbrisan.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let next_Perfect_Square = 0;\n    let i = 1;\n    while (next_Perfect_Square < N) {\n        next_Perfect_Square = i * i;\n        i++;\n    }\n    return next_Perfect_Square;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpietwiqcv.js:17:12)\n    at Object.<anonymous> (/tmp/tmpietwiqcv.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (true) {\n        if (i * i > N) {\n            return i * i;\n        }\n        i++;\n    }\n}\n\nconsole.log(next_Perfect_Square(5));\nconsole.log(next_Perfect_Square(12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "9\n16\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let num: number = N;\n    let sqrt: number = Math.sqrt(num);\n    let next_Perfect_Square: number = Math.ceil(sqrt);\n    return next_Perfect_Square * next_Perfect_Square;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122784,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpzlgfbfdk.js:14:12)\n    at Object.<anonymous> (/tmp/tmpzlgfbfdk.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(5));\nconsole.log(next_Perfect_Square(8));\nconsole.log(next_Perfect_Square(15));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122784,
      "stdout": "9\n9\n16\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let next_Perfect_Square = 0;\n    let i = 1;\n    while (next_Perfect_Square < N) {\n        next_Perfect_Square = i * i;\n        i++;\n    }\n    return next_Perfect_Square;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpietwiqcv.js:17:12)\n    at Object.<anonymous> (/tmp/tmpietwiqcv.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    let result: number = 0;\n    while (result < N) {\n        result = i * i;\n        i++;\n    }\n    return result;\n}\n\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122784,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpemnijpru.js:17:12)\n    at Object.<anonymous> (/tmp/tmpemnijpru.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122784,
      "stdout": "16\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpdx10lqya.js:15:12)\n    at Object.<anonymous> (/tmp/tmpdx10lqya.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(5));\nconsole.log(next_Perfect_Square(10));\nconsole.log(next_Perfect_Square(15));\nconsole.log(next_Perfect_Square(20));\nconsole.log(next_Perfect_Square(25));\nconsole.log(next_Perfect_Square(30));\nconsole.log(next_Perfect_Square(35));\nconsole.log(next_Perfect_Square(40));\nconsole.log(next_Perfect_Square(45));\nconsole.log(next_Perfect_Square(50));\nconsole.log(next_Perfect_Square(55));\nconsole.log(next_Perfect_Square(60));\nconsole.log(next_Perfect_Square(65));\nconsole.log(next_Perfect_Square(70));\nconsole.log(next_Perfect_Square(75));\nconsole.log(next_Perfect_Square(80));\nconsole.log(next_Perfect_Square(85));\nconsole.log(next_Perfect_Square(90));\nconsole.log(next_Perfect_Square(95));\nconsole.log(next_Perfect_Square(100));\nconsole.log(next_Perfect_Square(105));\nconsole.log(next_Perfect_Square(110));\nconsole.log(next_Perfect_Square(115));\nconsole.log(next_Perfect_Square(120));\nconsole.log(next_Perfect_Square(125));\nconsole.log(next_Perfect_Square(130));\nconsole.log(next_Perfect_Square(135));\nconsole.log(next_Perfect_Square(140));\nconsole.log(next_Perfect_Square(145));\nconsole.log(next_Perfect_Square(150));\nconsole.log(next_Perfect_Square(155));\nconsole.log(next_Perfect_Square(160));\nconsole.log(next_Perfect_Square(165));\nconsole.log(next_Perfect_Square(170));\nconsole.log(next_Perfect_Square(175));\nconsole.log(next_Perfect_Square(180));\nconsole.log(next_Perfect\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122783,
      "stdout": "../../../../tmp/tmp_eij1yge.ts(46,1): error TS1005: ',' expected.\n../../../../tmp/tmp_eij1yge.ts(46,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122784,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpdbolj5yo.js:14:12)\n    at Object.<anonymous> (/tmp/tmpdbolj5yo.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    var i = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\n\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122784,
      "stdout": "36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\nconsole.log(next_Perfect_Square(37));\nconsole.log(next_Perfect_Square(87));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122786,
      "stdout": "25\n49\n100\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmp3gd7gxnl.js:17:12)\n    at Object.<anonymous> (/tmp/tmp3gd7gxnl.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpchwhfpf3.js:15:12)\n    at Object.<anonymous> (/tmp/tmpchwhfpf3.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(5));\nconsole.log(next_Perfect_Square(12));\nconsole.log(next_Perfect_Square(15));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122786,
      "stdout": "9\n16\n16\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let num = N;\n    while (true) {\n        let sqrt = Math.sqrt(num);\n        if (sqrt % 1 === 0) {\n            return num;\n        }\n        num++;\n    }\n}\n\nconsole.log(next_Perfect_Square(10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122786,
      "stdout": "16\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmptvbdb70r.js:18:12)\n    at Object.<anonymous> (/tmp/tmptvbdb70r.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let next_Perfect_Square: number = 0;\n    let i: number = 1;\n    while (i <= N) {\n        if (i * i > N) {\n            next_Perfect_Square = i * i;\n            break;\n        }\n        i++;\n    }\n    return next_Perfect_Square;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122786,
      "stdout": "36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (true) {\n        if (i * i > N) {\n            return i * i;\n        }\n        i++;\n    }\n}\n\nconsole.log(next_Perfect_Square(5));\nconsole.log(next_Perfect_Square(6));\nconsole.log(next_Perfect_Square(7));\nconsole.log(next_Perfect_Square(8));\nconsole.log(next_Perfect_Square(9));\nconsole.log(next_Perfect_Square(10));\nconsole.log(next_Perfect_Square(11));\nconsole.log(next_Perfect_Square(12));\nconsole.log(next_Perfect_Square(13));\nconsole.log(next_Perfect_Square(14));\nconsole.log(next_Perfect_Square(15));\nconsole.log(next_Perfect_Square(16));\nconsole.log(next_Perfect_Square(17));\nconsole.log(next_Perfect_Square(18));\nconsole.log(next_Perfect_Square(19));\nconsole.log(next_Perfect_Square(20));\nconsole.log(next_Perfect_Square(21));\nconsole.log(next_Perfect_Square(22));\nconsole.log(next_Perfect_Square(23));\nconsole.log(next_Perfect_Square(24));\nconsole.log(next_Perfect_Square(25));\nconsole.log(next_Perfect_Square(26));\nconsole.log(next_Perfect_Square(27));\nconsole.log(next_Perfect_Square(28));\nconsole.log(next_Perfect_Square(29));\nconsole.log(next_Perfect_Square(30));\nconsole.log(next_Perfect_Square(31));\nconsole.log(next_Perfect_Square(32));\nconsole.log(next_Perfect_Square(33));\nconsole.log(next_Perfect_Square(34));\nconsole.log(next_Perfect_Square(35));\nconsole.log(next_Perfect_Square(36));\nconsole.log(next_Perfect_Square(37));\nconsole.log(next_Perfect_Square(38));\nconsole.log(next_Perfect_Square(39));\nconsole.log(next_Perfect_Square(40\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122786,
      "stdout": "../../../../tmp/tmp9o1y86g4.ts(48,1): error TS1005: ',' expected.\n../../../../tmp/tmp9o1y86g4.ts(48,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmp8zbrisan.js:15:12)\n    at Object.<anonymous> (/tmp/tmp8zbrisan.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpchwhfpf3.js:15:12)\n    at Object.<anonymous> (/tmp/tmpchwhfpf3.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(\"Next perfect square greater than given number is \" + next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122786,
      "stdout": "Next perfect square greater than given number is 25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmp0agdiauy.js:15:12)\n    at Object.<anonymous> (/tmp/tmp0agdiauy.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122784,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpdbolj5yo.js:14:12)\n    at Object.<anonymous> (/tmp/tmpdbolj5yo.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (true) {\n        if (i * i > N) {\n            return i * i;\n        }\n        i++;\n    }\n}\n\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122786,
      "stdout": "36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    let result = 0;\n    while (result < N) {\n        result = i * i;\n        i++;\n    }\n    return result;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmppuj9j2rw.js:17:12)\n    at Object.<anonymous> (/tmp/tmppuj9j2rw.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    let result: number = 0;\n    while (result < N) {\n        result = i * i;\n        i++;\n    }\n    return result;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpq555avv4.js:17:12)\n    at Object.<anonymous> (/tmp/tmpq555avv4.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (true) {\n        if (i * i > N) {\n            return i * i;\n        }\n        i++;\n    }\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(5));\nconsole.log(next_Perfect_Square(6));\nconsole.log(next_Perfect_Square(8));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "9\n9\n9\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpnktkaxob.js:17:12)\n    at Object.<anonymous> (/tmp/tmpnktkaxob.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let sqrt_N = Math.sqrt(N);\n    let next_Perfect_Square = Math.ceil(sqrt_N);\n    return next_Perfect_Square * next_Perfect_Square;\n}\nconsole.log(next_Perfect_Square(36));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "36\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpht5t2zke.js:13:12)\n    at Object.<anonymous> (/tmp/tmpht5t2zke.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let sqrt = Math.sqrt(N);\n    let next_Perfect_Square = Math.ceil(sqrt);\n    return next_Perfect_Square * next_Perfect_Square;\n}\n\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpkbaxv0hu.js:13:12)\n    at Object.<anonymous> (/tmp/tmpkbaxv0hu.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let next_Perfect_Square: number = 0;\n    let i: number = 1;\n    while (true) {\n        if (i * i > N) {\n            next_Perfect_Square = i * i;\n            break;\n        }\n        i++;\n    }\n    return next_Perfect_Square;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\n\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122784,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmppwqh_zbk.js:15:12)\n    at Object.<anonymous> (/tmp/tmppwqh_zbk.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let next_perfect_square = 0;\n    let i = 1;\n    while (next_perfect_square < N) {\n        next_perfect_square = i * i;\n        i++;\n    }\n    return next_perfect_square;\n}\nconsole.log(next_Perfect_Square(8));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "9\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmph0c49a8w.js:17:12)\n    at Object.<anonymous> (/tmp/tmph0c49a8w.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmp8zbrisan.js:15:12)\n    at Object.<anonymous> (/tmp/tmp8zbrisan.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmp8zbrisan.js:15:12)\n    at Object.<anonymous> (/tmp/tmp8zbrisan.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmp5mwdyb5u.js:14:12)\n    at Object.<anonymous> (/tmp/tmp5mwdyb5u.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(5));\nconsole.log(next_Perfect_Square(12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "9\n16\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmph6ew07ut.js:16:12)\n    at Object.<anonymous> (/tmp/tmph6ew07ut.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\n\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let next_perfect_square = 0;\n    let i = 1;\n    while (next_perfect_square < N) {\n        next_perfect_square = i * i;\n        i++;\n    }\n    return next_perfect_square;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpi776u5ju.js:17:12)\n    at Object.<anonymous> (/tmp/tmpi776u5ju.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpchwhfpf3.js:15:12)\n    at Object.<anonymous> (/tmp/tmpchwhfpf3.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    var i: number = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmp54ai4_fv.js:15:12)\n    at Object.<anonymous> (/tmp/tmp54ai4_fv.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmp8zbrisan.js:15:12)\n    at Object.<anonymous> (/tmp/tmp8zbrisan.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmp8zbrisan.js:15:12)\n    at Object.<anonymous> (/tmp/tmp8zbrisan.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(5));\nconsole.log(next_Perfect_Square(12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "9\n16\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmp8zbrisan.js:15:12)\n    at Object.<anonymous> (/tmp/tmp8zbrisan.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\n\nconsole.log(next_Perfect_Square(10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "16\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmp8zbrisan.js:15:12)\n    at Object.<anonymous> (/tmp/tmp8zbrisan.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\n\nconsole.log(next_Perfect_Square(5));\nconsole.log(next_Perfect_Square(10));\nconsole.log(next_Perfect_Square(15));\nconsole.log(next_Perfect_Square(20));\nconsole.log(next_Perfect_Square(25));\nconsole.log(next_Perfect_Square(30));\nconsole.log(next_Perfect_Square(35));\nconsole.log(next_Perfect_Square(40));\nconsole.log(next_Perfect_Square(45));\nconsole.log(next_Perfect_Square(50));\nconsole.log(next_Perfect_Square(55));\nconsole.log(next_Perfect_Square(60));\nconsole.log(next_Perfect_Square(65));\nconsole.log(next_Perfect_Square(70));\nconsole.log(next_Perfect_Square(75));\nconsole.log(next_Perfect_Square(80));\nconsole.log(next_Perfect_Square(85));\nconsole.log(next_Perfect_Square(90));\nconsole.log(next_Perfect_Square(95));\nconsole.log(next_Perfect_Square(100));\nconsole.log(next_Perfect_Square(105));\nconsole.log(next_Perfect_Square(110));\nconsole.log(next_Perfect_Square(115));\nconsole.log(next_Perfect_Square(120));\nconsole.log(next_Perfect_Square(125));\nconsole.log(next_Perfect_Square(130));\nconsole.log(next_Perfect_Square(135));\nconsole.log(next_Perfect_Square(140));\nconsole.log(next_Perfect_Square(145));\nconsole.log(next_Perfect_Square(150));\nconsole.log(next_Perfect_Square(155));\nconsole.log(next_Perfect_Square(160));\nconsole.log(next_Perfect_Square(165));\nconsole.log(next_Perfect_Square(170));\nconsole.log(next_Perfect_Square(175));\nconsole.log(next_Perfect_Square(180));\nconsole.log(next_Perfect_\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "../../../../tmp/tmpy_63qr73.ts(47,1): error TS1005: ',' expected.\n../../../../tmp/tmpy_63qr73.ts(47,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\n\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\n\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122784,
      "stdout": "36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    var i = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpetb3ygqv.js:14:12)\n    at Object.<anonymous> (/tmp/tmpetb3ygqv.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    var i = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let sqrt_N = Math.sqrt(N);\n    let next_Perfect_Square = Math.ceil(sqrt_N) * Math.ceil(sqrt_N);\n    return next_Perfect_Square;\n}\nconsole.log(next_Perfect_Square(5));\nconsole.log(next_Perfect_Square(6));\nconsole.log(next_Perfect_Square(7));\nconsole.log(next_Perfect_Square(8));\nconsole.log(next_Perfect_Square(9));\nconsole.log(next_Perfect_Square(10));\nconsole.log(next_Perfect_Square(11));\nconsole.log(next_Perfect_Square(12));\nconsole.log(next_Perfect_Square(13));\nconsole.log(next_Perfect_Square(14));\nconsole.log(next_Perfect_Square(15));\nconsole.log(next_Perfect_Square(16));\nconsole.log(next_Perfect_Square(17));\nconsole.log(next_Perfect_Square(18));\nconsole.log(next_Perfect_Square(19));\nconsole.log(next_Perfect_Square(20));\nconsole.log(next_Perfect_Square(21));\nconsole.log(next_Perfect_Square(22));\nconsole.log(next_Perfect_Square(23));\nconsole.log(next_Perfect_Square(24));\nconsole.log(next_Perfect_Square(25));\nconsole.log(next_Perfect_Square(26));\nconsole.log(next_Perfect_Square(27));\nconsole.log(next_Perfect_Square(28));\nconsole.log(next_Perfect_Square(29));\nconsole.log(next_Perfect_Square(30));\nconsole.log(next_Perfect_Square(31));\nconsole.log(next_Perfect_Square(32));\nconsole.log(next_Perfect_Square(33));\nconsole.log(next_Perfect_Square(34));\nconsole.log(next_Perfect_Square(35));\nconsole.log(next_Perfect_Square(36));\nconsole.log(next_Perfect_Square(37));\nconsole.log(next_Perfect_Square(38));\nconsole.log(next_Perfect_Square(39));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "9\n9\n9\n9\n9\n16\n16\n16\n16\n16\n16\n16\n25\n25\n25\n25\n25\n25\n25\n25\n25\n36\n36\n36\n36\n36\n36\n36\n36\n36\n36\n36\n49\n49\n49\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmp92hwvyp0.js:47:12)\n    at Object.<anonymous> (/tmp/tmp92hwvyp0.js:49:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let sqrt_N = Math.sqrt(N);\n    let next_Perfect_Square = Math.ceil(sqrt_N) * Math.ceil(sqrt_N);\n    return next_Perfect_Square;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpbzo09jmd.js:13:12)\n    at Object.<anonymous> (/tmp/tmpbzo09jmd.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(5));\nconsole.log(next_Perfect_Square(12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "9\n16\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmph6ew07ut.js:16:12)\n    at Object.<anonymous> (/tmp/tmph6ew07ut.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let sqrt_N = Math.sqrt(N);\n    let next_Perfect_Square = Math.ceil(sqrt_N) * Math.ceil(sqrt_N);\n    return next_Perfect_Square;\n}\n\nconsole.log(next_Perfect_Square(5));\nconsole.log(next_Perfect_Square(8));\nconsole.log(next_Perfect_Square(15));\nconsole.log(next_Perfect_Square(25));\nconsole.log(next_Perfect_Square(37));\nconsole.log(next_Perfect_Square(48));\nconsole.log(next_Perfect_Square(57));\nconsole.log(next_Perfect_Square(68));\nconsole.log(next_Perfect_Square(79));\nconsole.log(next_Perfect_Square(90));\nconsole.log(next_Perfect_Square(101));\nconsole.log(next_Perfect_Square(112));\nconsole.log(next_Perfect_Square(123));\nconsole.log(next_Perfect_Square(134));\nconsole.log(next_Perfect_Square(145));\nconsole.log(next_Perfect_Square(156));\nconsole.log(next_Perfect_Square(167));\nconsole.log(next_Perfect_Square(178));\nconsole.log(next_Perfect_Square(189));\nconsole.log(next_Perfect_Square(200));\nconsole.log(next_Perfect_Square(211));\nconsole.log(next_Perfect_Square(222));\nconsole.log(next_Perfect_Square(233));\nconsole.log(next_Perfect_Square(244));\nconsole.log(next_Perfect_Square(255));\nconsole.log(next_Perfect_Square(266));\nconsole.log(next_Perfect_Square(277));\nconsole.log(next_Perfect_Square(288));\nconsole.log(next_Perfect_Square(299));\nconsole.log(next_Perfect_Square(310));\nconsole.log(next_Perfect_Square(321));\nconsole.log(next_Perfect_Square(332));\nconsole.log(next_Perfect_Square(343));\nconsole.log(next_Perfect_Square(354));\nconsole.log(next_Perfect_Square(365));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "9\n9\n16\n25\n49\n49\n64\n81\n81\n100\n121\n121\n144\n144\n169\n169\n169\n196\n196\n225\n225\n225\n256\n256\n256\n289\n289\n289\n324\n324\n324\n361\n361\n361\n400\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpme_2tugl.js:47:12)\n    at Object.<anonymous> (/tmp/tmpme_2tugl.js:49:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(5));\nconsole.log(next_Perfect_Square(12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "9\n16\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmph6ew07ut.js:16:12)\n    at Object.<anonymous> (/tmp/tmph6ew07ut.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122784,
      "stdout": "16\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmp7lham2z6.js:15:12)\n    at Object.<anonymous> (/tmp/tmp7lham2z6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    var i = 1;\n    var j = 1;\n    while (i < N) {\n        i = i + j;\n        j = j + 2;\n    }\n    return i;\n}\nconsole.log(\"Next perfect square greater than given number is \" + next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "Next perfect square greater than given number is 26\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n37\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmpzl03ujk5.js:15:12)\n    at Object.<anonymous> (/tmp/tmpzl03ujk5.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 37,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    var i = 1;\n    while (true) {\n        if (i * i > N) {\n            return i * i;\n        }\n        i++;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpchwhfpf3.js:15:12)\n    at Object.<anonymous> (/tmp/tmpchwhfpf3.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let x = 1;\n    while (true) {\n        if (x * x > N) {\n            return x * x;\n        }\n        else {\n            x++;\n        }\n    }\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpchwhfpf3.js:15:12)\n    at Object.<anonymous> (/tmp/tmpchwhfpf3.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "16\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    var sqrt_N = Math.sqrt(N);\n    var next_Perfect_Square = Math.ceil(sqrt_N) * Math.ceil(sqrt_N);\n    return next_Perfect_Square;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpltqja02q.js:13:12)\n    at Object.<anonymous> (/tmp/tmpltqja02q.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let sqrt_N: number = Math.sqrt(N);\n    let next_Perfect_Square: number = Math.pow(sqrt_N + 1, 2);\n    return next_Perfect_Square;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n47.83215956619923\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmp2htqqvdn.js:10:12)\n    at Object.<anonymous> (/tmp/tmp2htqqvdn.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 47.83215956619923,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\n\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    var i = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\n\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "16\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpchwhfpf3.js:15:12)\n    at Object.<anonymous> (/tmp/tmpchwhfpf3.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122784,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpdbolj5yo.js:14:12)\n    at Object.<anonymous> (/tmp/tmpdbolj5yo.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    let result: number = 0;\n    while (result < N) {\n        result = i * i;\n        i++;\n    }\n    return result;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpq555avv4.js:17:12)\n    at Object.<anonymous> (/tmp/tmpq555avv4.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmp8zbrisan.js:15:12)\n    at Object.<anonymous> (/tmp/tmp8zbrisan.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(5));\nconsole.log(next_Perfect_Square(15));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "9\n16\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122784,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpdbolj5yo.js:14:12)\n    at Object.<anonymous> (/tmp/tmpdbolj5yo.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(\"Next perfect square greater than given number is: \" + next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "Next perfect square greater than given number is: 25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmp1033vdbt.js:15:12)\n    at Object.<anonymous> (/tmp/tmp1033vdbt.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpchwhfpf3.js:15:12)\n    at Object.<anonymous> (/tmp/tmpchwhfpf3.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    let result: number = 0;\n    while (result < N) {\n        result = i * i;\n        i++;\n    }\n    return result;\n}\nconsole.log(next_Perfect_Square(5));\nconsole.log(next_Perfect_Square(8));\nconsole.log(next_Perfect_Square(15));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "9\n9\n16\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmp_rfcxwm3.js:19:12)\n    at Object.<anonymous> (/tmp/tmp_rfcxwm3.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i < N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(\"Next Perfect Square is : \" + next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "Next Perfect Square is : 25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpo90vgfnw.js:15:12)\n    at Object.<anonymous> (/tmp/tmpo90vgfnw.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    let result: number = 0;\n    while (result < N) {\n        result = i * i;\n        i++;\n    }\n    return result;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1665510014,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpq555avv4.js:17:12)\n    at Object.<anonymous> (/tmp/tmpq555avv4.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (N > 0) {\n        N = N - i;\n        i = i + 2;\n    }\n    return i - 2;\n}\nconsole.log(next_Perfect_Square(5));\nconsole.log(next_Perfect_Square(12));\nconsole.log(next_Perfect_Square(15));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "5\n7\n7\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n11\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmpv5h0s9nx.js:16:12)\n    at Object.<anonymous> (/tmp/tmpv5h0s9nx.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 11,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (true) {\n        if (i * i > N) {\n            return i * i;\n        }\n        i++;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i: number = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\nconsole.log(next_Perfect_Square(5));\nconsole.log(next_Perfect_Square(12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "9\n16\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square(N: number): number {\n    let i = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;\n}\n\nconsole.log(next_Perfect_Square(25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_Perfect_Square;\n  assert.deepEqual(candidate(35),36);\n  assert.deepEqual(candidate(6),9);\n  assert.deepEqual(candidate(9),16);\n}\n\ntest();",
      "timestamp": 1666122784,
      "stdout": "36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_624_is_upper",
  "language": "ts",
  "prompt": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_624_is_upper.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"hello\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "HELLO\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"Hello World\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "HELLO WORLD\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"w3resource\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "W3RESOURCE\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\nconsole.log(is_upper(\"Hello World\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "HELLO WORLD\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"w3resource\"));\nconsole.log(is_upper(\"W3RESOURCE\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "W3RESOURCE\nW3RESOURCE\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\nconsole.log(is_upper(\"w3resource\"));\nconsole.log(is_upper(\"W3RESOURCE\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "W3RESOURCE\nW3RESOURCE\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"Hello\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "HELLO\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"Hello World\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "HELLO WORLD\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\nconsole.log(is_upper(\"Hello World\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "HELLO WORLD\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"w3resource\"));\nconsole.log(is_upper(\"HELLO WORLD\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "W3RESOURCE\nHELLO WORLD\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"Hello\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "HELLO\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"hello\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "HELLO\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"Hello\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "HELLO\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\nconsole.log(is_upper(\"hello\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "HELLO\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\nconsole.log(is_upper(\"Hello World\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "HELLO WORLD\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\nconsole.log(is_upper(\"w3resource\"));\nconsole.log(is_upper(\"W3RESOURCE\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "W3RESOURCE\nW3RESOURCE\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"w3resource\"));\nconsole.log(is_upper(\"HELLO WORLD\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "W3RESOURCE\nHELLO WORLD\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"hello\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "HELLO\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\nconsole.log(is_upper(\"w3resource\"));\nconsole.log(is_upper(\"HELLO\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "W3RESOURCE\nHELLO\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\nconsole.log(is_upper(\"hello\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "HELLO\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"hello\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "HELLO\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"welcome\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "WELCOME\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"welcome\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "WELCOME\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"w3resource\"));\nconsole.log(is_upper(\"HELLO WORLD\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "W3RESOURCE\nHELLO WORLD\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"hello\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "HELLO\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\nconsole.log(is_upper(\"w3resource\"));\nconsole.log(is_upper(\"HELLO WORLD\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "W3RESOURCE\nHELLO WORLD\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"w3resource\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "W3RESOURCE\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"Hello World\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "HELLO WORLD\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"w3resource\"));\nconsole.log(is_upper(\"W3RESOURCE\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "W3RESOURCE\nW3RESOURCE\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\nconsole.log(is_upper(\"w3resource\"));\nconsole.log(is_upper(\"HELLO WORLD\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "W3RESOURCE\nHELLO WORLD\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"w3resource\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "W3RESOURCE\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"w3resource\"));\nconsole.log(is_upper(\"W3RESOURCE\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "W3RESOURCE\nW3RESOURCE\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"w3resource\"));\nconsole.log(is_upper(\"W3RESOURCE\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "W3RESOURCE\nW3RESOURCE\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\nconsole.log(is_upper(\"hello\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "HELLO\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper('w3resource'));\nconsole.log(is_upper('PYTHON'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "W3RESOURCE\nPYTHON\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"w3resource\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "W3RESOURCE\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    var upper = string.toUpperCase();\n    return upper;\n}\nconsole.log(is_upper(\"hello\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "HELLO\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"hello\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "HELLO\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"Hello World\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "HELLO WORLD\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"w3resource\"));\nconsole.log(is_upper(\"W3RESOURCE\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "W3RESOURCE\nW3RESOURCE\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"hello\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "HELLO\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"w3resource\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "W3RESOURCE\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"w3resource\"));\nconsole.log(is_upper(\"W3RESOURCE\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "W3RESOURCE\nW3RESOURCE\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"hello\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "HELLO\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\nconsole.log(is_upper(\"w3resource\"));\nconsole.log(is_upper(\"HELLO I AM DONALD\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "W3RESOURCE\nHELLO I AM DONALD\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"Hello World\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "HELLO WORLD\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\nconsole.log(is_upper(\"w3resource\"));\nconsole.log(is_upper(\"HELLO\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "W3RESOURCE\nHELLO\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"w3resource\"));\nconsole.log(is_upper(\"W3RESOURCE\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "W3RESOURCE\nW3RESOURCE\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\nconsole.log(is_upper(\"w3resource\"));\nconsole.log(is_upper(\"HELLO WORLD\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "W3RESOURCE\nHELLO WORLD\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"welcome\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "WELCOME\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"w3resource\"));\nconsole.log(is_upper(\"W3RESOURCE.COM\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "W3RESOURCE\nW3RESOURCE.COM\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"w3resource\"));\nconsole.log(is_upper(\"W3RESOURCE\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "W3RESOURCE\nW3RESOURCE\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"w3resource\"));\nconsole.log(is_upper(\"W3RESOURCE\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "W3RESOURCE\nW3RESOURCE\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"w3resource\"));\nconsole.log(is_upper(\"W3RESOURCE\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "W3RESOURCE\nW3RESOURCE\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\nconsole.log(is_upper(\"w3resource\"));\nconsole.log(is_upper(\"W3RESOURCE\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "W3RESOURCE\nW3RESOURCE\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"Hello World\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "HELLO WORLD\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"w3resource\"));\nconsole.log(is_upper(\"HELLO WORLD\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "W3RESOURCE\nHELLO WORLD\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"w3resource\"));\nconsole.log(is_upper(\"W3RESOURCE.COM\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "W3RESOURCE\nW3RESOURCE.COM\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"Hello\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "HELLO\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\nconsole.log(is_upper(\"w3resource\"));\nconsole.log(is_upper(\"HELLO WORLD\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "W3RESOURCE\nHELLO WORLD\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\nconsole.log(is_upper('w3resource'));\nconsole.log(is_upper('PYTHON'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "W3RESOURCE\nPYTHON\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"welcome\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "WELCOME\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"hello\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "HELLO\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\nconsole.log(is_upper(\"hello\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "HELLO\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\nconsole.log(is_upper(\"w3resource\"));\nconsole.log(is_upper(\"W3RESOURCE\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "W3RESOURCE\nW3RESOURCE\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"w3resource\"));\nconsole.log(is_upper(\"HELLO WORLD\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "W3RESOURCE\nHELLO WORLD\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\nconsole.log(is_upper(\"hello\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "HELLO\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"w3resource\"));\nconsole.log(is_upper(\"W3RESOURCE.COM\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "W3RESOURCE\nW3RESOURCE.COM\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"w3resource\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "W3RESOURCE\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"Hello World\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "HELLO WORLD\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\nconsole.log(is_upper('w3resource'));\nconsole.log(is_upper('PYTHON'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "W3RESOURCE\nPYTHON\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\nconsole.log(is_upper(\"Hello World\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "HELLO WORLD\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"Hello\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "HELLO\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"Hello\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "HELLO\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"hello world\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "HELLO WORLD\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"This is a test\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "THIS IS A TEST\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"hello\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "HELLO\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"Hello\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "HELLO\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"welcome\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "WELCOME\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"w3resource\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "W3RESOURCE\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"welcome\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "WELCOME\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\nconsole.log(is_upper(\"w3resource\"));\nconsole.log(is_upper(\"HELLO WORLD\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "W3RESOURCE\nHELLO WORLD\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"w3resource\"));\nconsole.log(is_upper(\"W3RESOURCE\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "W3RESOURCE\nW3RESOURCE\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\nconsole.log(is_upper(\"Hello\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "HELLO\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"w3resource\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "W3RESOURCE\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\nconsole.log(is_upper('w3resource'));\nconsole.log(is_upper('PYTHON'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "W3RESOURCE\nPYTHON\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\nconsole.log(is_upper(\"w3resource\"));\nconsole.log(is_upper(\"HELLO WORLD\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "W3RESOURCE\nHELLO WORLD\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"w3resource\"));\nconsole.log(is_upper(\"HELLO WORLD\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "W3RESOURCE\nHELLO WORLD\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\nconsole.log(is_upper(\"w3resource\"));\nconsole.log(is_upper(\"W3RESOURCE\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "W3RESOURCE\nW3RESOURCE\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"w3resource\"));\nconsole.log(is_upper(\"W3RESOURCE\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "W3RESOURCE\nW3RESOURCE\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\nconsole.log(is_upper(\"w3resource\"));\nconsole.log(is_upper(\"HELLO I AM DONALD\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "W3RESOURCE\nHELLO I AM DONALD\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"w3resource\"));\nconsole.log(is_upper(\"HELLO WORLD\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "W3RESOURCE\nHELLO WORLD\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\nconsole.log(is_upper(\"w3resource\"));\nconsole.log(is_upper(\"HELLO\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "W3RESOURCE\nHELLO\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"Hello\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "HELLO\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"welcome\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "WELCOME\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper('w3resource'));\nconsole.log(is_upper('PYTHON'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "W3RESOURCE\nPYTHON\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"Hello\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "HELLO\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n    return string.toUpperCase();\n}\nconsole.log(is_upper(\"w3resource\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
      "timestamp": 1665517559,
      "stdout": "W3RESOURCE\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
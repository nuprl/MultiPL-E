{
  "name": "mbpp_223_is_majority",
  "language": "ts",
  "prompt": "//Write a function that takes in a sorted array, its length (n), and an element and returns whether the element is the majority element in the given sorted array. (The majority element is the element that occurs more than n/2 times.)\nfunction is_majority(arr: number[], n: number, x: number): boolean {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_223_is_majority.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_majority;\n  assert.deepEqual(candidate([1, 2, 3, 3, 3, 3, 10], 7, 3),true);\n  assert.deepEqual(candidate([1, 1, 2, 4, 4, 4, 6, 6], 8, 4),false);\n  assert.deepEqual(candidate([1, 1, 1, 2, 2], 5, 1),true);\n  assert.deepEqual(candidate([1, 1, 2, 2], 5, 1),false);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let count = 0;\n    for (let i = 0; i < n; i++) {\n        if (arr[i] == x) {\n            count++;\n        }\n    }\n    return count > n / 2;\n}\n",
    "    let i: number = 0;\n    let j: number = n - 1;\n    let mid: number = Math.floor((i + j) / 2);\n    while (i <= j) {\n        if (arr[mid] == x && (mid == 0 || arr[mid - 1] != x)) {\n            return (mid + n / 2) <= n;\n        }\n        else if (arr[mid] >= x) {\n            j = mid - 1;\n        }\n        else {\n            i = mid + 1;\n        }\n        mid = Math.floor((i + j) / 2);\n    }\n    return false;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < n; i++) {\n        if (arr[i] === x) {\n            count++;\n        }\n    }\n    return count > n / 2;\n}\n",
    "  let count = 0;\n  for (let i = 0; i < n; i++) {\n    if (arr[i] == x) {\n      count++;\n    }\n  }\n  if (count > n / 2) {\n    return true;\n  } else {\n    return false;\n  }\n}\n",
    "    let count = 0;\n    for (let i = 0; i < n; i++) {\n        if (arr[i] == x) {\n            count++;\n        }\n    }\n    if (count > n / 2) {\n        return true;\n    }\n    return false;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < n; i++) {\n        if (arr[i] == x) {\n            count++;\n        }\n    }\n    if (count > n / 2) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n",
    "    let count = 0;\n    for (let i = 0; i < n; i++) {\n        if (arr[i] == x) {\n            count++;\n        }\n    }\n    if (count > n / 2) {\n        return true;\n    }\n    return false;\n}\n",
    "  let count = 0;\n  for (let i = 0; i < n; i++) {\n    if (arr[i] === x) {\n      count++;\n    }\n  }\n  return count > n / 2;\n}\n",
    "    let i: number = 0;\n    let j: number = n - 1;\n    let mid: number = 0;\n    while (i <= j) {\n        mid = Math.floor((i + j) / 2);\n        if (arr[mid] == x && (mid == 0 || arr[mid - 1] != x)) {\n            break;\n        } else if (arr[mid] >= x) {\n            j = mid - 1;\n        } else {\n            i = mid + 1;\n        }\n    }\n    if (arr[mid] == x) {\n        if (mid + n / 2 <= n - 1 && arr[mid + n / 2] == x) {\n            return true;\n        } else {\n            return false;\n        }\n    } else {\n        return false;\n    }\n}\n",
    "    let i = 0;\n    let j = n - 1;\n    let mid = Math.floor((i + j) / 2);\n    while (i <= j) {\n        if (arr[mid] == x && (mid == 0 || arr[mid - 1] != x)) {\n            return (mid + n / 2) <= n;\n        }\n        else if (arr[mid] >= x) {\n            j = mid - 1;\n        }\n        else {\n            i = mid + 1;\n        }\n        mid = Math.floor((i + j) / 2);\n    }\n    return false;\n}\n",
    "    let i: number = 0;\n    let j: number = n - 1;\n    let mid: number = Math.floor((i + j) / 2);\n\n    while (i <= j) {\n        if (arr[mid] == x && (mid == 0 || arr[mid - 1] != x)) {\n            return true;\n        }\n        else if (arr[mid] >= x) {\n            j = mid - 1;\n        }\n        else {\n            i = mid + 1;\n        }\n        mid = Math.floor((i + j) / 2);\n    }\n    return false;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < n; i++) {\n        if (arr[i] == x) {\n            count++;\n        }\n    }\n    if (count > n / 2) {\n        return true;\n    }\n    return false;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < n; i++) {\n        if (arr[i] == x) {\n            count++;\n        }\n    }\n    if (count > n / 2) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    let count = 0;\n    for (let i = 0; i < n; i++) {\n        if (arr[i] == x) {\n            count++;\n        }\n    }\n    if (count > n / 2) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    let count = 0;\n    for (let i = 0; i < n; i++) {\n        if (arr[i] == x) {\n            count++;\n        }\n    }\n    if (count > n / 2) {\n        return true;\n    }\n    return false;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < n; i++) {\n        if (arr[i] == x)\n            count++;\n    }\n    if (count > n / 2)\n        return true;\n    else\n        return false;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < n; i++) {\n        if (arr[i] == x) {\n            count++;\n        }\n    }\n    if (count > n / 2) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    let count = 0;\n    for (let i = 0; i < n; i++) {\n        if (arr[i] == x) {\n            count++;\n        }\n    }\n    if (count > n / 2) {\n        return true;\n    }\n    return false;\n}\n",
    "    let i = 0;\n    let j = n - 1;\n    let mid = Math.floor(n / 2);\n    let mid_element = arr[mid];\n    while (i < j) {\n        if (arr[i] === x && arr[j] === x) {\n            return true;\n        }\n        if (arr[i] !== x) {\n            i++;\n        }\n        if (arr[j] !== x) {\n            j--;\n        }\n    }\n    return false;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < n; i++) {\n        if (arr[i] == x) {\n            count++;\n        }\n    }\n    if (count > n / 2) {\n        return true;\n    }\n    return false;\n}\n"
  ]
}
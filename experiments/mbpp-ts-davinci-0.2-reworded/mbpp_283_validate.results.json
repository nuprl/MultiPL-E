{
  "name": "mbpp_283_validate",
  "language": "ts",
  "prompt": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_283_validate.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let digits = n.toString().split('');\n    let freq = {};\n    for (let i = 0; i < digits.length; i++) {\n        let digit = digits[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < digits.length; i++) {\n        let digit = digits[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let arr = str.split('');\n    let obj = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (obj[arr[i]]) {\n            obj[arr[i]]++;\n        } else {\n            obj[arr[i]] = 1;\n        }\n    }\n    for (let key in obj) {\n        if (obj[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(12233));\nconsole.log(validate(122233));\nconsole.log(validate(1222333));\nconsole.log(validate(12223333));\nconsole.log(validate(122233333));\nconsole.log(validate(1222333333));\nconsole.log(validate(12223333333));\nconsole.log(validate(122233333333));\nconsole.log(validate(1222333333333));\nconsole.log(validate(12223333333333));\nconsole.log(validate(122233333333333));\nconsole.log(validate(1222333333333333));\nconsole.log(validate(12223333333333333));\nconsole.log(validate(122233333333333333));\nconsole.log(validate(1222333333333333333));\nconsole.log(validate(12223333333333333333));\nconsole.log(validate(122233333333333333333));\nconsole.log(validate(1222333333333333333333));\nconsole.log(validate(12223333333333333333333));\nconsole.log(validate(122233333333333333333333));\nconsole.log(validate(1222333333333333333333333));\nconsole.log(validate(12223333333333333333333333));\nconsole.log(validate(122233333333333333333333333));\nconsole.log(validate(1222333333333333333333333333));\nconsole.log(validate(12223333333333333333333333333));\nconsole.\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510245,
      "stdout": "../../../../tmp/tmp7o8a1de1.ts(47,9): error TS1003: Identifier expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let freq = {};\n    let str = n.toString();\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        freq[digit] = (freq[digit] || 0) + 1;\n    }\n    for (let key in freq) {\n        if (freq[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1222));\nconsole.log(validate(1223));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1222));\nconsole.log(validate(1223));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1222));\nconsole.log(validate(1223));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1222));\nconsole.log(validate(1223));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1222));\nconsole.log(validate(1223));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1222));\nconsole.log(validate(1223));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1222));\nconsole.log(validate(1223));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1222));\nconsole.log(validate(1223));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1222));\nconsole.log(validate(1223));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510245,
      "stdout": "true\ntrue\nfalse\ntrue\ntrue\ntrue\nfalse\ntrue\ntrue\ntrue\nfalse\ntrue\ntrue\ntrue\nfalse\ntrue\ntrue\ntrue\nfalse\ntrue\ntrue\ntrue\nfalse\ntrue\ntrue\ntrue\nfalse\ntrue\ntrue\ntrue\nfalse\ntrue\ntrue\ntrue\nfalse\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n  const digits = n.toString().split(\"\");\n  const freq = {};\n  for (let i = 0; i < digits.length; i++) {\n    const digit = digits[i];\n    freq[digit] = freq[digit] ? freq[digit] + 1 : 1;\n  }\n  for (let i = 0; i < digits.length; i++) {\n    const digit = digits[i];\n    if (freq[digit] > parseInt(digit)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1234));\nconsole.log(validate(1233));\nconsole.log(validate(122222));\nconsole.log(validate(12222222));\nconsole.log(validate(1222222222));\nconsole.log(validate(1222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510245,
      "stdout": "../../../../tmp/tmpfgun60wb.ts(26,1): error TS1005: ',' expected.\n../../../../tmp/tmpfgun60wb.ts(26,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n  let str = n.toString();\n  let freq = {};\n  for (let i = 0; i < str.length; i++) {\n    if (freq[str[i]]) {\n      freq[str[i]]++;\n    } else {\n      freq[str[i]] = 1;\n    }\n  }\n  for (let i = 0; i < str.length; i++) {\n    if (freq[str[i]] > parseInt(str[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1222));\nconsole.log(validate(1223));\nconsole.log(validate(1224));\nconsole.log(validate(1225));\nconsole.log(validate(1226));\nconsole.log(validate(1227));\nconsole.log(validate(1228));\nconsole.log(validate(1229));\nconsole.log(validate(1222));\nconsole.log(validate(1223));\nconsole.log(validate(1224));\nconsole.log(validate(1225));\nconsole.log(validate(1226));\nconsole.log(validate(1227));\nconsole.log(validate(1228));\nconsole.log(validate(1229));\nconsole.log(validate(1222));\nconsole.log(validate(1223));\nconsole.log(validate(1224));\nconsole.log(validate(1225));\nconsole.log(validate(1226));\nconsole.log(validate(1227));\nconsole.log(validate(1228));\nconsole.log(validate(12\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510245,
      "stdout": "../../../../tmp/tmp5mskwzn8.ts(54,1): error TS1005: ',' expected.\n../../../../tmp/tmp5mskwzn8.ts(54,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let obj = {};\n    for (let i = 0; i < str.length; i++) {\n        if (obj[str[i]]) {\n            obj[str[i]]++;\n        } else {\n            obj[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (obj[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(1233));\nconsole.log(validate(1222));\nconsole.log(validate(12222));\nconsole.log(validate(122222));\nconsole.log(validate(1222222));\nconsole.log(validate(12222222));\nconsole.log(validate(122222222));\nconsole.log(validate(1222222222));\nconsole.log(validate(12222222222));\nconsole.log(validate(122222222222));\nconsole.log(validate(1222222222222));\nconsole.log(validate(12222222222222));\nconsole.log(validate(122222222222222));\nconsole.log(validate(1222222222222222));\nconsole.log(validate(12222222222222222));\nconsole.log(validate(122222222222222222));\nconsole.log(validate(1222222222222222222));\nconsole.log(validate(12222222222222222222));\nconsole.log(validate(122222222222222222222));\nconsole.log(validate(1222222222222222222222));\nconsole.log(validate(12222222222222222222222));\nconsole.log(validate(122222222222222222222222));\nconsole.log(validate(1222222222\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510245,
      "stdout": "../../../../tmp/tmpyyew_w1p.ts(45,1): error TS1005: ',' expected.\n../../../../tmp/tmpyyew_w1p.ts(45,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let arr = str.split('');\n    let obj = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (obj[arr[i]]) {\n            obj[arr[i]]++;\n        } else {\n            obj[arr[i]] = 1;\n        }\n    }\n    for (let key in obj) {\n        if (obj[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510245,
      "stdout": "true\nfalse\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(12344));\nconsole.log(validate(12345));\nconsole.log(validate(123456));\nconsole.log(validate(1234567));\nconsole.log(validate(12345678));\nconsole.log(validate(123456789));\nconsole.log(validate(1234567891));\nconsole.log(validate(12345678911));\nconsole.log(validate(123456789111));\nconsole.log(validate(1234567891111));\nconsole.log(validate(12345678911111));\nconsole.log(validate(123456789111111));\nconsole.log(validate(1234567891111111));\nconsole.log(validate(12345678911111111));\nconsole.log(validate(123456789111111111));\nconsole.log(validate(1234567891111111111));\nconsole.log(validate(12345678911111111111));\nconsole.log(validate(123456789111111111111));\nconsole.log(validate(1234567891111111111111));\nconsole.log(validate(12345678911111111111111));\nconsole.log(validate(123456789111111111111111));\nconsole.log(validate(1234567891111111111111111));\nconsole.log(validate(12345678911111111111111111));\nconsole.\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510245,
      "stdout": "../../../../tmp/tmp4n9zgd5l.ts(46,9): error TS1003: Identifier expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n  let digits = n.toString().split('');\n  let freq = {};\n  for (let i = 0; i < digits.length; i++) {\n    if (freq[digits[i]]) {\n      freq[digits[i]]++;\n    } else {\n      freq[digits[i]] = 1;\n    }\n  }\n  for (let key in freq) {\n    if (freq[key] > key) {\n      return false;\n    }\n  }\n  return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510245,
      "stdout": "true\nfalse\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n  let str = n.toString();\n  let obj = {};\n  for (let i = 0; i < str.length; i++) {\n    if (obj[str[i]]) {\n      obj[str[i]]++;\n    } else {\n      obj[str[i]] = 1;\n    }\n  }\n  for (let key in obj) {\n    if (obj[key] > parseInt(key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1233));\nconsole.log(validate(1222));\nconsole.log(validate(122222));\nconsole.log(validate(12222222));\nconsole.log(validate(1222222222));\nconsole.log(validate(122222222222));\nconsole.log(validate(12222222222222));\nconsole.log(validate(1222222222222222));\nconsole.log(validate(122222222222222222));\nconsole.log(validate(12222222222222222222));\nconsole.log(validate(1222222222222222222222));\nconsole.log(validate(122222222222222222222222));\nconsole.log(validate(12222222222222222222222222));\nconsole.log(validate(1222222222222222222222222222));\nconsole.log(validate(122222222222222222222222222222));\nconsole.log(validate(12222222222222222222222222222222));\nconsole.log(validate(1222222222222222222222222222222222));\nconsole.log(validate(122222222222222222222222222222222222));\nconsole.log(validate(12222222222222222222222222222222222222));\nconsole.log(validate(122222222222222222\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510245,
      "stdout": "../../../../tmp/tmpvrrv858o.ts(41,1): error TS1005: ',' expected.\n../../../../tmp/tmpvrrv858o.ts(41,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let obj = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        obj[digit] = obj[digit] ? obj[digit] + 1 : 1;\n    }\n    for (let key in obj) {\n        if (obj[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510245,
      "stdout": "true\nfalse\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\nfalse\nfalse\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\nfalse\nfalse\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\nfalse\nfalse\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let arr = n.toString().split('');\n    let obj = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (obj[arr[i]]) {\n            obj[arr[i]]++;\n        } else {\n            obj[arr[i]] = 1;\n        }\n    }\n    for (let key in obj) {\n        if (obj[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1244));\nconsole.log(validate(1245));\nconsole.log(validate(1255));\nconsole.log(validate(1256));\nconsole.log(validate(1266));\nconsole.log(validate(1267));\nconsole.log(validate(1277));\nconsole.log(validate(1278));\nconsole.log(validate(1288));\nconsole.log(validate(1289));\nconsole.log(validate(1299));\nconsole.log(validate(1290));\nconsole.log(validate(1291));\nconsole.log(validate(1292));\nconsole.log(validate(1293));\nconsole.log(validate(1294));\nconsole.log(validate(1295));\nconsole.log(validate(1296));\nconsole.log(validate(1297));\nconsole.log(validate(1298));\nconsole.log(validate(1299));\nconsole.log(validate(1290));\nconsole.log(validate(1291));\nconsole.log(validate(1292));\nconsole.log(validate(1293));\nconsole.log(validate(1294));\nconsole.log(validate(1295));\nconsole.log(validate(1296));\nconsole.log(validate(1297));\nconsole.log(validate(1298));\nconsole.log(validate(1299));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510245,
      "stdout": "true\nfalse\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\nfalse\nfalse\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\nfalse\nfalse\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > Number(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(122333));\nconsole.log(validate(12233));\nconsole.log(validate(122233));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510245,
      "stdout": "true\ntrue\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510245,
      "stdout": "true\nfalse\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let digits = n.toString().split('');\n    let frequency = {};\n    for (let i = 0; i < digits.length; i++) {\n        let digit = digits[i];\n        if (frequency[digit]) {\n            frequency[digit]++;\n        } else {\n            frequency[digit] = 1;\n        }\n    }\n    for (let key in frequency) {\n        if (frequency[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let digits = n.toString().split('');\n    let frequency = {};\n    for (let i = 0; i < digits.length; i++) {\n        if (frequency[digits[i]]) {\n            frequency[digits[i]]++;\n        } else {\n            frequency[digits[i]] = 1;\n        }\n    }\n    for (let key in frequency) {\n        if (frequency[key] > key) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let arr = n.toString().split('');\n    let obj = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (obj[arr[i]]) {\n            obj[arr[i]]++;\n        } else {\n            obj[arr[i]] = 1;\n        }\n    }\n    for (let i = 0; i < arr.length; i++) {\n        if (obj[arr[i]] > parseInt(arr[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(122222));\nconsole.log(validate(12222222));\nconsole.log(validate(1222222222));\nconsole.log(validate(122222222222));\nconsole.log(validate(12222222222222));\nconsole.log(validate(1222222222222222));\nconsole.log(validate(122222222222222222));\nconsole.log(validate(12222222222222222222));\nconsole.log(validate(1222222222222222222222));\nconsole.log(validate(122222222222222222222222));\nconsole.log(validate(12222222222222222222222222));\nconsole.log(validate(1222222222222222222222222222));\nconsole.log(validate(122222222222222222222222222222));\nconsole.log(validate(12222222222222222222222222222222));\nconsole.log(validate(1222222222222222222222222222222222));\nconsole.log(validate(122222222222222222222222222222222222));\nconsole.log(validate(122222222222222222\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510245,
      "stdout": "../../../../tmp/tmp8y0dkn2u.ts(41,1): error TS1005: ',' expected.\n../../../../tmp/tmp8y0dkn2u.ts(41,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let key in freq) {\n        if (freq[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let digits = n.toString().split('');\n    let freq = {};\n    for (let i = 0; i < digits.length; i++) {\n        if (digits[i] in freq) {\n            freq[digits[i]]++;\n        } else {\n            freq[digits[i]] = 1;\n        }\n    }\n    for (let key in freq) {\n        if (freq[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1244));\nconsole.log(validate(1245));\nconsole.log(validate(1255));\nconsole.log(validate(1256));\nconsole.log(validate(1266));\nconsole.log(validate(1267));\nconsole.log(validate(1277));\nconsole.log(validate(1278));\nconsole.log(validate(1288));\nconsole.log(validate(1289));\nconsole.log(validate(1299));\nconsole.log(validate(1290));\nconsole.log(validate(1291));\nconsole.log(validate(1292));\nconsole.log(validate(1293));\nconsole.log(validate(1294));\nconsole.log(validate(1295));\nconsole.log(validate(1296));\nconsole.log(validate(1297));\nconsole.log(validate(1298));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122879,
      "stdout": "true\nfalse\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\nfalse\nfalse\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let map = {};\n    for (let i = 0; i < str.length; i++) {\n        if (!map[str[i]]) {\n            map[str[i]] = 1;\n        } else {\n            map[str[i]]++;\n        }\n    }\n\n    for (let i = 0; i < str.length; i++) {\n        if (map[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1244));\nconsole.log(validate(1245));\nconsole.log(validate(1255));\nconsole.log(validate(1256));\nconsole.log(validate(1266));\nconsole.log(validate(1267));\nconsole.log(validate(1277));\nconsole.log(validate(1278));\nconsole.log(validate(1288));\nconsole.log(validate(1289));\nconsole.log(validate(1299));\nconsole.log(validate(1290));\nconsole.log(validate(1291));\nconsole.log(validate(1292));\nconsole.log(validate(1293));\nconsole.log(validate(1294));\nconsole.log(validate(1295));\nconsole.log(validate(1296));\nconsole.log(validate(1297));\nconsole.log(validate(1298));\nconsole.log(validate(1299));\nconsole.log(validate(12100));\nconsole.log(validate(12110));\nconsole.log(validate(12111));\nconsole.log(validate(12112));\nconsole.log(validate(12113));\nconsole.log(validate(12114));\nconsole.log(validate(12115));\nconsole.log(validate(12116));\nconsole.log(validate(12117));\nconsole.\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122879,
      "stdout": "../../../../tmp/tmpoeii9mtv.ts(55,9): error TS1003: Identifier expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(1234));\nconsole.log(validate(1224));\nconsole.log(validate(1213));\nconsole.log(validate(1212));\nconsole.log(validate(1211));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122879,
      "stdout": "true\ntrue\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let digits = n.toString().split('');\n    let freq = {};\n    for (let i = 0; i < digits.length; i++) {\n        let digit = digits[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < digits.length; i++) {\n        let digit = digits[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n  const digits = n.toString().split(\"\");\n  const freq = {};\n  for (let digit of digits) {\n    freq[digit] = (freq[digit] || 0) + 1;\n  }\n  for (let digit of digits) {\n    if (freq[digit] > parseInt(digit)) {\n      return false;\n    }\n  }\n  return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122879,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let freq = {};\n    let str = n.toString();\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > digit) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1234));\nconsole.log(validate(1224));\nconsole.log(validate(1213));\nconsole.log(validate(1212));\nconsole.log(validate(1211));\nconsole.log(validate(2211));\nconsole.log(validate(2221));\nconsole.log(validate(2222));\nconsole.log(validate(2223));\nconsole.log(validate(2224));\nconsole.log(validate(2225));\nconsole.log(validate(2226));\nconsole.log(validate(2227));\nconsole.log(validate(2228));\nconsole.log(validate(2229));\nconsole.log(validate(2230));\nconsole.log(validate(2231));\nconsole.log(validate(2232));\nconsole.log(validate(2233));\nconsole.log(validate(2234));\nconsole.log(validate(2235));\nconsole.log(validate(2236));\nconsole.log(validate(2237));\nconsole.log(validate(2238));\nconsole.log(validate(2239));\nconsole.log(validate(2240));\nconsole.log(validate(2241));\nconsole.log(validate(2242));\nconsole.log(validate(2243));\nconsole.log(validate(2244));\nconsole.log(validate(2245));\nconsole.log(validate(2246));\nconsole.log(validate(2247));\nconsole.log(valid\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122879,
      "stdout": "../../../../tmp/tmp__cnlr34.ts(56,1): error TS1005: ',' expected.\n../../../../tmp/tmp__cnlr34.ts(56,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let nums = n.toString().split('');\n    let freq = {};\n    for (let i = 0; i < nums.length; i++) {\n        if (!freq[nums[i]]) {\n            freq[nums[i]] = 1;\n        } else {\n            freq[nums[i]] += 1;\n        }\n    }\n    for (let key in freq) {\n        if (freq[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122879,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let key in freq) {\n        if (freq[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(1233));\nconsole.log(validate(1222));\nconsole.log(validate(122222));\nconsole.log(validate(12222222));\nconsole.log(validate(122222222222));\nconsole.log(validate(1222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122879,
      "stdout": "../../../../tmp/tmpc3mxgt_a.ts(29,1): error TS1005: ',' expected.\n../../../../tmp/tmpc3mxgt_a.ts(29,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        freq[digit] = (freq[digit] || 0) + 1;\n    }\n    for (let key in freq) {\n        if (freq[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122879,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let digits = n.toString().split('').map(Number);\n    let freq = {};\n    for (let i = 0; i < digits.length; i++) {\n        if (!freq[digits[i]]) {\n            freq[digits[i]] = 1;\n        } else {\n            freq[digits[i]]++;\n        }\n    }\n    for (let key in freq) {\n        if (freq[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(2222));\nconsole.log(validate(1223));\nconsole.log(validate(2232));\nconsole.log(validate(2221));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122879,
      "stdout": "false\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let nums = n.toString().split('');\n    let digits = {};\n    for (let i = 0; i < nums.length; i++) {\n        if (digits[nums[i]]) {\n            digits[nums[i]]++;\n        } else {\n            digits[nums[i]] = 1;\n        }\n    }\n    for (let key in digits) {\n        if (digits[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(122333));\nconsole.log(validate(12233344));\nconsole.log(validate(1223334444));\nconsole.log(validate(12233344445));\nconsole.log(validate(122333444456));\nconsole.log(validate(1223334444567));\nconsole.log(validate(12233344445678));\nconsole.log(validate(122333444456789));\nconsole.log(validate(1223334444567899));\nconsole.log(validate(12233344445678999));\nconsole.log(validate(122333444456789999));\nconsole.log(validate(1223334444567899999));\nconsole.log(validate(12233344445678999999));\nconsole.log(validate(122333444456789999999));\nconsole.log(validate(1223334444567899999999));\nconsole.log(validate(12233344445678999999999));\nconsole.log(validate(122333444456789999999999));\nconsole.log(validate(1223334444567899999999999));\nconsole.log(validate(12233344445678999999999999));\nconsole.log(validate(122333444456789999999999999));\nconsole.log(validate(1223334444567899999999999999));\nconsole.log(validate(12233344445678999999999999999));\nconsole.log(validate(1223\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122879,
      "stdout": "../../../../tmp/tmprx6421m3.ts(44,1): error TS1005: ',' expected.\n../../../../tmp/tmprx6421m3.ts(44,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let digits = n.toString().split('').map(Number);\n    let freq = {};\n    for (let i = 0; i < digits.length; i++) {\n        if (freq[digits[i]]) {\n            freq[digits[i]]++;\n        } else {\n            freq[digits[i]] = 1;\n        }\n    }\n    for (let i = 0; i < digits.length; i++) {\n        if (freq[digits[i]] > digits[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122879,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        freq[digit] = (freq[digit] || 0) + 1;\n    }\n    for (let key in freq) {\n        if (freq[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1222));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122879,
      "stdout": "true\ntrue\nfalse\ntrue\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        freq[digit] = (freq[digit] || 0) + 1;\n    }\n    for (let key in freq) {\n        if (freq[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122879,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let digits = n.toString().split('');\n    let frequency = {};\n    for (let i = 0; i < digits.length; i++) {\n        if (frequency[digits[i]]) {\n            frequency[digits[i]]++;\n        } else {\n            frequency[digits[i]] = 1;\n        }\n    }\n    for (let i = 0; i < digits.length; i++) {\n        if (frequency[digits[i]] > parseInt(digits[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122879,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1244));\nconsole.log(validate(1245));\nconsole.log(validate(1255));\nconsole.log(validate(1256));\nconsole.log(validate(1266));\nconsole.log(validate(1267));\nconsole.log(validate(1277));\nconsole.log(validate(1278));\nconsole.log(validate(1288));\nconsole.log(validate(1289));\nconsole.log(validate(1299));\nconsole.log(validate(1290));\nconsole.log(validate(1291));\nconsole.log(validate(1292));\nconsole.log(validate(1293));\nconsole.log(validate(1294));\nconsole.log(validate(1295));\nconsole.log(validate(1296));\nconsole.log(validate(1297));\nconsole.log(validate(1298));\nconsole.log(validate(1299));\nconsole.log(validate(1209));\nconsole.log(validate(1219));\nconsole.log(validate(1229));\nconsole.log(validate(1239));\nconsole.log(validate(1249));\nconsole.log(validate(1259));\nconsole.log(validate(1269));\nconsole.log(validate(1279));\nconsole.log(validate(12\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122879,
      "stdout": "../../../../tmp/tmpk6d7vy1b.ts(54,1): error TS1005: ',' expected.\n../../../../tmp/tmpk6d7vy1b.ts(54,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1212));\nconsole.log(validate(1211));\nconsole.log(validate(1234));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(12\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122879,
      "stdout": "../../../../tmp/tmpbwf4kt_j.ts(54,1): error TS1005: ',' expected.\n../../../../tmp/tmpbwf4kt_j.ts(54,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n  const digits = n.toString().split('');\n  const digitFrequency = {};\n  digits.forEach(digit => {\n    if (digitFrequency[digit]) {\n      digitFrequency[digit]++;\n    } else {\n      digitFrequency[digit] = 1;\n    }\n  });\n  for (let digit in digitFrequency) {\n    if (digitFrequency[digit] > parseInt(digit)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(12345));\nconsole.log(validate(123345));\nconsole.log(validate(12334567));\nconsole.log(validate(1233456789));\nconsole.log(validate(123345678910));\nconsole.log(validate(12334567891011));\nconsole.log(validate(1233456789101112));\nconsole.log(validate(123345678910111213));\nconsole.log(validate(12334567891011121314));\nconsole.log(validate(1233456789101112131415));\nconsole.log(validate(123345678910111213141516));\nconsole.log(validate(12334567891011121314151617));\nconsole.log(validate(1233456789101112131415161718));\nconsole.log(validate(123345678910111213141516171819));\nconsole.log(validate(12334567891011121314151617181920));\nconsole.log(validate(1233456789101112131415161718192021));\nconsole.log(validate(123345678910111213141516171819202122));\nconsole.log(validate(12334567891011121314151617181920212223));\nconsole.log(validate(1233456789101112131415161718192021222324));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122879,
      "stdout": "../../../../tmp/tmp1lpqimo8.ts(42,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let digits: number[] = n.toString().split(\"\").map(Number);\n    let freq: number[] = [];\n    for (let i = 0; i < digits.length; i++) {\n        let count: number = 0;\n        for (let j = 0; j < digits.length; j++) {\n            if (digits[i] === digits[j]) {\n                count++;\n            }\n        }\n        freq.push(count);\n    }\n    for (let i = 0; i < digits.length; i++) {\n        if (freq[i] > digits[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(123322));\nconsole.log(validate(123321));\nconsole.log(validate(12332222));\nconsole.log(validate(12332223));\nconsole.log(validate(12332224));\nconsole.log(validate(12332225));\nconsole.log(validate(12332226));\nconsole.log(validate(12332227));\nconsole.log(validate(12332228));\nconsole.log(validate(12332229));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122879,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let digits = n.toString().split('');\n    let frequency = {};\n    for (let i = 0; i < digits.length; i++) {\n        if (frequency[digits[i]]) {\n            frequency[digits[i]]++;\n        } else {\n            frequency[digits[i]] = 1;\n        }\n    }\n    for (let key in frequency) {\n        if (frequency[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122879,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        freq[digit] = freq[digit] ? freq[digit] + 1 : 1;\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122879,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] === undefined) {\n            freq[str[i]] = 1;\n        } else {\n            freq[str[i]]++;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122879,
      "stdout": "../../../../tmp/tmpj29x78u9.ts(54,1): error TS1005: ',' expected.\n../../../../tmp/tmpj29x78u9.ts(54,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let arr = str.split('');\n    let obj = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (obj[arr[i]]) {\n            obj[arr[i]]++;\n        } else {\n            obj[arr[i]] = 1;\n        }\n    }\n    for (let i = 0; i < arr.length; i++) {\n        if (obj[arr[i]] > parseInt(arr[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(1233));\nconsole.log(validate(1222));\nconsole.log(validate(1222222222));\nconsole.log(validatendeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122879,
      "stdout": "../../../../tmp/tmpzf_s1e84.ts(26,1): error TS1005: ',' expected.\n../../../../tmp/tmpzf_s1e84.ts(26,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(1233));\nconsole.log(validate(1222));\nconsole.log(validate(122222));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122879,
      "stdout": "true\ntrue\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let arr = str.split('');\n    let obj = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (obj[arr[i]]) {\n            obj[arr[i]]++;\n        } else {\n            obj[arr[i]] = 1;\n        }\n    }\n    for (let key in obj) {\n        if (obj[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(2222));\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(2232));\nconsole.log(validate(2221));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122879,
      "stdout": "../../../../tmp/tmpz2o56o9r.ts(56,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n  const digits = n.toString().split('');\n  const freq = {};\n  for (let i = 0; i < digits.length; i++) {\n    const digit = digits[i];\n    freq[digit] = (freq[digit] || 0) + 1;\n  }\n  for (let i = 0; i < digits.length; i++) {\n    const digit = digits[i];\n    if (freq[digit] > parseInt(digit)) {\n      return false;\n    }\n  }\n  return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122882,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let arr = n.toString().split('');\n    let obj = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (obj[arr[i]]) {\n            obj[arr[i]]++;\n        } else {\n            obj[arr[i]] = 1;\n        }\n    }\n    for (let key in obj) {\n        if (obj[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1234));\nconsole.log(validate(1224));\nconsole.log(validate(1212));\nconsole.log(validate(1213));\nconsole.log(validate(1211));\nconsole.log(validate(1111));\nconsole.log(validate(2222));\nconsole.log(validate(2221));\nconsole.log(validate(2223));\nconsole.log(validate(2212));\nconsole.log(validate(2211));\nconsole.log(validate(2224));\nconsole.log(validate(2234));\nconsole.log(validate(2233));\nconsole.log(validate(2232));\nconsole.log(validate(2231));\nconsole.log(validate(2214));\nconsole.log(validate(2213));\nconsole.log(validate(2212));\nconsole.log(validate(2211));\nconsole.log(validate(2224));\nconsole.log(validate(2234));\nconsole.log(validate(2233));\nconsole.log(validate(2232));\nconsole.log(validate(2231));\nconsole.log(validate(2214));\nconsole.log(validate(2213));\nconsole.log(validate(2212));\nconsole.log(validate(2211));\nconsole.log(validate(2224));\nconsole.log(validate(2234));\nconsole.log(validate(2233));\nconsole.log(validate(2232));\nconsole.log(validate(2231));\nconsole.log(validate(2214));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122882,
      "stdout": "true\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\ntrue\nfalse\ntrue\ntrue\ntrue\nfalse\nfalse\nfalse\ntrue\ntrue\nfalse\ntrue\ntrue\ntrue\nfalse\nfalse\nfalse\ntrue\ntrue\nfalse\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n  let arr = n.toString().split('');\n  let obj = {};\n  for (let i = 0; i < arr.length; i++) {\n    if (obj[arr[i]]) {\n      obj[arr[i]]++;\n    } else {\n      obj[arr[i]] = 1;\n    }\n  }\n  for (let key in obj) {\n    if (obj[key] > parseInt(key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(122333));\nconsole.log(validate(12233344));\nconsole.log(validate(1223334444));\nconsole.log(validate(122333444444));\nconsole.log(validate(12233344444444));\nconsole.log(validate(1223334444444444));\nconsole.log(validate(122333444444444444));\nconsole.log(validate(12233344444444444444));\nconsole.log(validate(1223334444444444444444));\nconsole.log(validate(122333444444444444444444));\nconsole.log(validate(12233344444444444444444444));\nconsole.log(validate(1223334444444444444444444444));\nconsole.log(validate(122333444444444444444444444444));\nconsole.log(validate(12233344444444444444444444444444));\nconsole.log(validate(1223334444444444444444444444444444));\nconsole.log(validate(122333444444444444444444444444444444));\nconsole.log(validate(12233344444444444444444444444444444444));\nconsole.log(validate(1223334444444444444444444444444444444444));\nconsole.log(valid\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122882,
      "stdout": "../../../../tmp/tmp08delf8g.ts(40,1): error TS1005: ',' expected.\n../../../../tmp/tmp08delf8g.ts(40,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let digits = n.toString().split('');\n    let frequency = {};\n    for (let i = 0; i < digits.length; i++) {\n        if (frequency[digits[i]]) {\n            frequency[digits[i]]++;\n        } else {\n            frequency[digits[i]] = 1;\n        }\n    }\n    for (let key in frequency) {\n        if (frequency[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(1223));\nconsole.log(validate(1233));\nconsole.log(validate(1222));\nconsole.log(validate(1234));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122882,
      "stdout": "../../../../tmp/tmpaf1ubaz1.ts(54,1): error TS1005: ',' expected.\n../../../../tmp/tmpaf1ubaz1.ts(54,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    for (let i = 0; i < str.length; i++) {\n        let count = 0;\n        for (let j = 0; j < str.length; j++) {\n            if (str[i] === str[j]) {\n                count++;\n            }\n        }\n        if (count > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(1223));\nconsole.log(validate(1122));\nconsole.log(validate(1234));\nconsole.log(validate(1222));\nconsole.log(validate(12222));\nconsole.log(validate(12345));\nconsole.log(validate(123456));\nconsole.log(validate(1234567));\nconsole.log(validate(12345678));\nconsole.log(validate(123456789));\nconsole.log(validate(1234567891));\nconsole.log(validate(12345678911));\nconsole.log(validate(123456789111));\nconsole.log(validate(1234567891111));\nconsole.log(validate(12345678911111));\nconsole.log(validate(123456789111111));\nconsole.log(validate(1234567891111111));\nconsole.log(validate(12345678911111111));\nconsole.log(validate(123456789111111111));\nconsole.log(validate(1234567891111111111));\nconsole.log(validate(12345678911111111111));\nconsole.log(validate(123456789111111111111));\nconsole.log(validate(1234567891111111111111));\nconsole.log(validate(12345678911111111111111));\nconsole.log(validate(123456789111111111111111));\nconsole.log(validate(1234567891111111111111111));\nconsole.log(validate(12345678911111111111111111));\nconsole.log(validate(123456789111111111111111111));\nconsole.log\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122882,
      "stdout": "true\nfalse\ntrue\nfalse\nfalse\ntrue\ntrue\ntrue\ntrue\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let map = new Map();\n    for (let i = 0; i < str.length; i++) {\n        if (map.has(str[i])) {\n            map.set(str[i], map.get(str[i]) + 1);\n        } else {\n            map.set(str[i], 1);\n        }\n    }\n    for (let [key, value] of map) {\n        if (value > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1233));\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1212));\nconsole.log(validate(1211));\nconsole.log(validate(1221));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122882,
      "stdout": "../../../../tmp/tmpy93t1b7z.ts(54,1): error TS1005: ',' expected.\n../../../../tmp/tmpy93t1b7z.ts(54,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let digits = n.toString().split('');\n    let freq = {};\n    for (let i = 0; i < digits.length; i++) {\n        if (freq[digits[i]]) {\n            freq[digits[i]]++;\n        } else {\n            freq[digits[i]] = 1;\n        }\n    }\n    for (let i = 0; i < digits.length; i++) {\n        if (freq[digits[i]] > parseInt(digits[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122882,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let digits = n.toString().split('');\n    let frequency = {};\n    for (let i = 0; i < digits.length; i++) {\n        if (frequency[digits[i]]) {\n            frequency[digits[i]]++;\n        } else {\n            frequency[digits[i]] = 1;\n        }\n    }\n    for (let i = 0; i < digits.length; i++) {\n        if (frequency[digits[i]] > parseInt(digits[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122879,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let nums = n.toString().split('');\n    let counts = {};\n    for (let i = 0; i < nums.length; i++) {\n        if (counts[nums[i]]) {\n            counts[nums[i]]++;\n        } else {\n            counts[nums[i]] = 1;\n        }\n    }\n    for (let key in counts) {\n        if (counts[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122882,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    const str = n.toString();\n    const freq = {};\n    for (let i = 0; i < str.length; i++) {\n        const digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        const digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122882,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n  let digits = n.toString().split(\"\");\n  let frequency = {};\n  for (let i = 0; i < digits.length; i++) {\n    let digit = digits[i];\n    if (frequency[digit]) {\n      frequency[digit]++;\n    } else {\n      frequency[digit] = 1;\n    }\n  }\n  for (let i = 0; i < digits.length; i++) {\n    let digit = digits[i];\n    if (frequency[digit] > parseInt(digit)) {\n      return false;\n    }\n  }\n  return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122882,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let digits: number[] = [];\n    let freq: number[] = [];\n    let num: number = n;\n    while (num > 0) {\n        let digit: number = num % 10;\n        if (digits.indexOf(digit) == -1) {\n            digits.push(digit);\n            freq.push(1);\n        } else {\n            freq[digits.indexOf(digit)]++;\n        }\n        num = Math.floor(num / 10);\n    }\n    for (let i = 0; i < digits.length; i++) {\n        if (freq[i] > digits[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122882,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = 0; j < str.length; j++) {\n            if (str[i] === str[j]) {\n                count++;\n            }\n        }\n        if (count > parseInt(str[i])) {\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\nconsole.log(validate(1223));\nconsole.log(validate(12233));\nconsole.log(validate(122233));\nconsole.log(validate(1222333));\nconsole.log(validate(12223334));\nconsole.log(validate(122233344));\nconsole.log(validate(1222333444));\nconsole.log(validate(12223334444));\nconsole.log(validate(122233344444));\nconsole.log(validate(1222333444444));\nconsole.log(validate(12223334444444));\nconsole.log(validate(122233344444444));\nconsole.log(validate(1222333444444444));\nconsole.log(validate(12223334444444444));\nconsole.log(validate(122233344444444444));\nconsole.log(validate(1222333444444444444));\nconsole.log(validate(12223334444444444444));\nconsole.log(validate(122233344444444444444));\nconsole.log(validate(1222333444444444444444));\nconsole.log(validate(12223334444444444444444));\nconsole.log(validate(122233344444444444444444));\nconsole.log(validate(1222333444444444444444444));\nconsole.log(validate(12223334444444444444444444));\nconsole.log(validate(122233344444444444444444444));\nconsole.log(validate(12\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122882,
      "stdout": "../../../../tmp/tmpttketg__.ts(43,1): error TS1005: ',' expected.\n../../../../tmp/tmpttketg__.ts(43,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n  let str = n.toString();\n  let obj = {};\n  for (let i = 0; i < str.length; i++) {\n    if (obj[str[i]]) {\n      obj[str[i]]++;\n    } else {\n      obj[str[i]] = 1;\n    }\n  }\n  for (let key in obj) {\n    if (obj[key] > parseInt(key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(12223));\nconsole.log(validate(122223));\nconsole.log(validate(1222223));\nconsole.log(validate(12222223));\nconsole.log(validate(122222223));\nconsole.log(validate(1222222223));\nconsole.log(validate(12222222223));\nconsole.log(validate(122222222223));\nconsole.log(validate(1222222222223));\nconsole.log(validate(12222222222223));\nconsole.log(validate(122222222222223));\nconsole.log(validate(1222222222222223));\nconsole.log(validate(12222222222222223));\nconsole.log(validate(122222222222222223));\nconsole.log(validate(1222222222222222223));\nconsole.log(validate(12222222222222222223));\nconsole.log(validate(122222222222222222223));\nconsole.log(validate(1222222222222222222223));\nconsole.log(validate(12222222222222222222223));\nconsole.log(validate(122222222222222222222223));\nconsole.log(validate(1222222222222222222222223));\nconsole.log(validate(12222222222222222222222223));\nconsole.log(validate(1222222222222222\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122882,
      "stdout": "../../../../tmp/tmp2e11o595.ts(44,1): error TS1005: ',' expected.\n../../../../tmp/tmp2e11o595.ts(44,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    for (let i = 0; i < str.length; i++) {\n        let count = 0;\n        for (let j = 0; j < str.length; j++) {\n            if (str[i] == str[j]) {\n                count++;\n            }\n        }\n        if (count > Number(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(12233));\nconsole.log(validate(122233));\nconsole.log(validate(1222333));\nconsole.log(validate(12223333));\nconsole.log(validate(122233333));\nconsole.log(validate(1222333333));\nconsole.log(validate(12223333333));\nconsole.log(validate(122233333333));\nconsole.log(validate(1222333333333));\nconsole.log(validate(12223333333333));\nconsole.log(validate(122233333333333));\nconsole.log(validate(1222333333333333));\nconsole.log(validate(12223333333333333));\nconsole.log(validate(122233333333333333));\nconsole.log(validate(1222333333333333333));\nconsole.log(validate(12223333333333333333));\nconsole.log(validate(122233333333333333333));\nconsole.log(validate(1222333333333333333333));\nconsole.log(validate(12223333333333333333333));\nconsole.log(validate(122233333333333333333333));\nconsole.log(validate(1222333333333333333333333));\nconsole.log(validate(12223333333333333333333333));\nconsole.log(validate(122233333333333333333333333));\nconsole.log(validate(1222333333333333333333333333));\nconsole.log(validate(12223333333333333333333333333));\nconsole.log(validate(122233333333333333333333333333));\nconsole.log(validate(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122882,
      "stdout": "../../../../tmp/tmpou281w_m.ts(46,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let key in freq) {\n        if (freq[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122882,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let obj = {};\n    for (let i = 0; i < str.length; i++) {\n        if (obj[str[i]]) {\n            obj[str[i]]++;\n        } else {\n            obj[str[i]] = 1;\n        }\n    }\n    for (let key in obj) {\n        if (obj[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(12345));\nconsole.log(validate(123456));\nconsole.log(validate(1234567));\nconsole.log(validate(12345678));\nconsole.log(validate(123456789));\nconsole.log(validate(1234567890));\nconsole.log(validate(12345678901));\nconsole.log(validate(123456789012));\nconsole.log(validate(1234567890123));\nconsole.log(validate(12345678901234));\nconsole.log(validate(123456789012345));\nconsole.log(validate(1234567890123456));\nconsole.log(validate(12345678901234567));\nconsole.log(validate(123456789012345678));\nconsole.log(validate(1234567890123456789));\nconsole.log(validate(12345678901234567890));\nconsole.log(validate(123456789012345678901));\nconsole.log(validate(1234567890123456789012));\nconsole.log(validate(12345678901234567890123));\nconsole.log(validate(123456789012345678901234));\nconsole.log(validate(1234567890123456789012345));\nconsole.log(validate(123456789012345\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122882,
      "stdout": "../../../../tmp/tmpy_iho2wk.ts(46,1): error TS1005: ',' expected.\n../../../../tmp/tmpy_iho2wk.ts(46,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(1233));\nconsole.log(validate(1222));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122882,
      "stdout": "true\ntrue\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(12233));\nconsole.log(validate(1222));\nconsole.log(validate(122222));\nconsole.log(validate(1222222));\nconsole.log(validate(12222222));\nconsole.log(validate(122222222));\nconsole.log(validate(1222222222));\nconsole.log(validate(12222222222));\nconsole.log(validate(122222222222));\nconsole.log(validate(1222222222222));\nconsole.log(validate(12222222222222));\nconsole.log(validate(122222222222222));\nconsole.log(validate(1222222222222222));\nconsole.log(validate(12222222222222222));\nconsole.log(validate(122222222222222222));\nconsole.log(validate(1222222222222222222));\nconsole.log(validate(12222222222222222222));\nconsole.log(validate(122222222222222222222));\nconsole.log(validate(1222222222222222222222));\nconsole.log(validate(12222222222222222222222));\nconsole.log(validate(122222222222222222222222));\nconsole.log(validate(1222222222222222222222222));\nconsole.log(validate(12\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122882,
      "stdout": "../../../../tmp/tmptz9q5_3m.ts(44,1): error TS1005: ',' expected.\n../../../../tmp/tmptz9q5_3m.ts(44,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let key in freq) {\n        if (freq[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(12233));\nconsole.log(validate(122333));\nconsole.log(validate(1223333));\nconsole.log(validate(12233333));\nconsole.log(validate(122333333));\nconsole.log(validate(1223333333));\nconsole.log(validate(12233333333));\nconsole.log(validate(122333333333));\nconsole.log(validate(1223333333333));\nconsole.log(validate(12233333333333));\nconsole.log(validate(122333333333333));\nconsole.log(validate(1223333333333333));\nconsole.log(validate(12233333333333333));\nconsole.log(validate(122333333333333333));\nconsole.log(validate(1223333333333333333));\nconsole.log(validate(12233333333333333333));\nconsole.log(validate(122333333333333333333));\nconsole.log(validate(1223333333333333333333));\nconsole.log(validate(12233333333333333333333));\nconsole.log(validate(122333333333333333333333));\nconsole.log(validate(1223333333333333333333333));\nconsole.log(validate(12233333333333333333333333));\nconsole.log(validate(122333333333333333333333333));\nconsole.log(validate(1223333333333333333333333333));\nconsole.log(validate(12233333333333333333333333333));\nconsole.log(validate(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122882,
      "stdout": "../../../../tmp/tmp_d9cbyfv.ts(47,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let digits = n.toString().split('');\n    let freq = {};\n    for (let i = 0; i < digits.length; i++) {\n        let digit = digits[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < digits.length; i++) {\n        let digit = digits[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(1233));\nconsole.log(validate(1222));\nconsole.log(validate(122222));\nconsole.log(validate(12222222));\nconsole.log(validate(1222222222));\nconsole.log(validate(122222222222));\nconsole.log(validate(12222222222222));\nconsole.log(validate(1222222222222222));\nconsole.log(validate(122222222222222222));\nconsole.log(validate(12222222222222222222));\nconsole.log(validate(1222222222222222222222));\nconsole.log(validate(122222222222222222222222));\nconsole.log(validate(12222222222222222222222222));\nconsole.log(validate(1222222222222222222222222222));\nconsole.log(validate(122222222222222222222222222222));\nconsole.log(validate(12222222222222222222222222222222));\nconsole.log(validate(1222222222222222222222222222222222));\nconsole.log(validate(122222222222222222222222222222222222));\nconsole.log(valid\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122882,
      "stdout": "../../../../tmp/tmpu3fojxt9.ts(43,1): error TS1005: ',' expected.\n../../../../tmp/tmpu3fojxt9.ts(43,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let map = new Map();\n    for (let i = 0; i < str.length; i++) {\n        if (map.has(str[i])) {\n            map.set(str[i], map.get(str[i]) + 1);\n        } else {\n            map.set(str[i], 1);\n        }\n    }\n    for (let [key, value] of map) {\n        if (value > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1222));\nconsole.log(validate(123322));\nconsole.log(validate(12332222));\nconsole.log(validate(1233222222));\nconsole.log(validatendeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122882,
      "stdout": "../../../../tmp/tmpvnqkyxzs.ts(27,1): error TS1005: ',' expected.\n../../../../tmp/tmpvnqkyxzs.ts(27,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n  const digits = n.toString().split('');\n  const frequency = {};\n  for (let i = 0; i < digits.length; i++) {\n    const digit = digits[i];\n    if (frequency[digit]) {\n      frequency[digit]++;\n    } else {\n      frequency[digit] = 1;\n    }\n  }\n  for (let i = 0; i < digits.length; i++) {\n    const digit = digits[i];\n    if (frequency[digit] > parseInt(digit)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122882,
      "stdout": "true\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n  let str = n.toString();\n  let count = 0;\n  for (let i = 0; i < str.length; i++) {\n    for (let j = 0; j < str.length; j++) {\n      if (str[i] === str[j]) {\n        count++;\n      }\n    }\n    if (count > parseInt(str[i])) {\n      return false;\n    }\n    count = 0;\n  }\n  return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validatendeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122882,
      "stdout": "../../../../tmp/tmp3crato0c.ts(30,1): error TS1005: ',' expected.\n../../../../tmp/tmp3crato0c.ts(30,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = 0; j < str.length; j++) {\n            if (str[i] == str[j]) {\n                count++;\n            }\n        }\n        if (count > parseInt(str[i])) {\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(12233));\nconsole.log(validate(122233));\nconsole.log(validate(1222333));\nconsole.log(validate(12223333));\nconsole.log(validate(122233333));\nconsole.log(validate(1222333333));\nconsole.log(validate(12223333333));\nconsole.log(validate(122233333333));\nconsole.log(validate(1222333333333));\nconsole.log(validate(12223333333333));\nconsole.log(validate(122233333333333));\nconsole.log(validate(1222333333333333));\nconsole.log(validate(12223333333333333));\nconsole.log(validate(122233333333333333));\nconsole.log(validate(1222333333333333333));\nconsole.log(validate(12223333333333333333));\nconsole.log(validate(122233333333333333333));\nconsole.log(validate(1222333333333333333333));\nconsole.log(validate(12223333333333333333333));\nconsole.log(validate(122233333333333333333333));\nconsole.log(validate(1222333333333333333333333));\nconsole.log(validate(12223333333333333333333333));\nconsole.log(validate(122233333333333333333333333));\nconsole.log(validate(1222333333333333333333333333));\nconsole.log(validate(12223333333333333333333333333));\nconsole.log(validate(122233333333333333333333333333));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122884,
      "stdout": "true\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let arr = str.split('');\n    let obj = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (!obj[arr[i]]) {\n            obj[arr[i]] = 1;\n        } else {\n            obj[arr[i]]++;\n        }\n    }\n    for (let key in obj) {\n        if (obj[key] > key) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(1233));\nconsole.log(validate(1222));\nconsole.log(validate(122222));\nconsole.log(validate(12222222));\nconsole.log(validate(1222222222));\nconsole.log(validate(122222222222));\nconsole.log(validate(12222222222222));\nconsole.log(validate(1222222222222222));\nconsole.log(validate(122222222222222222));\nconsole.log(validate(12222222222222222222));\nconsole.log(validate(1222222222222222222222));\nconsole.log(validate(122222222222222222222222));\nconsole.log(validate(12222222222222222222222222));\nconsole.log(validate(1222222222222222222222222222));\nconsole.log(validate(122222222222222222222222222222));\nconsole.log(validate(12222222222222222222222222222222));\nconsole.log(validate(1222222222222222222222222222222222));\nconsole.log(validate(122222222222222222222222222222222222));\nconsole.log(validate(12222222222222222222222222222222222222\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122884,
      "stdout": "../../../../tmp/tmp9xb74kxs.ts(41,1): error TS1005: ',' expected.\n../../../../tmp/tmp9xb74kxs.ts(41,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    const digits = n.toString().split('');\n    const frequencies = {};\n    digits.forEach(digit => {\n        frequencies[digit] = frequencies[digit] ? frequencies[digit] + 1 : 1;\n    });\n    return Object.keys(frequencies).every(digit => frequencies[digit] <= parseInt(digit));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122884,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let digits = n.toString().split(\"\");\n    let frequency = {};\n    for (let i = 0; i < digits.length; i++) {\n        if (frequency[digits[i]]) {\n            frequency[digits[i]]++;\n        } else {\n            frequency[digits[i]] = 1;\n        }\n    }\n    for (let i = 0; i < digits.length; i++) {\n        if (frequency[digits[i]] > parseInt(digits[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122884,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let digits = n.toString().split('');\n    let digitFrequency = {};\n    for (let digit of digits) {\n        digitFrequency[digit] = digitFrequency[digit] + 1 || 1;\n    }\n    for (let digit in digitFrequency) {\n        if (digitFrequency[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1234));\nconsole.log(validate(1224));\nconsole.log(validate(1213));\nconsole.log(validate(1212));\nconsole.log(validate(1211));\nconsole.log(validate(2221));\nconsole.log(validate(2222));\nconsole.log(validate(2223));\nconsole.log(validate(1234));\nconsole.log(validate(1224));\nconsole.log(validate(1213));\nconsole.log(validate(1212));\nconsole.log(validate(1211));\nconsole.log(validate(2221));\nconsole.log(validate(2222));\nconsole.log(validate(2223));\nconsole.log(validate(1234));\nconsole.log(validate(1224));\nconsole.log(validate(1213));\nconsole.log(validate(1212));\nconsole.log(validate(1211));\nconsole.log(validate(2221));\nconsole.log(validate(2222));\nconsole.log(validate(2223));\nconsole.log(validate(1234));\nconsole.log(validate(1224));\nconsole.log(validate(1213));\nconsole.log(validate(1212));\nconsole.log(validate(1211));\nconsole.log(validate(2221));\nconsole.log(validate(2222));\nconsole.log(validate(2223));\nconsole.log(validate(1234));\nconsole.log(validate(1224));\nconsole.log(validate(1213));\nconsole.log(validate(1212));\nconsole.log(validate(1211));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122884,
      "stdout": "true\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\ntrue\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let nums = n.toString().split('');\n    let freq = {};\n    for (let i = 0; i < nums.length; i++) {\n        if (freq[nums[i]]) {\n            freq[nums[i]]++;\n        } else {\n            freq[nums[i]] = 1;\n        }\n    }\n    for (let key in freq) {\n        if (freq[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(2222));\nconsole.log(validate(2221));\nconsole.log(validate(2211));\nconsole.log(validate(2212));\nconsole.log(validate(2213));\nconsole.log(validate(2214));\nconsole.log(validate(2215));\nconsole.log(validate(2216));\nconsole.log(validate(2217));\nconsole.log(validate(2218));\nconsole.log(validate(2219));\nconsole.log(validate(2220));\nconsole.log(validate(2221));\nconsole.log(validate(2222));\nconsole.log(validate(2223));\nconsole.log(validate(2224));\nconsole.log(validate(2225));\nconsole.log(validate(2226));\nconsole.log(validate(2227));\nconsole.log(validate(2228));\nconsole.log(validate(2229));\nconsole.log(validate(2230));\nconsole.log(validate(2231));\nconsole.log(validate(2232));\nconsole.log(validate(2233));\nconsole.log(validate(2234));\nconsole.log(validate(2235));\nconsole.log(validate(2236));\nconsole.log(validate(2237));\nconsole.log(validate(2238));\nconsole.log(validate(2239));\nconsole.log(validate(2240));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "true\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\nfalse\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let arr = n.toString().split('');\n    let freq = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (freq[arr[i]]) {\n            freq[arr[i]]++;\n        } else {\n            freq[arr[i]] = 1;\n        }\n    }\n    for (let i = 0; i < arr.length; i++) {\n        if (freq[arr[i]] > parseInt(arr[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(661232));\nconsole.log(validate(1232));\nconsole.log(validate(122333));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let obj = {};\n    for (let i = 0; i < str.length; i++) {\n        let char = str[i];\n        if (obj[char]) {\n            obj[char]++;\n        } else {\n            obj[char] = 1;\n        }\n    }\n    for (let key in obj) {\n        if (obj[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let digits = n.toString().split('');\n    let frequency = {};\n    digits.forEach(digit => {\n        if (frequency[digit]) {\n            frequency[digit]++;\n        } else {\n            frequency[digit] = 1;\n        }\n    });\n    for (let digit in frequency) {\n        if (frequency[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let dict = {};\n    for (let i = 0; i < str.length; i++) {\n        if (dict[str[i]]) {\n            dict[str[i]]++;\n        } else {\n            dict[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (dict[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    const digits = n.toString().split('');\n    const digitFrequency = {};\n    for (let digit of digits) {\n        digitFrequency[digit] = (digitFrequency[digit] || 0) + 1;\n    }\n    for (let digit of digits) {\n        if (digitFrequency[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    const digits: number[] = n.toString().split('').map(Number);\n    const freq: number[] = [];\n    for (let i = 0; i < 10; i++) {\n        freq.push(0);\n    }\n    for (let i = 0; i < digits.length; i++) {\n        freq[digits[i]]++;\n    }\n    for (let i = 0; i < digits.length; i++) {\n        if (freq[digits[i]] > digits[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(122222));\nconsole.log(validate(12222222));\nconsole.log(validate(1222222222));\nconsole.log(validate(122222222222));\nconsole.log(validate(12222222222222));\nconsole.log(validate(1222222222222222));\nconsole.log(validate(122222222222222222));\nconsole.log(validate(12222222222222222222));\nconsole.log(validate(1222222222222222222222));\nconsole.log(validate(122222222222222222222222));\nconsole.log(validate(12222222222222222222222222));\nconsole.log(validate(1222222222222222222222222222));\nconsole.log(validate(122222222222222222222222222222));\nconsole.log(validate(1222222222222222222222222222\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "../../../../tmp/tmp2f69p7h2.ts(46,1): error TS1005: ',' expected.\n../../../../tmp/tmp2f69p7h2.ts(46,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let digits: number[] = n.toString().split('').map(Number);\n    let frequency: number[] = [];\n    for (let i = 0; i < digits.length; i++) {\n        let count = 0;\n        for (let j = 0; j < digits.length; j++) {\n            if (digits[i] === digits[j]) {\n                count++;\n            }\n        }\n        frequency.push(count);\n    }\n    for (let i = 0; i < frequency.length; i++) {\n        if (frequency[i] > digits[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(122333));\nconsole.log(validate(122233));\nconsole.log(validate(123333));\nconsole.log(validate(123433));\nconsole.log(validate(124433));\nconsole.log(validate(125533));\nconsole.log(validate(126633));\nconsole.log(validate(127733));\nconsole.log(validate(128833));\nconsole.log(validate(129933));\nconsole.log(validate(122344));\nconsole.log(validate(122234));\nconsole.log(validate(123334));\nconsole.log(validate(123444));\nconsole.log(validate(124444));\nconsole.log(validate(125544));\nconsole.log(validate(126644));\nconsole.log(validate(127744));\nconsole.log(validate(128844));\nconsole.log(validate(129944));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "../../../../tmp/tmpk8vsdq1l.ts(52,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > digit) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let arr = str.split(\"\");\n    let obj = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (obj[arr[i]]) {\n            obj[arr[i]] += 1;\n        } else {\n            obj[arr[i]] = 1;\n        }\n    }\n    for (let key in obj) {\n        if (obj[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(1233));\nconsole.log(validate(1222));\nconsole.log(validate(122222));\nconsole.log(validate(12222222));\nconsole.log(validatendeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "../../../../tmp/tmp9cjda44e.ts(28,1): error TS1005: ',' expected.\n../../../../tmp/tmp9cjda44e.ts(28,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let digits = n.toString().split('');\n    let freq = {};\n    for (let i = 0; i < digits.length; i++) {\n        if (freq[digits[i]]) {\n            freq[digits[i]]++;\n        } else {\n            freq[digits[i]] = 1;\n        }\n    }\n    for (let i = 0; i < digits.length; i++) {\n        if (freq[digits[i]] > parseInt(digits[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122882,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] === undefined) {\n            freq[digit] = 1;\n        } else {\n            freq[digit]++;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > digit) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1232));\nconsole.log(validate(2234));\nconsole.log(validate(1234));\nconsole.log(validate(1233));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let obj = {};\n    for (let i = 0; i < str.length; i++) {\n        if (obj[str[i]]) {\n            obj[str[i]]++;\n        } else {\n            obj[str[i]] = 1;\n        }\n    }\n    for (let key in obj) {\n        if (obj[key] > Number(key)) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(1233));\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1232));\nconsole.log(validate(1234));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1222222222));\nconsole.log(validate(1222222223));\nconsole.log(validate(1222222224));\nconsole.log(validate(1222222225));\nconsole.log(validate(1222222226));\nconsole.log(validate(1222222227));\nconsole.log(validate(1222222228));\nconsole.log(validate(1222222229));\nconsole.log(validate(1222222220));\nconsole.log(validate(1222222221));\nconsole.log(validate(1222222222));\nconsole.log(validate(1222222223));\nconsole.log(validate(1222222224));\nconsole.log(validate(1222222225));\nconsole.log(validate(1222222226));\nconsole.log(validate(1222222227));\nconsole.log(validate(1222222228));\nconsole.log(validate(1222222229));\nconsole.log(validate(1222222220));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "../../../../tmp/tmplzdcv840.ts(50,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n  const digits = n.toString().split('');\n  const digitFrequency = {};\n\n  for (let digit of digits) {\n    digitFrequency[digit] = digitFrequency[digit] + 1 || 1;\n  }\n\n  for (let digit of digits) {\n    if (digitFrequency[digit] > parseInt(digit)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1244));\nconsole.log(validate(1245));\nconsole.log(validate(1255));\nconsole.log(validate(1256));\nconsole.log(validate(1266));\nconsole.log(validate(1267));\nconsole.log(validate(1277));\nconsole.log(validate(1278));\nconsole.log(validate(1288));\nconsole.log(validate(1289));\nconsole.log(validate(1299));\nconsole.log(validate(1290));\nconsole.log(validate(1291));\nconsole.log(validate(1292));\nconsole.log(validate(1293));\nconsole.log(validate(1294));\nconsole.log(validate(1295));\nconsole.log(validate(1296));\nconsole.log(validate(1297));\nconsole.log(validate(1298));\nconsole.log(validate(1299));\nconsole.log(validate(1210));\nconsole.log(validate(1211));\nconsole.log(validate(1212));\nconsole.log(validate(1213));\nconsole.log(validate(1214));\nconsole.log(validate(1215));\nconsole.log(validate(1216));\nconsole.log(validate(1217));\nconsole.log(validate(1218));\nconsole.log(validate(1219));\nconsole.log(validate(1220));\nconsole.log(validate(1221));\nconsole.\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "../../../../tmp/tmpfofx655t.ts(56,9): error TS1003: Identifier expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let obj = {};\n    for (let i = 0; i < str.length; i++) {\n        if (obj[str[i]]) {\n            obj[str[i]]++;\n        } else {\n            obj[str[i]] = 1;\n        }\n    }\n    for (let key in obj) {\n        if (obj[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let arr = str.split('');\n    let obj = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (obj[arr[i]]) {\n            obj[arr[i]]++;\n        } else {\n            obj[arr[i]] = 1;\n        }\n    }\n    for (let key in obj) {\n        if (obj[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "true\nfalse\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n  let digits: number[] = n.toString().split('').map(Number);\n  let freq: number[] = [];\n  for (let i = 0; i < 10; i++) {\n    freq[i] = 0;\n  }\n  for (let i = 0; i < digits.length; i++) {\n    freq[digits[i]]++;\n  }\n  for (let i = 0; i < 10; i++) {\n    if (freq[i] > i) {\n      return false;\n    }\n  }\n  return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let key in freq) {\n        if (freq[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(12233));\nconsole.log(validate(122333));\nconsole.log(validate(1222333));\nconsole.log(validate(12222333));\nconsole.log(validate(122222333));\nconsole.log(validate(1222222333));\nconsole.log(validate(12222222333));\nconsole.log(validate(122222222333));\nconsole.log(validate(1222222222333));\nconsole.log(validate(12222222222333));\nconsole.log(validate(122222222222333));\nconsole.log(validate(1222222222222333));\nconsole.log(validate(12222222222222333));\nconsole.log(validate(122222222222222333));\nconsole.log(validate(1222222222222222333));\nconsole.log(validate(12222222222222222333));\nconsole.log(validate(122222222222222222333));\nconsole.log(validate(1222222222222222222333));\nconsole.log(validate(12222222222222222222333));\nconsole.log(validate(122222222222222222222333));\nconsole.log(validate(1222222222222222222222333));\nconsole.log(validate(12222222222222222222222333));\nconsole.log(validate(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "../../../../tmp/tmpaidolk1n.ts(45,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let freq = {};\n    let str = n.toString();\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(122222));\nconsole.log(validate(12222222));\nconsole.log(validate(1222222222));\nconsole.log(validate(122222222222));\nconsole.log(validate(12222222222222));\nconsole.log(validate(1222222222222222));\nconsole.log(validate(122222222222222222));\nconsole.log(validate(12222222222222222222));\nconsole.log(validate(1222222222222222222222));\nconsole.log(validate(122222222222222222222222));\nconsole.log(validate(12222222222222222222222222));\nconsole.log(validate(1222222222222222222222222222));\nconsole.log(validate(122222222222222222222222222222));\nconsole.log(validate(12222222222222222222222222222222));\nconsole.\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122887,
      "stdout": "../../../../tmp/tmp81vk04ve.ts(44,9): error TS1003: Identifier expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122887,
      "stdout": "true\nfalse\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122887,
      "stdout": "../../../../tmp/tmp31ax6o25.ts(53,1): error TS1005: ',' expected.\n../../../../tmp/tmp31ax6o25.ts(53,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n  let str = n.toString();\n  let freq = {};\n  for (let i = 0; i < str.length; i++) {\n    if (freq[str[i]]) {\n      freq[str[i]]++;\n    } else {\n      freq[str[i]] = 1;\n    }\n  }\n  for (let key in freq) {\n    if (freq[key] > parseInt(key)) {\n      return false;\n    }\n  }\n  return true;\n}\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(1233));\nconsole.log(validate(1222));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122887,
      "stdout": "true\ntrue\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let map = new Map();\n    for (let i = 0; i < str.length; i++) {\n        let digit = str.charAt(i);\n        if (map.has(digit)) {\n            let count = map.get(digit);\n            map.set(digit, count + 1);\n        } else {\n            map.set(digit, 1);\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str.charAt(i);\n        if (map.get(digit) > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1234));\nconsole.log(validate(1224));\nconsole.log(validate(1213));\nconsole.log(validate(1212));\nconsole.log(validate(1211));\nconsole.log(validate(1111));\nconsole.log(validate(1112));\nconsole.log(validate(1113));\nconsole.log(validate(1114));\nconsole.log(validate(1115));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122887,
      "stdout": "true\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1233));\nconsole.log(validate(1222));\nconsole.log(validate(122222));\nconsole.log(validate(12222222));\nconsole.log(validate(1222222222));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122887,
      "stdout": "true\ntrue\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let digits = n.toString().split('');\n    let frequency = {};\n    for (let i = 0; i < digits.length; i++) {\n        let digit = digits[i];\n        if (frequency[digit]) {\n            frequency[digit]++;\n        } else {\n            frequency[digit] = 1;\n        }\n    }\n    for (let key in frequency) {\n        if (frequency[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let arr = n.toString().split('');\n    let obj = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (obj[arr[i]]) {\n            obj[arr[i]]++;\n        } else {\n            obj[arr[i]] = 1;\n        }\n    }\n    for (let key in obj) {\n        if (obj[key] > key) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(1234));\nconsole.log(validate(1224));\nconsole.log(validate(1222));\nconsole.log(validate(1211));\nconsole.log(validate(1212));\nconsole.log(validate(1213));\nconsole.log(validate(1214));\nconsole.log(validate(1215));\nconsole.log(validate(1216));\nconsole.log(validate(1217));\nconsole.log(validate(1218));\nconsole.log(validate(1219));\nconsole.log(validate(1221));\nconsole.log(validate(1222));\nconsole.log(validate(1223));\nconsole.log(validate(1224));\nconsole.log(validate(1225));\nconsole.log(validate(1226));\nconsole.log(validate(1227));\nconsole.log(validate(1228));\nconsole.log(validate(1229));\nconsole.log(validate(1231));\nconsole.log(validate(1232));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1235));\nconsole.log(validate(1236));\nconsole.log(validate(1237));\nconsole.log(validate(1238));\nconsole.log(validate(1239));\nconsole.log(validate(1241));\nconsole.log(validate(1242));\nconsole.log(validate(1243));\nconsole.log(validate(1244));\nconsole.log(validate(1245));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122887,
      "stdout": "../../../../tmp/tmpr0so9x_l.ts(55,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        freq[digit] = (freq[digit] || 0) + 1;\n    }\n    for (let key in freq) {\n        if (freq[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122879,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let key in freq) {\n        if (freq[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(1233));\nconsole.log(validate(1222));\nconsole.log(validate(122222));\nconsole.log(validate(12222222));\nconsole.log(validatendeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122887,
      "stdout": "../../../../tmp/tmp2_8g8n8s.ts(27,1): error TS1005: ',' expected.\n../../../../tmp/tmp2_8g8n8s.ts(27,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1222));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122887,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (!freq[str[i]]) {\n            freq[str[i]] = 1;\n        } else {\n            freq[str[i]] += 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > Number(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(1233));\nconsole.log(validate(1222));\nconsole.log(validate(122222));\nconsole.log(validate(12222222));\nconsole.log(validate(1222222222));\nconsole.log(validate(122222222222));\nconsole.log(validate(12222222222222));\nconsole.log(validate(1222222222222222));\nconsole.log(validate(122222222222222222));\nconsole.log(validate(12222222222222222222));\nconsole.log(validate(1222222222222222222222));\nconsole.log(validate(122222222222222222222222));\nconsole.log(validate(12222222222222222222222222));\nconsole.log(validate(1222222222222222222222222222));\nconsole.log(validate(122222222222222222222222222222));\nconsole.log(validate(12222222222222222222222222222222));\nconsole.log(validate(1222222222222222222222222222222222));\nconsole.log(validate(122222222222222222222222222222222222));\nconsole.log(validate(12222222222222\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122887,
      "stdout": "../../../../tmp/tmpb_fcj24z.ts(41,1): error TS1005: ',' expected.\n../../../../tmp/tmpb_fcj24z.ts(41,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let arr = str.split('');\n    let obj = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (obj[arr[i]]) {\n            obj[arr[i]]++;\n        } else {\n            obj[arr[i]] = 1;\n        }\n    }\n    for (let key in obj) {\n        if (obj[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(valid\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122887,
      "stdout": "../../../../tmp/tmpcinjaba3.ts(55,1): error TS1005: ',' expected.\n../../../../tmp/tmpcinjaba3.ts(55,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let obj = {};\n    for (let i = 0; i < str.length; i++) {\n        if (!obj[str[i]]) {\n            obj[str[i]] = 1;\n        } else {\n            obj[str[i]]++;\n        }\n    }\n    for (let key in obj) {\n        if (obj[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(2222));\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(1233));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(valid\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122887,
      "stdout": "../../../../tmp/tmp0e6afzy4.ts(55,1): error TS1005: ',' expected.\n../../../../tmp/tmp0e6afzy4.ts(55,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let digits = n.toString().split('');\n    let frequency = {};\n    for (let i = 0; i < digits.length; i++) {\n        if (frequency[digits[i]]) {\n            frequency[digits[i]]++;\n        } else {\n            frequency[digits[i]] = 1;\n        }\n    }\n    for (let key in frequency) {\n        if (frequency[key] > key) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let key in freq) {\n        if (freq[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122887,
      "stdout": "../../../../tmp/tmphp19eor4.ts(55,1): error TS1005: ',' expected.\n../../../../tmp/tmphp19eor4.ts(55,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n  const digits = n.toString().split('');\n  const digitCounts = digits.reduce((acc, digit) => {\n    acc[digit] = (acc[digit] || 0) + 1;\n    return acc;\n  }, {});\n  return Object.keys(digitCounts).every(digit => digitCounts[digit] <= parseInt(digit));\n}\n\nconsole.log(validate(1234)); // true\nconsole.log(validate(1224)); // false\nconsole.log(validate(2234)); // true\nconsole.log(validate(1234)); // true\nconsole.log(validate(12334)); // false\nconsole.log(validate(12344)); // true\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122887,
      "stdout": "true\ntrue\ntrue\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let digits = n.toString().split('');\n    let freq = {};\n    for (let i = 0; i < digits.length; i++) {\n        if (freq[digits[i]]) {\n            freq[digits[i]]++;\n        } else {\n            freq[digits[i]] = 1;\n        }\n    }\n    for (let key in freq) {\n        if (freq[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(1223));\nconsole.log(validate(122333));\nconsole.log(validate(1223334444));\nconsole.log(validate(122333444445));\nconsole.log(validate(12233344444555));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122888,
      "stdout": "true\ntrue\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    const str = n.toString();\n    const digits = new Set(str);\n    for (const digit of digits) {\n        if (str.split(digit).length - 1 > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(222222));\nconsole.log(validate(122345));\nconsole.log(validate(222222));\nconsole.log(validate(12345));\nconsole.log(validate(123210));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122888,
      "stdout": "false\ntrue\nfalse\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(12345));\nconsole.log(validate(123456));\nconsole.log(validate(1234567));\nconsole.log(validate(12345678));\nconsole.log(validate(123456789));\nconsole.log(validate(1234567890));\nconsole.log(validate(12345678901));\nconsole.log(validate(123456789012));\nconsole.log(validate(1234567890123));\nconsole.log(validate(12345678901234));\nconsole.log(validate(123456789012345));\nconsole.log(validate(1234567890123456));\nconsole.log(validate(12345678901234567));\nconsole.log(validate(123456789012345678));\nconsole.log(validate(1234567890123456789));\nconsole.log(validate(12345678901234567890));\nconsole.log(validate(123456789012345678901));\nconsole.log(validate(1234567890123456789012));\nconsole.log(validate(12345678901234567890123));\nconsole.log(validate(123456789012345678901234));\nconsole.log(validate(123456789012345678901\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122888,
      "stdout": "../../../../tmp/tmpqn9dv3u4.ts(45,1): error TS1005: ',' expected.\n../../../../tmp/tmpqn9dv3u4.ts(45,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let map = new Map();\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (!map.has(digit)) {\n            map.set(digit, 1);\n        } else {\n            map.set(digit, map.get(digit) + 1);\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (map.get(digit) > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1234));\nconsole.log(validate(1224));\nconsole.log(validate(1213));\nconsole.log(validate(1212));\nconsole.log(validate(1211));\nconsole.log(validate(1111));\nconsole.log(validate(1112));\nconsole.log(validate(1113));\nconsole.log(validate(1114));\nconsole.log(validate(1115));\nconsole.log(validate(1116));\nconsole.log(validate(1117));\nconsole.log(validate(1118));\nconsole.log(validate(1119));\nconsole.log(validate(1123));\nconsole.log(validate(1124));\nconsole.log(validate(1125));\nconsole.log(validate(1126));\nconsole.log(validate(1127));\nconsole.log(validate(1128));\nconsole.log(validate(1129));\nconsole.log(validate(1133));\nconsole.log(validate(1134));\nconsole.log(validate(1135));\nconsole.log(validate(1136));\nconsole.log(validate(1137));\nconsole.log(validate(1138));\nconsole.log(validate(1139));\nconsole.log(validate(1144));\nconsole.log(validate(1145));\nconsole.log(validate(1146));\nconsole.log(validate(1147));\nconsole.log\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122888,
      "stdout": "true\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let obj = {};\n    for (let i = 0; i < str.length; i++) {\n        let char = str[i];\n        if (obj[char]) {\n            obj[char]++;\n        } else {\n            obj[char] = 1;\n        }\n    }\n    for (let key in obj) {\n        if (obj[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(1222));\nconsole.log(validate(2222));\nconsole.log(validate(2221));\nconsole.log(validate(2212));\nconsole.log(validate(2211));\nconsole.log(validate(2111));\nconsole.log(validate(1111));\nconsole.log(validate(1112));\nconsole.log(validate(1122));\nconsole.log(validate(1221));\nconsole.log(validate(1212));\nconsole.log(validate(1211));\nconsole.log(validate(1112));\nconsole.log(validate(1113));\nconsole.log(validate(1114));\nconsole.log(validate(1115));\nconsole.log(validate(1116));\nconsole.log(validate(1117));\nconsole.log(validate(1118));\nconsole.log(validate(1119));\nconsole.log(validate(1110));\nconsole.log(validate(1210));\nconsole.log(validate(1310));\nconsole.log(validate(1410));\nconsole.log(validate(1510));\nconsole.log(validate(1610));\nconsole.log(validate(1710));\nconsole.log(validate(1810));\nconsole.log(validate(1910));\nconsole.log(validate(1210));\nconsole.log(validate(1211));\nconsole.log(validate(1212));\nconsole.log(validate(1213));\nconsole.log(validate(1214));\nconsole.log(validate(1215));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122888,
      "stdout": "../../../../tmp/tmpv8x5lcpa.ts(56,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let freq = {};\n    let str = n.toString();\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(2222));\nconsole.log(validate(2221));\nconsole.log(validate(2220));\nconsole.log(validate(2210));\nconsole.log(validate(2211));\nconsole.log(validate(2212));\nconsole.log(validate(2213));\nconsole.log(validate(2214));\nconsole.log(validate(2215));\nconsole.log(validate(2216));\nconsole.log(validate(2217));\nconsole.log(validate(2218));\nconsole.log(validate(2219));\nconsole.log(validate(2229));\nconsole.log(validate(2239));\nconsole.log(validate(2249));\nconsole.log(validate(2259));\nconsole.log(validate(2269));\nconsole.log(validate(2279));\nconsole.log(validate(2289));\nconsole.log(validate(2299));\nconsole.log(validate(2399));\nconsole.log(validate(2499));\nconsole.log(validate(2599));\nconsole.log(validate(2699));\nconsole.log(validate(2799));\nconsole.log(validate(2899));\nconsole.log(validate(2999));\nconsole.log(validate(3999));\nconsole.log(validate(4999));\nconsole.log(validate(5999));\nconsole.log(validate(6\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122887,
      "stdout": "../../../../tmp/tmpl2q4rutq.ts(54,1): error TS1005: ',' expected.\n../../../../tmp/tmpl2q4rutq.ts(54,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n  let str = n.toString();\n  let obj = {};\n  for (let i = 0; i < str.length; i++) {\n    if (!obj[str[i]]) {\n      obj[str[i]] = 1;\n    } else {\n      obj[str[i]]++;\n    }\n  }\n  for (let key in obj) {\n    if (obj[key] > Number(key)) {\n      return false;\n    }\n  }\n  return true;\n}\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122888,
      "stdout": "true\nfalse\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n  let str = n.toString();\n  let freq = {};\n  for (let i = 0; i < str.length; i++) {\n    freq[str[i]] = (freq[str[i]] || 0) + 1;\n  }\n  for (let key in freq) {\n    if (freq[key] > parseInt(key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122888,
      "stdout": "../../../../tmp/tmp9ir3f8pz.ts(53,1): error TS1005: ',' expected.\n../../../../tmp/tmp9ir3f8pz.ts(53,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    const digits = n.toString().split('');\n    const digitFrequency = {};\n    digits.forEach(digit => {\n        digitFrequency[digit] = (digitFrequency[digit] || 0) + 1;\n    });\n    for (const digit in digitFrequency) {\n        if (digitFrequency[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122888,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let key in freq) {\n        if (freq[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(12233));\nconsole.log(validate(122333));\nconsole.log(validate(1223333));\nconsole.log(validate(12233334));\nconsole.log(validate(122333333));\nconsole.log(validate(1223333333));\nconsole.log(validate(12233333333));\nconsole.log(validate(122333333333));\nconsole.log(validate(1223333333333));\nconsole.log(validate(12233333333333));\nconsole.log(validate(122333333333333));\nconsole.log(validate(1223333333333333));\nconsole.log(validate(12233333333333333));\nconsole.log(validate(122333333333333333));\nconsole.log(validate(1223333333333333333));\nconsole.log(validate(12233333333333333333));\nconsole.log(validate(122333333333333333333));\nconsole.log(validate(1223333333333333333333));\nconsole.log(validate(12233333333333333333333));\nconsole.log(validate(122333333333333333333333));\nconsole.log(validate(1223333333333333333333333));\nconsole.log(validate(12233333333333333333333333));\nconsole.log(validate(122333333333333333333333333));\nconsole.log(validate(1223333333333333333333333333));\nconsole.log(validate(12233333333333333333333333333));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122889,
      "stdout": "../../../../tmp/tmp4rd6f8j3.ts(48,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let obj = {};\n    for (let i = 0; i < str.length; i++) {\n        if (obj[str[i]]) {\n            obj[str[i]]++;\n        } else {\n            obj[str[i]] = 1;\n        }\n    }\n    for (let key in obj) {\n        if (obj[key] > Number(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(12233));\nconsole.log(validate(112233));\nconsole.log(validate(122233));\nconsole.log(validate(122223));\nconsole.log(validate(122222));\nconsole.log(validate(122221));\nconsole.log(validate(122211));\nconsole.log(validate(122210));\nconsole.log(validate(122220));\nconsole.log(validate(122221));\nconsole.log(validate(122222));\nconsole.log(validate(122223));\nconsole.log(validate(122224));\nconsole.log(validate(122225));\nconsole.log(validate(122226));\nconsole.log(validate(122227));\nconsole.log(validate(122228));\nconsole.log(validate(122229));\nconsole.log(validate(122230));\nconsole.log(validate(122231));\nconsole.log(validate(122232));\nconsole.log(validate(122233));\nconsole.log(validate(122234));\nconsole.log(validate(122235));\nconsole.log(validate(122236));\nconsole.log(validate(122237));\nconsole.log(validate(122238));\nconsole.log(validate(122239));\nconsole.log(validate(122240));\nconsole.log(validate(122241));\nconsole.log(validate(122242));\nconsole.log(validate(122243));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122890,
      "stdout": "true\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let digits: number[] = n.toString().split('').map(Number);\n    let frequency: number[] = new Array(10).fill(0);\n    for (let i = 0; i < digits.length; i++) {\n        frequency[digits[i]]++;\n    }\n    for (let i = 0; i < digits.length; i++) {\n        if (frequency[digits[i]] > digits[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122890,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (!freq[digit]) {\n            freq[digit] = 1;\n        } else {\n            freq[digit]++;\n        }\n    }\n    for (let key in freq) {\n        if (freq[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(122222));\nconsole.log(validate(12222222));\nconsole.log(validate(1222222222));\nconsole.log(validate(122222222222));\nconsole.log(validate(12222222222222));\nconsole.log(validate(1222222222222222));\nconsole.log(validate(122222222222222222));\nconsole.log(validate(12222222222222222222));\nconsole.log(validate(1222222222222222222222));\nconsole.log(validate(122222222222222222222222));\nconsole.log(validate(12222222222222222222222222));\nconsole.log(validate(1222222222222222222222222222));\nconsole.log(validate(122222222222222222222222222222));\nconsole.log(validate(12222222222222222222222222222222));\nconsole.log(validate(1222222222222222222222222222222222));\nconsole.log(validate(122222222222222222222222222222222222));\nconsole.log(validate(122222222222222222222222222222222222\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122890,
      "stdout": "../../../../tmp/tmpk7cb3zeo.ts(42,1): error TS1005: ',' expected.\n../../../../tmp/tmpk7cb3zeo.ts(42,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let digits = n.toString().split('');\n    let freq = {};\n    for (let digit of digits) {\n        freq[digit] = (freq[digit] || 0) + 1;\n    }\n    for (let digit of digits) {\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122890,
      "stdout": "../../../../tmp/tmprdzaybp6.ts(54,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(12\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122890,
      "stdout": "../../../../tmp/tmp70g2y7a6.ts(54,1): error TS1005: ',' expected.\n../../../../tmp/tmp70g2y7a6.ts(54,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let key in freq) {\n        if (freq[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122887,
      "stdout": "../../../../tmp/tmp31ax6o25.ts(53,1): error TS1005: ',' expected.\n../../../../tmp/tmp31ax6o25.ts(53,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1222));\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(12\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122890,
      "stdout": "../../../../tmp/tmpej6f66be.ts(54,1): error TS1005: ',' expected.\n../../../../tmp/tmpej6f66be.ts(54,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1235));\nconsole.log(validate(1236));\nconsole.log(validate(1237));\nconsole.log(validate(1238));\nconsole.log(validate(1239));\nconsole.log(validate(1230));\nconsole.log(validate(1231));\nconsole.log(validate(1232));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1235));\nconsole.log(validate(1236));\nconsole.log(validate(1237));\nconsole.log(validate(1238));\nconsole.log(validate(1239));\nconsole.log(validate(1240));\nconsole.log(validate(1241));\nconsole.log(validate(1242));\nconsole.log(validate(1243));\nconsole.log(validate(1244));\nconsole.log(validate(1245));\nconsole.log(validate(1246));\nconsole.log(validate(1247));\nconsole.log(validate(1248));\nconsole.log(validate(1249));\nconsole.log(validate(1250));\nconsole.log(validate(1251));\nconsole.log(validate(1252));\nconsole.log(validate(1253));\nconsole.\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122890,
      "stdout": "../../../../tmp/tmpw089e8jq.ts(55,9): error TS1003: Identifier expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let digits: number[] = n.toString().split(\"\").map(Number);\n    let frequency: number[] = [];\n    for (let i = 0; i < digits.length; i++) {\n        frequency[i] = 0;\n    }\n    for (let i = 0; i < digits.length; i++) {\n        for (let j = 0; j < digits.length; j++) {\n            if (digits[i] == digits[j]) {\n                frequency[i]++;\n            }\n        }\n    }\n    for (let i = 0; i < digits.length; i++) {\n        if (frequency[i] > digits[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122890,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let obj = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (obj[digit]) {\n            obj[digit]++;\n        } else {\n            obj[digit] = 1;\n        }\n    }\n    for (let key in obj) {\n        if (obj[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validatendeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122890,
      "stdout": "../../../../tmp/tmp0npzxt2p.ts(32,1): error TS1005: ',' expected.\n../../../../tmp/tmp0npzxt2p.ts(32,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let digits = n.toString().split('').map(Number);\n    let freq = {};\n    for (let i = 0; i < digits.length; i++) {\n        if (freq[digits[i]]) {\n            freq[digits[i]]++;\n        } else {\n            freq[digits[i]] = 1;\n        }\n    }\n    for (let i = 0; i < digits.length; i++) {\n        if (freq[digits[i]] > digits[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122879,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let digits = n.toString().split('');\n    let frequency = {};\n    for (let i = 0; i < digits.length; i++) {\n        let digit = digits[i];\n        if (frequency[digit]) {\n            frequency[digit]++;\n        } else {\n            frequency[digit] = 1;\n        }\n    }\n    for (let i = 0; i < digits.length; i++) {\n        let digit = digits[i];\n        if (frequency[digit] > digit) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1234));\nconsole.log(validate(1224));\nconsole.log(validate(1213));\nconsole.log(validate(1212));\nconsole.log(validate(1211));\nconsole.log(validate(2211));\nconsole.log(validate(2111));\nconsole.log(validate(1111));\nconsole.log(validate(1222));\nconsole.log(validate(2222));\nconsole.log(validate(1234));\nconsole.log(validate(2234));\nconsole.log(validate(1244));\nconsole.log(validate(2244));\nconsole.log(validate(1233));\nconsole.log(validate(2233));\nconsole.log(validate(1223));\nconsole.log(validate(2223));\nconsole.log(validate(1222));\nconsole.log(validate(2222));\nconsole.log(validate(1222));\nconsole.log(validate(2222));\nconsole.log(validate(1222));\nconsole.log(validate(2222));\nconsole.log(validate(1222));\nconsole.log(validate(2222));\nconsole.log(validate(1222));\nconsole.log(validate(2222));\nconsole.log(validate(1222));\nconsole.log(validate(2222));\nconsole.log(validate(1222));\nconsole.log(validate(2222));\nconsole.log(validate(1222));\nconsole.log(validate(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122890,
      "stdout": "../../../../tmp/tmp4i0_6pyj.ts(56,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let digits = n.toString().split('').map(Number);\n    let freq = {};\n    for (let i = 0; i < digits.length; i++) {\n        let digit = digits[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < digits.length; i++) {\n        let digit = digits[i];\n        if (freq[digit] > digit) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122890,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = 0; j < str.length; j++) {\n            if (str[i] == str[j]) {\n                count++;\n            }\n        }\n        if (count > parseInt(str[i])) {\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\nconsole.log(validate(1223));\nconsole.log(validate(12233));\nconsole.log(validate(122333));\nconsole.log(validate(1223333));\nconsole.log(validate(12233333));\nconsole.log(validate(122333333));\nconsole.log(validate(1223333333));\nconsole.log(validate(12233333333));\nconsole.log(validate(122333333333));\nconsole.log(validate(1223333333333));\nconsole.log(validate(12233333333333));\nconsole.log(validate(122333333333333));\nconsole.log(validate(1223333333333333));\nconsole.log(validate(12233333333333333));\nconsole.log(validate(122333333333333333));\nconsole.log(validate(1223333333333333333));\nconsole.log(validate(12233333333333333333));\nconsole.log(validate(122333333333333333333));\nconsole.log(validate(1223333333333333333333));\nconsole.log(validate(12233333333333333333333));\nconsole.log(validate(122333333333333333333333));\nconsole.log(validate(1223333333333333333333333));\nconsole.log(validate(12233333333333333333333333));\nconsole.log(validate(122333333333333333333333333));\nconsole.log(validate(1223333333333333333333333333));\nconsole.log(validate(12233333333333333333333333333));\nconsole.log(validate(122333333333333333333333333333));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122890,
      "stdout": "true\ntrue\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n  let str = n.toString();\n  let freq = {};\n  for (let i = 0; i < str.length; i++) {\n    if (freq[str[i]]) {\n      freq[str[i]]++;\n    } else {\n      freq[str[i]] = 1;\n    }\n  }\n  for (let key in freq) {\n    if (freq[key] > parseInt(key)) {\n      return false;\n    }\n  }\n  return true;\n}\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1235));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122890,
      "stdout": "true\nfalse\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1234));\nconsole.log(validate(1224));\nconsole.log(validate(1233));\nconsole.log(validate(1222));\nconsole.log(validate(1211));\nconsole.log(validate(1212));\nconsole.log(validate(1213));\nconsole.log(validate(1214));\nconsole.log(validate(1215));\nconsole.log(validate(1216));\nconsole.log(validate(1217));\nconsole.log(validate(1218));\nconsole.log(validate(1219));\nconsole.log(validate(1221));\nconsole.log(validate(1223));\nconsole.log(validate(1225));\nconsole.log(validate(1226));\nconsole.log(validate(1227));\nconsole.log(validate(1228));\nconsole.log(validate(1229));\nconsole.log(validate(1231));\nconsole.log(validate(1232));\nconsole.log(validate(1234));\nconsole.log(validate(1235));\nconsole.log(validate(1236));\nconsole.log(validate(1237));\nconsole.log(validate(1238));\nconsole.log(validate(1239));\nconsole.log(validate(1241));\nconsole.log(validate(1242));\nconsole.log(validate(1243));\nconsole.log(validate(1244));\nconsole.log(validate(1245));\nconsole.log(validate(12\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122890,
      "stdout": "../../../../tmp/tmpvvqbd_oe.ts(54,1): error TS1005: ',' expected.\n../../../../tmp/tmpvvqbd_oe.ts(54,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let digits = n.toString().split('');\n    let freq = {};\n    for (let digit of digits) {\n        freq[digit] = (freq[digit] || 0) + 1;\n    }\n    for (let digit of digits) {\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(1233));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122890,
      "stdout": "../../../../tmp/tmp6uyft7ky.ts(54,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(12\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122890,
      "stdout": "../../../../tmp/tmpw4vukm0d.ts(54,1): error TS1005: ',' expected.\n../../../../tmp/tmpw4vukm0d.ts(54,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let arr = str.split(\"\");\n    let obj = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (obj[arr[i]]) {\n            obj[arr[i]]++;\n        } else {\n            obj[arr[i]] = 1;\n        }\n    }\n    for (let key in obj) {\n        if (obj[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(1234));\nconsole.log(validate(1224));\nconsole.log(validate(1233));\nconsole.log(validate(1222));\nconsole.log(validate(1223));\nconsole.log(validate(122222));\nconsole.log(validate(12222222));\nconsole.log(validate(1222222222));\nconsole.log(validate(122222222222));\nconsole.log(validate(12222222222222));\nconsole.log(validate(1222222222222222));\nconsole.log(validate(122222222222222222));\nconsole.log(validate(12222222222222222222));\nconsole.log(validate(1222222222222222222222));\nconsole.log(validate(122222222222222222222222));\nconsole.log(validate(12222222222222222222222222));\nconsole.log(validate(1222222222222222222222222222));\nconsole.log(validate(122222222222222222222222222222));\nconsole.log(validate(12222222222222222222222222222222));\nconsole.log(validate(1222222222222222222222222222222222));\nconsole.log(validate(122222222222222222222222222222222222));\nconsole.log(validate(122222222222\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122890,
      "stdout": "../../../../tmp/tmp7c7qub9j.ts(42,1): error TS1005: ',' expected.\n../../../../tmp/tmp7c7qub9j.ts(42,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(1233));\nconsole.log(validate(1222));\nconsole.log(validate(122222));\nconsole.log(validate(12222222));\nconsole.log(validate(1222222222));\nconsole.log(validate(122222222222));\nconsole.log(validate(12222222222222));\nconsole.log(validate(1222222222222222));\nconsole.log(validate(122222222222222222));\nconsole.log(validate(12222222222222222222));\nconsole.log(validate(1222222222222222222222));\nconsole.log(validate(122222222222222222222222));\nconsole.log(validate(12222222222222222222222222));\nconsole.log(validate(1222222222222222222222222222));\nconsole.log(validate(122222222222222222222222222222));\nconsole.log(validate(12222222222222222222222222222222));\nconsole.log(validate(1222222222222222222222222222222222));\nconsole.log(validate(122222222222222222222222222222222222));\nconsole.log(validate(1222222222222222\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122890,
      "stdout": "../../../../tmp/tmp_1gu8vyf.ts(41,1): error TS1005: ',' expected.\n../../../../tmp/tmp_1gu8vyf.ts(41,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let digits = n.toString().split('').map(Number);\n    let freq = {};\n    for (let digit of digits) {\n        freq[digit] = (freq[digit] || 0) + 1;\n    }\n    for (let digit of digits) {\n        if (freq[digit] > digit) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122891,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    const digits = n.toString().split('').map(Number);\n    const freq = {};\n    digits.forEach(digit => {\n        freq[digit] = (freq[digit] || 0) + 1;\n    });\n    return Object.keys(freq).every(digit => freq[digit] <= Number(digit));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122891,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n  const digits = n.toString().split('');\n  const counts = {};\n  digits.forEach(digit => {\n    counts[digit] = counts[digit] ? counts[digit] + 1 : 1;\n  });\n  return Object.keys(counts).every(digit => counts[digit] <= parseInt(digit));\n}\n\nconsole.log(validate(1223)); // true\nconsole.log(validate(1233)); // false\nconsole.log(validate(1234)); // true\nconsole.log(validate(12345)); // false\nconsole.log(validate(123456)); // true\nconsole.log(validate(1234567)); // false\nconsole.log(validate(12345678)); // true\nconsole.log(validate(123456789)); // false\nconsole.log(validate(1234567891)); // true\nconsole.log(validate(12345678911)); // false\nconsole.log(validate(123456789111)); // true\nconsole.log(validate(1234567891111)); // false\nconsole.log(validate(12345678911111)); // true\nconsole.log(validate(123456789111111)); // false\nconsole.log(validate(1234567891111111)); // true\nconsole.log(validate(12345678911111111)); // false\nconsole.log(validate(123456789111111111)); // true\nconsole.log(validate(1234567891111111111)); // false\nconsole.log(validate(12345678911111111111)); // true\nconsole.log(validate(123456789111111111111)); // false\nconsole.log(validate(1234567891111111111111)); // true\nconsole.log(validate(12345678911111111111111)); // false\nconsole.log(validate(123456789111111111111111)); // true\nconsole.log(validate(1234567891111111111111111)); // false\nconsole.log(validate(12345678911111111111111111)); // true\nconsole.log(validate(123456789111111111111111111)); // false\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122891,
      "stdout": "true\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        freq[digit] = (freq[digit] || 0) + 1;\n    }\n    for (let key in freq) {\n        if (freq[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122879,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let obj = {};\n    for (let i = 0; i < str.length; i++) {\n        if (obj[str[i]]) {\n            obj[str[i]]++;\n        } else {\n            obj[str[i]] = 1;\n        }\n    }\n    for (let key in obj) {\n        if (obj[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(1233));\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1234));\nconsole.log(validate(1243));\nconsole.log(validate(1233));\nconsole.log(validate(1233));\nconsole.log(validate(1233));\nconsole.log(validate(1233));\nconsole.log(validate(1233));\nconsole.log(validate(1233));\nconsole.log(validate(1233));\nconsole.log(validate(1233));\nconsole.log(validate(1233));\nconsole.log(validate(1233));\nconsole.log(validate(1233));\nconsole.log(validate(1233));\nconsole.log(validate(1233));\nconsole.log(validate(1233));\nconsole.log(validate(1233));\nconsole.log(validate(1233));\nconsole.log(validate(1233));\nconsole.log(validate(1233));\nconsole.log(validate(1233));\nconsole.log(validate(1233));\nconsole.log(validate(1233));\nconsole.log(validate(1233));\nconsole.log(validate(1233));\nconsole.log(validate(1233));\nconsole.log(validate(1233));\nconsole.log(validate(1233));\nconsole.log(validate(1233));\nconsole.log(validate(1233));\nconsole.log(validate(1233));\nconsole.log(validate(1233));\nconsole.log(valid\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122891,
      "stdout": "../../../../tmp/tmpi3ykwjbg.ts(55,1): error TS1005: ',' expected.\n../../../../tmp/tmpi3ykwjbg.ts(55,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let freq = {};\n    let str = n.toString();\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(12\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122892,
      "stdout": "../../../../tmp/tmprwtnziir.ts(54,1): error TS1005: ',' expected.\n../../../../tmp/tmprwtnziir.ts(54,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1235));\nconsole.log(validate(1236));\nconsole.log(validate(1237));\nconsole.log(validate(1238));\nconsole.log(validate(1239));\nconsole.log(validate(1240));\nconsole.log(validate(1241));\nconsole.log(validate(1242));\nconsole.log(validate(1243));\nconsole.log(validate(1244));\nconsole.log(validate(1245));\nconsole.log(validate(1246));\nconsole.log(validate(1247));\nconsole.log(validate(1248));\nconsole.log(validate(1249));\nconsole.log(validate(1250));\nconsole.log(validate(1251));\nconsole.log(validate(1252));\nconsole.log(validate(1253));\nconsole.log(validate(1254));\nconsole.log(validate(1255));\nconsole.log(validate(1256));\nconsole.log(validate(1257));\nconsole.log(validate(1258));\nconsole.log(validate(1259));\nconsole.log(validate(1260));\nconsole.log(validate(1261));\nconsole.log(validate(1262));\nconsole.log(validate(1263));\nconsole.log(validate(12\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122893,
      "stdout": "../../../../tmp/tmpq16agwk0.ts(54,1): error TS1005: ',' expected.\n../../../../tmp/tmpq16agwk0.ts(54,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]] += 1;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(2222));\nconsole.log(validate(2221));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122893,
      "stdout": "true\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (!freq[str[i]]) {\n            freq[str[i]] = 1;\n        } else {\n            freq[str[i]]++;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(12\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122892,
      "stdout": "../../../../tmp/tmp8vk441cb.ts(54,1): error TS1005: ',' expected.\n../../../../tmp/tmp8vk441cb.ts(54,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let digits = n.toString().split('');\n    let frequency = {};\n    digits.forEach(digit => {\n        if (frequency[digit]) {\n            frequency[digit]++;\n        } else {\n            frequency[digit] = 1;\n        }\n    });\n    return Object.keys(frequency).every(digit => frequency[digit] <= parseInt(digit));\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(1233));\nconsole.log(validate(1222));\nconsole.log(validate(122222));\nconsole.log(validate(1222222));\nconsole.log(validate(12222222));\nconsole.log(validate(122222222));\nconsole.log(validate(1222222222));\nconsole.log(validate(12222222222));\nconsole.log(validate(122222222222));\nconsole.log(validate(1222222222222));\nconsole.log(validate(12222222222222));\nconsole.log(validate(122222222222222));\nconsole.log(validate(1222222222222222));\nconsole.log(validate(12222222222222222));\nconsole.log(validate(122222222222222222));\nconsole.log(validate(1222222222222222222));\nconsole.log(validate(12222222222222222222));\nconsole.log(validate(122222222222222222222));\nconsole.log(validate(1222222222222222222222));\nconsole.log(validate(12222222222222222222222));\nconsole.log(validate(122222222222222222222222));\nconsole.log(validate(1222222222222222222222222));\nconsole.log(validate(12222222222222222222222222));\nconsole.log(validate(122222222222222222222222222));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122893,
      "stdout": "true\ntrue\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let digits = n.toString().split('');\n    let freq = {};\n    for (let i = 0; i < digits.length; i++) {\n        if (freq[digits[i]]) {\n            freq[digits[i]] += 1;\n        } else {\n            freq[digits[i]] = 1;\n        }\n    }\n    for (let i = 0; i < digits.length; i++) {\n        if (freq[digits[i]] > parseInt(digits[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(1233));\nconsole.log(validate(1222));\nconsole.log(validate(122222));\nconsole.log(validate(12222222));\nconsole.log(validate(1222222222));\nconsole.log(validate(122222222222));\nconsole.log(validate(12222222222222));\nconsole.log(validate(1222222222222222));\nconsole.log(validate(122222222222222222));\nconsole.log(validate(12222222222222222222));\nconsole.log(validate(1222222222222222222222));\nconsole.log(validate(122222222222222222222222));\nconsole.log(validate(12222222222222222222222222));\nconsole.log(validate(1222222222222222222222222222));\nconsole.log(validate(122222222222222222222222222222));\nconsole.log(validate(12222222222222222222222222222222));\nconsole.log(validate(1222222222222222222222222222222222));\nconsole.log(validate(122222222222222222222222222222222222));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122892,
      "stdout": "../../../../tmp/tmp9lsqmvy9.ts(41,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n  const digits = n.toString().split(\"\");\n  const digitFrequencies = {};\n\n  digits.forEach((digit) => {\n    digitFrequencies[digit] = (digitFrequencies[digit] || 0) + 1;\n  });\n\n  for (const digit in digitFrequencies) {\n    if (digitFrequencies[digit] > parseInt(digit)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122893,
      "stdout": "../../../../tmp/tmp5zixfko8.ts(56,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n  let str = n.toString();\n  let obj = {};\n  for (let i = 0; i < str.length; i++) {\n    if (obj[str[i]]) {\n      obj[str[i]]++;\n    } else {\n      obj[str[i]] = 1;\n    }\n  }\n  for (let key in obj) {\n    if (obj[key] > parseInt(key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1233));\nconsole.log(validate(1222));\nconsole.log(validate(1234));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validatendeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122893,
      "stdout": "../../../../tmp/tmp3cac94c0.ts(31,1): error TS1005: ',' expected.\n../../../../tmp/tmp3cac94c0.ts(31,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let digits = n.toString().split('');\n    let freq = {};\n    for (let i = 0; i < digits.length; i++) {\n        let digit = digits[i];\n        freq[digit] = (freq[digit] || 0) + 1;\n    }\n    for (let key in freq) {\n        if (freq[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122893,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n  let str = n.toString();\n  let obj = {};\n  for (let i = 0; i < str.length; i++) {\n    if (obj[str[i]]) {\n      obj[str[i]]++;\n    } else {\n      obj[str[i]] = 1;\n    }\n  }\n  for (let key in obj) {\n    if (obj[key] > key) {\n      return false;\n    }\n  }\n  return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validatendeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122893,
      "stdout": "../../../../tmp/tmp2lv1_v5k.ts(31,1): error TS1005: ',' expected.\n../../../../tmp/tmp2lv1_v5k.ts(31,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1111));\nconsole.log(validate(2222));\nconsole.log(validate(3333));\nconsole.log(validate(4444));\nconsole.log(validate(5555));\nconsole.log(validate(6666));\nconsole.log(validate(7777));\nconsole.log(validate(8888));\nconsole.log(validate(9999));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122893,
      "stdout": "true\nfalse\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\nfalse\nfalse\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\nfalse\nfalse\nfalse\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let digits = n.toString().split('');\n    let frequency = {};\n    for (let i = 0; i < digits.length; i++) {\n        if (frequency[digits[i]]) {\n            frequency[digits[i]]++;\n        } else {\n            frequency[digits[i]] = 1;\n        }\n    }\n    for (let i = 0; i < digits.length; i++) {\n        if (frequency[digits[i]] > parseInt(digits[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122893,
      "stdout": "true\ntrue\nfalse\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n  let str = n.toString();\n  let freq = {};\n  for (let i = 0; i < str.length; i++) {\n    if (freq[str[i]]) {\n      freq[str[i]]++;\n    } else {\n      freq[str[i]] = 1;\n    }\n  }\n  for (let i = 0; i < str.length; i++) {\n    if (freq[str[i]] > parseInt(str[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1233));\nconsole.log(validate(1222));\nconsole.log(validate(1234));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(12\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122893,
      "stdout": "../../../../tmp/tmp2kbupo69.ts(54,1): error TS1005: ',' expected.\n../../../../tmp/tmp2kbupo69.ts(54,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let map = {};\n    for (let i = 0; i < str.length; i++) {\n        if (map[str[i]]) {\n            map[str[i]]++;\n        } else {\n            map[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (map[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122893,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1232));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122893,
      "stdout": "../../../../tmp/tmpfisve3m5.ts(55,9): error TS1003: Identifier expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        freq[digit] = (freq[digit] || 0) + 1;\n    }\n    for (let key in freq) {\n        if (freq[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122879,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let obj = {};\n    for (let i = 0; i < str.length; i++) {\n        if (obj[str[i]]) {\n            obj[str[i]]++;\n        } else {\n            obj[str[i]] = 1;\n        }\n    }\n    for (let key in obj) {\n        if (obj[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let digits = n.toString().split('');\n    let frequency = {};\n    for (let i = 0; i < digits.length; i++) {\n        if (frequency[digits[i]]) {\n            frequency[digits[i]]++;\n        } else {\n            frequency[digits[i]] = 1;\n        }\n    }\n    for (let i = 0; i < digits.length; i++) {\n        if (frequency[digits[i]] > parseInt(digits[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1244));\nconsole.log(validate(1245));\nconsole.log(validate(1255));\nconsole.log(validate(1256));\nconsole.log(validate(1266));\nconsole.log(validate(1267));\nconsole.log(validate(1277));\nconsole.log(validate(1278));\nconsole.log(validate(1288));\nconsole.log(validate(1289));\nconsole.log(validate(1299));\nconsole.log(validate(1290));\nconsole.log(validate(1291));\nconsole.log(validate(1292));\nconsole.log(validate(1293));\nconsole.log(validate(1294));\nconsole.log(validate(1295));\nconsole.log(validate(1296));\nconsole.log(validate(1297));\nconsole.log(validate(1298));\nconsole.log(validate(1299));\nconsole.log(validate(12100));\nconsole.log(validate(12110));\nconsole.log(validate(12120));\nconsole.log(validate(12130));\nconsole.log(validate(12140));\nconsole.log(validate(12150));\nconsole.log(validate(12160));\nconsole.log(validate(12170));\nconsole.log(valid\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122893,
      "stdout": "../../../../tmp/tmposyrws4r.ts(53,1): error TS1005: ',' expected.\n../../../../tmp/tmposyrws4r.ts(53,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let key in freq) {\n        if (freq[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(12233));\nconsole.log(validate(122233));\nconsole.log(validate(1222333));\nconsole.log(validate(12223333));\nconsole.log(validate(122233333));\nconsole.log(validate(1222333333));\nconsole.log(validate(12223333333));\nconsole.log(validate(122233333333));\nconsole.log(validate(1222333333333));\nconsole.log(validate(12223333333333));\nconsole.log(validate(122233333333333));\nconsole.log(validate(1222333333333333));\nconsole.log(validate(12223333333333333));\nconsole.log(validate(122233333333333333));\nconsole.log(validate(1222333333333333333));\nconsole.log(validate(12223333333333333333));\nconsole.log(validate(122233333333333333333));\nconsole.log(validate(1222333333333333333333));\nconsole.log(validate(12223333333333333333333));\nconsole.log(validate(122233333333333333333333));\nconsole.log(validate(1222333333333333333333333));\nconsole.log(validate(12223333333333333333333333));\nconsole.log(validate(122233333333333333333333333));\nconsole.log(validate(1222333333333333333333333333));\nconsole.log(validate(12223333333333333333333333333));\nconsole.log(valid\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122893,
      "stdout": "../../../../tmp/tmp1thoy25l.ts(48,1): error TS1005: ',' expected.\n../../../../tmp/tmp1thoy25l.ts(48,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let digits = n.toString().split('').map(Number);\n    let freq = {};\n    for (let i = 0; i < digits.length; i++) {\n        if (freq[digits[i]]) {\n            freq[digits[i]]++;\n        } else {\n            freq[digits[i]] = 1;\n        }\n    }\n    for (let i = 0; i < digits.length; i++) {\n        if (freq[digits[i]] > digits[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122879,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n  const digits = n.toString().split('');\n  const freq = {};\n  digits.forEach(digit => {\n    freq[digit] = (freq[digit] || 0) + 1;\n  });\n  for (let digit in freq) {\n    if (freq[digit] > parseInt(digit)) {\n      return false;\n    }\n  }\n  return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122893,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let digits = n.toString().split('');\n    let frequency = {};\n    for (let i = 0; i < digits.length; i++) {\n        if (frequency[digits[i]]) {\n            frequency[digits[i]] += 1;\n        } else {\n            frequency[digits[i]] = 1;\n        }\n    }\n    for (let key in frequency) {\n        if (frequency[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122893,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let map = {};\n    for (let i = 0; i < str.length; i++) {\n        if (map[str[i]]) {\n            map[str[i]]++;\n        } else {\n            map[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (map[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122893,
      "stdout": "true\nfalse\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let obj = {};\n    for (let i = 0; i < str.length; i++) {\n        if (obj[str[i]]) {\n            obj[str[i]]++;\n        } else {\n            obj[str[i]] = 1;\n        }\n    }\n    for (let key in obj) {\n        if (obj[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(2222));\nconsole.log(validate(2223));\nconsole.log(validate(2233));\nconsole.log(validate(2234));\nconsole.log(validate(2235));\nconsole.log(validate(2236));\nconsole.log(validate(2237));\nconsole.log(validate(2238));\nconsole.log(validate(2239));\nconsole.log(validate(2249));\nconsole.log(validate(2249));\nconsole.log(validate(2249));\nconsole.log(validate(2249));\nconsole.log(validate(2249));\nconsole.log(validate(2249));\nconsole.log(validate(2249));\nconsole.log(validate(2249));\nconsole.log(validate(2249));\nconsole.log(validate(2249));\nconsole.log(validate(2249));\nconsole.log(validate(2249));\nconsole.log(validate(2249));\nconsole.log(validate(2249));\nconsole.log(validate(2249));\nconsole.log(validate(2249));\nconsole.log(validate(2249));\nconsole.log(validate(2249));\nconsole.log(validate(2249));\nconsole.log(validate(2249));\nconsole.log(validate(2249));\nconsole.log(validate(2249));\nconsole.log(validate(2249));\nconsole.log(validate(2249));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122893,
      "stdout": "../../../../tmp/tmp6kdrl62q.ts(56,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let digits = n.toString().split('');\n    let frequency = {};\n    for (let digit of digits) {\n        frequency[digit] = (frequency[digit] || 0) + 1;\n    }\n    for (let digit of digits) {\n        if (frequency[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122894,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let digits = n.toString().split('');\n    let freq = {};\n    for (let i = 0; i < digits.length; i++) {\n        if (freq[digits[i]]) {\n            freq[digits[i]]++;\n        } else {\n            freq[digits[i]] = 1;\n        }\n    }\n    for (let key in freq) {\n        if (freq[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122893,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n  const digits = n.toString().split('');\n  const digitFrequencies = {};\n  for (const digit of digits) {\n    if (digitFrequencies[digit]) {\n      digitFrequencies[digit]++;\n    } else {\n      digitFrequencies[digit] = 1;\n    }\n  }\n\n  for (const digit of digits) {\n    if (digitFrequencies[digit] > parseInt(digit)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validatendeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122894,
      "stdout": "../../../../tmp/tmpwgc8ual8.ts(33,1): error TS1005: ',' expected.\n../../../../tmp/tmpwgc8ual8.ts(33,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n  const digits = n.toString().split('');\n  const freq = {};\n  for (const digit of digits) {\n    freq[digit] = (freq[digit] || 0) + 1;\n  }\n  for (const digit of digits) {\n    if (freq[digit] > parseInt(digit)) {\n      return false;\n    }\n  }\n  return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122894,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let obj = {};\n    for (let i = 0; i < str.length; i++) {\n        if (obj[str[i]]) {\n            obj[str[i]]++;\n        } else {\n            obj[str[i]] = 1;\n        }\n    }\n    for (let key in obj) {\n        if (obj[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(122333));\nconsole.log(validate(12233344));\nconsole.log(validate(1223334444));\nconsole.log(validate(122333444444));\nconsole.log(validate(12233344444444));\nconsole.log(validate(1223334444444444));\nconsole.log(validate(122333444444444444));\nconsole.log(validate(12233344444444444444));\nconsole.log(validate(1223334444444444444444));\nconsole.log(validate(122333444444444444444444));\nconsole.log(validate(12233344444444444444444444));\nconsole.log(validate(1223334444444444444444444444));\nconsole.log(validate(122333444444444444444444444444));\nconsole.log(validate(12233344444444444444444444444444));\nconsole.log(validate(1223334444444444444444444444444444));\nconsole.log(validate(122333444444444444444444444444444444));\nconsole.log(validate(12233344444444444444444444444444444444));\nconsole.log(validate(1223334444444444444444444444444444444444));\nconsole.log(validate(1223\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122894,
      "stdout": "../../../../tmp/tmp486c5fxd.ts(40,1): error TS1005: ',' expected.\n../../../../tmp/tmp486c5fxd.ts(40,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let digits = n.toString().split('');\n    let frequency = {};\n    for (let i = 0; i < digits.length; i++) {\n        if (frequency[digits[i]]) {\n            frequency[digits[i]]++;\n        } else {\n            frequency[digits[i]] = 1;\n        }\n    }\n    for (let i = 0; i < digits.length; i++) {\n        if (frequency[digits[i]] > parseInt(digits[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122879,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let digits = n.toString().split('');\n    let freq = {};\n    for (let i = 0; i < digits.length; i++) {\n        if (freq[digits[i]]) {\n            freq[digits[i]]++;\n        } else {\n            freq[digits[i]] = 1;\n        }\n    }\n    for (let i = 0; i < digits.length; i++) {\n        if (freq[digits[i]] > parseInt(digits[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1234));\nconsole.log(validate(1224));\nconsole.log(validate(1222));\nconsole.log(validate(1223));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1235));\nconsole.log(validate(1236));\nconsole.log(validate(1237));\nconsole.log(validate(1238));\nconsole.log(validate(1239));\nconsole.log(validate(1244));\nconsole.log(validate(1245));\nconsole.log(validate(1246));\nconsole.log(validate(1247));\nconsole.log(validate(1248));\nconsole.log(validate(1249));\nconsole.log(validate(1255));\nconsole.log(validate(1256));\nconsole.log(validate(1257));\nconsole.log(validate(1258));\nconsole.log(validate(1259));\nconsole.log(validate(1266));\nconsole.log(validate(1267));\nconsole.log(validate(1268));\nconsole.log(validate(1269));\nconsole.log(validate(1277));\nconsole.log(validate(1278));\nconsole.log(validate(1279));\nconsole.log(validate(1288));\nconsole.log(validate(1289));\nconsole.log(validate(1299));\nconsole.log(validate(1333));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122894,
      "stdout": "true\ntrue\nfalse\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n  let str = n.toString();\n  let freq = {};\n  for (let i = 0; i < str.length; i++) {\n    if (freq[str[i]]) {\n      freq[str[i]]++;\n    } else {\n      freq[str[i]] = 1;\n    }\n  }\n  for (let i = 0; i < str.length; i++) {\n    if (freq[str[i]] > parseInt(str[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122894,
      "stdout": "true\nfalse\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let key in freq) {\n        if (freq[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    const digits = n.toString().split('');\n    const frequency = {};\n\n    for (let i = 0; i < digits.length; i++) {\n        const digit = digits[i];\n        frequency[digit] = frequency[digit] ? frequency[digit] + 1 : 1;\n    }\n\n    for (let i = 0; i < digits.length; i++) {\n        const digit = digits[i];\n        if (frequency[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(2222));\nconsole.log(validate(2221));\nconsole.log(validate(2211));\nconsole.log(validate(2111));\nconsole.log(validate(1111));\nconsole.log(validate(1112));\nconsole.log(validate(1122));\nconsole.log(validate(1222));\nconsole.log(validate(1223));\nconsole.log(validate(1233));\nconsole.log(validate(1333));\nconsole.log(validate(2233));\nconsole.log(validate(2333));\nconsole.log(validate(3333));\nconsole.log(validate(3334));\nconsole.log(validate(3344));\nconsole.log(validate(3444));\nconsole.log(validate(4444));\nconsole.log(validate(4445));\nconsole.log(validate(4455));\nconsole.log(validate(4555));\nconsole.log(validate(5555));\nconsole.log(validate(5556));\nconsole.log(validate(5566));\nconsole.log(validate(5666));\nconsole.log(validate(6666));\nconsole.log(validate(6667));\nconsole.log(validate(6677));\nconsole.log(validate(6777));\nconsole.log(validate(7777));\nconsole.log(validate(7778));\nconsole.log(validate(7788));\nconsole.log(validate(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122894,
      "stdout": "../../../../tmp/tmp48iluu7d.ts(56,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(1233));\nconsole.log(validate(1222));\nconsole.log(validate(122222));\nconsole.log(validate(12222222));\nconsole.log(validate(1222222222));\nconsole.log(validate(122222222222));\nconsole.log(validate(12222222222222));\nconsole.log(validate(1222222222222222));\nconsole.log(validate(122222222222222222));\nconsole.log(validate(12222222222222222222));\nconsole.log(validate(1222222222222222222222));\nconsole.log(validate(122222222222222222222222));\nconsole.log(validate(12222222222222222222222222));\nconsole.log(validate(1222222222222222222222222222));\nconsole.log(validate(122222222222222222222222222222));\nconsole.log(validate(12222222222222222222222222222222));\nconsole.log(validate(1222222222222222222222222222222222));\nconsole.log(validate(122222222222222222222222222222222222));\nconsole.log(validate(1222\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122894,
      "stdout": "../../../../tmp/tmpwnldrejq.ts(43,1): error TS1005: ',' expected.\n../../../../tmp/tmpwnldrejq.ts(43,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let arr = n.toString().split('');\n    let freq = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (freq[arr[i]]) {\n            freq[arr[i]]++;\n        } else {\n            freq[arr[i]] = 1;\n        }\n    }\n    for (let i = 0; i < arr.length; i++) {\n        if (freq[arr[i]] > parseInt(arr[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(1233));\nconsole.log(validate(1222));\nconsole.log(validate(122222));\nconsole.log(validate(12222222));\nconsole.log(validate(1222222222));\nconsole.log(validate(122222222222));\nconsole.log(validate(12222222222222));\nconsole.log(validate(1222222222222222));\nconsole.log(validate(122222222222222222));\nconsole.log(validate(12222222222222222222));\nconsole.log(validate(1222222222222222222222));\nconsole.log(validate(122222222222222222222222));\nconsole.log(validate(12222222222222222222222222));\nconsole.log(validate(1222222222222222222222222222));\nconsole.log(validate(122222222222222222222222222222));\nconsole.log(validate(12222222222222222222222222222222));\nconsole.log(validate(1222222222222222222222222222222222));\nconsole.log(validate(122222222222222222222222222222222222));\nconsole.log(validate(12222222\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122894,
      "stdout": "../../../../tmp/tmpdru0_jwj.ts(41,1): error TS1005: ',' expected.\n../../../../tmp/tmpdru0_jwj.ts(41,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let digits = n.toString().split('').map(Number);\n    let frequency = {};\n    for (let i = 0; i < digits.length; i++) {\n        if (frequency[digits[i]]) {\n            frequency[digits[i]]++;\n        } else {\n            frequency[digits[i]] = 1;\n        }\n    }\n    for (let i = 0; i < digits.length; i++) {\n        if (frequency[digits[i]] > digits[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (!freq[digit]) {\n            freq[digit] = 1;\n        } else {\n            freq[digit]++;\n        }\n    }\n    for (let key in freq) {\n        if (freq[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let nums = n.toString().split('');\n    let freq = {};\n    for (let i = 0; i < nums.length; i++) {\n        if (freq[nums[i]]) {\n            freq[nums[i]]++;\n        } else {\n            freq[nums[i]] = 1;\n        }\n    }\n    for (let key in freq) {\n        if (freq[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
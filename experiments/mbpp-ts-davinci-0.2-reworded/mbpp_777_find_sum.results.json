{
  "name": "mbpp_777_find_sum",
  "language": "ts",
  "prompt": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_777_find_sum.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum = 0;\n    let i = 0;\n    let j = 0;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmppojg056b.js:19:12)\n    at Object.<anonymous> (/tmp/tmppojg056b.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3]));\nconsole.log(find_sum([2, 5, 4, 8]));\nconsole.log(find_sum([1, 2, 6, 9, 9, 3, 4, 5, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "1\n19\n16\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpawrdxyw0.js:24:12)\n    at Object.<anonymous> (/tmp/tmpawrdxyw0.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let obj: any = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (!obj[arr[i]]) {\n            sum += arr[i];\n            obj[arr[i]] = true;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "55\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "10\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmppl3ve6m3.js:22:12)\n    at Object.<anonymous> (/tmp/tmppl3ve6m3.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 1;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpy5qanyyn.js:19:12)\n    at Object.<anonymous> (/tmp/tmpy5qanyyn.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 1;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 2, 3]));\nconsole.log(find_sum([2, 3, 4, 5, 6]));\nconsole.log(find_sum([1, 2, 1, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "34\n80\n18\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpia3ymqjg.js:21:12)\n    at Object.<anonymous> (/tmp/tmpia3ymqjg.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 1;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpj5g7b9kn.js:19:12)\n    at Object.<anonymous> (/tmp/tmpj5g7b9kn.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number;\n    let j: number;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "360\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp5fjur_2q.js:19:12)\n    at Object.<anonymous> (/tmp/tmp5fjur_2q.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 1;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpj5g7b9kn.js:19:12)\n    at Object.<anonymous> (/tmp/tmpj5g7b9kn.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    var sum: number = 0;\n    var i: number = 0;\n    var j: number = 0;\n    var found: boolean = false;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                found = true;\n                break;\n            }\n        }\n        if (!found) {\n            sum = sum + arr[i];\n        }\n        found = false;\n    }\n    return sum;\n}\n\nconsole.log(\"Sum of non-repeated elements is: \" + find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "Sum of non-repeated elements is: 55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmprdb6vohw.js:25:12)\n    at Object.<anonymous> (/tmp/tmprdb6vohw.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3]));\nconsole.log(find_sum([1, 2, 3]));\nconsole.log(find_sum([-1, 1]));\nconsole.log(find_sum([1, 1, 2, 2, 3, 3, 4, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "1\n6\n0\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp5l0lvytn.js:25:12)\n    at Object.<anonymous> (/tmp/tmp5l0lvytn.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number;\n    let j: number;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp3lomd5zw.js:19:12)\n    at Object.<anonymous> (/tmp/tmp3lomd5zw.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    var sum: number = 0;\n    for (var i = 0; i < arr.length; i++) {\n        var ele: number = arr[i];\n        var count: number = 0;\n        for (var j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([10, 20, 10, 30, 40, 30, 50]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "10\n13\n110\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp8f0wslle.js:24:12)\n    at Object.<anonymous> (/tmp/tmp8f0wslle.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpp2iz5oh9.js:22:12)\n    at Object.<anonymous> (/tmp/tmpp2iz5oh9.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "45\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpiu445t_y.js:22:12)\n    at Object.<anonymous> (/tmp/tmpiu445t_y.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let obj: any = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (!obj[arr[i]]) {\n            sum += arr[i];\n            obj[arr[i]] = true;\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "55\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 1;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 1, 2]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "60\n78\n102\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp7soo44ak.js:21:12)\n    at Object.<anonymous> (/tmp/tmp7soo44ak.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 1;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpj5g7b9kn.js:19:12)\n    at Object.<anonymous> (/tmp/tmpj5g7b9kn.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let unique: number[] = [];\n    for (let i = 0; i < arr.length; i++) {\n        if (unique.indexOf(arr[i]) == -1) {\n            unique.push(arr[i]);\n        }\n    }\n    for (let i = 0; i < unique.length; i++) {\n        sum = sum + unique[i];\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 2, 3, 4, 1]));\nconsole.log(find_sum([1, 2, 3, 2, 3, 4, 1, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "10\n10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 1;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpj5g7b9kn.js:19:12)\n    at Object.<anonymous> (/tmp/tmpj5g7b9kn.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 1;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpj5g7b9kn.js:19:12)\n    at Object.<anonymous> (/tmp/tmpj5g7b9kn.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 1;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpj5g7b9kn.js:19:12)\n    at Object.<anonymous> (/tmp/tmpj5g7b9kn.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 0;\n    let flag: boolean = false;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                flag = true;\n                break;\n            }\n        }\n        if (flag == false) {\n            sum = sum + arr[i];\n        }\n        flag = false;\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp6urniav1.js:25:12)\n    at Object.<anonymous> (/tmp/tmp6urniav1.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpphoxgeu3.js:22:12)\n    at Object.<anonymous> (/tmp/tmpphoxgeu3.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 1;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpy5qanyyn.js:19:12)\n    at Object.<anonymous> (/tmp/tmpy5qanyyn.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 0;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp81ryp5d1.js:19:12)\n    at Object.<anonymous> (/tmp/tmp81ryp5d1.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpphoxgeu3.js:22:12)\n    at Object.<anonymous> (/tmp/tmpphoxgeu3.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum = 0;\n    let i = 0;\n    let j = 0;\n    for (i = 0; i < arr.length; i++) {\n        let no_of_occurences = 0;\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                no_of_occurences++;\n                break;\n            }\n        }\n        if (no_of_occurences == 0) {\n            sum = sum + arr[i];\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpbke769hz.js:24:12)\n    at Object.<anonymous> (/tmp/tmpbke769hz.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    var sum: number = 0;\n    for (var i = 0; i < arr.length; i++) {\n        var ele: number = arr[i];\n        var count: number = 0;\n        for (var j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3]));\nconsole.log(find_sum([1, 2, 2, 3, 4]));\nconsole.log(find_sum([1, 2, 1, 3, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "1\n8\n9\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpqw_3ptjc.js:24:12)\n    at Object.<anonymous> (/tmp/tmpqw_3ptjc.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 4, 4, 3, 2, 2, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "10\n13\n15\n15\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpx_9kioj4.js:25:12)\n    at Object.<anonymous> (/tmp/tmpx_9kioj4.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp1lhre8mt.js:22:12)\n    at Object.<anonymous> (/tmp/tmp1lhre8mt.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([10, 20, 10, 30, 40, 30, 50]));\nconsole.log(find_sum([1, 1, 2, 2, 3, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "10\n13\n110\n9\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpjojayo79.js:25:12)\n    at Object.<anonymous> (/tmp/tmpjojayo79.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let unique: number[] = [];\n    for (let i = 0; i < arr.length; i++) {\n        let el = arr[i];\n        if (unique.indexOf(el) == -1) {\n            unique.push(el);\n            sum += el;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "../../../../tmp/tmphyesls6q.ts(16,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 1;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpj5g7b9kn.js:19:12)\n    at Object.<anonymous> (/tmp/tmpj5g7b9kn.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([10, 20, 10, 30, 40, 30, 40]));\nconsole.log(find_sum([10, 20, 10, 30, 40, 30, 40, 50, 50]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "10\n13\n20\n20\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmptclhejt7.js:25:12)\n    at Object.<anonymous> (/tmp/tmptclhejt7.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum = 0;\n    let i = 0;\n    let j = 1;\n    while (i < arr.length) {\n        if (arr[i] != arr[j]) {\n            sum = sum + arr[i];\n        }\n        i++;\n        j++;\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n22\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpcv3by_3x.js:19:12)\n    at Object.<anonymous> (/tmp/tmpcv3by_3x.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 22,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    var sum: number = 0;\n    var i: number = 0;\n    var j: number = 0;\n    var found: boolean = false;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                found = true;\n                break;\n            }\n        }\n        if (!found) {\n            sum += arr[i];\n        }\n        found = false;\n    }\n    return sum;\n}\n\nconsole.log(\"Sum of non-repeated elements is: \" + find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "Sum of non-repeated elements is: 55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpy5xlq0sx.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy5xlq0sx.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 4, 4, 3, 2, 2, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "10\n13\n15\n15\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpx_9kioj4.js:25:12)\n    at Object.<anonymous> (/tmp/tmpx_9kioj4.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3]));\nconsole.log(find_sum([2, 2, 4, 4, 5, 5]));\nconsole.log(find_sum([9, 10, 19, 13, 19, 13]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "1\n0\n19\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpmtpq5daw.js:24:12)\n    at Object.<anonymous> (/tmp/tmpmtpq5daw.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 5, 3, 2, 1, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 5, 3, 2, 1, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "10\n13\n11\n15\n11\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpidvlfi8f.js:26:12)\n    at Object.<anonymous> (/tmp/tmpidvlfi8f.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    var sum: number = 0;\n    var i: number = 0;\n    var j: number = 0;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpozv1esez.js:19:12)\n    at Object.<anonymous> (/tmp/tmpozv1esez.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp1lhre8mt.js:22:12)\n    at Object.<anonymous> (/tmp/tmp1lhre8mt.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 0;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp81ryp5d1.js:19:12)\n    at Object.<anonymous> (/tmp/tmp81ryp5d1.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 0;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpdbtd68h3.js:19:12)\n    at Object.<anonymous> (/tmp/tmpdbtd68h3.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let obj: any = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (!obj[arr[i]]) {\n            sum += arr[i];\n            obj[arr[i]] = true;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "55\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 3, 2, 1]));\nconsole.log(find_sum([1, 2, 1, 5, 3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "4\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpn0tnr7s7.js:23:12)\n    at Object.<anonymous> (/tmp/tmpn0tnr7s7.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n  let sum: number = 0;\n  let i: number = 0;\n  let j: number = 0;\n  let found: boolean = false;\n\n  for (i = 0; i < arr.length; i++) {\n    for (j = 0; j < arr.length; j++) {\n      if (i != j && arr[i] == arr[j]) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      sum += arr[i];\n    }\n    found = false;\n  }\n  return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpe4jip924.js:25:12)\n    at Object.<anonymous> (/tmp/tmpe4jip924.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp1lhre8mt.js:22:12)\n    at Object.<anonymous> (/tmp/tmp1lhre8mt.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele = arr[i];\n        let count = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 5, 4, 4, 3, 2, 2, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 4, 3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "10\n13\n10\n15\n21\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpin2g4lff.js:26:12)\n    at Object.<anonymous> (/tmp/tmpin2g4lff.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number;\n    let j: number;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp3lomd5zw.js:19:12)\n    at Object.<anonymous> (/tmp/tmp3lomd5zw.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    var sum = 0;\n    for (var i = 0; i < arr.length; i++) {\n        var ele = arr[i];\n        var count = 0;\n        for (var j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 5, 3, 2, 1, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 5, 3, 2, 1, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "10\n13\n11\n15\n11\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmppapk57_i.js:26:12)\n    at Object.<anonymous> (/tmp/tmppapk57_i.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele = arr[i];\n        let count = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 5, 3, 2, 1, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 5, 3, 2, 1, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "10\n13\n11\n15\n11\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp0c3iyvfy.js:26:12)\n    at Object.<anonymous> (/tmp/tmp0c3iyvfy.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 0;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpdbtd68h3.js:19:12)\n    at Object.<anonymous> (/tmp/tmpdbtd68h3.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum = 0;\n    let i = 0;\n    let j = 0;\n    for (i = 0; i < arr.length; i++) {\n        let noRepeat = false;\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                noRepeat = true;\n                break;\n            }\n        }\n        if (!noRepeat) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmppwm_3ou5.js:24:12)\n    at Object.<anonymous> (/tmp/tmppwm_3ou5.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 4, 4, 3, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6]));\nconsole.log(find_sum([1, 1, 1, 1, 1, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "10\n13\n15\n21\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpus4fmmys.js:26:12)\n    at Object.<anonymous> (/tmp/tmpus4fmmys.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 5, 4, 4, 3, 2, 2, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 4, 3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "10\n13\n10\n15\n21\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpicrlh48p.js:26:12)\n    at Object.<anonymous> (/tmp/tmpicrlh48p.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 1;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpy5qanyyn.js:19:12)\n    at Object.<anonymous> (/tmp/tmpy5qanyyn.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    var sum: number = 0;\n    for (var i = 0; i < arr.length; i++) {\n        var ele = arr[i];\n        var count = 0;\n        for (var j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 4, 4, 3, 2, 2, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 4, 4, 3, 2, 1, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "10\n13\n15\n15\n16\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpe24ffavc.js:26:12)\n    at Object.<anonymous> (/tmp/tmpe24ffavc.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 1;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpy5qanyyn.js:19:12)\n    at Object.<anonymous> (/tmp/tmpy5qanyyn.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let obj: any = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (!obj[arr[i]]) {\n            sum += arr[i];\n            obj[arr[i]] = true;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "55\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 1;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpj5g7b9kn.js:19:12)\n    at Object.<anonymous> (/tmp/tmpj5g7b9kn.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let obj: any = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (!obj[arr[i]]) {\n            sum += arr[i];\n            obj[arr[i]] = true;\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 5, 6, 6, 7, 8, 8, 9, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n  let sum = 0;\n  let i = 0;\n  let j = 0;\n\n  for (i = 0; i < arr.length; i++) {\n    for (j = 0; j < arr.length; j++) {\n      if (i != j && arr[i] != arr[j]) {\n        sum = sum + arr[i];\n      }\n    }\n  }\n  return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123860,
      "stdout": "360\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpubuj08sz.js:19:12)\n    at Object.<anonymous> (/tmp/tmpubuj08sz.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 1;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpj5g7b9kn.js:19:12)\n    at Object.<anonymous> (/tmp/tmpj5g7b9kn.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp1lhre8mt.js:22:12)\n    at Object.<anonymous> (/tmp/tmp1lhre8mt.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n  let sum: number = 0;\n  for (let i = 0; i < arr.length; i++) {\n    let ele: number = arr[i];\n    let count: number = 0;\n    for (let j = 0; j < arr.length; j++) {\n      if (ele == arr[j]) {\n        count++;\n      }\n    }\n    if (count == 1) {\n      sum = sum + ele;\n    }\n  }\n  return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([10, 20, 10, 30, 40, 30, 40]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "10\n13\n20\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmptkhu4heb.js:24:12)\n    at Object.<anonymous> (/tmp/tmptkhu4heb.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 1;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpj5g7b9kn.js:19:12)\n    at Object.<anonymous> (/tmp/tmpj5g7b9kn.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele = arr[i];\n        let count = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 5, 4, 4, 3, 2, 2, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 4, 3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "10\n13\n10\n15\n21\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpahv13m7t.js:26:12)\n    at Object.<anonymous> (/tmp/tmpahv13m7t.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele = arr[i];\n        let count = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpc302qnls.js:22:12)\n    at Object.<anonymous> (/tmp/tmpc302qnls.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 1;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 5, 6, 6, 7, 7]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123860,
      "stdout": "378\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp583w5fx5.js:19:12)\n    at Object.<anonymous> (/tmp/tmp583w5fx5.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 1;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpj5g7b9kn.js:19:12)\n    at Object.<anonymous> (/tmp/tmpj5g7b9kn.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 1;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpj5g7b9kn.js:19:12)\n    at Object.<anonymous> (/tmp/tmpj5g7b9kn.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp1lhre8mt.js:22:12)\n    at Object.<anonymous> (/tmp/tmp1lhre8mt.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 1;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpj5g7b9kn.js:19:12)\n    at Object.<anonymous> (/tmp/tmpj5g7b9kn.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    var sum: number = 0;\n    for (var i = 0; i < arr.length; i++) {\n        var ele = arr[i];\n        var count = 0;\n        for (var j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 5, 3, 2, 2, 2]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123860,
      "stdout": "10\n13\n9\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpf9oojj3w.js:24:12)\n    at Object.<anonymous> (/tmp/tmpf9oojj3w.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp1lhre8mt.js:22:12)\n    at Object.<anonymous> (/tmp/tmp1lhre8mt.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 1;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpj5g7b9kn.js:19:12)\n    at Object.<anonymous> (/tmp/tmpj5g7b9kn.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number;\n    let j: number;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp3lomd5zw.js:19:12)\n    at Object.<anonymous> (/tmp/tmp3lomd5zw.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 5, 4, 4, 3, 2, 2, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 4, 3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "10\n13\n10\n15\n21\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpicrlh48p.js:26:12)\n    at Object.<anonymous> (/tmp/tmpicrlh48p.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 1;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpj5g7b9kn.js:19:12)\n    at Object.<anonymous> (/tmp/tmpj5g7b9kn.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 0;\n    let len: number = arr.length;\n    for (i = 0; i < len; i++) {\n        for (j = 0; j < len; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123860,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp80by1w28.js:20:12)\n    at Object.<anonymous> (/tmp/tmp80by1w28.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpphoxgeu3.js:22:12)\n    at Object.<anonymous> (/tmp/tmpphoxgeu3.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    var sum: number = 0;\n    for (var i = 0; i < arr.length; i++) {\n        var ele = arr[i];\n        var count = 0;\n        for (var j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 2, 1]));\nconsole.log(find_sum([1, 2, 1, 5, 3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123860,
      "stdout": "4\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpcshg4_ni.js:23:12)\n    at Object.<anonymous> (/tmp/tmpcshg4_ni.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([10, 20, 10, 30, 40, 30, 50]));\nconsole.log(find_sum([1, 1, 2, 2, 3, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "10\n13\n110\n9\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpjojayo79.js:25:12)\n    at Object.<anonymous> (/tmp/tmpjojayo79.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3]));\nconsole.log(find_sum([2, 5, 4, 8]));\nconsole.log(find_sum([1, 2, 6, 9, 9, 3, 4, 5, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "1\n19\n16\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpawrdxyw0.js:24:12)\n    at Object.<anonymous> (/tmp/tmpawrdxyw0.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([10, 20, 10, 30, 40, 30, 50]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123860,
      "stdout": "10\n13\n110\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpv7eiukbr.js:24:12)\n    at Object.<anonymous> (/tmp/tmpv7eiukbr.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 5, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123860,
      "stdout": "11\n55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp38ojlg8g.js:23:12)\n    at Object.<anonymous> (/tmp/tmp38ojlg8g.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 1;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpj5g7b9kn.js:19:12)\n    at Object.<anonymous> (/tmp/tmpj5g7b9kn.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([10, 20, 10, 30, 40, 30, 50]));\nconsole.log(find_sum([10, 20, 10, 20, 30, 40, 30, 50]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123860,
      "stdout": "10\n13\n110\n90\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp1fy6ij7m.js:25:12)\n    at Object.<anonymous> (/tmp/tmp1fy6ij7m.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([10, 20, 10, 30, 40, 30, 40]));\nconsole.log(find_sum([10, 20, 10, 30, 40, 30, 40, 50]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123860,
      "stdout": "10\n13\n20\n70\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpf4638bgb.js:25:12)\n    at Object.<anonymous> (/tmp/tmpf4638bgb.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) === arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123860,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp1tt35mn8.js:15:12)\n    at Object.<anonymous> (/tmp/tmp1tt35mn8.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele = arr[i];\n        let count = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 5, 4, 4, 3, 2, 2, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123860,
      "stdout": "10\n13\n10\n15\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmps7af07vy.js:25:12)\n    at Object.<anonymous> (/tmp/tmps7af07vy.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 5, 3, 2, 1, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 5, 3, 2, 1, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "10\n13\n11\n15\n11\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpidvlfi8f.js:26:12)\n    at Object.<anonymous> (/tmp/tmpidvlfi8f.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let obj: any = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (!obj[arr[i]]) {\n            sum += arr[i];\n            obj[arr[i]] = true;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "55\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 4, 4, 3, 2, 2, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123860,
      "stdout": "10\n13\n15\n55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpbssgkfi4.js:25:12)\n    at Object.<anonymous> (/tmp/tmpbssgkfi4.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j: number = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 5, 3, 2, 1, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 4, 3, 2]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123860,
      "stdout": "10\n13\n11\n15\n20\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpy237c4_a.js:26:12)\n    at Object.<anonymous> (/tmp/tmpy237c4_a.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp1lhre8mt.js:22:12)\n    at Object.<anonymous> (/tmp/tmp1lhre8mt.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 4, 4, 3, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123860,
      "stdout": "10\n13\n15\n21\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp9kojivuh.js:25:12)\n    at Object.<anonymous> (/tmp/tmp9kojivuh.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let unique: number[] = [];\n    for (let i = 0; i < arr.length; i++) {\n        if (unique.indexOf(arr[i]) == -1) {\n            unique.push(arr[i]);\n        }\n    }\n    for (let j = 0; j < unique.length; j++) {\n        sum = sum + unique[j];\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123860,
      "stdout": "../../../../tmp/tmp5wkorkv8.ts(17,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 5, 3, 2, 1, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 5, 3, 2, 1, 1]));\n\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123860,
      "stdout": "10\n13\n11\n15\n11\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp3cg5atfj.js:26:12)\n    at Object.<anonymous> (/tmp/tmp3cg5atfj.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number;\n    let j: number;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp3lomd5zw.js:19:12)\n    at Object.<anonymous> (/tmp/tmp3lomd5zw.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    var sum: number = 0;\n    for (var i = 0; i < arr.length; i++) {\n        var ele = arr[i];\n        var count = 0;\n        for (var j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123861,
      "stdout": "10\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp7mmrxkt4.js:22:12)\n    at Object.<anonymous> (/tmp/tmp7mmrxkt4.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 1;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpj5g7b9kn.js:19:12)\n    at Object.<anonymous> (/tmp/tmpj5g7b9kn.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    var sum: number = 0;\n    for (var i = 0; i < arr.length; i++) {\n        var ele = arr[i];\n        var count = 0;\n        for (var j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 4, 4, 3, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6]));\nconsole.log(find_sum([1, 1, 1, 1, 1, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123862,
      "stdout": "10\n13\n15\n21\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpcri549r1.js:26:12)\n    at Object.<anonymous> (/tmp/tmpcri549r1.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let obj: object = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (!obj[arr[i]]) {\n            sum += arr[i];\n            obj[arr[i]] = true;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123862,
      "stdout": "55\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp1lhre8mt.js:22:12)\n    at Object.<anonymous> (/tmp/tmp1lhre8mt.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    var sum: number = 0;\n    var i: number = 0;\n    var j: number = 0;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpozv1esez.js:19:12)\n    at Object.<anonymous> (/tmp/tmpozv1esez.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([10, 20, 10, 30, 40, 30, 50]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123860,
      "stdout": "10\n13\n110\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpv7eiukbr.js:24:12)\n    at Object.<anonymous> (/tmp/tmpv7eiukbr.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 1;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 2, 3]));\nconsole.log(find_sum([2, 3, 4, 5, 6]));\nconsole.log(find_sum([1, 2, 1, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "34\n80\n18\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpia3ymqjg.js:21:12)\n    at Object.<anonymous> (/tmp/tmpia3ymqjg.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp1lhre8mt.js:22:12)\n    at Object.<anonymous> (/tmp/tmp1lhre8mt.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 0;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpdbtd68h3.js:19:12)\n    at Object.<anonymous> (/tmp/tmpdbtd68h3.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let obj: any = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (!obj[arr[i]]) {\n            sum += arr[i];\n            obj[arr[i]] = true;\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "55\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele = arr[i];\n        let count = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 5, 3, 2, 1, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 5, 3, 2, 1, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123862,
      "stdout": "10\n13\n11\n15\n11\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp_hl6g7mp.js:26:12)\n    at Object.<anonymous> (/tmp/tmp_hl6g7mp.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 1;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpy5qanyyn.js:19:12)\n    at Object.<anonymous> (/tmp/tmpy5qanyyn.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum = 0;\n    let i = 0;\n    let j = 1;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123862,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpuwc_way4.js:19:12)\n    at Object.<anonymous> (/tmp/tmpuwc_way4.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele = arr[i];\n        let count = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123862,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpk_q5wucg.js:22:12)\n    at Object.<anonymous> (/tmp/tmpk_q5wucg.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let unique: number[] = [];\n    for (let i = 0; i < arr.length; i++) {\n        if (unique.indexOf(arr[i]) == -1) {\n            sum += arr[i];\n            unique.push(arr[i]);\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123862,
      "stdout": "55\n55\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    var sum: number = 0;\n    var i: number = 0;\n    var j: number = 0;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 4, 5]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 6]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 7]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 8]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123862,
      "stdout": "60\n52\n150\n231\n336\n468\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpl0z99ggv.js:24:12)\n    at Object.<anonymous> (/tmp/tmpl0z99ggv.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 1;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpj5g7b9kn.js:19:12)\n    at Object.<anonymous> (/tmp/tmpj5g7b9kn.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 1;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpj5g7b9kn.js:19:12)\n    at Object.<anonymous> (/tmp/tmpj5g7b9kn.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 1;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpj5g7b9kn.js:19:12)\n    at Object.<anonymous> (/tmp/tmpj5g7b9kn.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 0;\n    let isRepeated: boolean = false;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                isRepeated = true;\n                break;\n            }\n        }\n        if (!isRepeated) {\n            sum += arr[i];\n        }\n        isRepeated = false;\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123862,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpt4baxpjc.js:25:12)\n    at Object.<anonymous> (/tmp/tmpt4baxpjc.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123862,
      "stdout": "8\n15\n55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpo8v_iffc.js:24:12)\n    at Object.<anonymous> (/tmp/tmpo8v_iffc.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 1;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpj5g7b9kn.js:19:12)\n    at Object.<anonymous> (/tmp/tmpj5g7b9kn.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 2, 1]));\nconsole.log(find_sum([1, 2, 1, 5, 3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123862,
      "stdout": "4\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpmyxzv05y.js:23:12)\n    at Object.<anonymous> (/tmp/tmpmyxzv05y.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let obj: any = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (!obj[arr[i]]) {\n            sum += arr[i];\n            obj[arr[i]] = true;\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123862,
      "stdout": "55\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum = 0;\n    let i = 0;\n    let j = 1;\n    while (i < arr.length) {\n        if (arr[i] != arr[j]) {\n            sum = sum + arr[i];\n        }\n        i++;\n        j++;\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 2, 3, 4, 1]));\nconsole.log(find_sum([1, 2, 3, 2, 3, 4, 1, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123863,
      "stdout": "16\n20\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n22\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp1g5bmu9j.js:20:12)\n    at Object.<anonymous> (/tmp/tmp1g5bmu9j.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 22,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let obj: any = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (!obj[arr[i]]) {\n            sum += arr[i];\n            obj[arr[i]] = true;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "55\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let obj: any = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (!obj[arr[i]]) {\n            sum += arr[i];\n            obj[arr[i]] = true;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "55\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    var sum: number = 0;\n    var i: number = 0;\n    var j: number = 0;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpozv1esez.js:19:12)\n    at Object.<anonymous> (/tmp/tmpozv1esez.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let obj: any = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (!obj[arr[i]]) {\n            sum += arr[i];\n            obj[arr[i]] = true;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "55\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n  let sum: number = 0;\n  let obj: any = {};\n  for (let i = 0; i < arr.length; i++) {\n    if (!obj[arr[i]]) {\n      sum += arr[i];\n      obj[arr[i]] = true;\n    }\n  }\n  return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123862,
      "stdout": "55\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123862,
      "stdout": "210\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmputwrczxe.js:22:12)\n    at Object.<anonymous> (/tmp/tmputwrczxe.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpphoxgeu3.js:22:12)\n    at Object.<anonymous> (/tmp/tmpphoxgeu3.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 0;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp81ryp5d1.js:19:12)\n    at Object.<anonymous> (/tmp/tmp81ryp5d1.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpphoxgeu3.js:22:12)\n    at Object.<anonymous> (/tmp/tmpphoxgeu3.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum = 0;\n    let i = 0;\n    let j = 0;\n    for (i = 0; i < arr.length; i++) {\n        let no_of_occurences = 0;\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                no_of_occurences++;\n                break;\n            }\n        }\n        if (no_of_occurences == 0) {\n            sum = sum + arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123862,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpg2fknpi2.js:24:12)\n    at Object.<anonymous> (/tmp/tmpg2fknpi2.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp1lhre8mt.js:22:12)\n    at Object.<anonymous> (/tmp/tmp1lhre8mt.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 2, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123862,
      "stdout": "4\n45\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpv7scey07.js:23:12)\n    at Object.<anonymous> (/tmp/tmpv7scey07.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    var sum = 0;\n    var i = 0;\n    var j = 0;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123863,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpx4hrxfmu.js:19:12)\n    at Object.<anonymous> (/tmp/tmpx4hrxfmu.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum = 0;\n    let i = 0;\n    let j = 0;\n    for (i = 0; i < arr.length; i++) {\n        let noRepeat = false;\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                noRepeat = true;\n                break;\n            }\n        }\n        if (!noRepeat) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\nconsole.log(\"Sum of non-repeated elements is: \" + find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123863,
      "stdout": "Sum of non-repeated elements is: 55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp48tag5zq.js:24:12)\n    at Object.<anonymous> (/tmp/tmp48tag5zq.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number;\n    let j: number;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 2, 3, 4, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123863,
      "stdout": "84\n60\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpq58pa6r9.js:20:12)\n    at Object.<anonymous> (/tmp/tmpq58pa6r9.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 5, 4, 4, 3, 2, 2, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123863,
      "stdout": "10\n13\n10\n15\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmptyahdq0b.js:25:12)\n    at Object.<anonymous> (/tmp/tmptyahdq0b.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele = arr[i];\n        let count = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 5, 10, 10]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123863,
      "stdout": "10\n13\n6\n55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp25654uul.js:25:12)\n    at Object.<anonymous> (/tmp/tmp25654uul.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp1lhre8mt.js:22:12)\n    at Object.<anonymous> (/tmp/tmp1lhre8mt.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 1;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpj5g7b9kn.js:19:12)\n    at Object.<anonymous> (/tmp/tmpj5g7b9kn.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 5, 10, 10]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123863,
      "stdout": "10\n13\n6\n55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpj13o89r5.js:25:12)\n    at Object.<anonymous> (/tmp/tmpj13o89r5.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 0;\n    let len: number = arr.length;\n    for (i = 0; i < len; i++) {\n        for (j = 0; j < len; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123864,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpks_fatrx.js:20:12)\n    at Object.<anonymous> (/tmp/tmpks_fatrx.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpphoxgeu3.js:22:12)\n    at Object.<anonymous> (/tmp/tmpphoxgeu3.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 2, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123865,
      "stdout": "4\n45\n210\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpzu0r_6gu.js:24:12)\n    at Object.<anonymous> (/tmp/tmpzu0r_6gu.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([10, 20, 10, 30, 40, 30, 50]));\nconsole.log(find_sum([1, 1, 2, 2, 3, 4, 5, 6, 5]));\nconsole.log(find_sum([1, 1, 2, 2, 3, 4, 5, 6, 5, 6, 7]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123865,
      "stdout": "10\n13\n110\n13\n14\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp0swvtuu8.js:26:12)\n    at Object.<anonymous> (/tmp/tmp0swvtuu8.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let obj: any = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (!obj[arr[i]]) {\n            sum += arr[i];\n            obj[arr[i]] = true;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "55\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3]));\nconsole.log(find_sum([2, 5, 4, 8]));\nconsole.log(find_sum([1, 2, 6, 9, 9, 3, 4, 5, 7]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123865,
      "stdout": "1\n19\n28\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpb7hcqxsq.js:24:12)\n    at Object.<anonymous> (/tmp/tmpb7hcqxsq.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpphoxgeu3.js:22:12)\n    at Object.<anonymous> (/tmp/tmpphoxgeu3.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let obj: any = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (!obj[arr[i]]) {\n            sum += arr[i];\n            obj[arr[i]] = true;\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "55\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number;\n    let j: number;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 5, 6, 6]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123865,
      "stdout": "202\n970\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmptdpwy6b9.js:20:12)\n    at Object.<anonymous> (/tmp/tmptdpwy6b9.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([10, 20, 10, 30, 40, 30, 40]));\nconsole.log(find_sum([10, 20, 10, 30, 40, 30, 40, 50, 50]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "10\n13\n20\n20\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmptclhejt7.js:25:12)\n    at Object.<anonymous> (/tmp/tmptclhejt7.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 0;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp81ryp5d1.js:19:12)\n    at Object.<anonymous> (/tmp/tmp81ryp5d1.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    var sum: number = 0;\n    var i: number = 0;\n    var j: number = 0;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6]));\nconsole.log(find_sum([1, 2, 2, 4, 5, 5]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 5]));\nconsole.log(find_sum([1, 2, 3, 4, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123865,
      "stdout": "105\n81\n90\n87\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpx7qol4bi.js:22:12)\n    at Object.<anonymous> (/tmp/tmpx7qol4bi.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let obj: any = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (!obj[arr[i]]) {\n            sum += arr[i];\n            obj[arr[i]] = true;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "55\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 5, 3, 2, 1, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 5, 3, 2, 1, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "10\n13\n11\n15\n11\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpidvlfi8f.js:26:12)\n    at Object.<anonymous> (/tmp/tmpidvlfi8f.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele = arr[i];\n        let count = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 5, 3, 2, 1, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 5, 3, 2, 1, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "10\n13\n11\n15\n11\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp0c3iyvfy.js:26:12)\n    at Object.<anonymous> (/tmp/tmp0c3iyvfy.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 1;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpy5qanyyn.js:19:12)\n    at Object.<anonymous> (/tmp/tmpy5qanyyn.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123862,
      "stdout": "8\n15\n55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpo8v_iffc.js:24:12)\n    at Object.<anonymous> (/tmp/tmpo8v_iffc.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 4, 4, 3, 2, 2, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "10\n13\n15\n15\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpx_9kioj4.js:25:12)\n    at Object.<anonymous> (/tmp/tmpx_9kioj4.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp1lhre8mt.js:22:12)\n    at Object.<anonymous> (/tmp/tmp1lhre8mt.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 5, 4, 4, 3, 2, 2, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 4, 3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "10\n13\n10\n15\n21\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpicrlh48p.js:26:12)\n    at Object.<anonymous> (/tmp/tmpicrlh48p.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let obj: object = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (!obj[arr[i]]) {\n            sum += arr[i];\n            obj[arr[i]] = true;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123862,
      "stdout": "55\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele = arr[i];\n        let count = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 5, 3, 2, 1, 6]));\nconsole.log(find_sum([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123865,
      "stdout": "10\n13\n6\n15\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpckjzjx77.js:25:12)\n    at Object.<anonymous> (/tmp/tmpckjzjx77.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 5, 3, 2, 1, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 5, 3, 2, 1, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "10\n13\n11\n15\n11\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpidvlfi8f.js:26:12)\n    at Object.<anonymous> (/tmp/tmpidvlfi8f.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 4, 4, 3, 2, 2, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "10\n13\n15\n15\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpx_9kioj4.js:25:12)\n    at Object.<anonymous> (/tmp/tmpx_9kioj4.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele = arr[i];\n        let count = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 5, 3, 2, 1, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123865,
      "stdout": "10\n13\n11\n55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpfjaxomq6.js:25:12)\n    at Object.<anonymous> (/tmp/tmpfjaxomq6.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 1;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpy5qanyyn.js:19:12)\n    at Object.<anonymous> (/tmp/tmpy5qanyyn.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([10, 20, 10, 30, 40, 30, 50]));\nconsole.log(find_sum([1, 1, 2, 2, 3, 4, 5, 5, 6, 6]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123865,
      "stdout": "10\n13\n110\n7\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpkqjx5cum.js:25:12)\n    at Object.<anonymous> (/tmp/tmpkqjx5cum.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let obj: object = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (!obj[arr[i]]) {\n            sum += arr[i];\n            obj[arr[i]] = true;\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123865,
      "stdout": "55\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 1;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpj5g7b9kn.js:19:12)\n    at Object.<anonymous> (/tmp/tmpj5g7b9kn.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([10, 20, 10, 30, 40, 30, 50]));\nconsole.log(find_sum([10, 20, 10, 30, 40, 30, 50, 50]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123865,
      "stdout": "10\n13\n110\n60\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp5qdorglc.js:25:12)\n    at Object.<anonymous> (/tmp/tmp5qdorglc.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp1lhre8mt.js:22:12)\n    at Object.<anonymous> (/tmp/tmp1lhre8mt.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let obj: any = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (!obj[arr[i]]) {\n            sum += arr[i];\n            obj[arr[i]] = true;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "55\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum = 0;\n    let unique = [];\n    for (let i = 0; i < arr.length; i++) {\n        if (unique.indexOf(arr[i]) == -1) {\n            sum += arr[i];\n            unique.push(arr[i]);\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123865,
      "stdout": "55\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 4, 4, 3, 2, 2, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 4, 4, 3, 3, 2, 2, 1, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123865,
      "stdout": "10\n13\n15\n15\n11\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpisyfcvv8.js:26:12)\n    at Object.<anonymous> (/tmp/tmpisyfcvv8.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let obj: any = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (!obj[arr[i]]) {\n            sum += arr[i];\n            obj[arr[i]] = true;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "55\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([10, 20, 10, 30, 40, 30, 50]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123860,
      "stdout": "10\n13\n110\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpv7eiukbr.js:24:12)\n    at Object.<anonymous> (/tmp/tmpv7eiukbr.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum = 0;\n    let i = 0;\n    let j = 0;\n    for (i = 0; i < arr.length; i++) {\n        let noRepeated = true;\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                noRepeated = false;\n            }\n        }\n        if (noRepeated) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123865,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp5wr2i9fl.js:23:12)\n    at Object.<anonymous> (/tmp/tmp5wr2i9fl.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let unique: number[] = [];\n    for (let i = 0; i < arr.length; i++) {\n        if (unique.indexOf(arr[i]) == -1) {\n            sum += arr[i];\n            unique.push(arr[i]);\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123865,
      "stdout": "55\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 5, 3, 2, 1, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123865,
      "stdout": "10\n13\n11\n55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpqenv39gp.js:25:12)\n    at Object.<anonymous> (/tmp/tmpqenv39gp.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele = arr[i];\n        let count = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 5, 3, 2, 1, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 5, 3, 2, 1, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "10\n13\n11\n15\n11\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp0c3iyvfy.js:26:12)\n    at Object.<anonymous> (/tmp/tmp0c3iyvfy.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 0;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpdbtd68h3.js:19:12)\n    at Object.<anonymous> (/tmp/tmpdbtd68h3.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 1;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 1, 2]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 1, 2, 3]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 1, 2, 3, 4]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123865,
      "stdout": "60\n78\n102\n135\n180\n240\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpkanbtzj8.js:24:12)\n    at Object.<anonymous> (/tmp/tmpkanbtzj8.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let obj: any = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (!obj[arr[i]]) {\n            sum += arr[i];\n            obj[arr[i]] = true;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509732,
      "stdout": "55\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 0;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp81ryp5d1.js:19:12)\n    at Object.<anonymous> (/tmp/tmp81ryp5d1.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number;\n    let j: number;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123865,
      "stdout": "495\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp96miqu8c.js:19:12)\n    at Object.<anonymous> (/tmp/tmp96miqu8c.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 4, 4, 3, 2, 2, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 4, 4, 3, 3, 2, 2, 1, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123865,
      "stdout": "10\n13\n15\n15\n11\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpisyfcvv8.js:26:12)\n    at Object.<anonymous> (/tmp/tmpisyfcvv8.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 2, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123865,
      "stdout": "4\n55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpcau_yk3a.js:23:12)\n    at Object.<anonymous> (/tmp/tmpcau_yk3a.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n  let sum: number = 0;\n  for (let i = 0; i < arr.length; i++) {\n    let ele: number = arr[i];\n    let count: number = 0;\n    for (let j = 0; j < arr.length; j++) {\n      if (ele == arr[j]) {\n        count++;\n      }\n    }\n    if (count == 1) {\n      sum = sum + ele;\n    }\n  }\n  return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 5, 4, 4, 3, 2, 2, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123865,
      "stdout": "10\n13\n10\n15\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp1zjxrc1n.js:25:12)\n    at Object.<anonymous> (/tmp/tmp1zjxrc1n.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele: number = arr[i];\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 4, 4, 3, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6]));\nconsole.log(find_sum([1, 1, 1, 1, 1, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123857,
      "stdout": "10\n13\n15\n21\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpus4fmmys.js:26:12)\n    at Object.<anonymous> (/tmp/tmpus4fmmys.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number, j: number;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] != arr[j]) {\n                sum = sum + arr[i];\n            }\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 4, 5]));\nconsole.log(find_sum([10, 20, 10, 40, 50, 60, 70]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123866,
      "stdout": "60\n52\n1540\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpei_01wo_.js:20:12)\n    at Object.<anonymous> (/tmp/tmpei_01wo_.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele = arr[i];\n        let count = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 2, 5]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123865,
      "stdout": "10\n55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpl0sgc16s.js:23:12)\n    at Object.<anonymous> (/tmp/tmpl0sgc16s.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n  let sum = 0;\n  let i = 0;\n  let j = 0;\n  for (i = 0; i < arr.length; i++) {\n    for (j = 0; j < arr.length; j++) {\n      if (i != j && arr[i] != arr[j]) {\n        sum = sum + arr[i];\n      }\n    }\n  }\n  return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123866,
      "stdout": "105\n420\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n155\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpx8g_0zo7.js:20:12)\n    at Object.<anonymous> (/tmp/tmpx8g_0zo7.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 155,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of non-repeated elements in a given array.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let ele = arr[i];\n        let count = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (ele == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + ele;\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 2, 3, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 5, 4, 4, 3, 2, 2, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123860,
      "stdout": "10\n13\n10\n15\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmps7af07vy.js:25:12)\n    at Object.<anonymous> (/tmp/tmps7af07vy.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    }
  ]
}
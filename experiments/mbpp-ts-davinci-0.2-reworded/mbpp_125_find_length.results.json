{
  "name": "mbpp_125_find_length",
  "language": "ts",
  "prompt": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_125_find_length.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count = 0;\n    let one_count = 0;\n    let max_diff = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(zero_count - one_count));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('10010001'));\nconsole.log(find_length('0110000'));\nconsole.log(find_length('100101'));\nconsole.log(find_length('0001'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665510052,
      "stdout": "3\n3\n1\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp7ho0qaav.js:24:12)\n    at Object.<anonymous> (/tmp/tmp7ho0qaav.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length(\"11000111\"));\nconsole.log(find_length(\"1111\"));\nconsole.log(find_length(\"000011110000\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665510052,
      "stdout": "6\n0\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpl7layx_k.js:38:12)\n    at Object.<anonymous> (/tmp/tmpl7layx_k.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('1000101010101'));\nconsole.log(find_length('110101010101'));\nconsole.log(find_length('1101010101010101'));\nconsole.log(find_length('110101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665510052,
      "stdout": "../../../../tmp/tmp9j9hjj5x.ts(34,446): error TS1002: Unterminated string literal.\n../../../../tmp/tmp9j9hjj5x.ts(35,1): error TS1005: ',' expected.\n../../../../tmp/tmp9j9hjj5x.ts(35,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, count_zero - count_one);\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('1000101'));\nconsole.log(find_length('10101'));\nconsole.log(find_length('0111000100010'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665510052,
      "stdout": "2\n0\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpqpvcuozd.js:23:12)\n    at Object.<anonymous> (/tmp/tmpqpvcuozd.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff: number = 0;\n    let count_0: number = 0;\n    let count_1: number = 0;\n    for (let i: number = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i: number = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"1001101\"));\nconsole.log(find_length(\"011101\"));\nconsole.log(find_length(\"010101\"));\nconsole.log(find_length(\"1111\"));\nconsole.log(find_length(\"0000\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665510052,
      "stdout": "6\n2\n6\n0\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpav8yjzrf.js:40:12)\n    at Object.<anonymous> (/tmp/tmpav8yjzrf.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        let diff = count_zero - count_one;\n        if (diff < 0) {\n            diff = -diff;\n        }\n        if (diff > max_diff) {\n            max_diff = diff;\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"10011010001\"));\nconsole.log(find_length(\"00110\"));\nconsole.log(find_length(\"01010101\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665510052,
      "stdout": "2\n2\n1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpp96sd2rs.js:29:12)\n    at Object.<anonymous> (/tmp/tmpp96sd2rs.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count = 0;\n    let one_count = 0;\n    let max_length = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count += 1;\n        } else {\n            one_count += 1;\n        }\n        if (zero_count == one_count) {\n            max_length = Math.max(max_length, 2 * zero_count);\n        } else if (zero_count > one_count) {\n            zero_count = 0;\n            one_count = 0;\n        }\n    }\n    zero_count = 0;\n    one_count = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            zero_count += 1;\n        } else {\n            one_count += 1;\n        }\n        if (zero_count == one_count) {\n            max_length = Math.max(max_length, 2 * zero_count);\n        } else if (zero_count < one_count) {\n            zero_count = 0;\n            one_count = 0;\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length('100010101'));\nconsole.log(find_length('0111000100010'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665510052,
      "stdout": "4\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpebglv51k.js:45:12)\n    at Object.<anonymous> (/tmp/tmpebglv51k.js:49:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length(\"10010101\"));\nconsole.log(find_length(\"11110001\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665510052,
      "stdout": "8\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpip4lok2_.js:24:12)\n    at Object.<anonymous> (/tmp/tmpip4lok2_.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zeros = 0;\n    let ones = 0;\n    let max_diff = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zeros++;\n        } else {\n            ones++;\n        }\n        if (zeros == ones) {\n            max_diff = Math.max(max_diff, ones * 2);\n        }\n    }\n    zeros = 0;\n    ones = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            zeros++;\n        } else {\n            ones++;\n        }\n        if (zeros == ones) {\n            max_diff = Math.max(max_diff, zeros * 2);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('1001101'));\nconsole.log(find_length('011101'));\nconsole.log(find_length('0111011101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665510052,
      "stdout": "6\n2\n2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpnrp9zm40.js:38:12)\n    at Object.<anonymous> (/tmp/tmpnrp9zm40.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_0 - count_1));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"1000101\"));\nconsole.log(find_length(\"111000111\"));\nconsole.log(find_length(\"010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665510052,
      "stdout": "../../../../tmp/tmp92n80_h2.ts(19,740): error TS1002: Unterminated string literal.\n../../../../tmp/tmp92n80_h2.ts(20,1): error TS1005: ',' expected.\n../../../../tmp/tmp92n80_h2.ts(20,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zeros: number = 0;\n    let ones: number = 0;\n    let max_diff: number = 0;\n    for (let i: number = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zeros += 1;\n        } else {\n            ones += 1;\n        }\n        max_diff = Math.max(max_diff, Math.abs(zeros - ones));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('10010001'));\nconsole.log(find_length('0110000'));\nconsole.log(find_length('100101'));\nconsole.log(find_length('100101'));\nconsole.log(find_length('100101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665510052,
      "stdout": "3\n3\n1\n1\n1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpd0td7tmc.js:25:12)\n    at Object.<anonymous> (/tmp/tmpd0td7tmc.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n\n    count_0 = 0;\n    count_1 = 0;\n\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n\n    return max_diff;\n}\n\nconsole.log(find_length('1101010101'));\nconsole.log(find_length('1111010001'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665510052,
      "stdout": "8\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpy1ec5lmw.js:37:12)\n    at Object.<anonymous> (/tmp/tmpy1ec5lmw.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, count_zero - count_one);\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('1000101'));\nconsole.log(find_length('10101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665510052,
      "stdout": "2\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmps2thl_nq.js:22:12)\n    at Object.<anonymous> (/tmp/tmps2thl_nq.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    let i = 0;\n    let j = 0;\n    while (j < string.length) {\n        if (string[j] == '0') {\n            count_0 += 1;\n        } else {\n            count_1 += 1;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_0 - count_1));\n        if (count_0 == count_1) {\n            i = j + 1;\n            count_0 = 0;\n            count_1 = 0;\n        }\n        j += 1;\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"1001101\"));\nconsole.log(find_length(\"0101010101\"));\nconsole.log(find_length(\"1111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665510052,
      "stdout": "1\n1\n4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpwwe_p9iv.js:31:12)\n    at Object.<anonymous> (/tmp/tmpwwe_p9iv.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count = 0;\n    let one_count = 0;\n    let max_length = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_length = Math.max(max_length, zero_count * 2);\n        } else if (zero_count > one_count) {\n            zero_count = 0;\n            one_count = 0;\n        }\n    }\n    zero_count = 0;\n    one_count = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_length = Math.max(max_length, zero_count * 2);\n        } else if (zero_count < one_count) {\n            zero_count = 0;\n            one_count = 0;\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length('1001101'));\nconsole.log(find_length('011101'));\nconsole.log(find_length('01110101'));\nconsole.log(find_length('0111010101'));\nconsole.log(find_length('011101010101'));\nconsole.log(find_length('01110101010101'));\nconsole.log(find_length('0111010101010101'));\nconsole.log(find_length('011101010101010101'));\nconsole.log(find_length('01110101010101010101'));\nconsole.log(find_length('0111010101010101010101'));\nconsole.log(find_length('011101010101010101010101'));\nconsole.log(find_length('011101010101\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665510052,
      "stdout": "../../../../tmp/tmptcz5funj.ts(48,38): error TS1002: Unterminated string literal.\n../../../../tmp/tmptcz5funj.ts(49,1): error TS1005: ',' expected.\n../../../../tmp/tmptcz5funj.ts(49,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length(\"1001101\"));\nconsole.log(find_length(\"0111000100010\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665510052,
      "stdout": "6\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp2ncibz2p.js:37:12)\n    at Object.<anonymous> (/tmp/tmp2ncibz2p.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length('0011000111'));\nconsole.log(find_length('0101010101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665510052,
      "stdout": "10\n10\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp0m0xjnka.js:37:12)\n    at Object.<anonymous> (/tmp/tmp0m0xjnka.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n  let maxLength = 0;\n  let count = 0;\n  let count1 = 0;\n  let count0 = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] == \"1\") {\n      count1++;\n    } else {\n      count0++;\n    }\n    if (count1 == count0) {\n      count = count1 + count0;\n      if (count > maxLength) {\n        maxLength = count;\n      }\n    }\n  }\n  return maxLength;\n}\nconsole.log(find_length(\"10010001\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665510052,
      "stdout": "4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpvo6pcdwg.js:27:12)\n    at Object.<anonymous> (/tmp/tmpvo6pcdwg.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, count_zero - count_one);\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"10010001\"));\nconsole.log(find_length(\"0110000\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665510052,
      "stdout": "3\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpeoxjh4lr.js:22:12)\n    at Object.<anonymous> (/tmp/tmpeoxjh4lr.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length: number = 0;\n    let count_0: number = 0;\n    let count_1: number = 0;\n\n    for (let i: number = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n\n    count_0 = 0;\n    count_1 = 0;\n\n    for (let i: number = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n\n    return max_length;\n}\n\nconsole.log(find_length(\"110111\"));\nconsole.log(find_length(\"1111\"));\nconsole.log(find_length(\"0111000100010\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665510052,
      "stdout": "0\n0\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpim9r5ur1.js:38:12)\n    at Object.<anonymous> (/tmp/tmpim9r5ur1.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max = 0;\n    let count = 0;\n    let zeros = 0;\n    let ones = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            zeros += 1;\n        } else {\n            ones += 1;\n        }\n        count = zeros - ones;\n        if (count > max) {\n            max = count;\n        }\n    }\n    return max;\n}\n\nconsole.log(find_lengthndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123030,
      "stdout": "../../../../tmp/tmp0vu_6_2a.ts(21,795): error TS1002: Unterminated string literal.\n../../../../tmp/tmp0vu_6_2a.ts(22,1): error TS1005: ',' expected.\n../../../../tmp/tmp0vu_6_2a.ts(22,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n  let max_diff = 0;\n  let count_0 = 0;\n  let count_1 = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] == \"0\") {\n      count_0++;\n    } else {\n      count_1++;\n    }\n    max_diff = Math.max(max_diff, count_0 - count_1);\n    if (count_1 > count_0) {\n      count_0 = 0;\n      count_1 = 0;\n    }\n  }\n  return max_diff;\n}\n\nconsole.log(find_length(\"1000101\"));\nconsole.log(find_length(\"1111\"));\nconsole.log(find_length(\"0111000100010\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123031,
      "stdout": "3\n0\n5\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length('10001010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123031,
      "stdout": "../../../../tmp/tmpw4bcixxg.ts(31,553): error TS1002: Unterminated string literal.\n../../../../tmp/tmpw4bcixxg.ts(32,1): error TS1005: ',' expected.\n../../../../tmp/tmpw4bcixxg.ts(32,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let count_0 = 0;\n    let count_1 = 0;\n    let max_diff = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123031,
      "stdout": "../../../../tmp/tmphnvu4wlg.ts(31,552): error TS1002: Unterminated string literal.\n../../../../tmp/tmphnvu4wlg.ts(32,1): error TS1005: ',' expected.\n../../../../tmp/tmphnvu4wlg.ts(32,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length(\"1001101\"));\nconsole.log(find_length(\"011101\"));\nconsole.log(find_length(\"010101\"));\nconsole.log(find_length(\"1111\"));\nconsole.log(find_length(\"0000\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123031,
      "stdout": "6\n2\n6\n0\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp3v8lgfn7.js:40:12)\n    at Object.<anonymous> (/tmp/tmp3v8lgfn7.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count: number = 0;\n    let one_count: number = 0;\n    let max_diff: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == \"0\") {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count * 2);\n        } else if (zero_count > one_count) {\n            zero_count = 0;\n            one_count = 0;\n        }\n    }\n    zero_count = 0;\n    one_count = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == \"0\") {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count * 2);\n        } else if (zero_count < one_count) {\n            zero_count = 0;\n            one_count = 0;\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"1001101\"));\nconsole.log(find_length(\"1011101\"));\nconsole.log(find_length(\"1111\"));\nconsole.log(find_length(\"000011110000\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123031,
      "stdout": "2\n2\n0\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpx_6ape39.js:47:12)\n    at Object.<anonymous> (/tmp/tmpx_6ape39.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length('0111000100010'));\nconsole.log(find_length('011100'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123031,
      "stdout": "8\n6\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpm75u20mb.js:37:12)\n    at Object.<anonymous> (/tmp/tmpm75u20mb.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count = 0;\n    let one_count = 0;\n    let max_diff = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count + one_count);\n        }\n    }\n    zero_count = 0;\n    one_count = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count + one_count);\n        }\n    }\n    return max_diff;\n}\nconsole.log(find_length('0111000100010'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123031,
      "stdout": "8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpkllhbnab.js:36:12)\n    at Object.<anonymous> (/tmp/tmpkllhbnab.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_zero - count_one));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"1000101\"));\nconsole.log(find_length(\"1111\"));\nconsole.log(find_length(\"0111000100010\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123031,
      "stdout": "2\n4\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpng1l5tz6.js:23:12)\n    at Object.<anonymous> (/tmp/tmpng1l5tz6.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff: number = 0;\n    let count_zero: number = 0;\n    let count_one: number = 0;\n    for (let i: number = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        if (count_zero === count_one) {\n            max_diff = Math.max(max_diff, count_zero + count_one);\n        }\n    }\n    count_zero = 0;\n    count_one = 0;\n    for (let i: number = string.length - 1; i >= 0; i--) {\n        if (string[i] === '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        if (count_zero === count_one) {\n            max_diff = Math.max(max_diff, count_zero + count_one);\n        }\n    }\n    return max_diff;\n}\nconsole.log(find_length(\"10011\"));\nconsole.log(find_length(\"0111000100010\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123031,
      "stdout": "4\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp0tslt_ke.js:37:12)\n    at Object.<anonymous> (/tmp/tmp0tslt_ke.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zeros: number = 0;\n    let ones: number = 0;\n    let max_diff: number = 0;\n    for (let i: number = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zeros++;\n        } else {\n            ones++;\n        }\n        if (zeros == ones) {\n            max_diff = Math.max(max_diff, zeros + ones);\n        }\n    }\n    zeros = 0;\n    ones = 0;\n    for (let i: number = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            zeros++;\n        } else {\n            ones++;\n        }\n        if (zeros == ones) {\n            max_diff = Math.max(max_diff, zeros + ones);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"1001101\"));\nconsole.log(find_length(\"010111\"));\nconsole.log(find_length(\"1111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123031,
      "stdout": "6\n4\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp9y_h4vpd.js:38:12)\n    at Object.<anonymous> (/tmp/tmp9y_h4vpd.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        max_diff = Math.max(max_diff, count_0 - count_1);\n    }\n    return max_diff;\n}\nconsole.log(find_length('1000101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123031,
      "stdout": "2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpvinuc0np.js:21:12)\n    at Object.<anonymous> (/tmp/tmpvinuc0np.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length('1101010101'));\nconsole.log(find_length('1111010101'));\nconsole.log(find_length('0101010101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123031,
      "stdout": "8\n6\n10\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpij5nakx7.js:38:12)\n    at Object.<anonymous> (/tmp/tmpij5nakx7.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count: number = 0;\n    let one_count: number = 0;\n    let max_diff: number = 0;\n    for (let i: number = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count * 2);\n        } else if (zero_count > one_count) {\n            zero_count = 0;\n            one_count = 0;\n        }\n    }\n    zero_count = 0;\n    one_count = 0;\n    for (let i: number = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count * 2);\n        } else if (zero_count < one_count) {\n            zero_count = 0;\n            one_count = 0;\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"10011\"));\nconsole.log(find_length(\"0111000100010\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123031,
      "stdout": "2\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpy6mg1jdd.js:45:12)\n    at Object.<anonymous> (/tmp/tmpy6mg1jdd.js:49:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        if (count_zero == count_one) {\n            max_length = Math.max(max_length, count_zero + count_one);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_lengthndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123030,
      "stdout": "../../../../tmp/tmpe6klp0qo.ts(19,774): error TS1002: Unterminated string literal.\n../../../../tmp/tmpe6klp0qo.ts(20,1): error TS1005: ',' expected.\n../../../../tmp/tmpe6klp0qo.ts(20,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let count = 0;\n    let max_count = 0;\n    let zero_count = 0;\n    let one_count = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        count = zero_count - one_count;\n        if (count < 0) {\n            count = 0;\n        }\n        if (count > max_count) {\n            max_count = count;\n        }\n    }\n    return max_count;\n}\n\nconsole.log(find_length('1001101'));\nconsole.log(find_length('01010101'));\nconsole.log(find_length('11010101'));\nconsole.log(find_length('1111'));\nconsole.log(find_length('0000'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123031,
      "stdout": "1\n1\n0\n0\n4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp_3pctn58.js:32:12)\n    at Object.<anonymous> (/tmp/tmp_3pctn58.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_lengthndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123030,
      "stdout": "../../../../tmp/tmp4nejbdvm.ts(31,553): error TS1002: Unterminated string literal.\n../../../../tmp/tmp4nejbdvm.ts(32,1): error TS1005: ',' expected.\n../../../../tmp/tmp4nejbdvm.ts(32,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count = 0;\n    let one_count = 0;\n    let max_diff = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(zero_count - one_count));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"10010001\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123031,
      "stdout": "3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpikangytn.js:21:12)\n    at Object.<anonymous> (/tmp/tmpikangytn.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let count = 0;\n    let max = 0;\n    let zero = 0;\n    let one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero++;\n        } else {\n            one++;\n        }\n        if (zero == one) {\n            max = Math.max(max, i + 1);\n        } else if (zero > one) {\n            zero = 0;\n            one = 0;\n            i = i - count;\n            count = 0;\n        } else {\n            count++;\n        }\n    }\n    return max;\n}\nconsole.log(find_length('10010001'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123031,
      "stdout": "5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpxk84cnt0.js:33:12)\n    at Object.<anonymous> (/tmp/tmpxk84cnt0.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length('1101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123031,
      "stdout": "../../../../tmp/tmpl_3bdk_b.ts(31,552): error TS1002: Unterminated string literal.\n../../../../tmp/tmpl_3bdk_b.ts(32,1): error TS1005: ',' expected.\n../../../../tmp/tmpl_3bdk_b.ts(32,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let count = 0;\n    let max = 0;\n    let zeros = 0;\n    let ones = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zeros++;\n        } else {\n            ones++;\n        }\n        if (zeros == ones) {\n            max = Math.max(max, i + 1);\n        } else if (zeros > ones) {\n            zeros = 0;\n            ones = 0;\n            i = count;\n            count++;\n        }\n    }\n    return max;\n}\n\nconsole.log(find_length(\"10010101\"));\nconsole.log(find_length(\"111101111\"));\nconsole.log(find_length(\"0100101010\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123031,
      "stdout": "7\n0\n10\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp6obw6kl4.js:32:12)\n    at Object.<anonymous> (/tmp/tmp6obw6kl4.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count = 0;\n    let one_count = 0;\n    let max_length = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_length = Math.max(max_length, 2 * zero_count);\n        } else if (zero_count > one_count) {\n            zero_count = 0;\n            one_count = 0;\n        }\n    }\n    zero_count = 0;\n    one_count = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_length = Math.max(max_length, 2 * zero_count);\n        } else if (zero_count < one_count) {\n            zero_count = 0;\n            one_count = 0;\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length(\"1001101\"));\nconsole.log(find_length(\"0111000100010\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123031,
      "stdout": "2\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpi29hx6pb.js:45:12)\n    at Object.<anonymous> (/tmp/tmpi29hx6pb.js:49:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length('11010101'));\nconsole.log(find_length('0111010101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123031,
      "stdout": "6\n6\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp8u7r59y5.js:37:12)\n    at Object.<anonymous> (/tmp/tmp8u7r59y5.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length: number = 0;\n    let count_zero: number = 0;\n    let count_one: number = 0;\n\n    for (let i: number = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n\n        if (count_zero === count_one) {\n            max_length = Math.max(max_length, count_zero * 2);\n        }\n    }\n\n    count_zero = 0;\n    count_one = 0;\n\n    for (let i: number = string.length - 1; i >= 0; i--) {\n        if (string[i] === '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n\n        if (count_zero === count_one) {\n            max_length = Math.max(max_length, count_zero * 2);\n        }\n    }\n\n    return max_length;\n}\n\nconsole.log(find_length('1101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123033,
      "stdout": "../../../../tmp/tmpnp01rgyn.ts(37,540): error TS1002: Unterminated string literal.\n../../../../tmp/tmpnp01rgyn.ts(38,1): error TS1005: ',' expected.\n../../../../tmp/tmpnp01rgyn.ts(38,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length: number = 0;\n    let zeros: number = 0;\n    let ones: number = 0;\n    for (let i: number = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            zeros += 1;\n        } else {\n            ones += 1;\n        }\n        if (zeros === ones) {\n            max_length = Math.max(max_length, zeros * 2);\n        } else if (zeros > ones) {\n            zeros = 0;\n            ones = 0;\n        }\n    }\n    zeros = 0;\n    ones = 0;\n    for (let i: number = string.length - 1; i >= 0; i--) {\n        if (string[i] === '0') {\n            zeros += 1;\n        } else {\n            ones += 1;\n        }\n        if (zeros === ones) {\n            max_length = Math.max(max_length, zeros * 2);\n        } else if (zeros < ones) {\n            zeros = 0;\n            ones = 0;\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length(\"1001101100\"));\nconsole.log(find_length(\"01100\"));\nconsole.log(find_length(\"0110011\"));\nconsole.log(find_length(\"1111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123034,
      "stdout": "6\n4\n4\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp70vyvo3i.js:47:12)\n    at Object.<anonymous> (/tmp/tmp70vyvo3i.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == \"0\") {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length(\"10010101\"));\nconsole.log(find_length(\"11110001\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123033,
      "stdout": "8\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp6yn0g_co.js:24:12)\n    at Object.<anonymous> (/tmp/tmp6yn0g_co.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_zero - count_one));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"100110001\"));\nconsole.log(find_length(\"010101010101\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123034,
      "stdout": "2\n1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpfxt9y30i.js:22:12)\n    at Object.<anonymous> (/tmp/tmpfxt9y30i.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count = 0;\n    let one_count = 0;\n    let max_diff = 0;\n\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n\n        if (zero_count === one_count) {\n            max_diff = Math.max(max_diff, zero_count * 2);\n        } else if (zero_count > one_count) {\n            zero_count = 0;\n            one_count = 0;\n        }\n    }\n\n    zero_count = 0;\n    one_count = 0;\n\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] === '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n\n        if (zero_count === one_count) {\n            max_diff = Math.max(max_diff, zero_count * 2);\n        } else if (zero_count < one_count) {\n            zero_count = 0;\n            one_count = 0;\n        }\n    }\n\n    return max_diff;\n}\n\nconsole.log(find_length('1001101'));\nconsole.log(find_length('011101'));\nconsole.log(find_length('0111010101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123033,
      "stdout": "2\n2\n6\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpcxhob_wo.js:46:12)\n    at Object.<anonymous> (/tmp/tmpcxhob_wo.js:50:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff: number = 0;\n    let count_zero: number = 0;\n    let count_one: number = 0;\n    for (let i: number = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_zero - count_one));\n    }\n    return max_diff;\n}\nconsole.log(find_length(\"10010101\"));\nconsole.log(find_length(\"1111\"));\nconsole.log(find_lengthndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123034,
      "stdout": "../../../../tmp/tmpcad5evdu.ts(18,732): error TS1002: Unterminated string literal.\n../../../../tmp/tmpcad5evdu.ts(19,1): error TS1005: ',' expected.\n../../../../tmp/tmpcad5evdu.ts(19,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        if (count_zero == count_one) {\n            max_length = Math.max(max_length, count_zero + count_one);\n        }\n    }\n    count_zero = 0;\n    count_one = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        if (count_zero == count_one) {\n            max_length = Math.max(max_length, count_zero + count_one);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length('10010001'));\nconsole.log(find_length('0111000100010'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123034,
      "stdout": "4\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp1ys0qkp_.js:37:12)\n    at Object.<anonymous> (/tmp/tmp1ys0qkp_.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count = 0;\n    let one_count = 0;\n    let max_diff = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count += 1;\n        } else {\n            one_count += 1;\n        }\n        max_diff = Math.max(max_diff, Math.abs(zero_count - one_count));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"10011\"));\nconsole.log(find_length(\"0111000100010\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123034,
      "stdout": "1\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmptkpy7jhs.js:22:12)\n    at Object.<anonymous> (/tmp/tmptkpy7jhs.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n  let max_length = 0;\n  let count_zero = 0;\n  let count_one = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] === \"0\") {\n      count_zero++;\n    } else {\n      count_one++;\n    }\n    max_length = Math.max(max_length, Math.abs(count_zero - count_one));\n  }\n  return max_length;\n}\nconsole.log(find_length(\"10010101\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123034,
      "stdout": "1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpgl2fktp9.js:21:12)\n    at Object.<anonymous> (/tmp/tmpgl2fktp9.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count: number = 0;\n    let one_count: number = 0;\n    let max_length: number = 0;\n    for (let i: number = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count === one_count) {\n            max_length = Math.max(max_length, 2 * zero_count);\n        } else if (zero_count > one_count) {\n            zero_count = 0;\n            one_count = 0;\n        }\n    }\n    zero_count = 0;\n    one_count = 0;\n    for (let i: number = string.length - 1; i >= 0; i--) {\n        if (string[i] === '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count === one_count) {\n            max_length = Math.max(max_length, 2 * zero_count);\n        } else if (zero_count < one_count) {\n            zero_count = 0;\n            one_count = 0;\n        }\n    }\n    return max_length;\n}\nconsole.log(find_length(\"10010001\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123034,
      "stdout": "2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp65udw9fv.js:44:12)\n    at Object.<anonymous> (/tmp/tmp65udw9fv.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n  let max_diff = 0;\n  let count_0 = 0;\n  let count_1 = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] === \"0\") {\n      count_0++;\n    } else {\n      count_1++;\n    }\n    max_diff = Math.max(max_diff, count_0 - count_1);\n  }\n  return max_diff;\n}\n\nconsole.log(find_length(\"1000101\"));\nconsole.log(find_length(\"10101\"));\nconsole.log(find_length(\"1111\"));\nconsole.log(find_length(\"0000\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123034,
      "stdout": "2\n0\n0\n4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmptcunzadh.js:24:12)\n    at Object.<anonymous> (/tmp/tmptcunzadh.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length(\"1001101\"));\nconsole.log(find_length(\"011101\"));\nconsole.log(find_length(\"1111\"));\nconsole.log(find_length(\"000011110000\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123034,
      "stdout": "6\n2\n0\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpsu5wi098.js:39:12)\n    at Object.<anonymous> (/tmp/tmpsu5wi098.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let count = 0;\n    let max_count = 0;\n    let zero_count = 0;\n    let one_count = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        count = Math.abs(zero_count - one_count);\n        if (count > max_count) {\n            max_count = count;\n        }\n    }\n    return max_count;\n}\n\nconsole.log(find_length(\"10010101\"));\nconsole.log(find_length(\"1111\"));\nconsole.log(find_length(\"000011110000\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123034,
      "stdout": "1\n4\n4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp2w3n6g17.js:27:12)\n    at Object.<anonymous> (/tmp/tmp2w3n6g17.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_0 - count_1));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"10010001\"));\nconsole.log(find_length(\"0110000\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123034,
      "stdout": "3\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpap7h1a8z.js:22:12)\n    at Object.<anonymous> (/tmp/tmpap7h1a8z.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length: number = 0;\n    let count_0: number = 0;\n    let count_1: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 * 2);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 * 2);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length('11011101'));\nconsole.log(find_length('11110111'));\nconsole.log(find_length('01110111'));\nconsole.log(find_length('0111011101'));\nconsole.log(find_length('011101110101'));\nconsole.log(find_length('01110111010101'));\nconsole.log(find_length('0111011101010101'));\nconsole.log(find_length('011101110101010101'));\nconsole.log(find_length('01110111010101010101'));\nconsole.log(find_length('0111011101010101010101'));\nconsole.log(find_length('011101110101010101010101'));\nconsole.log(find_length('01110111010101010101010101'));\nconsole.log(find_length('0111011101010101010101010101'));\nconsole.log(find_length('011101110101010101010101\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123033,
      "stdout": "../../../../tmp/tmpeyfetqps.ts(44,50): error TS1002: Unterminated string literal.\n../../../../tmp/tmpeyfetqps.ts(45,1): error TS1005: ',' expected.\n../../../../tmp/tmpeyfetqps.ts(45,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n  let max_length = 0;\n  let count = 0;\n  let zero_count = 0;\n  let one_count = 0;\n\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] === \"0\") {\n      zero_count++;\n    } else {\n      one_count++;\n    }\n\n    if (zero_count === one_count) {\n      max_length = Math.max(max_length, count);\n    } else {\n      count++;\n    }\n  }\n  return max_length;\n}\n\nconsole.log(find_length(\"10010101\"));\nconsole.log(find_length(\"1111000100010\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123034,
      "stdout": "4\n10\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpbu5h1f0l.js:28:12)\n    at Object.<anonymous> (/tmp/tmpbu5h1f0l.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"1001101\"));\nconsole.log(find_lengthndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123034,
      "stdout": "../../../../tmp/tmpuhw2y_qf.ts(32,524): error TS1002: Unterminated string literal.\n../../../../tmp/tmpuhw2y_qf.ts(33,1): error TS1005: ',' expected.\n../../../../tmp/tmpuhw2y_qf.ts(33,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length('11011101'));\nconsole.log(find_length('111101'));\nconsole.log(find_length('011101'));\nconsole.log(find_length('01010101'));\nconsole.log(find_length('0101010101'));\nconsole.log(find_length('010101010101'));\nconsole.log(find_length('01010101010101'));\nconsole.log(find_length('0101010101010101'));\nconsole.log(find_length('010101010101010101'));\nconsole.log(find_length('01010101010101010101'));\nconsole.log(find_length('0101010101010101010101'));\nconsole.log(find_length('010101010101010101010101'));\nconsole.log(find_length('01010101010101010101010101'));\nconsole.log(find_length('0101010101010101010101010101'));\nconsole.log(find_length('01\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123034,
      "stdout": "../../../../tmp/tmpc_x1swfz.ts(45,28): error TS1002: Unterminated string literal.\n../../../../tmp/tmpc_x1swfz.ts(46,1): error TS1005: ',' expected.\n../../../../tmp/tmpc_x1swfz.ts(46,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let result: number = 0;\n    let count_0: number = 0;\n    let count_1: number = 0;\n    for (let i: number = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            result = Math.max(result, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i: number = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            result = Math.max(result, count_0 + count_1);\n        }\n    }\n    return result;\n}\n\nconsole.log(find_length(\"0111000100010\"));\nconsole.log(find_length(\"011100\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123034,
      "stdout": "8\n6\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp79kc7uee.js:37:12)\n    at Object.<anonymous> (/tmp/tmp79kc7uee.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n  let max_length = 0;\n  let count_0 = 0;\n  let count_1 = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] === \"0\") {\n      count_0++;\n    } else {\n      count_1++;\n    }\n    if (count_0 === count_1) {\n      max_length = Math.max(max_length, count_0 + count_1);\n    }\n  }\n  return max_length;\n}\n\nconsole.log(find_length(\"10010101\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123034,
      "stdout": "8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpjelkr57l.js:23:12)\n    at Object.<anonymous> (/tmp/tmpjelkr57l.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length('0111000100010'));\nconsole.log(find_length('1111'));\nconsole.log(find_length('000011110000'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123034,
      "stdout": "8\n0\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp_furv8jb.js:38:12)\n    at Object.<anonymous> (/tmp/tmp_furv8jb.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length: number = 0;\n    let count_0: number = 0;\n    let count_1: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\nconsole.log(find_length('1001101'));\nconsole.log(find_length('011101'));\nconsole.log(find_length('010101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123034,
      "stdout": "6\n2\n6\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp4bay3_45.js:38:12)\n    at Object.<anonymous> (/tmp/tmp4bay3_45.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff: number = 0;\n    let count_0: number = 0;\n    let count_1: number = 0;\n    for (let i: number = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i: number = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"10010101\"));\nconsole.log(find_length(\"111100001111\"));\nconsole.log(find_length(\"01100\"));\nconsole.log(find_length(\"01001\"));\nconsole.log(find_length(\"010001\"));\nconsole.log(find_length(\"010101\"));\nconsole.log(find_length(\"110101\"));\nconsole.log(find_length(\"01010101\"));\nconsole.log(find_length(\"0101010101\"));\nconsole.log(find_length(\"010101010101\"));\nconsole.log(find_length(\"01010101010101\"));\nconsole.log(find_length(\"0101010101010101\"));\nconsole.log(find_length(\"010101010101010101\"));\nconsole.log(find_length(\"01010101010101010101\"));\nconsole.log(find_length(\"0101010101010101010101\"));\nconsole.log(find_length(\"01010101010101010101\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123034,
      "stdout": "../../../../tmp/tmp5dg7qugd.ts(46,46): error TS1002: Unterminated string literal.\n../../../../tmp/tmp5dg7qugd.ts(47,1): error TS1005: ',' expected.\n../../../../tmp/tmp5dg7qugd.ts(47,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count: number = 0;\n    let one_count: number = 0;\n    let max_diff: number = 0;\n    for (let i: number = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count + one_count);\n        }\n    }\n    zero_count = 0;\n    one_count = 0;\n    for (let i: number = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count + one_count);\n        }\n    }\n    return max_diff;\n}\nconsole.log(find_length('10011'));\nconsole.log(find_length('0111000100010'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123036,
      "stdout": "4\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpq3o106as.js:37:12)\n    at Object.<anonymous> (/tmp/tmpq3o106as.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('10010101'));\nconsole.log(find_length('1111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123036,
      "stdout": "8\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpydlmrqq7.js:37:12)\n    at Object.<anonymous> (/tmp/tmpydlmrqq7.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let count = 0;\n    let max = 0;\n    let zeros = 0;\n    let ones = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == \"1\") {\n            ones++;\n        } else {\n            zeros++;\n        }\n        count = ones - zeros;\n        if (count < 0) {\n            count = 0;\n        }\n        if (count > max) {\n            max = count;\n        }\n    }\n    return max;\n}\n\nconsole.log(find_length(\"1001101\"));\nconsole.log(find_length(\"0111000100010\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123036,
      "stdout": "1\n2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpa5a1gbc2.js:29:12)\n    at Object.<anonymous> (/tmp/tmpa5a1gbc2.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length(\"10010101\"));\nconsole.log(find_length(\"111101111\"));\nconsole.log(find_length(\"0100101010\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123037,
      "stdout": "8\n0\n6\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpqgtgd8sx.js:38:12)\n    at Object.<anonymous> (/tmp/tmpqgtgd8sx.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length(\"1001101\"));\nconsole.log(find_length(\"0111000100010\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123037,
      "stdout": "6\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpt_5861u0.js:37:12)\n    at Object.<anonymous> (/tmp/tmpt_5861u0.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n  let zero_count = 0;\n  let one_count = 0;\n  let max_diff = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] == \"0\") {\n      zero_count++;\n    } else {\n      one_count++;\n    }\n    max_diff = Math.max(max_diff, zero_count - one_count);\n    if (zero_count < one_count) {\n      zero_count = 0;\n      one_count = 0;\n    }\n  }\n  return max_diff;\n}\n\nconsole.log(find_length(\"10010101\"));\nconsole.log(find_length(\"1111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123037,
      "stdout": "2\n0\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_zero - count_one));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"1000101\"));\nconsole.log(find_length(\"1111\"));\nconsole.log(find_length(\"0111000100010\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123031,
      "stdout": "2\n4\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpng1l5tz6.js:23:12)\n    at Object.<anonymous> (/tmp/tmpng1l5tz6.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, 2 * count_0);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, 2 * count_0);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('100010101'));\nconsole.log(find_length('101010101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123037,
      "stdout": "6\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpaci2tf5e.js:37:12)\n    at Object.<anonymous> (/tmp/tmpaci2tf5e.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n  let max_length = 0;\n  let count_0 = 0;\n  let count_1 = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] === \"0\") {\n      count_0++;\n    } else {\n      count_1++;\n    }\n    if (count_0 === count_1) {\n      max_length = Math.max(max_length, count_0 + count_1);\n    }\n  }\n  count_0 = 0;\n  count_1 = 0;\n  for (let i = string.length - 1; i >= 0; i--) {\n    if (string[i] === \"0\") {\n      count_0++;\n    } else {\n      count_1++;\n    }\n    if (count_0 === count_1) {\n      max_length = Math.max(max_length, count_0 + count_1);\n    }\n  }\n  return max_length;\n}\n\nconsole.log(find_length(\"0111000100010\"));\nconsole.log(find_length(\"011100\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123037,
      "stdout": "8\n6\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpx0h6113s.js:37:12)\n    at Object.<anonymous> (/tmp/tmpx0h6113s.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count: number = 0;\n    let one_count: number = 0;\n    let max_diff: number = 0;\n    let diff: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        diff = zero_count - one_count;\n        if (diff < 0) {\n            diff = -diff;\n        }\n        if (diff > max_diff) {\n            max_diff = diff;\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"1001101\"));\nconsole.log(find_length(\"010101010101\"));\nconsole.log(find_length(\"011101000101\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123037,
      "stdout": "1\n1\n2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpv_k4f251.js:30:12)\n    at Object.<anonymous> (/tmp/tmpv_k4f251.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count++;\n        } else {\n            count--;\n        }\n        if (count < 0) {\n            count = 0;\n        }\n        if (max_diff < count) {\n            max_diff = count;\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"1000101\"));\nconsole.log(find_length(\"10111\"));\nconsole.log(find_length(\"1111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123037,
      "stdout": "3\n1\n0\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let count = 0;\n    let max = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count++;\n        } else {\n            count--;\n        }\n        if (count < 0) {\n            count = 0;\n        }\n        if (count > max) {\n            max = count;\n        }\n    }\n    return max;\n}\n\nconsole.log(find_length(\"100010101\"));\nconsole.log(find_length(\"0101010101\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123037,
      "stdout": "3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count = 0;\n    let one_count = 0;\n    let max_diff = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(zero_count - one_count));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('10010001'));\nconsole.log(find_length('0110000'));\nconsole.log(find_length('100101'));\nconsole.log(find_length('00100'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123037,
      "stdout": "3\n3\n1\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpu_j9fidl.js:24:12)\n    at Object.<anonymous> (/tmp/tmpu_j9fidl.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        if (count_zero === count_one) {\n            max_length = Math.max(max_length, count_zero + count_one);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length(\"10010101\"));\nconsole.log(find_length(\"11110001001\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123037,
      "stdout": "8\n10\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpx0qvxsrw.js:24:12)\n    at Object.<anonymous> (/tmp/tmpx0qvxsrw.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0,\n        zero_count = 0,\n        one_count = 0;\n\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n\n        if (zero_count == one_count) {\n            max_length = Math.max(max_length, zero_count * 2);\n        } else if (zero_count > one_count) {\n            zero_count = 0;\n            one_count = 0;\n        }\n    }\n\n    zero_count = 0;\n    one_count = 0;\n\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n\n        if (zero_count == one_count) {\n            max_length = Math.max(max_length, zero_count * 2);\n        } else if (zero_count < one_count) {\n            zero_count = 0;\n            one_count = 0;\n        }\n    }\n\n    return max_length;\n}\n\nconsole.log(find_length(\"10010001\"));\nconsole.log(find_length(\"0111000100010\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123037,
      "stdout": "2\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpxu7mf2mx.js:43:12)\n    at Object.<anonymous> (/tmp/tmpxu7mf2mx.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        max_diff = Math.max(max_diff, count_0 - count_1);\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"1000101\"));\nconsole.log(find_length(\"111000111\"));\nconsole.log(find_length(\"0111000111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123037,
      "stdout": "2\n0\n1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmplg0wq0ns.js:23:12)\n    at Object.<anonymous> (/tmp/tmplg0wq0ns.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length(\"1001101\"));\nconsole.log(find_length(\"011101\"));\nconsole.log(find_length(\"10010001\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123037,
      "stdout": "6\n2\n4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp54tl1ebf.js:38:12)\n    at Object.<anonymous> (/tmp/tmp54tl1ebf.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_diff = Math.max(max_diff, count_0 * 2);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_diff = Math.max(max_diff, count_0 * 2);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('10010101'));\nconsole.log(find_length('111101111'));\nconsole.log(find_length('0110001'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123037,
      "stdout": "8\n0\n6\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp9v25rwa4.js:38:12)\n    at Object.<anonymous> (/tmp/tmp9v25rwa4.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count: number = 0;\n    let one_count: number = 0;\n    let max_diff: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        }\n        else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count + one_count);\n        }\n    }\n    zero_count = 0;\n    one_count = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            zero_count++;\n        }\n        else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count + one_count);\n        }\n    }\n    return max_diff;\n}\nconsole.log(find_length(\"10010001\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123037,
      "stdout": "4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp4il2k8a1.js:36:12)\n    at Object.<anonymous> (/tmp/tmp4il2k8a1.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_1 * 2);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 * 2);\n        }\n    }\n    return max_diff;\n}\nconsole.log(find_length('10010101'));\nconsole.log(find_length('111101111'));\nconsole.log(find_length('0110001111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123037,
      "stdout": "8\n0\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpnktxa_n7.js:38:12)\n    at Object.<anonymous> (/tmp/tmpnktxa_n7.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        if (count_zero == count_one) {\n            max_diff = Math.max(max_diff, count_zero + count_one);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"10010001\"));\nconsole.log(find_length(\"0101010\"));\nconsole.log(find_length(\"1111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123037,
      "stdout": "4\n6\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmppursojnv.js:25:12)\n    at Object.<anonymous> (/tmp/tmppursojnv.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        max_diff = Math.max(max_diff, count_0 - count_1);\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('100110001'));\nconsole.log(find_length('1101010001'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123037,
      "stdout": "2\n1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpevl0wzyu.js:22:12)\n    at Object.<anonymous> (/tmp/tmpevl0wzyu.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n  let max_length = 0;\n  let count = 0;\n  let count_0 = 0;\n  let count_1 = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] == \"0\") {\n      count_0++;\n    } else {\n      count_1++;\n    }\n    if (count_0 == count_1) {\n      max_length = Math.max(max_length, count_0 + count_1);\n    }\n  }\n  return max_length;\n}\nconsole.log(find_length(\"10010101\"));\nconsole.log(find_length(\"11110001001\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123037,
      "stdout": "8\n10\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp3y0uapr6.js:25:12)\n    at Object.<anonymous> (/tmp/tmp3y0uapr6.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let arr = string.split('');\n    let count = 0;\n    let max = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] == '0') {\n            count++;\n        }\n        else {\n            count--;\n        }\n        if (count < 0) {\n            count = 0;\n        }\n        if (count > max) {\n            max = count;\n        }\n    }\n    return max;\n}\nconsole.log(find_length('10010101'));\nconsole.log(find_length('0101010101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123037,
      "stdout": "2\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        if (count_zero == count_one) {\n            max_length = Math.max(max_length, count_zero + count_one);\n        }\n    }\n    count_zero = 0;\n    count_one = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        if (count_zero == count_one) {\n            max_length = Math.max(max_length, count_zero + count_one);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length('10010101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123039,
      "stdout": "8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpnvl_ha57.js:36:12)\n    at Object.<anonymous> (/tmp/tmpnvl_ha57.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count = 0;\n    let one_count = 0;\n    let max_diff = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(zero_count - one_count));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('10010001'));\nconsole.log(find_length('0110000'));\nconsole.log(find_length('100101'));\nconsole.log(find_length('0001'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665510052,
      "stdout": "3\n3\n1\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp7ho0qaav.js:24:12)\n    at Object.<anonymous> (/tmp/tmp7ho0qaav.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n  let max_length = 0;\n  let count_0 = 0;\n  let count_1 = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] == \"0\") {\n      count_0++;\n    } else {\n      count_1++;\n    }\n    if (count_0 == count_1) {\n      max_length = Math.max(max_length, count_0 + count_1);\n    }\n  }\n  count_0 = 0;\n  count_1 = 0;\n  for (let i = string.length - 1; i >= 0; i--) {\n    if (string[i] == \"0\") {\n      count_0++;\n    } else {\n      count_1++;\n    }\n    if (count_0 == count_1) {\n      max_length = Math.max(max_length, count_0 + count_1);\n    }\n  }\n  return max_length;\n}\n\nconsole.log(find_length(\"1101110111\"));\nconsole.log(find_length(\"1111011101\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123039,
      "stdout": "0\n2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp38847cwi.js:37:12)\n    at Object.<anonymous> (/tmp/tmp38847cwi.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_zero - count_one));\n    }\n    return max_diff;\n}\nconsole.log(find_length(\"1000101\"));\nconsole.log(find_length(\"1111\"));\nconsole.log(find_length(\"0111000100010\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123040,
      "stdout": "2\n4\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpmqgnsmce.js:23:12)\n    at Object.<anonymous> (/tmp/tmpmqgnsmce.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        max_diff = Math.max(max_diff, count_0 - count_1);\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"10010001\"));\nconsole.log(find_length(\"0101010\"));\nconsole.log(find_length(\"1111\"));\nconsole.log(find_length(\"0000\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123040,
      "stdout": "3\n1\n0\n4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpi9hb2qus.js:24:12)\n    at Object.<anonymous> (/tmp/tmpi9hb2qus.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length('0111000100010'));\nconsole.log(find_length('011100'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123031,
      "stdout": "8\n6\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpm75u20mb.js:37:12)\n    at Object.<anonymous> (/tmp/tmpm75u20mb.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n  let max_diff = 0;\n  let count_0 = 0;\n  let count_1 = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] === \"0\") {\n      count_0++;\n    } else {\n      count_1++;\n    }\n    max_diff = Math.max(max_diff, count_0 - count_1);\n  }\n  return max_diff;\n}\nconsole.log(find_length(\"1000101\"));\nconsole.log(find_length(\"1111\"));\nconsole.log(find_length(\"0111000100010\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123040,
      "stdout": "2\n0\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp9xiaf9u_.js:23:12)\n    at Object.<anonymous> (/tmp/tmp9xiaf9u_.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n  let max_diff = 0;\n  let count_0 = 0;\n  let count_1 = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] === \"0\") {\n      count_0++;\n    } else {\n      count_1++;\n    }\n    max_diff = Math.max(max_diff, count_0 - count_1);\n  }\n  return max_diff;\n}\n\nconsole.log(find_length(\"100110001\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123040,
      "stdout": "2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpdpvkgre8.js:21:12)\n    at Object.<anonymous> (/tmp/tmpdpvkgre8.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zeros = 0;\n    let ones = 0;\n    let max_length = 0;\n    let i = 0;\n    while (i < string.length) {\n        if (string[i] == '0') {\n            zeros++;\n        } else {\n            ones++;\n        }\n        if (zeros == ones) {\n            max_length = Math.max(max_length, 2 * ones);\n        }\n        i++;\n    }\n    ones = 0;\n    zeros = 0;\n    i = string.length - 1;\n    while (i >= 0) {\n        if (string[i] == '0') {\n            zeros++;\n        } else {\n            ones++;\n        }\n        if (zeros == ones) {\n            max_length = Math.max(max_length, 2 * ones);\n        }\n        i--;\n    }\n    return max_length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123040,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpzonqtewh.js:39:12)\n    at Object.<anonymous> (/tmp/tmpzonqtewh.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count = 0;\n    let one_count = 0;\n    let max_diff = 0;\n    let diff = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        diff = zero_count - one_count;\n        if (diff < 0) {\n            diff = -diff;\n        }\n        if (diff > max_diff) {\n            max_diff = diff;\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"1001101\"));\nconsole.log(find_length(\"0101010101\"));\nconsole.log(find_length(\"1111\"));\nconsole.log(find_length(\"0000\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123040,
      "stdout": "1\n1\n4\n4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpmg3wvtp_.js:31:12)\n    at Object.<anonymous> (/tmp/tmpmg3wvtp_.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max = 0;\n    let count = 0;\n    let zeros = 0;\n    let ones = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zeros++;\n        } else {\n            ones++;\n        }\n        if (zeros == ones) {\n            max = Math.max(max, i + 1);\n        }\n    }\n    for (let i = 0; i < string.length - 1; i++) {\n        if (string[i] == '0') {\n            zeros--;\n        } else {\n            ones--;\n        }\n        if (string[i + 1] == '0') {\n            zeros++;\n        } else {\n            ones++;\n        }\n        if (zeros == ones) {\n            max = Math.max(max, string.length - i - 1);\n        }\n    }\n    return max;\n}\n\nconsole.log(find_length('10010101'));\nconsole.log(find_length('0101010101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123040,
      "stdout": "8\n10\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmphblxo2ar.js:42:12)\n    at Object.<anonymous> (/tmp/tmphblxo2ar.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        if (count_zero == count_one) {\n            max_diff = Math.max(max_diff, count_zero + count_one);\n        }\n    }\n    count_zero = 0;\n    count_one = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        if (count_zero == count_one) {\n            max_diff = Math.max(max_diff, count_zero + count_one);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('1001101'));\nconsole.log(find_length('0111000100010'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123040,
      "stdout": "6\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpvqysxomm.js:37:12)\n    at Object.<anonymous> (/tmp/tmpvqysxomm.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_zero - count_one));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"10010001\"));\nconsole.log(find_length(\"0110000\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123040,
      "stdout": "3\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp1f5yzjam.js:22:12)\n    at Object.<anonymous> (/tmp/tmp1f5yzjam.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let count = 0;\n    let max_count = 0;\n    let zero_count = 0;\n    let one_count = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count += 1;\n        }\n        else {\n            one_count += 1;\n        }\n        count = zero_count - one_count;\n        if (count < 0) {\n            count = 0;\n        }\n        if (count > max_count) {\n            max_count = count;\n        }\n    }\n    return max_count;\n}\nconsole.log(find_length('10010001'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123040,
      "stdout": "3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpohvm59t7.js:28:12)\n    at Object.<anonymous> (/tmp/tmpohvm59t7.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('1001101'));\nconsole.log(find_length('0111000100010'));\nconsole.log(find_length('1111'));\nconsole.log(find_length('0000'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123040,
      "stdout": "6\n8\n0\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpsxx5sh7k.js:39:12)\n    at Object.<anonymous> (/tmp/tmpsxx5sh7k.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count = 0;\n    let one_count = 0;\n    let max_diff = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count + one_count);\n        }\n    }\n    zero_count = 0;\n    one_count = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count + one_count);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('1001101'));\nconsole.log(find_lengthndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123040,
      "stdout": "../../../../tmp/tmpojx3ekc6.ts(32,524): error TS1002: Unterminated string literal.\n../../../../tmp/tmpojx3ekc6.ts(33,1): error TS1005: ',' expected.\n../../../../tmp/tmpojx3ekc6.ts(33,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let count = 0;\n    let max_count = 0;\n    let zero_count = 0;\n    let one_count = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        count = zero_count - one_count;\n        if (count < 0) {\n            count = 0;\n        }\n        if (count > max_count) {\n            max_count = count;\n        }\n    }\n    return max_count;\n}\n\nconsole.log(find_lengthndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123040,
      "stdout": "../../../../tmp/tmp2r8qihuj.ts(24,733): error TS1002: Unterminated string literal.\n../../../../tmp/tmp2r8qihuj.ts(25,1): error TS1005: ',' expected.\n../../../../tmp/tmp2r8qihuj.ts(25,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let count = 0;\n    let max_count = 0;\n    let zero_count = 0;\n    let one_count = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        count = zero_count - one_count;\n        if (count < 0) {\n            count = -count;\n        }\n        if (count > max_count) {\n            max_count = count;\n        }\n    }\n    return max_count;\n}\n\nconsole.log(find_length('100101011111'));\nconsole.log(find_length('010101010001'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123040,
      "stdout": "4\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpjdom7am9.js:29:12)\n    at Object.<anonymous> (/tmp/tmpjdom7am9.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let curr_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        curr_diff = count_zero - count_one;\n        if (curr_diff < 0) {\n            curr_diff = -curr_diff;\n        }\n        if (curr_diff > max_diff) {\n            max_diff = curr_diff;\n        }\n    }\n    return max_diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123040,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmprwzkdj6w.js:27:12)\n    at Object.<anonymous> (/tmp/tmprwzkdj6w.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n  let max_diff = 0;\n  let count_zero = 0;\n  let count_one = 0;\n\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] === \"0\") {\n      count_zero++;\n    } else {\n      count_one++;\n    }\n\n    if (count_zero === count_one) {\n      max_diff = Math.max(max_diff, count_zero + count_one);\n    }\n  }\n\n  count_zero = 0;\n  count_one = 0;\n\n  for (let i = string.length - 1; i >= 0; i--) {\n    if (string[i] === \"0\") {\n      count_zero++;\n    } else {\n      count_one++;\n    }\n\n    if (count_zero === count_one) {\n      max_diff = Math.max(max_diff, count_zero + count_one);\n    }\n  }\n\n  return max_diff;\n}\n\nconsole.log(find_length(\"1001101\"));\nconsole.log(find_length(\"0111000100010\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123040,
      "stdout": "6\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp197k_8zu.js:37:12)\n    at Object.<anonymous> (/tmp/tmp197k_8zu.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let count = 0;\n    let max_count = 0;\n    let zero_count = 0;\n    let one_count = 0;\n\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            zero_count += 1;\n        } else {\n            one_count += 1;\n        }\n\n        count = zero_count - one_count;\n\n        if (count < 0) {\n            count = 0;\n        }\n\n        if (max_count < count) {\n            max_count = count;\n        }\n    }\n\n    return max_count;\n}\n\nconsole.log(find_length('10001010101'));\nconsole.log(find_length('0111000100010'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123040,
      "stdout": "2\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp3i6qnh63.js:29:12)\n    at Object.<anonymous> (/tmp/tmp3i6qnh63.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count: number = 0;\n    let one_count: number = 0;\n    let max_diff: number = 0;\n    for (let i: number = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            zero_count += 1;\n        } else {\n            one_count += 1;\n        }\n        if (zero_count === one_count) {\n            max_diff = Math.max(max_diff, zero_count * 2);\n        } else if (zero_count > one_count) {\n            zero_count = 0;\n            one_count = 0;\n        }\n    }\n    zero_count = 0;\n    one_count = 0;\n    for (let i: number = string.length - 1; i >= 0; i--) {\n        if (string[i] === '0') {\n            zero_count += 1;\n        } else {\n            one_count += 1;\n        }\n        if (zero_count === one_count) {\n            max_diff = Math.max(max_diff, zero_count * 2);\n        } else if (zero_count < one_count) {\n            zero_count = 0;\n            one_count = 0;\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"100110001\"));\nconsole.log(find_length(\"0111000100010\"));\nconsole.log(find_length(\"011111\"));\nconsole.log(find_length(\"100010111\"));\nconsole.log(find_length(\"1001000101\"));\nconsole.log(find_length(\"110110111101100\"));\nconsole.log(find_length(\"110110111101100\"));\nconsole.log(find_length(\"110110111101100\"));\nconsole.log(find_length(\"110110111101100\"));\nconsole.log(find_length(\"110110111101100\"));\nconsole.log(find_length(\"110110111101100\"));\nconsole.log(find_length(\"110110111101100\"));\nconsole.log\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123040,
      "stdout": "4\n8\n0\n2\n2\n6\n6\n6\n6\n6\n6\n6\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpmi7j2bt9.js:56:12)\n    at Object.<anonymous> (/tmp/tmpmi7j2bt9.js:60:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count = 0;\n    let one_count = 0;\n    let max_length = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count === one_count) {\n            max_length = Math.max(max_length, zero_count * 2);\n        } else if (zero_count > one_count) {\n            zero_count = 0;\n            one_count = 0;\n        }\n    }\n    zero_count = 0;\n    one_count = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] === '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count === one_count) {\n            max_length = Math.max(max_length, zero_count * 2);\n        } else if (zero_count < one_count) {\n            zero_count = 0;\n            one_count = 0;\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length('1001101'));\nconsole.log(find_length('011101'));\nconsole.log(find_length('01110101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123040,
      "stdout": "2\n2\n4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpl2fp8yjw.js:46:12)\n    at Object.<anonymous> (/tmp/tmpl2fp8yjw.js:50:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('10001010101'));\nconsole.log(find_length('10101'));\nconsole.log(find_length('1111'));\nconsole.log(find_length('0000'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123040,
      "stdout": "8\n4\n0\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpy6ykhbq2.js:39:12)\n    at Object.<anonymous> (/tmp/tmpy6ykhbq2.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    let i = 0;\n    let j = 0;\n    while (i < string.length && j < string.length) {\n        if (string[j] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_diff = Math.max(max_diff, j - i + 1);\n            j++;\n        } else if (count_0 > count_1) {\n            while (i < j && count_0 > count_1) {\n                if (string[i] === '0') {\n                    count_0--;\n                } else {\n                    count_1--;\n                }\n                i++;\n            }\n        } else {\n            j++;\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('1000101'));\nconsole.log(find_length('1010101'));\nconsole.log(find_length('0101010101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_0 - count_1));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"10010001\"));\nconsole.log(find_length(\"011\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123042,
      "stdout": "3\n1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp1_smw9pn.js:22:12)\n    at Object.<anonymous> (/tmp/tmp1_smw9pn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        if (count_zero === count_one) {\n            max_length = Math.max(max_length, count_zero * 2);\n        }\n    }\n    count_zero = 0;\n    count_one = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] === '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        if (count_zero === count_one) {\n            max_length = Math.max(max_length, count_zero * 2);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length('1101010001'));\nconsole.log(find_length('111101111'));\nconsole.log(find_length('0110010101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123042,
      "stdout": "10\n0\n10\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp5461vg5a.js:38:12)\n    at Object.<anonymous> (/tmp/tmp5461vg5a.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        max_diff = Math.max(max_diff, count_0 - count_1);\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"10010001\"));\nconsole.log(find_length(\"0110000\"));\nconsole.log(find_length(\"100101\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123042,
      "stdout": "3\n3\n1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp7y7j6obq.js:23:12)\n    at Object.<anonymous> (/tmp/tmp7y7j6obq.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count = 0;\n    let one_count = 0;\n    let max_diff = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count + one_count);\n        }\n    }\n    zero_count = 0;\n    one_count = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count + one_count);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('1001101'));\nconsole.log(find_length('0101010101'));\nconsole.log(find_length('1101010101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123043,
      "stdout": "6\n10\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpaua7z6m0.js:38:12)\n    at Object.<anonymous> (/tmp/tmpaua7z6m0.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length(\"10010001\"));\nconsole.log(find_length(\"010001\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123043,
      "stdout": "4\n2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpi_ro5wnc.js:24:12)\n    at Object.<anonymous> (/tmp/tmpi_ro5wnc.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let count = 0;\n    let max = 0;\n    let zero = 0;\n    let one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            zero++;\n        } else {\n            one++;\n        }\n        count = zero - one;\n        if (count < 0) {\n            count = -count;\n        }\n        if (count > max) {\n            max = count;\n        }\n    }\n    return max;\n}\n\nconsole.log(find_length(\"10010001\"));\nconsole.log(find_length(\"01100001011000\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123043,
      "stdout": "3\n4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp79__xbns.js:29:12)\n    at Object.<anonymous> (/tmp/tmp79__xbns.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count = 0;\n    let one_count = 0;\n    let max_diff = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count * 2);\n        } else if (zero_count > one_count) {\n            zero_count = 0;\n            one_count = 0;\n        }\n    }\n    zero_count = 0;\n    one_count = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count * 2);\n        } else if (zero_count < one_count) {\n            zero_count = 0;\n            one_count = 0;\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"1001101\"));\nconsole.log(find_length(\"011101\"));\nconsole.log(find_length(\"011100\"));\nconsole.log(find_length(\"01011101\"));\nconsole.log(find_length(\"0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123043,
      "stdout": "../../../../tmp/tmpdvv_jb1q.ts(41,324): error TS1002: Unterminated string literal.\n../../../../tmp/tmpdvv_jb1q.ts(42,1): error TS1005: ',' expected.\n../../../../tmp/tmpdvv_jb1q.ts(42,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zeros = 0;\n    let ones = 0;\n    let max_length = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zeros++;\n        } else {\n            ones++;\n        }\n        if (zeros == ones) {\n            max_length = Math.max(max_length, 2 * ones);\n        }\n        if (zeros > ones) {\n            zeros = 0;\n            ones = 0;\n        }\n    }\n    zeros = 0;\n    ones = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            zeros++;\n        } else {\n            ones++;\n        }\n        if (zeros == ones) {\n            max_length = Math.max(max_length, 2 * zeros);\n        }\n        if (zeros < ones) {\n            zeros = 0;\n            ones = 0;\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length('1001101'));\nconsole.log(find_length('0111000100010'));\nconsole.log(find_length('1111'));\nconsole.log(find_length('000011110000'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123043,
      "stdout": "2\n8\n0\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp3ru6lr04.js:47:12)\n    at Object.<anonymous> (/tmp/tmp3ru6lr04.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_zero - count_one));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"1000101\"));\nconsole.log(find_length(\"111000111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123043,
      "stdout": "2\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpbzvk5c2o.js:22:12)\n    at Object.<anonymous> (/tmp/tmpbzvk5c2o.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        }\n        else {\n            count_one++;\n        }\n        if (count_zero == count_one) {\n            max_diff = Math.max(max_diff, count_zero + count_one);\n        }\n        else if (count_zero > count_one) {\n            count_zero = 0;\n            count_one = 0;\n        }\n    }\n    count_zero = 0;\n    count_one = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_zero++;\n        }\n        else {\n            count_one++;\n        }\n        if (count_zero == count_one) {\n            max_diff = Math.max(max_diff, count_zero + count_one);\n        }\n        else if (count_zero < count_one) {\n            count_zero = 0;\n            count_one = 0;\n        }\n    }\n    return max_diff;\n}\nconsole.log(find_length(\"1001101\"));\nconsole.log(find_length(\"0111000100010\"));\nconsole.log(find_length(\"1111\"));\nconsole.log(find_length(\"000011110000\"));\nconsole.log(find_length(\"101010101\"));\nconsole.log(find_length(\"1011011110101010010101\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123043,
      "stdout": "2\n8\n0\n8\n8\n14\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpoqs7e30l.js:49:12)\n    at Object.<anonymous> (/tmp/tmpoqs7e30l.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        max_diff = Math.max(max_diff, count_1 - count_0);\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"100110001\"));\nconsole.log(find_length(\"0111000100010\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123043,
      "stdout": "1\n2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpti26w1i2.js:22:12)\n    at Object.<anonymous> (/tmp/tmpti26w1i2.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count = 0;\n    let one_count = 0;\n    let max_diff = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count + one_count);\n        }\n    }\n    zero_count = 0;\n    one_count = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count + one_count);\n        }\n    }\n    return max_diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123043,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp55720mxx.js:35:12)\n    at Object.<anonymous> (/tmp/tmp55720mxx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let count = 0;\n    let max = 0;\n    let zero = 0;\n    let one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero++;\n        }\n        else {\n            one++;\n        }\n        if (zero == one) {\n            max = Math.max(max, i + 1);\n        }\n    }\n    return max;\n}\nconsole.log(find_length(\"10010101\"));\nconsole.log(find_length(\"0101010101\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123043,
      "stdout": "8\n10\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp2xl8ja9k.js:25:12)\n    at Object.<anonymous> (/tmp/tmp2xl8ja9k.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let curr_diff = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            curr_diff += 1;\n        } else {\n            curr_diff -= 1;\n        }\n        if (curr_diff < 0) {\n            curr_diff = 0;\n        }\n        if (curr_diff > max_diff) {\n            max_diff = curr_diff;\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('10010001'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123043,
      "stdout": "4\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('1000101'));\nconsole.log(find_length('1011101'));\nconsole.log(find_length('1111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123043,
      "stdout": "4\n2\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpet39j81s.js:38:12)\n    at Object.<anonymous> (/tmp/tmpet39j81s.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let count = 0;\n    let max_count = 0;\n    let zero_count = 0;\n    let one_count = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            zero_count++;\n        }\n        else {\n            one_count++;\n        }\n        count = zero_count - one_count;\n        if (count < 0) {\n            count = -count;\n        }\n        if (count > max_count) {\n            max_count = count;\n        }\n    }\n    return max_count;\n}\n\nconsole.log(find_length('100101011111'));\nconsole.log(find_length('010101010001'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123043,
      "stdout": "4\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpc6o7mvyj.js:29:12)\n    at Object.<anonymous> (/tmp/tmpc6o7mvyj.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_1 + count_0);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_1 + count_0);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('1001101'));\nconsole.log(find_length('0111000100010'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123043,
      "stdout": "6\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpfx9ai1of.js:37:12)\n    at Object.<anonymous> (/tmp/tmpfx9ai1of.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let arr: number[] = [];\n    let count: number = 0;\n    let max: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count++;\n        } else {\n            count--;\n        }\n        if (count == 0) {\n            max = i + 1;\n        }\n        if (arr[count] >= 0) {\n            max = Math.max(max, i - arr[count]);\n        } else {\n            arr[count] = i;\n        }\n    }\n    return max;\n}\n\nconsole.log(find_length(\"1001101\"));\nconsole.log(find_length(\"0111000100010\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123043,
      "stdout": "6\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpn1f3dpn9.js:30:12)\n    at Object.<anonymous> (/tmp/tmpn1f3dpn9.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n  let max = 0;\n  let count = 0;\n  let i = 0;\n  let j = 0;\n  while (i < string.length && j < string.length) {\n    if (string[i] === \"0\") {\n      count++;\n    } else if (string[i] === \"1\") {\n      count--;\n    }\n    if (count === 0) {\n      max = Math.max(max, i - j + 1);\n    }\n    if (count < 0) {\n      j = i + 1;\n      count = 0;\n    }\n    i++;\n  }\n  return max;\n}\n\nconsole.log(find_length(\"10010101\"));\nconsole.log(find_length(\"01011010\"));\nconsole.log(find_length(\"11110001\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123043,
      "stdout": "0\n4\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp22z4ix3i.js:31:12)\n    at Object.<anonymous> (/tmp/tmp22z4ix3i.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('1000101'));\nconsole.log(find_length('1011101'));\nconsole.log(find_length('1111'));\nconsole.log(find_length('01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123043,
      "stdout": "../../../../tmp/tmpggd1llx0.ts(34,472): error TS1002: Unterminated string literal.\n../../../../tmp/tmpggd1llx0.ts(35,1): error TS1005: ',' expected.\n../../../../tmp/tmpggd1llx0.ts(35,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_0++;\n        }\n        else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\nconsole.log(find_length(\"10010001\"));\nconsole.log(find_length(\"01011100010101\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123043,
      "stdout": "4\n14\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp12683wrq.js:24:12)\n    at Object.<anonymous> (/tmp/tmp12683wrq.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count = 0;\n    let one_count = 0;\n    let max_length = 0;\n    let diff = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        diff = zero_count - one_count;\n        if (diff < 0) {\n            diff = -diff;\n        }\n        if (diff > max_length) {\n            max_length = diff;\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length('10010101'));\nconsole.log(find_length('1111'));\nconsole.log(find_length('000011110000'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123043,
      "stdout": "1\n4\n4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpkwhjar4v.js:30:12)\n    at Object.<anonymous> (/tmp/tmpkwhjar4v.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n  let max_length = 0;\n  let zeros = 0;\n  let ones = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] === \"0\") {\n      zeros += 1;\n    } else {\n      ones += 1;\n    }\n    if (zeros === ones) {\n      max_length = Math.max(max_length, zeros * 2);\n    }\n  }\n  zeros = 0;\n  ones = 0;\n  for (let i = string.length - 1; i >= 0; i--) {\n    if (string[i] === \"0\") {\n      zeros += 1;\n    } else {\n      ones += 1;\n    }\n    if (zeros === ones) {\n      max_length = Math.max(max_length, zeros * 2);\n    }\n  }\n  return max_length;\n}\n\nconsole.log(find_length(\"10010001\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123045,
      "stdout": "4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp9vq4xt_h.js:36:12)\n    at Object.<anonymous> (/tmp/tmp9vq4xt_h.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length(\"10011\"));\nconsole.log(find_length(\"0111000100010\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123045,
      "stdout": "4\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpn6sb4t0j.js:37:12)\n    at Object.<anonymous> (/tmp/tmpn6sb4t0j.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zeros = 0;\n    let ones = 0;\n    let max_diff = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zeros += 1;\n        } else {\n            ones += 1;\n        }\n        if (zeros == ones) {\n            max_diff = Math.max(max_diff, zeros + ones);\n        }\n    }\n    zeros = 0;\n    ones = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            zeros += 1;\n        } else {\n            ones += 1;\n        }\n        if (zeros == ones) {\n            max_diff = Math.max(max_diff, zeros + ones);\n        }\n    }\n    return max_diff;\n}\nconsole.log(find_length(\"10010101\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123045,
      "stdout": "8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpd72iwz9q.js:36:12)\n    at Object.<anonymous> (/tmp/tmpd72iwz9q.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n  let max_length = 0;\n  let count_0 = 0;\n  let count_1 = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] == \"0\") {\n      count_0++;\n    } else {\n      count_1++;\n    }\n    if (count_0 == count_1) {\n      max_length = Math.max(max_length, count_0 + count_1);\n    }\n  }\n  count_0 = 0;\n  count_1 = 0;\n  for (let i = string.length - 1; i >= 0; i--) {\n    if (string[i] == \"0\") {\n      count_0++;\n    } else {\n      count_1++;\n    }\n    if (count_0 == count_1) {\n      max_length = Math.max(max_length, count_0 + count_1);\n    }\n  }\n  return max_length;\n}\n\nconsole.log(find_length(\"1001101\"));\nconsole.log(find_length(\"0111000100010\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123046,
      "stdout": "6\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpyr0l1t4k.js:37:12)\n    at Object.<anonymous> (/tmp/tmpyr0l1t4k.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let count_0 = 0;\n    let count_1 = 0;\n    let max_diff = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\nconsole.log(find_length(\"1000101010101\"));\nconsole.log(find_lengthndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123045,
      "stdout": "../../../../tmp/tmpy7mpcwjy.ts(19,742): error TS1002: Unterminated string literal.\n../../../../tmp/tmpy7mpcwjy.ts(20,1): error TS1005: ',' expected.\n../../../../tmp/tmpy7mpcwjy.ts(20,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('100110111'));\nconsole.log(find_length('0111000100010'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123046,
      "stdout": "6\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpzr_fxtxd.js:37:12)\n    at Object.<anonymous> (/tmp/tmpzr_fxtxd.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length: number = 0;\n    let count_0: number = 0;\n    let count_1: number = 0;\n    for (let i: number = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i: number = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length(\"10010101\"));\nconsole.log(find_length(\"111101111\"));\nconsole.log(find_length(\"0100101010\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123046,
      "stdout": "8\n0\n6\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpfkc5lx6x.js:38:12)\n    at Object.<anonymous> (/tmp/tmpfkc5lx6x.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length('11011101'));\nconsole.log(find_length('111101'));\nconsole.log(find_length('011101'));\nconsole.log(find_length('01110101'));\nconsole.log(find_length('0111010101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123046,
      "stdout": "2\n2\n2\n4\n6\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp9_bvbqc5.js:40:12)\n    at Object.<anonymous> (/tmp/tmp9_bvbqc5.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n  let max_diff = 0;\n  let count_0 = 0;\n  let count_1 = 0;\n\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] === \"0\") {\n      count_0++;\n    } else {\n      count_1++;\n    }\n\n    if (count_0 === count_1) {\n      max_diff = Math.max(max_diff, count_0 + count_1);\n    }\n  }\n\n  count_0 = 0;\n  count_1 = 0;\n\n  for (let i = string.length - 1; i >= 0; i--) {\n    if (string[i] === \"0\") {\n      count_0++;\n    } else {\n      count_1++;\n    }\n\n    if (count_0 === count_1) {\n      max_diff = Math.max(max_diff, count_0 + count_1);\n    }\n  }\n\n  return max_diff;\n}\n\nconsole.log(find_length(\"100010101\"));\nconsole.log(find_length(\"111100001111\"));\nconsole.log(find_length(\"0111000111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123046,
      "stdout": "6\n8\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp05vzlgzp.js:38:12)\n    at Object.<anonymous> (/tmp/tmp05vzlgzp.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n  let max_diff = 0;\n  let count_zero = 0;\n  let count_one = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] == \"0\") {\n      count_zero++;\n    } else {\n      count_one++;\n    }\n    max_diff = Math.max(max_diff, Math.abs(count_zero - count_one));\n  }\n  return max_diff;\n}\nconsole.log(find_length(\"1000101\"));\nconsole.log(find_length(\"1111\"));\nconsole.log(find_length(\"0111000100010\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123046,
      "stdout": "2\n4\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpkqdvxtr6.js:23:12)\n    at Object.<anonymous> (/tmp/tmpkqdvxtr6.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        }\n        else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\nconsole.log(find_length(\"10010101\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123046,
      "stdout": "8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpho9tyhbz.js:23:12)\n    at Object.<anonymous> (/tmp/tmpho9tyhbz.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff: number = 0;\n    let count_0: number = 0;\n    let count_1: number = 0;\n    let n: number = string.length;\n    for (let i = 0; i < n; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        }\n        else {\n            count_1++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_0 - count_1));\n    }\n    return max_diff;\n}\nconsole.log(find_length(\"1000101\"));\nconsole.log(find_length(\"10111\"));\nconsole.log(find_length(\"1111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123046,
      "stdout": "2\n3\n4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp4i_fgfa3.js:24:12)\n    at Object.<anonymous> (/tmp/tmp4i_fgfa3.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\nconsole.log(find_length('1001101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123046,
      "stdout": "6\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp2825_3u0.js:36:12)\n    at Object.<anonymous> (/tmp/tmp2825_3u0.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let count_0: number = 0;\n    let count_1: number = 0;\n    let max_diff: number = 0;\n    for (let i: number = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        max_diff = Math.max(max_diff, count_0 - count_1);\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"1000101\"));\nconsole.log(find_length(\"1111\"));\nconsole.log(find_length(\"0111000100010\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123046,
      "stdout": "2\n0\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpdeznbeo7.js:23:12)\n    at Object.<anonymous> (/tmp/tmpdeznbeo7.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count: number = 0;\n    let one_count: number = 0;\n    let max_diff: number = 0;\n    for (let i: number = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count + one_count);\n        }\n    }\n    zero_count = 0;\n    one_count = 0;\n    for (let i: number = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count + one_count);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"10010101\"));\nconsole.log(find_length(\"111100001111\"));\nconsole.log(find_length(\"0111000100010\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123046,
      "stdout": "8\n8\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpseuhtfnj.js:38:12)\n    at Object.<anonymous> (/tmp/tmpseuhtfnj.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('1001101'));\nconsole.log(find_length('0111000100010'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123046,
      "stdout": "6\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpzpmya7sn.js:37:12)\n    at Object.<anonymous> (/tmp/tmpzpmya7sn.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count: number = 0;\n    let one_count: number = 0;\n    let max_diff: number = 0;\n    for (let i: number = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count + one_count);\n        }\n    }\n    zero_count = 0;\n    one_count = 0;\n    for (let i: number = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count + one_count);\n        }\n    }\n    return max_diff;\n}\nconsole.log(find_length('1001101'));\nconsole.log(find_length('011101'));\nconsole.log(find_length('1111'));\nconsole.log(find_length('000011110000'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123046,
      "stdout": "6\n2\n0\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmprs61mdu3.js:39:12)\n    at Object.<anonymous> (/tmp/tmprs61mdu3.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_zero - count_one));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"1001101\"));\nconsole.log(find_length(\"011101\"));\nconsole.log(find_length(\"10010001\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123046,
      "stdout": "1\n2\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp4tdz1dcx.js:23:12)\n    at Object.<anonymous> (/tmp/tmp4tdz1dcx.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n  let max_length = 0;\n  let count_0 = 0;\n  let count_1 = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] == \"0\") {\n      count_0++;\n    } else {\n      count_1++;\n    }\n    if (count_0 == count_1) {\n      max_length = Math.max(max_length, count_0 + count_1);\n    }\n  }\n  count_0 = 0;\n  count_1 = 0;\n  for (let i = string.length - 1; i >= 0; i--) {\n    if (string[i] == \"0\") {\n      count_0++;\n    } else {\n      count_1++;\n    }\n    if (count_0 == count_1) {\n      max_length = Math.max(max_length, count_0 + count_1);\n    }\n  }\n  return max_length;\n}\n\nconsole.log(find_lengthndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123046,
      "stdout": "../../../../tmp/tmpuhspj18q.ts(31,552): error TS1002: Unterminated string literal.\n../../../../tmp/tmpuhspj18q.ts(32,1): error TS1005: ',' expected.\n../../../../tmp/tmpuhspj18q.ts(32,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_0 - count_1));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"10010001\"));\nconsole.log(find_length(\"0110000\"));\nconsole.log(find_length(\"01001\"));\nconsole.log(find_length(\"010001\"));\nconsole.log(find_length(\"010101\"));\nconsole.log(find_length(\"01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123046,
      "stdout": "../../../../tmp/tmpvoja9zeu.ts(22,664): error TS1002: Unterminated string literal.\n../../../../tmp/tmpvoja9zeu.ts(23,1): error TS1005: ',' expected.\n../../../../tmp/tmpvoja9zeu.ts(23,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n  let max_diff = 0;\n  let count_0 = 0;\n  let count_1 = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] == \"0\") {\n      count_0++;\n    } else {\n      count_1++;\n    }\n    max_diff = Math.max(max_diff, count_0 - count_1);\n  }\n  return max_diff;\n}\n\nconsole.log(find_length(\"1000101\"));\nconsole.log(find_length(\"11000101\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123047,
      "stdout": "2\n1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpm1wnc34l.js:22:12)\n    at Object.<anonymous> (/tmp/tmpm1wnc34l.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_zero - count_one));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"10010001\"));\nconsole.log(find_length(\"111000111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123046,
      "stdout": "3\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpw6ms6wiw.js:22:12)\n    at Object.<anonymous> (/tmp/tmpw6ms6wiw.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let count = 0;\n    let max_count = 0;\n    let zero_count = 0;\n    let one_count = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count += 1;\n        } else {\n            one_count += 1;\n        }\n        count = zero_count - one_count;\n        if (count < 0) {\n            count = 0;\n        }\n        if (count > max_count) {\n            max_count = count;\n        }\n    }\n    return max_count;\n}\n\nconsole.log(find_length('1000101010101'));\nconsole.log(find_length('0111000100010'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123048,
      "stdout": "2\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpamkv2wty.js:29:12)\n    at Object.<anonymous> (/tmp/tmpamkv2wty.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff: number = 0;\n    let curr_diff: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            curr_diff += 1;\n        } else {\n            curr_diff -= 1;\n        }\n        if (curr_diff < 0) {\n            curr_diff = 0;\n        }\n        if (curr_diff > max_diff) {\n            max_diff = curr_diff;\n        }\n    }\n    return max_diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123048,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length(\"0111000100010\"));\nconsole.log(find_length(\"111000111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123048,
      "stdout": "8\n6\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp__9f0b56.js:24:12)\n    at Object.<anonymous> (/tmp/tmp__9f0b56.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    let i = 0;\n    let j = 0;\n    while (i < string.length && j < string.length) {\n        if (string[j] === '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        if (count_zero === count_one) {\n            max_diff = Math.max(max_diff, j - i + 1);\n            j++;\n        } else if (count_zero > count_one) {\n            while (count_zero > count_one) {\n                if (string[i] === '0') {\n                    count_zero--;\n                } else {\n                    count_one--;\n                }\n                i++;\n            }\n        } else {\n            j++;\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"1001101\"));\nconsole.log(find_length(\"0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123048,
      "stdout": "../../../../tmp/tmp8pf9dcim.ts(34,558): error TS1002: Unterminated string literal.\n../../../../tmp/tmp8pf9dcim.ts(35,1): error TS1005: ',' expected.\n../../../../tmp/tmp8pf9dcim.ts(35,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zeros = 0;\n    let ones = 0;\n    let max = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === \"0\") {\n            zeros++;\n        } else {\n            ones++;\n        }\n        if (zeros === ones) {\n            max = Math.max(max, zeros * 2);\n        }\n    }\n    zeros = 0;\n    ones = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] === \"0\") {\n            zeros++;\n        } else {\n            ones++;\n        }\n        if (zeros === ones) {\n            max = Math.max(max, zeros * 2);\n        }\n    }\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123049,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpgjp4e9lx.js:35:12)\n    at Object.<anonymous> (/tmp/tmpgjp4e9lx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_zero - count_one));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"1000101\"));\nconsole.log(find_length(\"1111\"));\nconsole.log(find_length(\"0111000100010\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123031,
      "stdout": "2\n4\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpng1l5tz6.js:23:12)\n    at Object.<anonymous> (/tmp/tmpng1l5tz6.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff: number = 0;\n    let count_0: number = 0;\n    let count_1: number = 0;\n    for (let i: number = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 != count_1) {\n            max_diff = Math.max(max_diff, Math.abs(count_0 - count_1));\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('1000101'));\nconsole.log(find_length('1011101'));\nconsole.log(find_length('1111'));\nconsole.log(find_length('0000'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123049,
      "stdout": "2\n3\n4\n4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp4et86jop.js:26:12)\n    at Object.<anonymous> (/tmp/tmp4et86jop.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count: number = 0;\n    let one_count: number = 0;\n    let max_diff: number = 0;\n\n    for (let i: number = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count * 2);\n        } else if (zero_count > one_count) {\n            zero_count = 0;\n            one_count = 0;\n        }\n    }\n\n    zero_count = 0;\n    one_count = 0;\n\n    for (let i: number = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count * 2);\n        } else if (zero_count < one_count) {\n            zero_count = 0;\n            one_count = 0;\n        }\n    }\n\n    return max_diff;\n}\n\nconsole.log(find_length('10010001'));\nconsole.log(find_length('01010101'));\nconsole.log(find_length('111000111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123049,
      "stdout": "2\n6\n6\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp9vsjxgjo.js:46:12)\n    at Object.<anonymous> (/tmp/tmp9vsjxgjo.js:50:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"110101\"));\nconsole.log(find_length(\"1111\"));\nconsole.log(find_length(\"0101010101\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123049,
      "stdout": "4\n0\n10\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpft6rd8ih.js:38:12)\n    at Object.<anonymous> (/tmp/tmpft6rd8ih.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\nconsole.log(find_lengthndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123049,
      "stdout": "../../../../tmp/tmpuayrl10e.ts(30,554): error TS1002: Unterminated string literal.\n../../../../tmp/tmpuayrl10e.ts(31,1): error TS1005: ',' expected.\n../../../../tmp/tmpuayrl10e.ts(31,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count: number = 0;\n    let one_count: number = 0;\n    let max_diff: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(zero_count - one_count));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"10010101\"));\nconsole.log(find_length(\"1111\"));\nconsole.log(find_lengthndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123049,
      "stdout": "../../../../tmp/tmppx05nsr9.ts(19,734): error TS1002: Unterminated string literal.\n../../../../tmp/tmppx05nsr9.ts(20,1): error TS1005: ',' expected.\n../../../../tmp/tmppx05nsr9.ts(20,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('10011'));\nconsole.log(find_length('0111000100010'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123049,
      "stdout": "4\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpo618pmtk.js:37:12)\n    at Object.<anonymous> (/tmp/tmpo618pmtk.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        if (count_zero == count_one) {\n            max_diff = Math.max(max_diff, count_zero + count_one);\n        }\n    }\n    count_zero = 0;\n    count_one = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        if (count_zero == count_one) {\n            max_diff = Math.max(max_diff, count_zero + count_one);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"1101010001\"));\nconsole.log(find_length(\"1111\"));\nconsole.log(find_length(\"0111000100010\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123049,
      "stdout": "10\n0\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp5sn5ipx0.js:38:12)\n    at Object.<anonymous> (/tmp/tmp5sn5ipx0.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let curr_diff = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            curr_diff += 1;\n        } else {\n            curr_diff -= 1;\n        }\n        if (curr_diff < 0) {\n            curr_diff = 0;\n        }\n        if (curr_diff > max_diff) {\n            max_diff = curr_diff;\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('10010101'));\nconsole.log(find_length('111100001111'));\nconsole.log(find_lengthndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123049,
      "stdout": "../../../../tmp/tmpio1d0no3.ts(23,694): error TS1002: Unterminated string literal.\n../../../../tmp/tmpio1d0no3.ts(24,1): error TS1005: ',' expected.\n../../../../tmp/tmpio1d0no3.ts(24,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n  let zeros = 0;\n  let ones = 0;\n  let max_length = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] === \"0\") {\n      zeros += 1;\n    } else {\n      ones += 1;\n    }\n    if (zeros === ones) {\n      max_length = Math.max(max_length, zeros * 2);\n    }\n  }\n  zeros = 0;\n  ones = 0;\n  for (let i = string.length - 1; i >= 0; i--) {\n    if (string[i] === \"0\") {\n      zeros += 1;\n    } else {\n      ones += 1;\n    }\n    if (zeros === ones) {\n      max_length = Math.max(max_length, zeros * 2);\n    }\n  }\n  return max_length;\n}\n\nconsole.log(find_length(\"0111000100010\"));\nconsole.log(find_length(\"011100\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123049,
      "stdout": "8\n6\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpd_s2ztgs.js:37:12)\n    at Object.<anonymous> (/tmp/tmpd_s2ztgs.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length(\"10010101\"));\nconsole.log(find_length(\"11110001\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665510052,
      "stdout": "8\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpip4lok2_.js:24:12)\n    at Object.<anonymous> (/tmp/tmpip4lok2_.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let arr: number[] = [];\n    let count: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count++;\n        } else {\n            count--;\n        }\n        arr.push(count);\n    }\n    let max_diff: number = 0;\n    let min_value: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > max_diff) {\n            max_diff = arr[i];\n        }\n        if (arr[i] < min_value) {\n            min_value = arr[i];\n        }\n    }\n    return max_diff - min_value;\n}\n\nconsole.log(find_length('1000101'));\nconsole.log(find_length('11000101'));\nconsole.log(find_length('1100010111'));\nconsole.log(find_length('110001011100010111'));\nconsole.log(find_length('11000101110001011100010111'));\nconsole.log(find_length('1100010111000101110001011100010111'));\nconsole.log(find_length('110001011100010111000101110001011100010111'));\nconsole.log(find_length('11000101110001011100010111000101110001011100010111'));\nconsole.log(find_length('1100010111000101110001011100010111000101110001011100010111'));\nconsole.log(find_length('110001011100010111000101110001011100010111000101110001011100010111'));\nconsole.log(find_length('11000101110001011100010111000101110001011100010111000101110001011100010111'));\nconsole.log(find_length('1100010111000101110001011100010111000101110001011100010111000101110001011100010111'));\nconsole.log(find_length('110001\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123049,
      "stdout": "../../../../tmp/tmpt7hpchyc.ts(38,32): error TS1002: Unterminated string literal.\n../../../../tmp/tmpt7hpchyc.ts(39,1): error TS1005: ',' expected.\n../../../../tmp/tmpt7hpchyc.ts(39,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    let n = string.length;\n    for (let i = 0; i < n; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = n - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('1001101'));\nconsole.log(find_length('1111'));\nconsole.log(find_length('010101010101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123049,
      "stdout": "6\n0\n12\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpkonam7dj.js:39:12)\n    at Object.<anonymous> (/tmp/tmpkonam7dj.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length(\"10011110000011\"));\nconsole.log(find_length(\"01100\"));\nconsole.log(find_length(\"010001\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123049,
      "stdout": "14\n4\n2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmphbnxlsyj.js:26:12)\n    at Object.<anonymous> (/tmp/tmphbnxlsyj.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count = 0;\n    let one_count = 0;\n    let max_diff = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(zero_count - one_count));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('10010101'));\nconsole.log(find_length('1111'));\nconsole.log(find_length('0000'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123049,
      "stdout": "1\n4\n4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp4yab6juz.js:23:12)\n    at Object.<anonymous> (/tmp/tmp4yab6juz.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, count_zero - count_one);\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"1000101\"));\nconsole.log(find_length(\"10111\"));\nconsole.log(find_length(\"1111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123049,
      "stdout": "2\n0\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpbwmg4417.js:23:12)\n    at Object.<anonymous> (/tmp/tmpbwmg4417.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count: number = 0;\n    let one_count: number = 0;\n    let max_diff: number = 0;\n    for (let i: number = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count + one_count);\n        }\n    }\n    zero_count = 0;\n    one_count = 0;\n    for (let i: number = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count + one_count);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('10011'));\nconsole.log(find_length('0111000100010'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123049,
      "stdout": "4\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp7x8iarqc.js:37:12)\n    at Object.<anonymous> (/tmp/tmp7x8iarqc.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    let i = 0;\n    while (i < string.length) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n        i++;\n    }\n    count_0 = 0;\n    count_1 = 0;\n    i = string.length - 1;\n    while (i >= 0) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n        i--;\n    }\n    return max_length;\n}\n\nconsole.log(find_length('11010101'));\nconsole.log(find_length('111101'));\nconsole.log(find_length('0110001'));\nconsole.log(find_length('010111'));\nconsole.log(find_length('01010101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123049,
      "stdout": "6\n2\n6\n4\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpx3p9cg4s.js:44:12)\n    at Object.<anonymous> (/tmp/tmpx3p9cg4s.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let count = 0;\n    let max_count = 0;\n    let zero_count = 0;\n    let one_count = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count += 1;\n        }\n        else {\n            one_count += 1;\n        }\n        count = zero_count - one_count;\n        if (count < 0) {\n            count = 0;\n        }\n        if (count > max_count) {\n            max_count = count;\n        }\n    }\n    return max_count;\n}\nconsole.log(find_length('1000101'));\nconsole.log(find_length('1011101'));\nconsole.log(find_length('1111'));\nconsole.log(find_length('0000111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123050,
      "stdout": "2\n0\n0\n4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmptotmcgj5.js:31:12)\n    at Object.<anonymous> (/tmp/tmptotmcgj5.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length('110101'));\nconsole.log(find_length('1111'));\nconsole.log(find_length('01100'));\nconsole.log(find_length('0110111'));\nconsole.log(find_length('01101101101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123051,
      "stdout": "4\n0\n4\n4\n4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpf3839fgp.js:40:12)\n    at Object.<anonymous> (/tmp/tmpf3839fgp.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length('110101010101'));\nconsole.log(find_length('111101010101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123051,
      "stdout": "10\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpiuihzkr7.js:37:12)\n    at Object.<anonymous> (/tmp/tmpiuihzkr7.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, count_zero - count_one);\n    }\n\n    count_zero = 0;\n    count_one = 0;\n\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, count_zero - count_one);\n    }\n\n    return max_diff;\n}\n\nconsole.log(find_length(\"10010101\"));\nconsole.log(find_length(\"1111\"));\nconsole.log(find_length(\"0111000100010\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123051,
      "stdout": "1\n0\n5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpzfgg5m3s.js:34:12)\n    at Object.<anonymous> (/tmp/tmpzfgg5m3s.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let count_0: number = 0;\n    let count_1: number = 0;\n    let max_diff: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"100010001\"));\nconsole.log(find_length(\"1001100\"));\nconsole.log(find_length(\"1111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123051,
      "stdout": "1\n3\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpu2nec1gh.js:25:12)\n    at Object.<anonymous> (/tmp/tmpu2nec1gh.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        }\n        else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        }\n        else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\nconsole.log(find_length('10010101'));\nconsole.log(find_length('1111'));\nconsole.log(find_length('0101010101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123051,
      "stdout": "8\n0\n10\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpwvj6cni6.js:38:12)\n    at Object.<anonymous> (/tmp/tmpwvj6cni6.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_0 - count_1));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('100101011111'));\nconsole.log(find_length('01010101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123051,
      "stdout": "4\n1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp6zc1j1ip.js:22:12)\n    at Object.<anonymous> (/tmp/tmp6zc1j1ip.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        if (count_zero === count_one) {\n            max_length = Math.max(max_length, count_zero + count_one);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length(\"10010101\"));\nconsole.log(find_length(\"11110001\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123051,
      "stdout": "8\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpj9304bls.js:24:12)\n    at Object.<anonymous> (/tmp/tmpj9304bls.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let count = 0;\n    let max_length = 0;\n    let zero_count = 0;\n    let one_count = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        count++;\n        if (zero_count === one_count) {\n            max_length = Math.max(max_length, count);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length(\"10010101\"));\nconsole.log(find_length(\"1111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123051,
      "stdout": "8\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpwb2fsr50.js:26:12)\n    at Object.<anonymous> (/tmp/tmpwb2fsr50.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_zero - count_one));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('10010101'));\nconsole.log(find_length('01010101010101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123051,
      "stdout": "1\n1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpsmuidjdl.js:22:12)\n    at Object.<anonymous> (/tmp/tmpsmuidjdl.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('100010101'));\nconsole.log(find_length('101010101'));\nconsole.log(find_length('0101010101'));\nconsole.log(find_length('010101010101'));\nconsole.log(find_length('0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123051,
      "stdout": "../../../../tmp/tmp5dg4f792.ts(35,426): error TS1002: Unterminated string literal.\n../../../../tmp/tmp5dg4f792.ts(36,1): error TS1005: ',' expected.\n../../../../tmp/tmp5dg4f792.ts(36,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_0 - count_1));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('1000101'));\nconsole.log(find_length('10111'));\nconsole.log(find_length('1111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123051,
      "stdout": "2\n3\n4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpbnft65h1.js:23:12)\n    at Object.<anonymous> (/tmp/tmpbnft65h1.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        }\n        else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        }\n        else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length(\"11011101\"));\nconsole.log(find_length(\"11110111\"));\nconsole.log(find_length(\"01110111\"));\nconsole.log(find_length(\"01010101\"));\nconsole.log(find_length(\"0101010101\"));\nconsole.log(find_length(\"010101010101\"));\nconsole.log(find_length(\"01010101010101\"));\nconsole.log(find_length(\"0101010101010101\"));\nconsole.log(find_length(\"010101010101010101\"));\nconsole.log(find_length(\"01010101010101010101\"));\nconsole.log(find_length(\"0101010101010101010101\"));\nconsole.log(find_length(\"010101010101010101010101\"));\nconsole.log(find_length(\"01010101010101010101010101\"));\nconsole.log(find_length(\"0101010101010101010101010101\"));\nconsole.log\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123051,
      "stdout": "2\n0\n2\n8\n10\n12\n14\n16\n18\n20\n22\n24\n26\n28\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpalh4195m.js:50:12)\n    at Object.<anonymous> (/tmp/tmpalh4195m.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n  let max_length = 0;\n  let count_0 = 0;\n  let count_1 = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] == \"0\") {\n      count_0++;\n    } else {\n      count_1++;\n    }\n    if (count_0 == count_1) {\n      max_length = Math.max(max_length, count_0 + count_1);\n    }\n  }\n  count_0 = 0;\n  count_1 = 0;\n  for (let i = string.length - 1; i >= 0; i--) {\n    if (string[i] == \"0\") {\n      count_0++;\n    } else {\n      count_1++;\n    }\n    if (count_0 == count_1) {\n      max_length = Math.max(max_length, count_0 + count_1);\n    }\n  }\n  return max_length;\n}\n\nconsole.log(find_length(\"10011010101\"));\nconsole.log(find_length(\"0111010101\"));\nconsole.log(find_length(\"1101010101\"));\nconsole.log(find_length(\"0101010101\"));\nconsole.log(find_length(\"01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123051,
      "stdout": "../../../../tmp/tmp_7j3w453.ts(35,424): error TS1002: Unterminated string literal.\n../../../../tmp/tmp_7j3w453.ts(36,1): error TS1005: ',' expected.\n../../../../tmp/tmp_7j3w453.ts(36,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_0 - count_1));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"10010001\"));\nconsole.log(find_length(\"0110000\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123034,
      "stdout": "3\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpap7h1a8z.js:22:12)\n    at Object.<anonymous> (/tmp/tmpap7h1a8z.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_0 - count_1));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('10010001'));\nconsole.log(find_length('0110000'));\nconsole.log(find_length('100101'));\nconsole.log(find_length('0001'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123051,
      "stdout": "3\n3\n1\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpo_wp48_t.js:24:12)\n    at Object.<anonymous> (/tmp/tmpo_wp48_t.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_zero - count_one));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"10010101\"));\nconsole.log(find_length(\"1111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123051,
      "stdout": "1\n4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp6b3dqjxs.js:22:12)\n    at Object.<anonymous> (/tmp/tmp6b3dqjxs.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length('10011'));\nconsole.log(find_length('0111000100010'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123052,
      "stdout": "4\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpb_0r2w4j.js:37:12)\n    at Object.<anonymous> (/tmp/tmpb_0r2w4j.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    }
  ]
}
{
  "name": "mbpp_479_first_Digit",
  "language": "ts",
  "prompt": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_479_first_Digit.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    n = n + \"\";\n    return +n[0];\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-3572));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510640,
      "stdout": "../../../../tmp/tmpie7crn_d.ts(3,5): error TS2322: Type 'string' is not assignable to type 'number'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    return parseInt(num.charAt(0));\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-3572));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510641,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    return parseInt(num.charAt(0));\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-35));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510640,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num: number = n;\n    while (num >= 10) {\n        num = num / 10;\n    }\n    return Math.floor(num);\n}\nconsole.log(first_Digit(1234));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510640,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let str = n.toString();\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] != \"0\") {\n            return parseInt(str[i]);\n        }\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510641,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let str = n.toString();\n    return parseInt(str[0]);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510641,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let str = n.toString();\n    let firstDigit = str.charAt(0);\n    return parseInt(firstDigit);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510641,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let first = num.charAt(0);\n    return parseInt(first);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510641,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let first = num.charAt(0);\n    return parseInt(first);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510641,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let firstDigit = num.charAt(0);\n    return parseInt(firstDigit);\n}\nconsole.log(first_Digit(1234));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510641,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let first_digit = num.charAt(0);\n    return parseInt(first_digit);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let firstDigit = num.charAt(0);\n    return parseInt(firstDigit);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-3572));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510641,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num: string = n.toString();\n    let firstDigit: number = parseInt(num[0]);\n    return firstDigit;\n}\n\nconsole.log(first_Digit(12345));\nconsole.log(first_Digit(6543));\nconsole.log(first_Digit(333));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510641,
      "stdout": "1\n6\n3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n  let num = n.toString();\n  let firstDigit = num.charAt(0);\n  return parseInt(firstDigit);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-3572));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510640,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let str = n.toString();\n    for (let i = 0; i < str.length; i++) {\n        if (!isNaN(Number(str[i]))) {\n            return Number(str[i]);\n        }\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510641,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let first = num.charAt(0);\n    return parseInt(first);\n}\n\nconsole.log(first_Digit(1234));\nconsole.log(first_Digit(1234.567));\nconsole.log(first_Digit(1234.56789));\nconsole.log(first_Digit(1234.567890123));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510640,
      "stdout": "1\n1\n1\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    return parseInt(num[0]);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-3572));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510640,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let firstDigit = num.charAt(0);\n    return parseInt(firstDigit);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510641,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let str = n.toString();\n    let firstDigit = str.charAt(0);\n    return parseInt(firstDigit);\n}\n\nconsole.log(first_Digit(1234));\nconsole.log(first_Digit(65.43));\nconsole.log(first_Digit(-1234));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510641,
      "stdout": "1\n6\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let first = num.charAt(0);\n    return parseInt(first);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510641,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n  let num = n.toString();\n  return Number(num[0]);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-35));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124215,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let firstDigit: number = 0;\n    let num: number = n;\n    while (num > 0) {\n        firstDigit = num % 10;\n        num = Math.floor(num / 10);\n    }\n    return firstDigit;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124214,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let digit: number = 0;\n    while (n > 0) {\n        digit = n % 10;\n        n = Math.floor(n / 10);\n    }\n    return digit;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124215,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let first = num.charAt(0);\n    return parseInt(first);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(65));\nconsole.log(first_Digit(35));\nconsole.log(first_Digit(123456));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124214,
      "stdout": "3\n9\n1\n6\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    return parseInt(num[0]);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-55));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124215,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let firstDigit = num.charAt(0);\n    return parseInt(firstDigit);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124215,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    while (n >= 10) {\n        n = n / 10;\n    }\n    return Math.floor(n);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(189));\nconsole.log(first_Digit(80));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124215,
      "stdout": "3\n9\n1\n1\n8\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let firstDigit = num.charAt(0);\n    return parseInt(firstDigit);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124215,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let str = n.toString();\n    let first = str.charAt(0);\n    return parseInt(first);\n}\nconsole.log(first_Digit(1234));\nconsole.log(first_Digit(65.43));\nconsole.log(first_Digit(-1234));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124214,
      "stdout": "1\n6\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let str = n.toString();\n    let firstDigit = str.charAt(0);\n    return parseInt(firstDigit);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510641,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    while (n >= 10) {\n        n = n / 10;\n    }\n    return Math.floor(n);\n}\n\nconsole.log(first_Digit(1234));\nconsole.log(first_Digit(6547));\nconsole.log(first_Digit(8));\nconsole.log(first_Digit(24));\nconsole.log(first_Digit(64532));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124215,
      "stdout": "1\n6\n8\n2\n6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let first = num.charAt(0);\n    return parseInt(first);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-3572));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124215,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num: number = n;\n    while (num >= 10) {\n        num = num / 10;\n    }\n    return Math.floor(num);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124214,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    return parseInt(num.charAt(0));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124215,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num: string = n.toString();\n    let firstDigit: number = parseInt(num.charAt(0));\n    return firstDigit;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124215,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let firstDigit = num[0];\n    return parseInt(firstDigit);\n}\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124214,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let firstDigit = num.charAt(0);\n    return parseInt(firstDigit);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(65));\nconsole.log(first_Digit(35));\nconsole.log(first_Digit(12345));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124215,
      "stdout": "3\n9\n1\n6\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    while (n >= 10) {\n        n = n / 10;\n    }\n    return Math.floor(n);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124214,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    while (n >= 10) {\n        n = n / 10;\n    }\n    return Math.floor(n);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(189));\nconsole.log(first_Digit(8));\nconsole.log(first_Digit(120));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124214,
      "stdout": "3\n9\n1\n1\n8\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let firstDigit = num.charAt(0);\n    return parseInt(firstDigit);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-3572));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124214,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    return parseInt(num[0]);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-3572));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510640,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let firstDigit = num.charAt(0);\n    return parseInt(firstDigit);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-3572));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124214,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    var str = n.toString();\n    var res = parseInt(str.charAt(0));\n    return res;\n}\nconsole.log(first_Digit(3572));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124215,
      "stdout": "3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let firstDigit = num[0];\n    return parseInt(firstDigit);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124214,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    for (let i = 0; i < num.length; i++) {\n        if (num[i] != '0' && num[i] != '-') {\n            return Number(num[i]);\n        }\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124215,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let str = n.toString();\n    return parseInt(str[0]);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-35));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124214,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    while (n >= 10) {\n        n = n / 10;\n    }\n    return Math.floor(n);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124214,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num: number = n;\n    while (num >= 10) {\n        num = num / 10;\n    }\n    return Math.floor(num);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(189));\nconsole.log(first_Digit(80));\nconsole.log(first_Digit(100));\nconsole.log(first_Digit(1));\nconsole.log(first_Digit(0));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124214,
      "stdout": "3\n9\n1\n1\n8\n1\n1\n0\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let str = n.toString();\n    return parseInt(str[0]);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-3572));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124220,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let first = num.charAt(0);\n    return parseInt(first);\n}\n\nconsole.log(first_Digit(1234));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124220,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let str = n.toString();\n    let first = str.charAt(0);\n    return parseInt(first);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-3572));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124220,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    while (n >= 10) {\n        n = n / 10;\n    }\n    return Math.floor(n);\n}\nconsole.log(first_Digit(1234));\nconsole.log(first_Digit(65789));\nconsole.log(first_Digit(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124220,
      "stdout": "1\n6\n3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let firstDigit = num.charAt(0);\n    return parseInt(firstDigit);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-3572));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510641,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let s = n.toString();\n    return parseInt(s[0]);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(189));\nconsole.log(first_Digit(100));\nconsole.log(first_Digit(0));\nconsole.log(first_Digit(1));\nconsole.log(first_Digit(123456789));\nconsole.log(first_Digit(123456789));\nconsole.log(first_Digit(123456789));\nconsole.log(first_Digit(123456789));\nconsole.log(first_Digit(123456789));\nconsole.log(first_Digit(123456789));\nconsole.log(first_Digit(123456789));\nconsole.log(first_Digit(123456789));\nconsole.log(first_Digit(123456789));\nconsole.log(first_Digit(123456789));\nconsole.log(first_Digit(123456789));\nconsole.log(first_Digit(123456789));\nconsole.log(first_Digit(123456789));\nconsole.log(first_Digit(123456789));\nconsole.log(first_Digit(123456789));\nconsole.log(first_Digit(123456789));\nconsole.log(first_Digit(123456789));\nconsole.log(first_Digit(123456789));\nconsole.log(first_Digit(123456789));\nconsole.log(first_Digit(123456789));\nconsole.log(first_Digit(123456789));\nconsole.log(first_Digit(123456789));\nconsole.log(first_Digit(123456789));\nconsole.log(first_Digit(123456789));\nconsole.log(first_Digit(123456789));\nconsole.log(first_Digit(123456789));\nconsole.log(first_Digit(123456789\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124220,
      "stdout": "../../../../tmp/tmp4u8tepfa.ts(41,1): error TS1005: ',' expected.\n../../../../tmp/tmp4u8tepfa.ts(41,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n  let num = n.toString();\n  let firstDigit = num.charAt(0);\n  return parseInt(firstDigit);\n}\n\nconsole.log(first_Digit(1234));\nconsole.log(first_Digit(65.789));\nconsole.log(first_Digit(-5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124220,
      "stdout": "1\n6\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let str = n.toString();\n    let firstDigit = str.charAt(0);\n    return parseInt(firstDigit);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124220,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    for (let i = 0; i < num.length; i++) {\n        if (num[i] != 0) {\n            return parseInt(num[i]);\n        }\n    }\n}\nconsole.log(first_Digit(5));\nconsole.log(first_Digit(7));\nconsole.log(first_Digit(35));\nconsole.log(first_Digit(105));\nconsole.log(first_Digit(0));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124220,
      "stdout": "../../../../tmp/tmp5uicjuny.ts(5,13): error TS2367: This condition will always return 'true' since the types 'string' and '0' have no overlap.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n  let num = n.toString();\n  return parseInt(num.charAt(0));\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-35));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124220,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    return parseInt(num.charAt(0));\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(189));\nconsole.log(first_Digit(100));\nconsole.log(first_Digit(1234));\nconsole.log(first_Digit(14567));\nconsole.log(first_Digit(24));\nconsole.log(first_Digit(7654));\nconsole.log(first_Digit(67543));\nconsole.log(first_Digit(90));\nconsole.log(first_Digit(5));\nconsole.log(first_Digit(9876543210));\nconsole.log(first_Digit(67890));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124220,
      "stdout": "3\n9\n1\n1\n1\n1\n1\n2\n7\n6\n9\n5\n9\n6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let str = n.toString();\n    let first = str.charAt(0);\n    return parseInt(first);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let firstDigit = num.charAt(0);\n    return parseInt(firstDigit);\n}\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124220,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let str = n.toString();\n    return parseInt(str[0]);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(65));\nconsole.log(first_Digit(35));\nconsole.log(first_Digit(12345));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124220,
      "stdout": "3\n9\n1\n6\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    while (n >= 10) {\n        n = n / 10;\n    }\n    return Math.floor(n);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(189));\nconsole.log(first_Digit(80));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124215,
      "stdout": "3\n9\n1\n1\n8\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let first = num.charAt(0);\n    return parseInt(first);\n}\nconsole.log(first_Digit(1234));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124220,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n  let num = n.toString();\n  for (let i = 0; i < num.length; i++) {\n    if (num[i] != \"0\") {\n      return parseInt(num[i]);\n    }\n  }\n}\nconsole.log(first_Digit(5));\nconsole.log(first_Digit(102));\nconsole.log(first_Digit(2207));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124220,
      "stdout": "5\n1\n2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n  let num = n.toString();\n  return parseInt(num.charAt(0));\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-3572));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124220,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n  let num = n.toString();\n  return parseInt(num[0]);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-3572));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124220,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    return parseInt(num[0]);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-55));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124215,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let s = n.toString();\n    let i = 0;\n    while (i < s.length) {\n        if (s[i] != '0') {\n            return parseInt(s[i]);\n        }\n        i++;\n    }\n    return 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let firstDigit = num.charAt(0);\n    return parseInt(firstDigit);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(12345));\nconsole.log(first_Digit(67.89));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124220,
      "stdout": "3\n9\n1\n6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    while (n >= 10) {\n        n = n / 10;\n    }\n    return Math.floor(n);\n}\nconsole.log(first_Digit(1234));\nconsole.log(first_Digit(65.78));\nconsole.log(first_Digit(-7));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124220,
      "stdout": "1\n6\n-7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let str = n.toString();\n    let first = str.charAt(0);\n    return parseInt(first);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-3572));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124220,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let firstDigit: number = 0;\n    let num: number = n;\n    while (num > 0) {\n        firstDigit = num % 10;\n        num = Math.floor(num / 10);\n    }\n    return firstDigit;\n}\nconsole.log(first_Digit(12345));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124220,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let first = n.toString().split(\"\");\n    return parseInt(first[0]);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-3572));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124220,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let first = num.charAt(0);\n    return parseInt(first);\n}\nconsole.log(first_Digit(1234));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124220,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let s = n.toString();\n    return parseInt(s[0]);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    return parseInt(num[0]);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(189));\nconsole.log(first_Digit(100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124225,
      "stdout": "3\n9\n1\n1\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num: string = n.toString();\n    let firstDigit: number = Number(num[0]);\n    return firstDigit;\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-3572));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124225,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let firstDigit = n.toString().split(\"\")[0];\n    return parseInt(firstDigit);\n}\n\nconsole.log(first_Digit(123));\nconsole.log(first_Digit(67.89));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124225,
      "stdout": "1\n6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let s = n.toString();\n    return parseInt(s[0]);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n  let num = n.toString();\n  let firstDigit = num.charAt(0);\n  return parseInt(firstDigit);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-3572));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510640,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    return parseInt(num.charAt(0));\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(189));\nconsole.log(first_Digit(100));\nconsole.log(first_Digit(0));\nconsole.log(first_Digit(1234));\nconsole.log(first_Digit(7));\nconsole.log(first_Digit(35));\nconsole.log(first_Digit(123456));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124225,
      "stdout": "3\n9\n1\n1\n1\n0\n1\n7\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let str = n.toString();\n    let firstDigit = str[0];\n    return parseInt(firstDigit);\n}\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124225,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    return parseInt(num.charAt(0));\n}\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-55));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124225,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n  let str = n.toString();\n  let firstDigit = str.charAt(0);\n  return parseInt(firstDigit);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124225,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let firstDigit = num.charAt(0);\n    return parseInt(firstDigit);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124215,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    while (n >= 10) {\n        n = n / 10;\n    }\n    return Math.floor(n);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(189));\nconsole.log(first_Digit(1890));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124225,
      "stdout": "3\n9\n1\n1\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n  let str = n.toString();\n  let firstDigit = str.charAt(0);\n  return parseInt(firstDigit);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-3572));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124225,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num: string = n.toString();\n    return parseInt(num.charAt(0));\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-3572));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124225,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let first = num.charAt(0);\n    return parseInt(first);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-3572));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124215,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let str = n.toString();\n    let firstDigit = str.charAt(0);\n    return parseInt(firstDigit);\n}\nconsole.log(first_Digit(1234));\nconsole.log(first_Digit(0));\nconsole.log(first_Digit(1));\nconsole.log(first_Digit(12345));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124225,
      "stdout": "1\n0\n1\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let first = num.charAt(0);\n    return parseInt(first);\n}\nconsole.log(first_Digit(1234));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124220,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    n = n + \"\";\n    return +n[0];\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(7));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-55));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124225,
      "stdout": "../../../../tmp/tmpqdt62rdu.ts(3,5): error TS2322: Type 'string' is not assignable to type 'number'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let str = n.toString();\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] != \"0\") {\n            return parseInt(str[i]);\n        }\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510641,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    while (n >= 10) {\n        n = n / 10;\n    }\n    return Math.floor(n);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(12345));\nconsole.log(first_Digit(6789));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124225,
      "stdout": "3\n9\n1\n6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n  let str = n.toString();\n  let first = str.charAt(0);\n  return parseInt(first);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-3572));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124225,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let firstDigit: number = 0;\n    while (n > 0) {\n        firstDigit = n % 10;\n        n = Math.floor(n / 10);\n    }\n    return firstDigit;\n}\n\nconsole.log(first_Digit(5));\nconsole.log(first_Digit(7));\nconsole.log(first_Digit(3572));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124225,
      "stdout": "5\n7\n3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let str = n.toString();\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] != \"0\") {\n            return parseInt(str[i]);\n        }\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510641,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    return parseInt(num.charAt(0));\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(189));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124225,
      "stdout": "3\n9\n1\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let firstDigit = num[0];\n    return parseInt(firstDigit);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124225,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    while (n >= 10) {\n        n = n / 10;\n    }\n    return Math.floor(n);\n}\n\nconsole.log(first_Digit(1234));\nconsole.log(first_Digit(6547));\nconsole.log(first_Digit(7908));\nconsole.log(first_Digit(987654));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124225,
      "stdout": "1\n6\n7\n9\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num: number = n;\n    while (num >= 10) {\n        num = num / 10;\n    }\n    return Math.floor(num);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124214,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    return parseInt(num[0]);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(189));\nconsole.log(first_Digit(0));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "3\n9\n1\n1\n0\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let firstDigit = num.charAt(0);\n    return parseInt(firstDigit);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-3572));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510641,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num: number = n;\n    while (num >= 10) {\n        num = num / 10;\n    }\n    return Math.floor(num);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124214,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n  let num = n.toString();\n  let first = num.charAt(0);\n  return parseInt(first);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-3572));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let first = num.charAt(0);\n    return parseInt(first);\n}\nconsole.log(first_Digit(1234));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124220,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let str = n.toString();\n    let firstDigit = str.charAt(0);\n    return parseInt(firstDigit);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510641,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let firstDigit = num.charAt(0);\n    return parseInt(firstDigit);\n}\nconsole.log(first_Digit(12345));\nconsole.log(first_Digit(6543));\nconsole.log(first_Digit(333));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124225,
      "stdout": "1\n6\n3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let str = n.toString();\n    let first = str.charAt(0);\n    return parseInt(first);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-3572));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124220,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    while (n >= 10) {\n        n = n / 10;\n    }\n    return Math.floor(n);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(189));\nconsole.log(first_Digit(80));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124215,
      "stdout": "3\n9\n1\n1\n8\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let firstDigit = num.charAt(0);\n    return parseInt(firstDigit);\n}\nconsole.log(first_Digit(56789));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "5\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let str = n.toString();\n    return parseInt(str[0]);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-3572));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let s = n.toString();\n    let first = s.charAt(0);\n    return parseInt(first);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124230,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let firstDigit: number = 0;\n    while (n > 0) {\n        firstDigit = n % 10;\n        n = Math.floor(n / 10);\n    }\n    return firstDigit;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124230,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let firstDigit = num.charAt(0);\n    return parseInt(firstDigit);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124215,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let firstDigit = num.charAt(0);\n    return parseInt(firstDigit);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124215,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    return parseInt(num.charAt(0));\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(189));\nconsole.log(first_Digit(100));\nconsole.log(first_Digit(1));\nconsole.log(first_Digit(0));\nconsole.log(first_Digit(123456789));\nconsole.log(first_Digit(123456789));\nconsole.log(first_Digit(123456789));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124230,
      "stdout": "3\n9\n1\n1\n1\n1\n0\n1\n1\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let firstDigit = num.charAt(0);\n    return parseInt(firstDigit);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(12345));\nconsole.log(first_Digit(67.89));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124220,
      "stdout": "3\n9\n1\n6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let first = num.charAt(0);\n    return parseInt(first);\n}\n\nconsole.log(first_Digit(1234));\nconsole.log(first_Digit(65.43));\nconsole.log(first_Digit(-3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124231,
      "stdout": "1\n6\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    for (let i = 0; i < num.length; i++) {\n        if (num[i] != \"0\") {\n            return Number(num[i]);\n        }\n    }\n}\n\nconsole.log(first_Digit(5));\nconsole.log(first_Digit(9876543210));\nconsole.log(first_Digit(0));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124231,
      "stdout": "5\n9\nundefined\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let firstDigit = n.toString().split(\"\");\n    return parseInt(firstDigit[0]);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124230,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let first = num[0];\n    return parseInt(first);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124230,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let str = n.toString();\n    return parseInt(str[0]);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510641,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let firstDigit: number = 0;\n    let num: number = n;\n    while (num > 0) {\n        firstDigit = num % 10;\n        num = Math.floor(num / 10);\n    }\n    return firstDigit;\n}\n\nconsole.log(first_Digit(12345));\nconsole.log(first_Digit(6543));\nconsole.log(first_Digit(333));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124230,
      "stdout": "1\n6\n3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let firstDigit = num.charAt(0);\n    return parseInt(firstDigit);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124215,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let firstDigit = num[0];\n    return parseInt(firstDigit);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-55));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124231,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    while (n >= 10) {\n        n = n / 10;\n    }\n    return Math.floor(n);\n}\n\nconsole.log(first_Digit(1234));\nconsole.log(first_Digit(65));\nconsole.log(first_Digit(8));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(11));\nconsole.log(first_Digit(12));\nconsole.log(first_Digit(13));\nconsole.log(first_Digit(14));\nconsole.log(first_Digit(15));\nconsole.log(first_Digit(16));\nconsole.log(first_Digit(17));\nconsole.log(first_Digit(18));\nconsole.log(first_Digit(19));\nconsole.log(first_Digit(20));\nconsole.log(first_Digit(21));\nconsole.log(first_Digit(22));\nconsole.log(first_Digit(23));\nconsole.log(first_Digit(24));\nconsole.log(first_Digit(25));\nconsole.log(first_Digit(26));\nconsole.log(first_Digit(27));\nconsole.log(first_Digit(28));\nconsole.log(first_Digit(29));\nconsole.log(first_Digit(30));\nconsole.log(first_Digit(31));\nconsole.log(first_Digit(32));\nconsole.log(first_Digit(33));\nconsole.log(first_Digit(34));\nconsole.log(first_Digit(35));\nconsole.log(first_Digit(36));\nconsole.log(first_Digit(37));\nconsole.log(first_Digit(38));\nconsole.log(first_Digit(39));\nconsole.log(first_Digit(40));\nconsole.log(first_Digit(41));\nconsole.log(first_Digit(42));\nconsole.log(first_Digit(43));\nconsole.log(first_Digit(44));\nconsole.log(first_Digit(45\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124230,
      "stdout": "../../../../tmp/tmp4_m5vh0u.ts(49,1): error TS1005: ',' expected.\n../../../../tmp/tmp4_m5vh0u.ts(49,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    while (n >= 10) {\n        n = n / 10;\n    }\n    return Math.floor(n);\n}\n\nconsole.log(first_Digit(123));\nconsole.log(first_Digit(67.89));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124231,
      "stdout": "1\n6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let str = n.toString();\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] !== \"0\") {\n            return Number(str[i]);\n        }\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124231,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let firstDigit = num[0];\n    return parseInt(firstDigit);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124225,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let firstDigit = num.charAt(0);\n    return parseInt(firstDigit);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510641,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    n = n + \"\";\n    return +n[0];\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(45));\nconsole.log(first_Digit(123));\nconsole.log(first_Digit(12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124231,
      "stdout": "../../../../tmp/tmpgo51wf7u.ts(3,5): error TS2322: Type 'string' is not assignable to type 'number'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    while (n >= 10) {\n        n = n / 10;\n    }\n    return Math.floor(n);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(189));\nconsole.log(first_Digit(100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124231,
      "stdout": "3\n9\n1\n1\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    return parseInt(num[0]);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124231,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let firstDigit = num[0];\n    return parseInt(firstDigit);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124214,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let str = n.toString();\n    let firstDigit = str.charAt(0);\n    return parseInt(firstDigit);\n}\nconsole.log(first_Digit(1234));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124231,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let firstDigit = n.toString().split('')[0];\n    return parseInt(firstDigit);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(189));\nconsole.log(first_Digit(100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124231,
      "stdout": "3\n9\n1\n1\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let firstDigit = num.charAt(0);\n    return parseInt(firstDigit);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-3572));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510641,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let first = num.charAt(0);\n    return parseInt(first);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-3572));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124215,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let str = n.toString();\n    let first = str.charAt(0);\n    return parseInt(first);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-35));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124231,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let firstDigit: number = 0;\n    let str: string = n.toString();\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            firstDigit = parseInt(str[i]);\n            break;\n        }\n    }\n    return firstDigit;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124231,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let firstDigit = num[0];\n    return parseInt(firstDigit);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-3572));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124231,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n  let num = n.toString();\n  for (let i = 0; i < num.length; i++) {\n    if (num[i] != \"0\") {\n      return parseInt(num[i]);\n    }\n  }\n}\n\nconsole.log(first_Digit(5));\nconsole.log(first_Digit(102));\nconsole.log(first_Digit(9876543210));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124231,
      "stdout": "5\n1\n9\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let firstDigit = num.charAt(0);\n    return parseInt(firstDigit);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124215,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let str = n.toString();\n    let firstDigit = str.charAt(0);\n    return parseInt(firstDigit);\n}\nconsole.log(first_Digit(12345));\nconsole.log(first_Digit(6543));\nconsole.log(first_Digit(333));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124231,
      "stdout": "1\n6\n3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    n = n + \"\";\n    return +n[0];\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(45));\nconsole.log(first_Digit(123));\nconsole.log(first_Digit(1234));\nconsole.log(first_Digit(1234));\nconsole.log(first_Digit(1234));\nconsole.log(first_Digit(1234));\nconsole.log(first_Digit(1234));\nconsole.log(first_Digit(1234));\nconsole.log(first_Digit(1234));\nconsole.log(first_Digit(1234));\nconsole.log(first_Digit(1234));\nconsole.log(first_Digit(1234));\nconsole.log(first_Digit(1234));\nconsole.log(first_Digit(1234));\nconsole.log(first_Digit(1234));\nconsole.log(first_Digit(1234));\nconsole.log(first_Digit(1234));\nconsole.log(first_Digit(1234));\nconsole.log(first_Digit(1234));\nconsole.log(first_Digit(1234));\nconsole.log(first_Digit(1234));\nconsole.log(first_Digit(1234));\nconsole.log(first_Digit(1234));\nconsole.log(first_Digit(1234));\nconsole.log(first_Digit(1234));\nconsole.log(first_Digit(1234));\nconsole.log(first_Digit(1234));\nconsole.log(first_Digit(1234));\nconsole.log(first_Digit(1234));\nconsole.log(first_Digit(1234));\nconsole.log(first_Digit(1234));\nconsole.log(first_Digit(1234));\nconsole.log(first_Digit(1234));\nconsole.log(first_Digit(1234));\nconsole.log(first_Digit(1234));\nconsole.log(first_Digit(1234));\nconsole.log(first_Digit(1234));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124231,
      "stdout": "../../../../tmp/tmpsq7349ak.ts(3,5): error TS2322: Type 'string' is not assignable to type 'number'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num: number = n;\n    while (num >= 10) {\n        num = num / 10;\n    }\n    return Math.floor(num);\n}\nconsole.log(first_Digit(12345));\nconsole.log(first_Digit(6543));\nconsole.log(first_Digit(333));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124235,
      "stdout": "1\n6\n3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let firstDigit = num.charAt(0);\n    return parseInt(firstDigit);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(65));\nconsole.log(first_Digit(35));\nconsole.log(first_Digit(123456));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124236,
      "stdout": "3\n9\n1\n6\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let str = n.toString();\n    return parseInt(str[0]);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510641,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let firstDigit = num.charAt(0);\n    return parseInt(firstDigit);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124215,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let firstDigit: number = 0;\n    while (n > 0) {\n        firstDigit = n % 10;\n        n = Math.floor(n / 10);\n    }\n    return firstDigit;\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(189));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124236,
      "stdout": "3\n9\n1\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let firstDigit = num.charAt(0);\n    return parseInt(firstDigit);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-3572));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124214,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let firstDigit = num.charAt(0);\n    return parseInt(firstDigit);\n}\nconsole.log(first_Digit(1234));\nconsole.log(first_Digit(1234.567));\nconsole.log(first_Digit(123456789));\nconsole.log(first_Digit(123456789.123456789));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124236,
      "stdout": "1\n1\n1\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    while (n >= 10) {\n        n = n / 10;\n    }\n    return Math.floor(n);\n}\n\nconsole.log(first_Digit(1234));\nconsole.log(first_Digit(65.4321));\nconsole.log(first_Digit(1));\nconsole.log(first_Digit(0.1234));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124236,
      "stdout": "1\n6\n1\n0\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    n = n + \"\";\n    return +n[0];\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(45));\nconsole.log(first_Digit(123));\nconsole.log(first_Digit(1234));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124236,
      "stdout": "../../../../tmp/tmp_ipg2mfg.ts(3,5): error TS2322: Type 'string' is not assignable to type 'number'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let firstDigit: number = 0;\n    while (n > 0) {\n        firstDigit = n % 10;\n        n = Math.floor(n / 10);\n    }\n    return firstDigit;\n}\n\nconsole.log(first_Digit(12345));\nconsole.log(first_Digit(65498));\nconsole.log(first_Digit(1234987));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124236,
      "stdout": "1\n6\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let str = n.toString();\n    let first = str.charAt(0);\n    return parseInt(first);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-3572));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124236,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let first_Digit = num.charAt(0);\n    return parseInt(first_Digit);\n}\nconsole.log(first_Digit(1234));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124236,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let s = n.toString();\n    let firstDigit = s.charAt(0);\n    return parseInt(firstDigit);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124236,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let firstDigit = num[0];\n    return parseInt(firstDigit);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124214,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let firstDigit = num.charAt(0);\n    return parseInt(firstDigit);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-3572));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124214,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let firstDigit = num.charAt(0);\n    return parseInt(firstDigit);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124215,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let first = num.charAt(0);\n    return parseInt(first);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510641,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    return Number(num[0]);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-55));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124236,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let firstDigit: number;\n    while (n > 10) {\n        n = n / 10;\n    }\n    return n;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124236,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.23\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp5rbjdcpi.js:12:12)\n    at Object.<anonymous> (/tmp/tmp5rbjdcpi.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.23,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    n = n + \"\";\n    return +n[0];\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(45));\nconsole.log(first_Digit(123));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124236,
      "stdout": "../../../../tmp/tmp9qogtswv.ts(3,5): error TS2322: Type 'string' is not assignable to type 'number'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    return parseInt(num.charAt(0));\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-3572));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510641,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    while (n >= 10) {\n        n = n / 10;\n    }\n    return Math.floor(n);\n}\nconsole.log(first_Digit(123));\nconsole.log(first_Digit(67.89));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124236,
      "stdout": "1\n6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let a = n.toString();\n    let b = a.split(\"\");\n    let c = parseInt(b[0]);\n    return c;\n}\nconsole.log(first_Digit(1234));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124236,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num: number = n;\n    while (num >= 10) {\n        num = num / 10;\n    }\n    return Math.floor(num);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124214,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let a = n.toString();\n    let b = a.split(\"\");\n    let c = parseInt(b[0]);\n    return c;\n}\nconsole.log(first_Digit(1234));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124236,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    return parseInt(num[0]);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124231,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let first = num.charAt(0);\n    return parseInt(first);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-3572));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124215,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    return parseInt(num.charAt(0));\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-35));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510640,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let firstDigit = num.charAt(0);\n    return parseInt(firstDigit);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124215,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    while (n >= 10) {\n        n = n / 10;\n    }\n    return Math.floor(n);\n}\n\nconsole.log(first_Digit(12345));\nconsole.log(first_Digit(654321));\nconsole.log(first_Digit(3333));\nconsole.log(first_Digit(99999));\nconsole.log(first_Digit(987654321));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124236,
      "stdout": "1\n6\n3\n9\n9\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    return parseInt(num[0]);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-35));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124236,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let str = n.toString();\n    let firstDigit = str.charAt(0);\n    return parseInt(firstDigit);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124220,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n  let num = n.toString();\n  return parseInt(num.charAt(0));\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(189));\nconsole.log(first_Digit(100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124236,
      "stdout": "3\n9\n1\n1\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n;\n    while (num >= 10) {\n        num = num / 10;\n    }\n    return Math.floor(num);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124236,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let firstDigit: number = 0;\n    while (n > 0) {\n        firstDigit = n % 10;\n        n = Math.floor(n / 10);\n    }\n    return firstDigit;\n}\n\nconsole.log(first_Digit(12345));\nconsole.log(first_Digit(65498));\nconsole.log(first_Digit(298));\nconsole.log(first_Digit(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124236,
      "stdout": "1\n6\n2\n3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num: string = n.toString();\n    let firstDigit: number = parseInt(num.charAt(0));\n    return firstDigit;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124215,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n  let str = n.toString();\n  let firstDigit = str.charAt(0);\n  return parseInt(firstDigit);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-3572));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124225,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let first = num.charAt(0);\n    return parseInt(first);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(7));\nconsole.log(first_Digit(70));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124236,
      "stdout": "3\n7\n7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let str = n.toString();\n    let firstDigit = str.charAt(0);\n    return parseInt(firstDigit);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-10));\n\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124236,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    return parseInt(num[0]);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-55));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124215,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let str = n.toString();\n    return parseInt(str[0]);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510641,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let firstDigit: number = 0;\n    let num: number = n;\n    while (num > 0) {\n        firstDigit = num % 10;\n        num = Math.floor(num / 10);\n    }\n    return firstDigit;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124214,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num: number = n;\n    while (num >= 10) {\n        num = num / 10;\n    }\n    return Math.floor(num);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124214,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num: number = n;\n    while (num >= 10) {\n        num = num / 10;\n    }\n    return Math.floor(num);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124214,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let firstDigit = num.charAt(0);\n    return parseInt(firstDigit);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-55));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124236,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let firstDigit = num.charAt(0);\n    return parseInt(firstDigit);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124215,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let str = n.toString();\n    let firstDigit = str.charAt(0);\n    return parseInt(firstDigit);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124220,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    return parseInt(num.charAt(0));\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(189));\nconsole.log(first_Digit(100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124237,
      "stdout": "3\n9\n1\n1\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let str = n.toString();\n    let first = str.charAt(0);\n    return parseInt(first);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(-3572));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124236,
      "stdout": "3\n9\n1\nNaN\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    let first = num.charAt(0);\n    return parseInt(first);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1665510641,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num = n.toString();\n    for (let i = 0; i < num.length; i++) {\n        if (num[i] != 0) {\n            return parseInt(num[i]);\n        }\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124237,
      "stdout": "../../../../tmp/tmpfg2lmmi9.ts(5,13): error TS2367: This condition will always return 'true' since the types 'string' and '0' have no overlap.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    n = Math.abs(n);\n    while (n >= 10) {\n        n /= 10;\n    }\n    return n;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124238,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.23\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpm7xxvvab.js:12:12)\n    at Object.<anonymous> (/tmp/tmpm7xxvvab.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.23,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the first digit of a given number.\nfunction first_Digit(n: number): number {\n    let num: number = n;\n    while (num >= 10) {\n        num = num / 10;\n    }\n    return Math.floor(num);\n}\n\nconsole.log(first_Digit(3572));\nconsole.log(first_Digit(9));\nconsole.log(first_Digit(10));\nconsole.log(first_Digit(189));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
      "timestamp": 1666124238,
      "stdout": "3\n9\n1\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_65_recursive_list_sum",
  "language": "ts",
  "prompt": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_65_recursive_list_sum.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpi076u6kv.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpi076u6kv.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpi076u6kv.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpi076u6kv.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpc3652h8n.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpc3652h8n.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    else {\n        return data_list.reduce((acc, curr) => acc + recursive_list_sum(curr), 0);\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpwsqv3zm3.ts(7,73): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpwsqv3zm3.ts(11,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpwsqv3zm3.ts(19,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpwsqv3z",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmprb8gj7p7.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7p7.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7p7.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === \"number\") {\n        return data_list;\n    }\n    else {\n        let sum: number = 0;\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n        return sum;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmp6y_55ij2.ts(9,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp6y_55ij2.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp6y_55ij2.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp6y_55ij2.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (Array.isArray(data_list)) {\n        let sum = 0;\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n        return sum;\n    } else {\n        return data_list;\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmp0wchzc6w.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp0wchzc6w.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp0wchzc6w.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp0wchzc",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpy2d6rak1.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpy2d6rak1.ts(14,32): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpy2d6rak1.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpy2d6rak1.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    } else {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n        return sum;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmp3qe7o49v.ts(8,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp3qe7o49v.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp3qe7o49v.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp3qe7o49v.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmp1thiw8iw.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp1thiw8iw.ts(19,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp1thiw8iw.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp1thiw8iw.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum: number = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmphii623f7.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmphii623f7.ts(19,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmphii623f7.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmphii623f7.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpc3652h8n.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpc3652h8n.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpc3652h8n.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpc3652h8n.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpc3652h8n.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpc3652h8n.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if(Array.isArray(data_list)){\n        for(let i = 0; i < data_list.length; i++){\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    else{\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmp9emf07dx.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp9emf07dx.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp9emf07dx.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp9emf07dx.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (Array.isArray(data_list)) {\n        return data_list.reduce((acc, val) => acc + recursive_list_sum(val), 0);\n    } else {\n        return data_list;\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmp2z1ucmro.ts(4,72): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp2z1ucmro.ts(10,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp2z1ucmro.ts(18,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp2z1ucm",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (typeof data_list[i] === 'number') {\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmps5n4mi8c.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmps5n4mi8c.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmps5n4mi8c.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmps5n4mi8c.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (typeof data_list[i] === 'number') {\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, 4, 5]));\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpck36bsqa.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmpck36bsqa.ts(14,32): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpck36bsqa.ts(15,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpck36bsqa.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === \"number\") {\n        return data_list;\n    }\n    else {\n        return data_list.reduce((acc, val) => acc + recursive_list_sum(val), 0);\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5], 6], 7, 8]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmppfe2qqif.ts(7,72): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmppfe2qqif.ts(11,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmppfe2qqif.ts(19,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmppfe2qq",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum: number = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    } else {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpq6lics43.ts(8,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpq6lics43.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpq6lics43.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpq6lics43.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpdyp92oqy.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmpdyp92oqy.ts(14,32): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpdyp92oqy.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpdyp92oqy.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpdyp92oqy.ts(24,30): error TS23",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpc3652h8n.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpc3652h8n.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, [2, [3, [4, [5]]]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123362,
      "stdout": "../../../../tmp/tmpgqy7fbw3.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpgqy7fbw3.ts(14,32): error TS2345: Argument of type '(number | (number | (number | (number | number[])[])[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | (number | (number | number[])[])[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | (number | (number | number[])[])[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpgqy7fbw3.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpgqy7fbw3.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpgqy7fbw3.ts(24,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpc3652h8n.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpc3652h8n.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpc3652h8n.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpc3652h8n.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpc3652h8n.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpc3652h8n.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, [4, 5, [6, 7, 8]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123362,
      "stdout": "../../../../tmp/tmpvti5z8x7.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmpvti5z8x7.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpvti5z8x7.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpvti5z8x7.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable ",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (Array.isArray(data_list)) {\n        return data_list.reduce((acc, val) => acc + recursive_list_sum(val), 0);\n    } else {\n        return data_list;\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmp2z1ucmro.ts(4,72): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp2z1ucmro.ts(10,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp2z1ucmro.ts(18,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp2z1ucm",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpc3652h8n.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpc3652h8n.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, [4, 5, 6, [7, 8, 9]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123362,
      "stdout": "../../../../tmp/tmpgc69kj9y.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpgc69kj9y.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpgc69kj9y.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpgc69kj9y.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpgc69kj9y.ts(24,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpc3652h8n.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpc3652h8n.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if(Array.isArray(data_list)){\n        for(let i = 0; i < data_list.length; i++){\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    else{\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1,2,[3,4,[5,6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123361,
      "stdout": "../../../../tmp/tmpw32uuydf.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpw32uuydf.ts(15,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpw32uuydf.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpw32uuydf.ts(24,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpw32uuydf.ts(25,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum: number = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (typeof data_list[i] === 'number') {\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, [2, [3, [4, [5]]]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123362,
      "stdout": "../../../../tmp/tmp2z24xbe9.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmp2z24xbe9.ts(14,32): error TS2345: Argument of type '(number | (number | (number | (number | number[])[])[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | (number | (number | number[])[])[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | (number | (number | number[])[])[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp2z24xbe9.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp2z24xbe9.ts(23,",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123361,
      "stdout": "../../../../tmp/tmpzr3z9esw.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpzr3z9esw.ts(14,32): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpzr3z9esw.ts(15,32): error TS2345: Argument of type '(number | (number | (number | (number | number[])[])[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | (number | (number | number[])[])[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | (number | (number | number[])[])[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpzr3z9esw.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpzr3z9esw.ts(24,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpzr3z9esw.ts(25,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123362,
      "stdout": "../../../../tmp/tmpoynmvxzy.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmpoynmvxzy.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpoynmvxzy.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpoynmvxzy.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpi076u6kv.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpi076u6kv.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpi076u6kv.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpi076u6kv.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123362,
      "stdout": "../../../../tmp/tmpoynmvxzy.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmpoynmvxzy.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpoynmvxzy.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpoynmvxzy.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (typeof data_list[i] === 'number') {\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123361,
      "stdout": "../../../../tmp/tmpcl2ycisc.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmpcl2ycisc.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpcl2ycisc.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpcl2ycisc.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable ",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpc3652h8n.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpc3652h8n.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpc3652h8n.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpc3652h8n.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (typeof data_list[i] === 'number') {\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, [4, 5, 6, [7, 8, 9]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123362,
      "stdout": "../../../../tmp/tmpruf4xh2d.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmpruf4xh2d.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpruf4xh2d.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpruf4xh2d.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable ",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpc3652h8n.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpc3652h8n.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123362,
      "stdout": "../../../../tmp/tmp58do9fgq.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp58do9fgq.ts(13,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp58do9fgq.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp58do9f",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, 4, [5, 6, [7, 8, 9]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123361,
      "stdout": "../../../../tmp/tmp4hs4m_zq.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp4hs4m_zq.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp4hs4m_zq.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp4hs4m_",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(recursive_list_sum([[1, 2, 3], [4, 5, 6], [7, 8, 9], [10]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123362,
      "stdout": "../../../../tmp/tmp7p3re2gx.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp7p3re2gx.ts(14,32): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp7p3re2gx.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp7p3re2gx.ts(24,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp7p3re2gx.ts(25,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpc3652h8n.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpc3652h8n.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6, [7, 8]]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123361,
      "stdout": "../../../../tmp/tmpoketwtti.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpoketwtti.ts(14,32): error TS2345: Argument of type '(number | (number | (number | number[])[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | (number | number[])[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | (number | number[])[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpoketwtti.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpoketwtti.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpoketwtti.ts(24,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpc3652h8n.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpc3652h8n.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123362,
      "stdout": "../../../../tmp/tmpnmueprzo.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpnmueprzo.ts(13,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpnmueprzo.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpnmueprzo.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpnmueprzo.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123362,
      "stdout": "../../../../tmp/tmppbin_rr4.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmppbin_rr4.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmppbin_rr4.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmppbin_r",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (typeof data_list[i] === 'number') {\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmps5n4mi8c.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmps5n4mi8c.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmps5n4mi8c.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmps5n4mi8c.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123362,
      "stdout": "../../../../tmp/tmpf9yxgmo7.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpf9yxgmo7.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpf9yxgmo7.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpf9yxgmo7.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpf9yxgmo7.ts(24,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpc3652h8n.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpc3652h8n.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, [2, [3, [4, [5]]]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123362,
      "stdout": "../../../../tmp/tmpgqy7fbw3.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpgqy7fbw3.ts(14,32): error TS2345: Argument of type '(number | (number | (number | (number | number[])[])[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | (number | (number | number[])[])[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | (number | (number | number[])[])[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpgqy7fbw3.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpgqy7fbw3.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpgqy7fbw3.ts(24,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (typeof data_list === \"number\") {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123362,
      "stdout": "../../../../tmp/tmp74_91iqj.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp74_91iqj.ts(13,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp74_91iqj.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp74_91i",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpc3652h8n.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpc3652h8n.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, [2, [3, [4, [5]]]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123362,
      "stdout": "../../../../tmp/tmpuva9xkns.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpuva9xkns.ts(14,32): error TS2345: Argument of type '(number | (number | (number | (number | number[])[])[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | (number | (number | number[])[])[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | (number | (number | number[])[])[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpuva9xkns.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n     ",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmprb8gj7p7.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7p7.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7p7.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpc3652h8n.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpc3652h8n.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpc3652h8n.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpc3652h8n.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6, [7, 8, [9, 10]]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123362,
      "stdout": "../../../../tmp/tmpu7wngt80.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu7wngt80.ts(14,32): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu7wngt80.ts(15,32): error TS2345: Argument of type '(number | (number | (number | number[])[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | (number | number[])[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | (number | number[])[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to typ",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(recursive_list_sum([[1, 2, 3], [4, 5, 6], [7, 8, 9], 10]));\nconsole.log(recursive_list_sum([[[1, 2, 3], [4, 5, 6], [7, 8, 9], 10]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123361,
      "stdout": "../../../../tmp/tmpy22n1b7e.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpy22n1b7e.ts(14,32): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpy22n1b7e.ts(15,32): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpy22n1b7e.ts(16,32): error TS2345: Argument of type '(number | number[])[][]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[][]' is not assignable to type 'number[][]'.\n    Type '(number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number | number[]' is not assignable to type 'number'.\n        Type 'number[]' is not assignable to type 'number'.\n../../../../tmp/tmpy22n1b7e.ts(24,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpc3652h8n.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpc3652h8n.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === 'number') {\n        return data_list;\n    } else {\n        return data_list.reduce((a, b) => recursive_list_sum(a) + recursive_list_sum(b), 0);\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, 4, 5]));\nconsole.log(recursive_list_sum([[1, 2], [3, 4], [5, 6]]));\nconsole.log(recursive_list_sum([[[1, 2], [3, 4]], [[5, 6], [7, 8]]]));\nconsole.log(recursive_list_sum([1, [2, [3, 4], [[5]]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123361,
      "stdout": "../../../../tmp/tmpd85k_ojk.ts(6,86): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpd85k_ojk.ts(10,32): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpd85k_ojk.ts(12,32): error TS2345: Argument of type 'number[][][]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[][][]' is not assignable to type 'number[][]'.\n    Type 'number[][]' is not assignable to type 'number[]'.\n      Type 'number[]' is not assignable to type 'number'.\n../../../../tmp/tmpd85k_ojk.ts(13,32): error TS2345: Argument of type '(number | (number | number[] | number[][])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  ",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123362,
      "stdout": "../../../../tmp/tmp38w8cmr9.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp38w8cmr9.ts(19,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp38w8cmr9.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp38w8cmr9.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum: number = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmphii623f7.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmphii623f7.ts(19,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmphii623f7.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmphii623f7.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]], 7, 8]));\nconsole.log(recursive_list_sum([1, 2, 3, 4, 5, 6, 7, 8]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123361,
      "stdout": "../../../../tmp/tmpb74ug9ur.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpb74ug9ur.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpb74ug9ur.ts(15,32): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpb74ug9ur.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpb74ug9ur.ts(24,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpb74ug9ur.ts(25,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === 'number') {\n        return data_list;\n    } else {\n        return data_list.reduce((acc, curr) => acc + recursive_list_sum(curr), 0);\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123366,
      "stdout": "../../../../tmp/tmpzgyysr8o.ts(6,73): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpzgyysr8o.ts(16,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpzgyysr8o.ts(17,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpzgyysr8o.ts(18,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (Array.isArray(data_list)) {\n        return data_list.reduce((acc, val) => acc + recursive_list_sum(val), 0);\n    }\n    return data_list;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123366,
      "stdout": "../../../../tmp/tmp5dilz8mm.ts(4,72): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5dilz8mm.ts(15,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5dilz8mm.ts(16,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp5dilz8mm.ts(17,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpc3652h8n.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpc3652h8n.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmprb8gj7p7.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7p7.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7p7.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmprb8gj7p7.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7p7.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7p7.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmprb8gj7p7.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7p7.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7p7.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmp1thiw8iw.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp1thiw8iw.ts(19,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp1thiw8iw.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp1thiw8iw.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (typeof data_list[i] === 'number') {\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmps5n4mi8c.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmps5n4mi8c.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmps5n4mi8c.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmps5n4mi8c.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123362,
      "stdout": "../../../../tmp/tmppbin_rr4.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmppbin_rr4.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmppbin_rr4.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmppbin_r",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmprb8gj7p7.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7p7.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7p7.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpc3652h8n.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpc3652h8n.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    } else {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n        return sum;\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "../../../../tmp/tmpm6hbs_vw.ts(8,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpm6hbs_vw.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpm6hbs_vw.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpm6hbs_",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpc3652h8n.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpc3652h8n.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpc3652h8n.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpc3652h8n.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmprb8gj7p7.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7p7.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7p7.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpc3652h8n.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpc3652h8n.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, [2, [3, 4], 5], 6]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123366,
      "stdout": "../../../../tmp/tmppmmpuzf_.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmppmmpuzf_.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmppmmpuzf_.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmppmmpuz",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        data_list.forEach(function (value) {\n            sum += recursive_list_sum(value);\n        });\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "../../../../tmp/tmp8ik8lqge.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp8ik8lqge.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp8ik8lqge.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp8ik8lqge.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "../../../../tmp/tmpp0vmq4ij.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpp0vmq4ij.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpp0vmq4ij.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpp0vmq4",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    else {\n        let sum = 0;\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n        return sum;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "../../../../tmp/tmpct147yeh.ts(9,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpct147yeh.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpct147yeh.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpct147yeh.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(recursive_list_sum([[1, 2, 3], [4, 5, 6], [7, 8, 9], 10]));\nconsole.log(recursive_list_sum([[[1, 2, 3], [4, 5, 6], [7, 8, 9], 10]]));\nconsole.log(recursive_list_sum([[[1, 2, 3], [4, 5, 6], [7, 8, 9], 10], [[1, 2, 3], [4, 5, 6], [7, 8, 9], 10]]));\nconsole.log(recursive_list_sum([[[1, 2, 3], [4, 5, 6], [7, 8, 9], 10], [[1, 2, 3], [4, 5, 6], [7, 8, 9], 10], [[1, 2, 3], [4, 5, 6], [7, 8, 9], 10]]));\nconsole.log(recursive_list_sum([[[1, 2, 3], [4, 5, 6], [7, 8, 9], 10], [[1, 2, 3], [4, 5, 6], [7, 8, 9], 10], [[1, 2, 3], [4, 5, 6], [7, 8, 9], 10], [[1, 2, 3], [4, 5, 6], [7, 8, 9], 10]]));\nconsole.log(recursive_list_sum([[[1, 2, 3], [4, 5, 6], [7, 8, 9], 10], [[1, 2, 3], [4, 5, 6], [7, 8, 9], 10], [[1, 2, 3], [4, 5, 6], [7, 8,\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "../../../../tmp/tmpo8ofnlbk.ts(21,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === \"number\") {\n        return data_list;\n    } else {\n        let sum = 0;\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n        return sum;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "../../../../tmp/tmpk8zsnk22.ts(8,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpk8zsnk22.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpk8zsnk22.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpk8zsnk22.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]], 7, 8]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "../../../../tmp/tmpychkbw1s.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpychkbw1s.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpychkbw1s.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpychkbw",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmprb8gj7p7.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7p7.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7p7.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123362,
      "stdout": "../../../../tmp/tmppbin_rr4.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmppbin_rr4.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmppbin_rr4.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmppbin_r",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(recursive_list_sum([1, [2, [3, 4], [[5], 6]], 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "../../../../tmp/tmpf28as2qg.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpf28as2qg.ts(14,32): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpf28as2qg.ts(15,32): error TS2345: Argument of type '(number | (number | (number | number[])[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | (number | number[])[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | (number | number[])[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpf28as2qg.ts(23,30): error TS2345: Argument of type '(number | ",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpc3652h8n.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpc3652h8n.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmprb8gj7p7.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7p7.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7p7.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    data_list.forEach(function (element) {\n        if (Array.isArray(element)) {\n            sum += recursive_list_sum(element);\n        } else {\n            sum += element;\n        }\n    });\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6, [7, 8]]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "../../../../tmp/tmp0djd_475.ts(4,15): error TS2339: Property 'forEach' does not exist on type 'number | number[][]'.\n  Property 'forEach' does not exist on type 'number'.\n../../../../tmp/tmp0djd_475.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp0djd_475.ts(15,32): error TS2345: Argument of type '(number | (number | (number | number[])[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | (number | number[])[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | (number | number[])[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp0djd_475.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp0djd_475.ts(24,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp0djd_475.ts(25,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpc3652h8n.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpc3652h8n.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let item of data_list) {\n            sum += recursive_list_sum(item);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "../../../../tmp/tmpfqororel.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpfqororel.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpfqororel.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpfqoror",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpc3652h8n.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpc3652h8n.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmprb8gj7p7.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7p7.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7p7.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123362,
      "stdout": "../../../../tmp/tmppbin_rr4.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmppbin_rr4.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmppbin_rr4.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmppbin_r",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "../../../../tmp/tmp0yk4366s.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp0yk4366s.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp0yk4366s.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp0yk436",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpc3652h8n.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpc3652h8n.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123362,
      "stdout": "../../../../tmp/tmpoynmvxzy.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmpoynmvxzy.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpoynmvxzy.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpoynmvxzy.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "../../../../tmp/tmpqkqlghyb.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmpqkqlghyb.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpqkqlghyb.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpqkqlghyb.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpqkqlghyb.ts(24,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpy2d6rak1.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpy2d6rak1.ts(14,32): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpy2d6rak1.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpy2d6rak1.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmp1thiw8iw.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp1thiw8iw.ts(19,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp1thiw8iw.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp1thiw8iw.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmprb8gj7p7.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7p7.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7p7.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmprb8gj7p7.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7p7.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7p7.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpc3652h8n.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpc3652h8n.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmprb8gj7p7.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7p7.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7p7.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "../../../../tmp/tmpyqxi25ir.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpyqxi25ir.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpyqxi25ir.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpyqxi25ir.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpyqxi25ir.ts(24,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === 'number') {\n        return data_list;\n    } else {\n        return data_list.reduce((acc, val) => acc + recursive_list_sum(val), 0);\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "../../../../tmp/tmp6gwlu_gk.ts(6,72): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp6gwlu_gk.ts(10,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp6gwlu_gk.ts(18,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp6gwlu_gk.ts(19,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp6gwlu_gk.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpc3652h8n.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpc3652h8n.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    else {\n        return data_list.reduce((sum, element) => sum + recursive_list_sum(element), 0);\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "../../../../tmp/tmpwfmqy5r4.ts(7,76): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpwfmqy5r4.ts(11,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpwfmqy5r4.ts(19,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpwfmqy5",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123362,
      "stdout": "../../../../tmp/tmppbin_rr4.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmppbin_rr4.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmppbin_rr4.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmppbin_r",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "../../../../tmp/tmpf1qdlkhd.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpf1qdlkhd.ts(13,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpf1qdlkhd.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpf1qdlkhd.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpf1qdlkhd.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, [2, [3, [4, [5]]]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "../../../../tmp/tmpfl95t03_.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpfl95t03_.ts(13,32): error TS2345: Argument of type '(number | (number | (number | (number | number[])[])[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | (number | (number | number[])[])[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | (number | (number | number[])[])[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpfl95t03_.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n     ",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "../../../../tmp/tmp6crq3hme.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmp6crq3hme.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp6crq3hme.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp6crq3hme.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp6crq3hme.ts(24,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, [2, [3, [4, [5, [6, [7, [8, [9, [10]]]]]]]]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "../../../../tmp/tmp422iztod.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp422iztod.ts(14,32): error TS2345: Argument of type '(number | (number | (number | (number | (number | (number | (number | (number | (number | number[])[])[])[])[])[])[])[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | (number | (number | (number | (number | (number | (number | (number | number[])[])[])[])[])[])[])[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | (number | (number | (number | (number | (number | (number | (number | number[])[])[])[])[])[])[])[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp422iztod.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not ass",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (Array.isArray(data_list)) {\n        return data_list.reduce((acc, val) => acc + recursive_list_sum(val), 0);\n    } else {\n        return data_list;\n    }\n}\n\nconsole.log(recursive_list_sum([1, [2, [3, [4, [5, [6, [7, [8, [9, [10]]]]]]]]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "../../../../tmp/tmppeb15x8q.ts(4,72): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmppeb15x8q.ts(10,32): error TS2345: Argument of type '(number | (number | (number | (number | (number | (number | (number | (number | (number | number[])[])[])[])[])[])[])[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | (number | (number | (number | (number | (number | (number | (number | number[])[])[])[])[])[])[])[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | (number | (number | (number | (number | (number | (number | (number | number[])[])[])[])[])[])[])[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmppeb15x8q.ts(18,30): error TS2345: Argument of type '(number | number[])[]' is not ass",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (Array.isArray(data_list)) {\n        return data_list.reduce((acc, cur) => acc + recursive_list_sum(cur), 0);\n    } else {\n        return data_list;\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123371,
      "stdout": "../../../../tmp/tmpz9mghukv.ts(4,72): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpz9mghukv.ts(10,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpz9mghukv.ts(18,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpz9mghu",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123362,
      "stdout": "../../../../tmp/tmp38w8cmr9.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp38w8cmr9.ts(19,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp38w8cmr9.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp38w8cmr9.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123362,
      "stdout": "../../../../tmp/tmp38w8cmr9.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp38w8cmr9.ts(19,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp38w8cmr9.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp38w8cmr9.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpc3652h8n.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpc3652h8n.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123371,
      "stdout": "../../../../tmp/tmpr42p_dr9.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpr42p_dr9.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpr42p_dr9.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpr42p_dr9.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpr42p_dr9.ts(24,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpi076u6kv.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpi076u6kv.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpi076u6kv.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpi076u6kv.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(recursive_list_sum([[1, 2, 3], [4, 5, 6], [7, 8, 9], [10]]));\nconsole.log(recursive_list_sum([[[1, 2, 3], [4, 5, 6], [7, 8, 9], [10]]]));\nconsole.log(recursive_list_sumndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123372,
      "stdout": "../../../../tmp/tmp9tvog309.ts(18,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    return data_list.reduce((acc, val) => acc + recursive_list_sum(val), 0);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123372,
      "stdout": "../../../../tmp/tmpfamk2pr3.ts(6,68): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpfamk2pr3.ts(15,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpfamk2pr3.ts(16,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpfamk2pr3.ts(17,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123362,
      "stdout": "../../../../tmp/tmp38w8cmr9.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp38w8cmr9.ts(19,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp38w8cmr9.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp38w8cmr9.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (data_list instanceof Array) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123372,
      "stdout": "../../../../tmp/tmp_aw7lbap.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp_aw7lbap.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp_aw7lbap.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp_aw7lbap.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmp1thiw8iw.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp1thiw8iw.ts(19,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp1thiw8iw.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp1thiw8iw.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpc3652h8n.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpc3652h8n.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpc3652h8n.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpc3652h8n.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (typeof data_list[i] === \"number\") {\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123372,
      "stdout": "../../../../tmp/tmpzbe362y9.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmpzbe362y9.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpzbe362y9.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpzbe362y9.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpc3652h8n.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpc3652h8n.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmprb8gj7p7.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7p7.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7p7.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpc3652h8n.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpc3652h8n.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmprb8gj7p7.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7p7.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7p7.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpc3652h8n.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpc3652h8n.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (typeof data_list[i] === 'number') {\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmps5n4mi8c.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmps5n4mi8c.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmps5n4mi8c.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmps5n4mi8c.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, [4, 5, [6, 7, 8]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123372,
      "stdout": "../../../../tmp/tmp5yv8l_ga.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5yv8l_ga.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5yv8l_ga.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5yv8l_",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpc3652h8n.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpc3652h8n.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === \"number\") {\n        return data_list;\n    }\n    else {\n        return data_list.reduce((acc, val) => acc + recursive_list_sum(val), 0);\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123372,
      "stdout": "../../../../tmp/tmp7nvhzibp.ts(7,72): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp7nvhzibp.ts(17,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp7nvhzibp.ts(18,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp7nvhzibp.ts(19,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpi076u6kv.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpi076u6kv.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpi076u6kv.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpi076u6kv.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6, [7, 8]]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6, [7, 8, [9, 10]]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123372,
      "stdout": "../../../../tmp/tmpqyu1j1zh.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpqyu1j1zh.ts(13,32): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpqyu1j1zh.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpqyu1j1",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6, [7, 8, 9]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123372,
      "stdout": "../../../../tmp/tmp2rqrzl1b.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp2rqrzl1b.ts(14,32): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp2rqrzl1b.ts(15,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp2rqrzl",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpc3652h8n.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpc3652h8n.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "../../../../tmp/tmp6crq3hme.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmp6crq3hme.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp6crq3hme.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp6crq3hme.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp6crq3hme.ts(24,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmp1thiw8iw.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp1thiw8iw.ts(19,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp1thiw8iw.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp1thiw8iw.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpc3652h8n.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpc3652h8n.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123362,
      "stdout": "../../../../tmp/tmp38w8cmr9.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp38w8cmr9.ts(19,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp38w8cmr9.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp38w8cmr9.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, [4, 5, [6, 7, 8]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123362,
      "stdout": "../../../../tmp/tmpvti5z8x7.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmpvti5z8x7.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpvti5z8x7.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpvti5z8x7.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable ",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmp1thiw8iw.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp1thiw8iw.ts(19,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp1thiw8iw.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp1thiw8iw.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "../../../../tmp/tmp6crq3hme.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmp6crq3hme.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp6crq3hme.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp6crq3hme.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp6crq3hme.ts(24,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpc3652h8n.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpc3652h8n.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpc3652h8n.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpc3652h8n.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    else {\n        return data_list.reduce((acc, cur) => acc + recursive_list_sum(cur), 0);\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123372,
      "stdout": "../../../../tmp/tmplr8lfnt2.ts(7,72): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmplr8lfnt2.ts(17,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmplr8lfnt2.ts(18,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmplr8lfnt2.ts(19,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8, [9, 10]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123372,
      "stdout": "../../../../tmp/tmp7bptkmok.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmp7bptkmok.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp7bptkmok.ts(15,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp7bptkmok.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to typ",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        data_list.forEach(function (element) {\n            sum += recursive_list_sum(element);\n        });\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123372,
      "stdout": "../../../../tmp/tmphd8rwbie.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmphd8rwbie.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmphd8rwbie.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmphd8rwbie.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpy2d6rak1.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpy2d6rak1.ts(14,32): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpy2d6rak1.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpy2d6rak1.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpc3652h8n.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpc3652h8n.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123362,
      "stdout": "../../../../tmp/tmppbin_rr4.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmppbin_rr4.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmppbin_rr4.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmppbin_r",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6, [7, 8]]]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123372,
      "stdout": "../../../../tmp/tmpa4zgusz3.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpa4zgusz3.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpa4zgusz3.ts(15,32): error TS2345: Argument of type '(number | (number | (number | number[])[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | (number | number[])[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | (number | number[])[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpa4zgusz3.ts(16,32): error TS2345: Argument of type '(number | (number | (number | (number | number[])[])[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | (number | (number | number[])[])[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | (number | (number | number[])[])[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpa4zgusz3.ts(24,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpa4zgusz3.ts(25,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "../../../../tmp/tmpqkqlghyb.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmpqkqlghyb.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpqkqlghyb.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpqkqlghyb.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpqkqlghyb.ts(24,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    } else {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n        return sum;\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, 4, 5, 6]));\nconsole.log(recursive_list_sum([[1, 2], [3, 4], [5, 6]]));\nconsole.log(recursive_list_sum([[[1, 2], [3, 4]], [[5, 6], [7, 8]]]));\nconsole.log(recursive_list_sum([[[[1, 2], [3, 4]], [[5, 6], [7, 8]]], [[[9, 10], [11, 12]], [[13, 14], [15, 16]]]]));\nconsole.log(recursive_list_sum([[[[[1, 2], [3, 4]], [[5, 6], [7, 8]]], [[[9, 10], [11, 12]], [[13, 14], [15, 16]]]], [[[[17, 18], [19, 20]], [[21, 22], [23, 24]]], [[[25, 26], [27, 28]], [[29, 30], [31, 32]]]]]));\nconsole.log(recursive_list_sum([[[[[[1, 2], [3, 4]], [[5, 6], [7, 8]]], [[[9, 10], [11, 12]], [[13, 14], [15, 16]]]], [[[[17, 18], [19, 20]], [[21, 22], [23, 24]]], [[[25, 26], [27, 28]], [[29, 30], [31, 32]]]]], [[[[[33, 34], [35, 36]], [[37, 38], [39, 40]]], [[[41, 42], [43, 44]], [[45, 46], [47, 48]]]], [[[[49, 50], [51, 52]], [[53, 54], [55,\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123372,
      "stdout": "../../../../tmp/tmpxukhfov2.ts(20,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n        else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123372,
      "stdout": "../../../../tmp/tmppzt7caq_.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmppzt7caq_.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmppzt7caq_.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmppzt7caq_.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, [2, [3, [4, [5]]]]]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123372,
      "stdout": "../../../../tmp/tmpi6549jlh.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpi6549jlh.ts(14,32): error TS2345: Argument of type '(number | (number | (number | (number | number[])[])[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | (number | (number | number[])[])[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | (number | (number | number[])[])[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpi6549jlh.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n     ",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "../../../../tmp/tmpqkqlghyb.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmpqkqlghyb.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpqkqlghyb.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpqkqlghyb.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpqkqlghyb.ts(24,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpc3652h8n.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpc3652h8n.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (data_list instanceof Array) {\n        return data_list.reduce((acc, curr) => acc + recursive_list_sum(curr), 0);\n    } else {\n        return data_list;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123372,
      "stdout": "../../../../tmp/tmpczol4lxa.ts(4,73): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpczol4lxa.ts(16,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpczol4lxa.ts(17,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpczol4lxa.ts(18,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpi076u6kv.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpi076u6kv.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpi076u6kv.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpi076u6kv.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "../../../../tmp/tmp6crq3hme.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmp6crq3hme.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp6crq3hme.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp6crq3hme.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp6crq3hme.ts(24,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(recursive_list_sum([[1, 2, 3], [4, 5, 6], [7, 8, 9], [10]]));\nconsole.log(recursive_list_sum([[[1, 2, 3], [4, 5, 6], [7, 8, 9], [10]]]));\nconsole.log(recursive_list_sum([[[[[[[[[[1]]]]]]]]]]));\nconsole.log(recursive_list_sum([[[[[[[[[[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]]]]]]]]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123372,
      "stdout": "../../../../tmp/tmp0tktgx7r.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp0tktgx7r.ts(14,32): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp0tktgx7r.ts(16,32): error TS2345: Argument of type 'number[][][]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[][][]' is not assignable to type 'number[][]'.\n    Type 'number[][]' is not assignable to type 'number[]'.\n      Type 'number[]' is not assignable to type 'number'.\n../../../../tmp/tmp0tktgx7r.ts(17,32): error TS2345: Argument of type 'number[][][][][][][][][][]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[][][][][",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (typeof data_list[i] === 'number') {\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmps5n4mi8c.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmps5n4mi8c.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmps5n4mi8c.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmps5n4mi8c.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmprb8gj7p7.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7p7.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7p7.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpc3652h8n.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpc3652h8n.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i: number = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, [2, [3, [4, [5, [6, [7, [8, [9, [10]]]]]]]]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123372,
      "stdout": "../../../../tmp/tmpyvfuro_h.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpyvfuro_h.ts(14,32): error TS2345: Argument of type '(number | (number | (number | (number | (number | (number | (number | (number | (number | number[])[])[])[])[])[])[])[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | (number | (number | (number | (number | (number | (number | (number | number[])[])[])[])[])[])[])[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | (number | (number | (number | (number | (number | (number | (number | number[])[])[])[])[])[])[])[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpyvfuro_h.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not ass",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (data_list instanceof Array) {\n        let sum = 0;\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n        return sum;\n    } else {\n        return data_list;\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]], 7, [8, 9]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123372,
      "stdout": "../../../../tmp/tmpzgcl6toj.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpzgcl6toj.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpzgcl6toj.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpzgcl6toj.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpzgcl6toj.ts(24,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpc3652h8n.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpc3652h8n.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123362,
      "stdout": "../../../../tmp/tmppbin_rr4.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmppbin_rr4.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmppbin_rr4.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmppbin_r",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, 4, 5]));\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5]]]));\nconsole.log(recursive_list_sum([[[[[1]]]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123372,
      "stdout": "../../../../tmp/tmp3q6bq4ex.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp3q6bq4ex.ts(14,32): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp3q6bq4ex.ts(15,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp3q6bq4ex.ts(16,32): error TS2345: Argument of type 'number[][][][][]' is not assignable to parameter ",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmprb8gj7p7.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7p7.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7p7.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmprb8gj7p7.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7p7.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7p7.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpc3652h8n.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpc3652h8n.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpc3652h8n.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpc3652h8n.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpi076u6kv.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpi076u6kv.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpi076u6kv.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpi076u6kv.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6, [7, 8]]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6, [7, 8, [9, 10]]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123372,
      "stdout": "../../../../tmp/tmphovv96hr.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmphovv96hr.ts(14,32): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmphovv96hr.ts(15,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmphovv96",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, [6, 7]]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, [6, [7, 8]]]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, [6, [7, [8, 9]]]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123374,
      "stdout": "../../../../tmp/tmp0u27ibgp.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp0u27ibgp.ts(14,32): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp0u27ibgp.ts(15,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp0u27ibgp.ts(16,32): error TS2345: Argument of type '(number | (number | (number | number[])[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | (number | number[])[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | (number | number[])[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp0u27ibgp.ts(17,32): error TS2345: Argument of type '(number | (number | (number | (number | number[])[])[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | (number | (number | number[])[])[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | (number | (number | number[])[])[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp0u27ibgp.ts(25,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6, [7, 8]]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123374,
      "stdout": "../../../../tmp/tmpsn_69w7e.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmpsn_69w7e.ts(14,32): error TS2345: Argument of type '(number | (number | (number | number[])[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | (number | number[])[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | (number | number[])[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpsn_69w7e.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpsn_69w7e.ts(23,30): error TS2345: Argument of type '(n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(recursive_list_sum([[1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]]));\nconsole.log(recursive_list_sum([[[1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123374,
      "stdout": "../../../../tmp/tmp0cl6qak5.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp0cl6qak5.ts(14,32): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp0cl6qak5.ts(16,32): error TS2345: Argument of type 'number[][][]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[][][]' is not assignable to type 'number[][]'.\n    Type 'number[][]' is not assignable to type 'number[]'.\n      Type 'number[]' is not assignable to type 'number'.\n../../../../tmp/tmp0cl6qak5.ts(24,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp0cl6qak5.ts(25,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp0cl6qak5.ts(26,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (Array.isArray(data_list)) {\n        return data_list.reduce((acc, val) => acc + recursive_list_sum(val), 0);\n    } else {\n        return data_list;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123374,
      "stdout": "../../../../tmp/tmp6dek8b9z.ts(4,72): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp6dek8b9z.ts(16,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp6dek8b9z.ts(17,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp6dek8b9z.ts(18,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpy2d6rak1.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpy2d6rak1.ts(14,32): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpy2d6rak1.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpy2d6rak1.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123371,
      "stdout": "../../../../tmp/tmpr42p_dr9.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpr42p_dr9.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpr42p_dr9.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpr42p_dr9.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpr42p_dr9.ts(24,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === \"number\") {\n        return data_list;\n    } else {\n        return data_list.reduce((acc, curr) => acc + recursive_list_sum(curr), 0);\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123374,
      "stdout": "../../../../tmp/tmpd2z5cudx.ts(6,73): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpd2z5cudx.ts(10,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpd2z5cudx.ts(18,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpd2z5cu",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmpc3652h8n.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpc3652h8n.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpc3652h8n.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    else {\n        return data_list.reduce((acc, val) => acc + recursive_list_sum(val), 0);\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123374,
      "stdout": "../../../../tmp/tmpasajkla6.ts(7,72): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpasajkla6.ts(11,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpasajkla6.ts(19,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpasajkla6.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpasajkla6.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510490,
      "stdout": "../../../../tmp/tmprb8gj7p7.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7p7.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7p7.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprb8gj7",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123362,
      "stdout": "../../../../tmp/tmpoynmvxzy.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmpoynmvxzy.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpoynmvxzy.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpoynmvxzy.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === \"number\") {\n        return data_list;\n    }\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123374,
      "stdout": "../../../../tmp/tmpe_quahze.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpe_quahze.ts(19,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpe_quahze.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpe_quahze.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === \"number\") {\n        return data_list;\n    }\n    else {\n        let sum = 0;\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n        return sum;\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123374,
      "stdout": "../../../../tmp/tmpt51on5cc.ts(9,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpt51on5cc.ts(15,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpt51on5cc.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpt51on5",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    }
  ]
}
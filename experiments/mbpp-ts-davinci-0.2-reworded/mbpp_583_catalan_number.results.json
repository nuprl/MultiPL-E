{
  "name": "mbpp_583_catalan_number",
  "language": "ts",
  "prompt": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_583_catalan_number.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let catalan: number = 1;\n    for (let i: number = 0; i < num; i++) {\n        catalan = catalan * (2 * num - i) / (i + 1);\n    }\n    return catalan;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n184756\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmp7vb4070j.js:12:12)\n    at Object.<anonymous> (/tmp/tmp7vb4070j.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 184756,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n  if (num <= 1) {\n    return 1;\n  }\n  let res = 0;\n  for (let i = 0; i < num; i++) {\n    res += catalan_number(i) * catalan_number(num - i - 1);\n  }\n  return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let result = 0;\n    for (let i = 0; i < num; i++) {\n        result += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let res: number = 1;\n    for (let i = 0; i < num; i++) {\n        res = res * (num + i) / (i + 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92378\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmpq1kmx08h.js:12:12)\n    at Object.<anonymous> (/tmp/tmpq1kmx08h.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92378,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let res = 1;\n    for (let i = 0; i < num; i++) {\n        res = res * (num + i) / (i + 1);\n    }\n    return res / (num + 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8398\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmp58gcppjw.js:12:12)\n    at Object.<anonymous> (/tmp/tmp58gcppjw.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8398,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let catalan_number = 1;\n    for (let i = 0; i < num; i++) {\n        catalan_number = catalan_number * (2 * num - i) / (i + 1);\n    }\n    return catalan_number;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n184756\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmpoo9z0drd.js:12:12)\n    at Object.<anonymous> (/tmp/tmpoo9z0drd.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 184756,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let result = 0;\n    for (let i = 0; i < num; i++) {\n        result += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let res = 1;\n    for (let i = 0; i < num; i++) {\n        res = res * (num + i) / (i + 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92378\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmpvegammrw.js:12:12)\n    at Object.<anonymous> (/tmp/tmpvegammrw.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92378,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let result = 0;\n    for (let i = 0; i < num; i++) {\n        result += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let res = 1;\n    for (let i = 0; i < num; i++) {\n        res = res * (num + i) / (i + 1);\n    }\n    return res / (num + 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8398\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmp58gcppjw.js:12:12)\n    at Object.<anonymous> (/tmp/tmp58gcppjw.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8398,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let catalan_num = 0;\n    if (num <= 1) {\n        return 1;\n    }\n    for (let i = 0; i < num; i++) {\n        catalan_num += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return catalan_num;\n}\n\nconsole.log(catalan_number(4));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "14\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let catalan_num: number = 0;\n    if (num <= 1) {\n        return 1;\n    }\n    for (let i = 0; i < num; i++) {\n        catalan_num += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return catalan_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let res = 1;\n    for (let i = 0; i < num; i++) {\n        res = res * (num + i) / (i + 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92378\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmpvegammrw.js:12:12)\n    at Object.<anonymous> (/tmp/tmpvegammrw.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92378,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let result = 1;\n    for (let i = 0; i < num; i++) {\n        result = result * (num + i) / (i + 1);\n    }\n    return result;\n}\n\nconsole.log(catalan_number(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "126\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92378\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmphl6vvdku.js:13:12)\n    at Object.<anonymous> (/tmp/tmphl6vvdku.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92378,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let res = 1;\n    for (let i = 0; i < num; i++) {\n        res = res * (num + i) / (i + 1);\n    }\n    return res / (num + 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8398\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmp58gcppjw.js:12:12)\n    at Object.<anonymous> (/tmp/tmp58gcppjw.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8398,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let result = 0;\n    for (let i = 0; i < num; i++) {\n        result += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let res: number = 1;\n    for (let i: number = 0; i < num; i++) {\n        res = res * (num + i) / (i + 1);\n    }\n    return res;\n}\n\nconsole.log(catalan_number(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122591,
      "stdout": "10\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92378\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmpdp2wohli.js:13:12)\n    at Object.<anonymous> (/tmp/tmpdp2wohli.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92378,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n  if (num <= 1) {\n    return 1;\n  }\n  let res = 0;\n  for (let i = 0; i < num; i++) {\n    res += catalan_number(i) * catalan_number(num - i - 1);\n  }\n  return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let res: number = 1;\n    for (let i: number = 0; i < num; i++) {\n        res = res * (2 * num - i) / (i + 1);\n    }\n    return res / (num + 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let res: number = 1;\n    for (let i = 0; i < num; i++) {\n        res = res * (num + i) / (i + 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92378\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmpq1kmx08h.js:12:12)\n    at Object.<anonymous> (/tmp/tmpq1kmx08h.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92378,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let catalan_number = 1;\n    for (let i = 0; i < num; i++) {\n        catalan_number = catalan_number * (2 * num - i) / (i + 1);\n    }\n    return catalan_number;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n184756\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmpoo9z0drd.js:12:12)\n    at Object.<anonymous> (/tmp/tmpoo9z0drd.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 184756,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let res: number = 1;\n    for (let i: number = 0; i < num; i++) {\n        res = res * (num + i) / (i + 1);\n    }\n    return res;\n}\n\nconsole.log(catalan_number(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122591,
      "stdout": "126\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92378\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmpp0po1mrj.js:13:12)\n    at Object.<anonymous> (/tmp/tmpp0po1mrj.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92378,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let catalan: number = 1;\n    for (let i = 0; i < num; i++) {\n        catalan = catalan * (2 * num - i) / (i + 1);\n    }\n    return catalan;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n184756\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmpsgbhpebq.js:12:12)\n    at Object.<anonymous> (/tmp/tmpsgbhpebq.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 184756,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n  let res: number = 0;\n  if (num <= 1) {\n    return 1;\n  }\n  for (let i = 0; i < num; i++) {\n    res += catalan_number(i) * catalan_number(num - i - 1);\n  }\n  return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n  if (num <= 1) {\n    return 1;\n  }\n  let res = 0;\n  for (let i = 0; i < num; i++) {\n    res += catalan_number(i) * catalan_number(num - i - 1);\n  }\n  return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n  let res: number = 1;\n  for (let i = 0; i < num; i++) {\n    res = res * (num + i) / (i + 1);\n  }\n  return res;\n}\n\nconsole.log(catalan_number(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122591,
      "stdout": "126\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92378\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmpnry3fufj.js:13:12)\n    at Object.<anonymous> (/tmp/tmpnry3fufj.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92378,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let result = 0;\n    for (let i = 0; i < num; i++) {\n        result += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let result = 1;\n    for (let i = 0; i < num; i++) {\n        result = result * (num + i) / (i + 1);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92378\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmp1yjmxsp4.js:12:12)\n    at Object.<anonymous> (/tmp/tmp1yjmxsp4.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92378,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n  let catalan: number = 1;\n  for (let i: number = 0; i < num; i++) {\n    catalan = catalan * (2 * num - i) / (i + 1);\n  }\n  return catalan;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122592,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n184756\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmpy3wk5c0u.js:12:12)\n    at Object.<anonymous> (/tmp/tmpy3wk5c0u.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 184756,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n  if (num <= 1) return 1;\n  let res = 0;\n  for (let i = 0; i < num; i++) {\n    res += catalan_number(i) * catalan_number(num - i - 1);\n  }\n  return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let res = 1;\n    for (let i = 2 * num; i > num; i--) {\n        res *= i;\n    }\n    for (let i = 2; i <= num; i++) {\n        res /= i;\n    }\n    return res / (num + 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122592,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n  let res = 1;\n  for (let i = 0; i < num; i++) {\n    res = res * (num + i) / (i + 1);\n  }\n  return res / (num + 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8398\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmppvtda0oz.js:12:12)\n    at Object.<anonymous> (/tmp/tmppvtda0oz.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8398,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n  if (num <= 1) return 1;\n  let res = 0;\n  for (let i = 0; i < num; i++) {\n    res += catalan_number(i) * catalan_number(num - i - 1);\n  }\n  return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let result = 1;\n    for (let i = 0; i < num; i++) {\n        result = result * (num + i) / (i + 1);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92378\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmp1yjmxsp4.js:12:12)\n    at Object.<anonymous> (/tmp/tmp1yjmxsp4.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92378,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let catalan: number = 1;\n    for (let i: number = 0; i < num; i++) {\n        catalan = catalan * (2 * num - i) / (i + 1);\n    }\n    return catalan;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n184756\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmp7vb4070j.js:12:12)\n    at Object.<anonymous> (/tmp/tmp7vb4070j.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 184756,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let result = 0;\n    for (let i = 0; i < num; i++) {\n        result += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n  let res: number = 1;\n  for (let i = 0; i < num; i++) {\n    res = res * (num + i) / (i + 1);\n  }\n  return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92378\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmpddcj2bpg.js:12:12)\n    at Object.<anonymous> (/tmp/tmpddcj2bpg.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92378,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let res: number = 1;\n    for (let i: number = 0; i < num; i++) {\n        res = res * (num + i) / (i + 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92378\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmpprro4c56.js:12:12)\n    at Object.<anonymous> (/tmp/tmpprro4c56.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92378,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let res: number = 1;\n    for (let i = 0; i < num; i++) {\n        res = res * (num + i) / (i + 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92378\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmpq1kmx08h.js:12:12)\n    at Object.<anonymous> (/tmp/tmpq1kmx08h.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92378,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n  if (num <= 1) {\n    return 1;\n  }\n  let res = 0;\n  for (let i = 0; i < num; i++) {\n    res += catalan_number(i) * catalan_number(num - i - 1);\n  }\n  return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let res = 1;\n    for (let i = 0; i < num; i++) {\n        res = res * (num + i) / (i + 1);\n    }\n    return res;\n}\n\nconsole.log(catalan_number(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122592,
      "stdout": "10\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92378\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmphrn3tmt1.js:13:12)\n    at Object.<anonymous> (/tmp/tmphrn3tmt1.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92378,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n  let catalan_number = 1;\n  for (let i = 0; i < num; i++) {\n    catalan_number = catalan_number * (2 * num - i) / (i + 1);\n  }\n  return catalan_number;\n}\n\nconsole.log(catalan_number(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122592,
      "stdout": "20\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n184756\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmpk4k6lwv1.js:13:12)\n    at Object.<anonymous> (/tmp/tmpk4k6lwv1.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 184756,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\nconsole.log(catalan_number(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122591,
      "stdout": "5\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n  if (num === 0) {\n    return 1;\n  }\n  let res = 0;\n  for (let i = 0; i < num; i++) {\n    res += catalan_number(i) * catalan_number(num - i - 1);\n  }\n  return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122592,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let result = 0;\n    for (let i = 0; i < num; i++) {\n        result += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let catalan_number = 1;\n    for (let i = 0; i < num; i++) {\n        catalan_number = catalan_number * (num + i) / (i + 1);\n    }\n    return catalan_number;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92378\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmpeo_scp00.js:12:12)\n    at Object.<anonymous> (/tmp/tmpeo_scp00.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92378,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let catalan: number = 1;\n    for (let i: number = 0; i < num; i++) {\n        catalan = catalan * (2 * num - i) / (i + 1);\n    }\n    return catalan;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n184756\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmp7vb4070j.js:12:12)\n    at Object.<anonymous> (/tmp/tmp7vb4070j.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 184756,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let catalan_num = 1;\n    for (let i = 0; i < num; i++) {\n        catalan_num = catalan_num * (num + i) / (i + 1);\n    }\n    return catalan_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122592,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92378\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmpfa589gvy.js:12:12)\n    at Object.<anonymous> (/tmp/tmpfa589gvy.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92378,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let res = 1;\n    for (let i = 0; i < num; i++) {\n        res = res * (num + i) / (i + 1);\n    }\n    return res / (num + 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8398\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmp58gcppjw.js:12:12)\n    at Object.<anonymous> (/tmp/tmp58gcppjw.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8398,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let result = 0;\n    for (let i = 0; i < num; i++) {\n        result += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let res: number = 1;\n    for (let i: number = 0; i < num; i++) {\n        res = res * (num + i) / (i + 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92378\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmpprro4c56.js:12:12)\n    at Object.<anonymous> (/tmp/tmpprro4c56.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92378,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let result = 0;\n    for (let i = 0; i < num; i++) {\n        result += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n  let res = 1;\n  for (let i = 0; i < num; i++) {\n    res = res * (num + i) / (i + 1);\n  }\n  return res;\n}\n\nconsole.log(catalan_number(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122592,
      "stdout": "126\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92378\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmp4fkiqm2v.js:13:12)\n    at Object.<anonymous> (/tmp/tmp4fkiqm2v.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92378,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let result = 0;\n    for (let i = 0; i < num; i++) {\n        result += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num === 0 || num === 1) {\n        return 1;\n    }\n    let result = 0;\n    for (let i = 0; i < num; i++) {\n        result += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122592,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let catalan_number: number = 1;\n    for (let i = 0; i < num; i++) {\n        catalan_number = catalan_number * (2 * num - i) / (i + 1);\n    }\n    return catalan_number;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n184756\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmp4789caz7.js:12:12)\n    at Object.<anonymous> (/tmp/tmp4789caz7.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 184756,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n  if (num <= 1) {\n    return 1;\n  }\n  let res = 0;\n  for (let i = 0; i < num; i++) {\n    res += catalan_number(i) * catalan_number(num - i - 1);\n  }\n  return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let res: number = 1;\n    for (let i: number = 0; i < num; i++) {\n        res = res * (num + i) / (i + 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92378\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmpprro4c56.js:12:12)\n    at Object.<anonymous> (/tmp/tmpprro4c56.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92378,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let res: number = 1;\n    for (let i: number = 0; i < num; i++) {\n        res = res * (num + i) / (i + 1);\n    }\n    return res;\n}\n\nconsole.log(catalan_number(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122591,
      "stdout": "10\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92378\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmpdp2wohli.js:13:12)\n    at Object.<anonymous> (/tmp/tmpdp2wohli.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92378,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let res: number = 1;\n    for (let i: number = 0; i < num; i++) {\n        res = res * (num + i) / (i + 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92378\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmpprro4c56.js:12:12)\n    at Object.<anonymous> (/tmp/tmpprro4c56.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92378,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\nconsole.log(catalan_number(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122592,
      "stdout": "42\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let result = 0;\n    for (let i = 0; i < num; i++) {\n        result += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return result;\n}\n\nconsole.log(catalan_number(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122593,
      "stdout": "5\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let catalan: number = 1;\n    for (let i: number = 0; i < num; i++) {\n        catalan = catalan * (2 * num - i) / (i + 1);\n    }\n    return catalan;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n184756\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmp7vb4070j.js:12:12)\n    at Object.<anonymous> (/tmp/tmp7vb4070j.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 184756,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n  if (num <= 1) return 1;\n  let res = 0;\n  for (let i = 0; i < num; i++) {\n    res += catalan_number(i) * catalan_number(num - i - 1);\n  }\n  return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let res: number = 1;\n    for (let i = 0; i < num; i++) {\n        res = res * (num + i) / (i + 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92378\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmpq1kmx08h.js:12:12)\n    at Object.<anonymous> (/tmp/tmpq1kmx08h.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92378,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let res: number = 1;\n    for (let i = 0; i < num; i++) {\n        res = res * (num + i) / (i + 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92378\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmpq1kmx08h.js:12:12)\n    at Object.<anonymous> (/tmp/tmpq1kmx08h.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92378,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let catalan_array: number[] = [];\n    catalan_array[0] = 1;\n    catalan_array[1] = 1;\n    for (let i = 2; i <= num; i++) {\n        catalan_array[i] = 0;\n        for (let j = 0; j < i; j++) {\n            catalan_array[i] = catalan_array[i] + catalan_array[j] * catalan_array[i - j - 1];\n        }\n    }\n    return catalan_array[num];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122594,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let result = 0;\n    for (let i = 0; i < num; i++) {\n        result += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let catalan_num: number = 1;\n    for (let i = 0; i < num; i++) {\n        catalan_num = catalan_num * (2 * num - i) / (i + 1);\n    }\n    return catalan_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122594,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n184756\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmpqvifbutn.js:12:12)\n    at Object.<anonymous> (/tmp/tmpqvifbutn.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 184756,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    var res = 0;\n    for (var i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122594,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let res: number = 1;\n    for (let i = 0; i < num; i++) {\n        res = res * (num + i) / (i + 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92378\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmpq1kmx08h.js:12:12)\n    at Object.<anonymous> (/tmp/tmpq1kmx08h.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92378,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let res: number = 1;\n    for (let i = 0; i < num; i++) {\n        res = res * (num + i) / (i + 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92378\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmpq1kmx08h.js:12:12)\n    at Object.<anonymous> (/tmp/tmpq1kmx08h.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92378,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n  if (num <= 1) {\n    return 1;\n  }\n  let res = 0;\n  for (let i = 0; i < num; i++) {\n    res += catalan_number(i) * catalan_number(num - i - 1);\n  }\n  return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let catalan_number = 1;\n    for (let i = 0; i < num; i++) {\n        catalan_number = catalan_number * (2 * num - i) / (i + 1);\n    }\n    return catalan_number;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n184756\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmpoo9z0drd.js:12:12)\n    at Object.<anonymous> (/tmp/tmpoo9z0drd.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 184756,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let result = 0;\n    for (let i = 0; i < num; i++) {\n        result += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let res: number = 1;\n    for (let i = 0; i < num; i++) {\n        res = res * (num + i) / (i + 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92378\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmpq1kmx08h.js:12:12)\n    at Object.<anonymous> (/tmp/tmpq1kmx08h.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92378,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    var res = 0;\n    for (var i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122594,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let catalan: number = 1;\n    for (let i: number = 0; i < num; i++) {\n        catalan = catalan * (2 * num - i) / (i + 1);\n    }\n    return catalan;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n184756\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmp7vb4070j.js:12:12)\n    at Object.<anonymous> (/tmp/tmp7vb4070j.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 184756,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let res: number = 1;\n    for (let i: number = 0; i < num; i++) {\n        res = res * (num + i) / (i + 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92378\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmpprro4c56.js:12:12)\n    at Object.<anonymous> (/tmp/tmpprro4c56.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92378,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let catalan_num: number = 1;\n    for (let i = 0; i < num; i++) {\n        catalan_num = catalan_num * (2 * num - i) / (i + 1);\n    }\n    return catalan_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122594,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n184756\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmpqvifbutn.js:12:12)\n    at Object.<anonymous> (/tmp/tmpqvifbutn.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 184756,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let catalan_number = 1;\n    for (let i = 0; i < num; i++) {\n        catalan_number = catalan_number * (2 * num - i) / (i + 1);\n    }\n    return catalan_number;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n184756\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmpoo9z0drd.js:12:12)\n    at Object.<anonymous> (/tmp/tmpoo9z0drd.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 184756,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let catalan_number = 1;\n    for (let i = 0; i < num; i++) {\n        catalan_number = catalan_number * (2 * num - i) / (i + 1);\n    }\n    return catalan_number;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n184756\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmpoo9z0drd.js:12:12)\n    at Object.<anonymous> (/tmp/tmpoo9z0drd.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 184756,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let res: number = 1;\n    for (let i = 0; i < num; i++) {\n        res = res * (num + i) / (i + 1);\n    }\n    return res;\n}\nconsole.log(catalan_number(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122594,
      "stdout": "10\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92378\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmpsrx0zf_w.js:13:12)\n    at Object.<anonymous> (/tmp/tmpsrx0zf_w.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92378,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let res: number = 1;\n    for (let i = 0; i < num; i++) {\n        res = res * (num + i) / (i + 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92378\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmpq1kmx08h.js:12:12)\n    at Object.<anonymous> (/tmp/tmpq1kmx08h.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92378,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\nconsole.log(catalan_number(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122594,
      "stdout": "5\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res: number = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122594,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let res: number = 1;\n    for (let i: number = 0; i < num; i++) {\n        res = res * (num + i) / (i + 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92378\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmpprro4c56.js:12:12)\n    at Object.<anonymous> (/tmp/tmpprro4c56.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92378,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n  if (num <= 1) {\n    return 1;\n  }\n  let res = 0;\n  for (let i = 0; i < num; i++) {\n    res += catalan_number(i) * catalan_number(num - i - 1);\n  }\n  return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let res: number = 1;\n    for (let i: number = 0; i < num; i++) {\n        res = res * (num + i) / (i + 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92378\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmpprro4c56.js:12:12)\n    at Object.<anonymous> (/tmp/tmpprro4c56.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92378,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let res: number = 1;\n    for (let i: number = 0; i < num; i++) {\n        res = res * (num + i) / (i + 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92378\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmpprro4c56.js:12:12)\n    at Object.<anonymous> (/tmp/tmpprro4c56.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92378,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n  let result = 1;\n  for (let i = 0; i < num; i++) {\n    result = result * (2 * num - i) / (i + 1);\n  }\n  return result / (num + 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122594,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n  if (num <= 1) return 1;\n  let res = 0;\n  for (let i = 0; i < num; i++) {\n    res += catalan_number(i) * catalan_number(num - i - 1);\n  }\n  return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n  if (num <= 1) return 1;\n  let res = 0;\n  for (let i = 0; i < num; i++) {\n    res += catalan_number(i) * catalan_number(num - i - 1);\n  }\n  return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let catalan_number = 1;\n    for (let i = 0; i < num; i++) {\n        catalan_number = catalan_number * (2 * num - i) / (i + 1);\n    }\n    return catalan_number;\n}\n\nconsole.log(catalan_number(4));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122594,
      "stdout": "70\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n184756\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmpfenm552h.js:13:12)\n    at Object.<anonymous> (/tmp/tmpfenm552h.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 184756,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let result = 0;\n    for (let i = 0; i < num; i++) {\n        result += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n  let catalan: number = 1;\n  for (let i: number = 0; i < num; i++) {\n    catalan = catalan * (2 * num - i) / (i + 1);\n  }\n  return catalan;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122592,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n184756\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmpy3wk5c0u.js:12:12)\n    at Object.<anonymous> (/tmp/tmpy3wk5c0u.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 184756,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let catalan_number = 1;\n    for (let i = 0; i < num; i++) {\n        catalan_number = catalan_number * (num + i) / (i + 1);\n    }\n    return catalan_number;\n}\n\nconsole.log(catalan_number(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122594,
      "stdout": "10\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92378\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmp63_7dluw.js:13:12)\n    at Object.<anonymous> (/tmp/tmp63_7dluw.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92378,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n  if (num <= 1) {\n    return 1;\n  }\n  let res = 0;\n  for (let i = 0; i < num; i++) {\n    res += catalan_number(i) * catalan_number(num - i - 1);\n  }\n  return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let res: number = 1;\n    for (let i = 0; i < num; i++) {\n        res = res * (num + i) / (i + 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92378\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmpq1kmx08h.js:12:12)\n    at Object.<anonymous> (/tmp/tmpq1kmx08h.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92378,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n  if (num <= 1) {\n    return 1;\n  }\n  let res = 0;\n  for (let i = 0; i < num; i++) {\n    res += catalan_number(i) * catalan_number(num - i - 1);\n  }\n  return res;\n}\n\nconsole.log(catalan_number(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122594,
      "stdout": "42\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n  if (num === 0) {\n    return 1;\n  }\n  let res = 0;\n  for (let i = 0; i < num; i++) {\n    res += catalan_number(i) * catalan_number(num - i - 1);\n  }\n  return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122592,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n  if (num <= 1) {\n    return 1;\n  }\n  let res = 0;\n  for (let i = 0; i < num; i++) {\n    res += catalan_number(i) * catalan_number(num - i - 1);\n  }\n  return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res: number = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122594,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n  let result = 1;\n  for (let i = 0; i < num; i++) {\n    result = result * (num + i) / (i + 1);\n  }\n  return result;\n}\n\nconsole.log(catalan_number(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122594,
      "stdout": "10\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92378\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmph27qnmzn.js:13:12)\n    at Object.<anonymous> (/tmp/tmph27qnmzn.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92378,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let result: number = 1;\n    for (let i: number = 0; i < num; i++) {\n        result = result * (num + i) / (i + 1);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122594,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92378\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmpnsl7tq_s.js:12:12)\n    at Object.<anonymous> (/tmp/tmpnsl7tq_s.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92378,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n  if (num <= 1) return 1;\n  let res = 0;\n  for (let i = 0; i < num; i++) {\n    res += catalan_number(i) * catalan_number(num - i - 1);\n  }\n  return res;\n}\n\nconsole.log(catalan_number(4));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122594,
      "stdout": "14\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let catalan_num = 0;\n    if (num <= 1) {\n        return 1;\n    }\n    for (let i = 0; i < num; i++) {\n        catalan_num += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return catalan_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122594,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let res = 1;\n    for (let i = 0; i < num; i++) {\n        res = res * (num + i) / (i + 1);\n    }\n    return res / (num + 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8398\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmp58gcppjw.js:12:12)\n    at Object.<anonymous> (/tmp/tmp58gcppjw.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8398,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let res: number = 1;\n    for (let i: number = 0; i < num; i++) {\n        res = res * (num + i) / (i + 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92378\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmpprro4c56.js:12:12)\n    at Object.<anonymous> (/tmp/tmpprro4c56.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92378,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let catalan_num = 1;\n    for (let i = 0; i < num; i++) {\n        catalan_num = catalan_num * (2 * num - i) / (i + 1);\n    }\n    return catalan_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122594,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n184756\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmpm54y_bi8.js:12:12)\n    at Object.<anonymous> (/tmp/tmpm54y_bi8.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 184756,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let catalan_number: number = 1;\n    for (let i: number = 0; i < num; i++) {\n        catalan_number = catalan_number * (2 * num - i) / (i + 1);\n    }\n    return catalan_number;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1666122594,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n184756\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmpmc1j9kxi.js:12:12)\n    at Object.<anonymous> (/tmp/tmpmc1j9kxi.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 184756,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let res = 1;\n    for (let i = 0; i < num; i++) {\n        res = res * (num + i) / (i + 1);\n    }\n    return res / (num + 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8398\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmp58gcppjw.js:12:12)\n    at Object.<anonymous> (/tmp/tmp58gcppjw.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8398,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    let catalan_number = 1;\n    for (let i = 0; i < num; i++) {\n        catalan_number = catalan_number * (2 * num - i) / (i + 1);\n    }\n    return catalan_number;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n184756\n\nshould loosely deep-equal\n\n16796\n    at test (/tmp/tmpoo9z0drd.js:12:12)\n    at Object.<anonymous> (/tmp/tmpoo9z0drd.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 184756,\n  expected: 16796,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function which returns nth catalan number.\nfunction catalan_number(num: number): number {\n    if (num <= 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_594_diff_even_odd",
  "language": "ts",
  "prompt": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_594_diff_even_odd.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    let diff: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    diff = even - odd;\n    return diff;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    let i: number = 0;\n    while (i < list1.length) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n        i++;\n    }\n    i = 0;\n    while (i < list1.length) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n        i++;\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i: number = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i: number = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    let result: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    result = even - odd;\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n  let even: number = 0;\n  let odd: number = 0;\n  for (let i = 0; i < list1.length; i++) {\n    if (list1[i] % 2 == 0) {\n      even = list1[i];\n      break;\n    }\n  }\n  for (let i = 0; i < list1.length; i++) {\n    if (list1[i] % 2 != 0) {\n      odd = list1[i];\n      break;\n    }\n  }\n  return even - odd;\n}\n\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even = 0;\n    let odd = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even = 0;\n    let odd = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even = 0;\n    let odd = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n  let even = 0;\n  let odd = 0;\n  for (let i = 0; i < list1.length; i++) {\n    if (list1[i] % 2 == 0) {\n      even = list1[i];\n      break;\n    }\n  }\n  for (let i = 0; i < list1.length; i++) {\n    if (list1[i] % 2 != 0) {\n      odd = list1[i];\n      break;\n    }\n  }\n  return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even = 0;\n    let odd = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n  let even: number = 0;\n  let odd: number = 0;\n  for (let i = 0; i < list1.length; i++) {\n    if (list1[i] % 2 == 0) {\n      even = list1[i];\n      break;\n    }\n  }\n  for (let i = 0; i < list1.length; i++) {\n    if (list1[i] % 2 != 0) {\n      odd = list1[i];\n      break;\n    }\n  }\n  return even - odd;\n}\n\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even = 0;\n    let odd = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n  let even: number = 0;\n  let odd: number = 0;\n  for (let i = 0; i < list1.length; i++) {\n    if (list1[i] % 2 == 0) {\n      even = list1[i];\n      break;\n    }\n  }\n  for (let i = 0; i < list1.length; i++) {\n    if (list1[i] % 2 != 0) {\n      odd = list1[i];\n      break;\n    }\n  }\n  return even - odd;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    let count: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            count++;\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            count++;\n            break;\n        }\n    }\n    if (count == 2) {\n        return even - odd;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    let i: number = 0;\n    while (even == 0 || odd == 0) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n        }\n        else {\n            odd = list1[i];\n        }\n        i++;\n    }\n    return even - odd;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-3\n\nshould loosely deep-equal\n\n3\n    at test (/tmp/tmp7og252m2.js:20:12)\n    at Object.<anonymous> (/tmp/tmp7og252m2.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -3,\n  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    let diff: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    diff = even - odd;\n    return diff;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    let diff: number = 0;\n    for (let i: number = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i: number = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    diff = even - odd;\n    return diff;\n}\nlet list1: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(diff_even_odd(list1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even = 0;\n    let odd = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "1\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 1) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even = 0;\n    let odd = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(diff_even_odd([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "1\n-1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "1\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 1) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6]));\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "1\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even = 0;\n    let odd = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i: number = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i: number = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    let result: number;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    result = even - odd;\n    return result;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even = 0;\n    let odd = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i: number = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i: number = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    let result: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    result = even - odd;\n    return result;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n  let even: number = 0;\n  let odd: number = 0;\n  for (let i = 0; i < list1.length; i++) {\n    if (list1[i] % 2 == 0) {\n      even = list1[i];\n      break;\n    }\n  }\n  for (let i = 0; i < list1.length; i++) {\n    if (list1[i] % 2 != 0) {\n      odd = list1[i];\n      break;\n    }\n  }\n  return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even = 0;\n    let odd = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6]));\nconsole.log(diff_even_odd([1, 3, 5, 7, 9]));\nconsole.log(diff_even_odd([2, 4, 6, 8, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "1\n-1\n2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    let diff: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    diff = even - odd;\n    return diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    let i: number = 0;\n    let j: number = 0;\n    while (i < list1.length) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n        i++;\n    }\n    while (j < list1.length) {\n        if (list1[j] % 2 != 0) {\n            odd = list1[j];\n            break;\n        }\n        j++;\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    let diff: number = 0;\n\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    diff = even - odd;\n    return diff;\n}\n\nlet list1: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(diff_even_odd(list1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n  let even: number = 0;\n  let odd: number = 0;\n  for (let i = 0; i < list1.length; i++) {\n    if (list1[i] % 2 == 0) {\n      even = list1[i];\n      break;\n    }\n  }\n  for (let i = 0; i < list1.length; i++) {\n    if (list1[i] % 2 != 0) {\n      odd = list1[i];\n      break;\n    }\n  }\n  return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    let diff: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    diff = even - odd;\n    return diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    let result: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    result = even - odd;\n    return result;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(diff_even_odd([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "1\n-1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even = 0;\n    let odd = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even = 0;\n    let odd = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even = 0;\n    let odd = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    let i: number = 0;\n    while (even == 0 || odd == 0) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n        }\n        else {\n            odd = list1[i];\n        }\n        i++;\n    }\n    return even - odd;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-3\n\nshould loosely deep-equal\n\n3\n    at test (/tmp/tmp7og252m2.js:20:12)\n    at Object.<anonymous> (/tmp/tmp7og252m2.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -3,\n  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    let diff: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    diff = even - odd;\n    return diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even_num: number = 0;\n    let odd_num: number = 0;\n    let count: number = 0;\n    let i: number = 0;\n    while (count < 2) {\n        if (list1[i] % 2 == 0) {\n            even_num = list1[i];\n            count++;\n        }\n        else {\n            odd_num = list1[i];\n            count++;\n        }\n        i++;\n    }\n    return even_num - odd_num;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-3\n\nshould loosely deep-equal\n\n3\n    at test (/tmp/tmpvafs5bts.js:24:12)\n    at Object.<anonymous> (/tmp/tmpvafs5bts.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -3,\n  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    let diff: number;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 1) {\n            odd = list1[i];\n            break;\n        }\n    }\n    diff = even - odd;\n    return diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even_number: number = 0;\n    let odd_number: number = 0;\n    let is_even_found: boolean = false;\n    let is_odd_found: boolean = false;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even_number = list1[i];\n            is_even_found = true;\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd_number = list1[i];\n            is_odd_found = true;\n            break;\n        }\n    }\n    if (is_even_found && is_odd_found) {\n        return even_number - odd_number;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(diff_even_odd([1, 3, 5, 7, 9]));\nconsole.log(diff_even_odd([2, 4, 6, 8, 10]));\nconsole.log(diff_even_odd([]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "1\n1\n0\n0\n0\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n  let even: number = 0;\n  let odd: number = 0;\n  for (let i = 0; i < list1.length; i++) {\n    if (list1[i] % 2 == 0) {\n      even = list1[i];\n      break;\n    }\n  }\n  for (let i = 0; i < list1.length; i++) {\n    if (list1[i] % 2 != 0) {\n      odd = list1[i];\n      break;\n    }\n  }\n  return even - odd;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    let result: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    result = even - odd;\n    return result;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even = 0;\n    let odd = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i: number = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i: number = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even = 0;\n    let odd = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even = 0;\n    let odd = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    let diff: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    diff = even - odd;\n    return diff;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n  let even: number = 0;\n  let odd: number = 0;\n  for (let i = 0; i < list1.length; i++) {\n    if (list1[i] % 2 == 0) {\n      even = list1[i];\n      break;\n    }\n  }\n  for (let i = 0; i < list1.length; i++) {\n    if (list1[i] % 2 != 0) {\n      odd = list1[i];\n      break;\n    }\n  }\n  return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123502,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    let result: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    result = even - odd;\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n  let even = 0;\n  let odd = 0;\n  for (let i = 0; i < list1.length; i++) {\n    if (list1[i] % 2 == 0) {\n      even = list1[i];\n      break;\n    }\n  }\n  for (let i = 0; i < list1.length; i++) {\n    if (list1[i] % 2 != 0) {\n      odd = list1[i];\n      break;\n    }\n  }\n  return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123501,
      "stdout": "1\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n  let even: number = 0;\n  let odd: number = 0;\n  for (let i = 0; i < list1.length; i++) {\n    if (list1[i] % 2 == 0) {\n      even = list1[i];\n      break;\n    }\n  }\n  for (let i = 0; i < list1.length; i++) {\n    if (list1[i] % 2 != 0) {\n      odd = list1[i];\n      break;\n    }\n  }\n  return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123502,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    let result: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    result = even - odd;\n    return result;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    let result: number;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    result = even - odd;\n    return result;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6]));\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7]));\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8]));\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123502,
      "stdout": "1\n1\n1\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even = 0;\n    let odd = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even = 0;\n    let odd = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 1) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i: number = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i: number = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even = 0;\n    let odd = 0;\n    let result = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    result = even - odd;\n    return result;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123502,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n  let evenIndex = 0;\n  let oddIndex = 0;\n  for (let i = 0; i < list1.length; i++) {\n    if (list1[i] % 2 == 0) {\n      evenIndex = i;\n      break;\n    }\n  }\n  for (let i = 0; i < list1.length; i++) {\n    if (list1[i] % 2 != 0) {\n      oddIndex = i;\n      break;\n    }\n  }\n  return list1[evenIndex] - list1[oddIndex];\n}\n\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123502,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    let i: number = 0;\n    while (even == 0 || odd == 0) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n        }\n        else {\n            odd = list1[i];\n        }\n        i++;\n    }\n    return even - odd;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-3\n\nshould loosely deep-equal\n\n3\n    at test (/tmp/tmp7og252m2.js:20:12)\n    at Object.<anonymous> (/tmp/tmp7og252m2.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -3,\n  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    let diff: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    diff = even - odd;\n    return diff;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123502,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even_num: number = 0;\n    let odd_num: number = 0;\n    let count: number = 0;\n    let i: number = 0;\n    while (count < 2) {\n        if (list1[i] % 2 == 0) {\n            even_num = list1[i];\n            count += 1;\n        }\n        else {\n            odd_num = list1[i]\n            count += 1;\n        }\n        i++;\n    }\n    return even_num - odd_num;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123501,
      "stdout": "1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-3\n\nshould loosely deep-equal\n\n3\n    at test (/tmp/tmpcncsfj_s.js:24:12)\n    at Object.<anonymous> (/tmp/tmpcncsfj_s.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -3,\n  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even = 0;\n    let odd = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    let result: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    result = even - odd;\n    return result;\n}\n\nlet list1: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(diff_even_odd(list1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123502,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even = 0;\n    let odd = 0;\n    let i = 0;\n    while (even == 0 || odd == 0) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n        }\n        else {\n            odd = list1[i];\n        }\n        i++;\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123502,
      "stdout": "1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-3\n\nshould loosely deep-equal\n\n3\n    at test (/tmp/tmpwjbzg57k.js:21:12)\n    at Object.<anonymous> (/tmp/tmpwjbzg57k.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -3,\n  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i: number = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i: number = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    let result: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    result = even - odd;\n    return result;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(diff_even_odd([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "1\n-1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even_num: number = 0;\n    let odd_num: number = 0;\n    let result: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even_num = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd_num = list1[i];\n            break;\n        }\n    }\n    result = even_num - odd_num;\n    return result;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123502,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    let result: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    result = even - odd;\n    return result;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n  let even = 0;\n  let odd = 0;\n  for (let i = 0; i < list1.length; i++) {\n    if (list1[i] % 2 == 0) {\n      even = list1[i];\n      break;\n    }\n  }\n  for (let i = 0; i < list1.length; i++) {\n    if (list1[i] % 2 != 0) {\n      odd = list1[i];\n      break;\n    }\n  }\n  return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even_number: number = 0;\n    let odd_number: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even_number = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd_number = list1[i];\n            break;\n        }\n    }\n    return even_number - odd_number;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123502,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    let result: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    result = even - odd;\n    return result;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n  let even: number = 0;\n  let odd: number = 0;\n  for (let i = 0; i < list1.length; i++) {\n    if (list1[i] % 2 == 0) {\n      even = list1[i];\n      break;\n    }\n  }\n  for (let i = 0; i < list1.length; i++) {\n    if (list1[i] % 2 != 0) {\n      odd = list1[i];\n      break;\n    }\n  }\n  return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123502,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even = 0;\n    let odd = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nlet list1: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(diff_even_odd(list1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123502,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even_list: number[] = list1.filter(function (num) {\n        return num % 2 == 0;\n    });\n    let odd_list: number[] = list1.filter(function (num) {\n        return num % 2 != 0;\n    });\n    return even_list[0] - odd_list[0];\n}\n\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123502,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n  let even: number = 0;\n  let odd: number = 0;\n  for (let i = 0; i < list1.length; i++) {\n    if (list1[i] % 2 == 0) {\n      even = list1[i];\n      break;\n    }\n  }\n  for (let i = 0; i < list1.length; i++) {\n    if (list1[i] % 2 != 0) {\n      odd = list1[i];\n      break;\n    }\n  }\n  return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even_index = 0;\n    let odd_index = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even_index = i;\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd_index = i;\n            break;\n        }\n    }\n    return list1[even_index] - list1[odd_index];\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123502,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n  let even: number = 0;\n  let odd: number = 0;\n  for (let i = 0; i < list1.length; i++) {\n    if (list1[i] % 2 == 0) {\n      even = list1[i];\n      break;\n    }\n  }\n  for (let i = 0; i < list1.length; i++) {\n    if (list1[i] % 2 != 0) {\n      odd = list1[i];\n      break;\n    }\n  }\n  return even - odd;\n}\n\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n  let even: number = 0;\n  let odd: number = 0;\n  let i: number = 0;\n  while (i < list1.length) {\n    if (list1[i] % 2 == 0) {\n      even = list1[i];\n      break;\n    }\n    i++;\n  }\n  i = 0;\n  while (i < list1.length) {\n    if (list1[i] % 2 != 0) {\n      odd = list1[i];\n      break;\n    }\n    i++;\n  }\n  return even - odd;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    let result: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    result = even - odd;\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(\"Difference of first even and first odd number of a given array is: \" + diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123502,
      "stdout": "Difference of first even and first odd number of a given array is: 1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even = 0;\n    let odd = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i: number = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i: number = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\n\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123502,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    let diff: number = 0;\n    for (let i: number = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i: number = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    diff = even - odd;\n    return diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i: number = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i: number = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even_index = 0;\n    let odd_index = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even_index = i;\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd_index = i;\n            break;\n        }\n    }\n    return list1[even_index] - list1[odd_index];\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123502,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    let result: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    result = even - odd;\n    return result;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    let result: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    result = even - odd;\n    return result;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123502,
      "stdout": "1\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    let i: number = 0;\n    while (even == 0 || odd == 0) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n        } else {\n            odd = list1[i];\n        }\n        i++;\n    }\n    return even - odd;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-3\n\nshould loosely deep-equal\n\n3\n    at test (/tmp/tmp_8ktpksw.js:20:12)\n    at Object.<anonymous> (/tmp/tmp_8ktpksw.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -3,\n  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n  let even = 0;\n  let odd = 0;\n  for (let i = 0; i < list1.length; i++) {\n    if (list1[i] % 2 == 0) {\n      even = list1[i];\n      break;\n    }\n  }\n  for (let i = 0; i < list1.length; i++) {\n    if (list1[i] % 2 != 0) {\n      odd = list1[i];\n      break;\n    }\n  }\n  return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123502,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even = 0;\n    let odd = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even = 0;\n    let odd = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    let diff: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    diff = even - odd;\n    return diff;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even_num: number = 0;\n    let odd_num: number = 0;\n    let count: number = 0;\n    let i: number = 0;\n    while (count < 2) {\n        if (list1[i] % 2 == 0) {\n            even_num = list1[i];\n            count++;\n        }\n        else {\n            odd_num = list1[i];\n            count++;\n        }\n        i++;\n    }\n    return even_num - odd_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123503,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-3\n\nshould loosely deep-equal\n\n3\n    at test (/tmp/tmprf7dn21l.js:23:12)\n    at Object.<anonymous> (/tmp/tmprf7dn21l.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -3,\n  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    let result: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    result = even - odd;\n    return result;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    let diff: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    diff = even - odd;\n    return diff;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n  let even: number = 0;\n  let odd: number = 0;\n  for (let i = 0; i < list1.length; i++) {\n    if (list1[i] % 2 == 0) {\n      even = list1[i];\n      break;\n    }\n  }\n  for (let i = 0; i < list1.length; i++) {\n    if (list1[i] % 2 != 0) {\n      odd = list1[i];\n      break;\n    }\n  }\n  return even - odd;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    let i: number = 0;\n    while (even == 0 || odd == 0) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n        }\n        else {\n            odd = list1[i];\n        }\n        i++;\n    }\n    return even - odd;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-3\n\nshould loosely deep-equal\n\n3\n    at test (/tmp/tmp7og252m2.js:20:12)\n    at Object.<anonymous> (/tmp/tmp7og252m2.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -3,\n  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    let i: number = 0;\n    while (i < list1.length) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n        i++;\n    }\n    i = 0;\n    while (i < list1.length) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n        i++;\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665517498,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given array.\nfunction diff_even_odd(list1: number[]): number {\n    let even: number = 0;\n    let odd: number = 0;\n    for (let i: number = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (let i: number = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconsole.log(diff_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
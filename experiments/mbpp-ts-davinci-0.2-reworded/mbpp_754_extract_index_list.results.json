{
  "name": "mbpp_754_extract_index_list",
  "language": "ts",
  "prompt": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_754_extract_index_list.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let common_list: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            common_list.push(l1[i]);\n        }\n    }\n    return common_list;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let common_elements: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            common_elements.push(l1[i]);\n        }\n    }\n    return common_elements;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let common_elements: number[] = [];\n    let index: number = 0;\n\n    while (index < l1.length && index < l2.length && index < l3.length) {\n        if (l1[index] === l2[index] && l2[index] === l3[index]) {\n            common_elements.push(l1[index]);\n        }\n        index++;\n    }\n    return common_elements;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "../../../../tmp/tmp7c2zix10.ts(23,1): error TS1005: ',' expected.\n../../../../tmp/tmp7c2zix10.ts(23,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510023,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510023,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let l4: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            l4.push(l1[i]);\n        }\n    }\n    return l4;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "../../../../tmp/tmp9s53vdco.ts(22,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3], [2, 3, 4], [3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510023,
      "stdout": "[]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i: number = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let common_elements: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            common_elements.push(l1[i]);\n        }\n    }\n    return common_elements;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "../../../../tmp/tmpxr9h3wg5.ts(22,1): error TS1005: ',' expected.\n../../../../tmp/tmpxr9h3wg5.ts(22,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let common_elements: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            common_elements.push(l1[i]);\n        }\n    }\n    return common_elements;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let common_elements: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            common_elements.push(l1[i]);\n        }\n    }\n    return common_elements;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let common_elements: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l1[i] === l3[i]) {\n            common_elements.push(l1[i]);\n        }\n    }\n    return common_elements;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let l: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            l.push(l1[i]);\n        }\n    }\n    return l;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i: number = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let common_elements: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            common_elements.push(l1[i]);\n        }\n    }\n    return common_elements;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let common: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            common.push(l1[i]);\n        }\n    }\n    return common;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let l4: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            l4.push(l1[i]);\n        }\n    }\n    return l4;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let l1_l2_common = l1.filter(x => l2.indexOf(x) != -1);\n    let l1_l2_l3_common = l1_l2_common.filter(x => l3.indexOf(x) != -1);\n    return l1_l2_l3_common;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1,\n  3,\n  4,\n  5,\n  7\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  7\n]\n    at test (/tmp/tmpcwbviwtz.js:10:12)\n    at Object.<anonymous> (/tmp/tmpcwbviwtz.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1, 3, 4, 5, 7 ],\n  expected: [ 1, 7 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]));\nconsole.log(extract_index_list([1, 2\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "../../../../tmp/tmpp7c0ad2u.ts(21,1): error TS1005: ',' expected.\n../../../../tmp/tmpp7c0ad2u.ts(21,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [2, 3, 4, 5, 6], [3, 4, 5, 6, 7]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "[]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510023,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [2, 3, 4, 5, 6], [3, 4, 5, 6, 7]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "[]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [2, 3, 4, 5, 6], [3, 4, 5, 6, 7]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "[]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]));\nconsole.log(extract_index_list([1, 2\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "../../../../tmp/tmpp7c0ad2u.ts(21,1): error TS1005: ',' expected.\n../../../../tmp/tmpp7c0ad2u.ts(21,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i: number = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let l4: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            l4.push(l1[i]);\n        }\n    }\n    return l4;\n}\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4], [2, 3, 4, 5], [3, 4, 5, 6]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "[]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l1[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let l: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            l.push(l1[i]);\n        }\n    }\n    return l;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let common_elements: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            common_elements.push(l1[i]);\n        }\n    }\n    return common_elements;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]));\nconsole.log(extract_index_list([1, 2\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "../../../../tmp/tmpp7c0ad2u.ts(21,1): error TS1005: ',' expected.\n../../../../tmp/tmpp7c0ad2u.ts(21,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "../../../../tmp/tmpoprgpwjx.ts(22,1): error TS1005: ',' expected.\n../../../../tmp/tmpoprgpwjx.ts(22,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510023,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n  let result: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if (l1[i] === l2[i] && l2[i] === l3[i]) {\n      result.push(l1[i]);\n    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l1[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let list: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            list.push(l1[i]);\n        }\n    }\n    return list;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let common_elements: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            common_elements.push(l1[i]);\n        }\n    }\n    return common_elements;\n}\n\nconsole.log(extract_index_list([1, 2, 3], [2, 3, 4], [3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123076,
      "stdout": "[]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l1[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let l4: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l1[i] === l3[i]) {\n            l4.push(l1[i]);\n        }\n    }\n    return l4;\n}\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]));\nconsole.log(extract_index_list([1, 2\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "../../../../tmp/tmpp7c0ad2u.ts(21,1): error TS1005: ',' expected.\n../../../../tmp/tmpp7c0ad2u.ts(21,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n  let result: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if (l1[i] === l2[i] && l2[i] === l3[i]) {\n      result.push(l1[i]);\n    }\n  }\n  return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5, 6], [2, 4, 6, 8, 10, 12], [3, 6, 9, 12, 15, 18]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "[]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l1[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [2, 3, 4, 5, 6], [3, 4, 5, 6, 7]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "[]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    var result: any = [];\n    for (var i = 0; i < l1.length; i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\nconsole.log(extract_index_list([1, 2, 3], [2, 3, 4], [3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "[]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let l4: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            l4.push(l1[i]);\n        }\n    }\n    return l4;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i: number = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510023,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let common_list: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            common_list.push(l1[i]);\n        }\n    }\n    return common_list;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let common_list: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            common_list.push(l1[i]);\n        }\n    }\n    return common_list;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i: number = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l1[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [2, 3, 4, 5, 6], [3, 4, 5, 6, 7]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "[]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i: number = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]));\nconsole.log(extract_index_list([1\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "../../../../tmp/tmpwzpjraxg.ts(21,1): error TS1005: ',' expected.\n../../../../tmp/tmpwzpjraxg.ts(21,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let common_elements: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            common_elements.push(l1[i]);\n        }\n    }\n    return common_elements;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l1[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l1[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]));\nconsole.log(extract_index_list([1, 2\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "../../../../tmp/tmpp7c0ad2u.ts(21,1): error TS1005: ',' expected.\n../../../../tmp/tmpp7c0ad2u.ts(21,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510023,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i: number = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let l: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            l.push(l1[i]);\n        }\n    }\n    return l;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let l4: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            l4.push(l1[i]);\n        }\n    }\n    return l4;\n}\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let common_list: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            common_list.push(l1[i]);\n        }\n    }\n    return common_list;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let common_elements: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l1[i] === l3[i]) {\n            common_elements.push(l1[i]);\n        }\n    }\n    return common_elements;\n}\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3,\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "../../../../tmp/tmpxqnx83ei.ts(21,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l1[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let l4: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l1[i] === l3[i]) {\n            l4.push(l1[i]);\n        }\n    }\n    return l4;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    let minLength: number = Math.min(l1.length, l2.length, l3.length);\n    for (let i: number = 0; i < minLength; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i: number = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [2, 3, 4, 5, 6], [3, 4, 5, 6, 7]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "[]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "../../../../tmp/tmpoprgpwjx.ts(22,1): error TS1005: ',' expected.\n../../../../tmp/tmpoprgpwjx.ts(22,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l1[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [2, 4, 6, 8, 10], [3, 6, 9, 12, 15]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "[]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "../../../../tmp/tmpoprgpwjx.ts(22,1): error TS1005: ',' expected.\n../../../../tmp/tmpoprgpwjx.ts(22,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "../../../../tmp/tmpoprgpwjx.ts(22,1): error TS1005: ',' expected.\n../../../../tmp/tmpoprgpwjx.ts(22,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]));\nconsole.log(extract_index_list([1, 2\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "../../../../tmp/tmpp7c0ad2u.ts(21,1): error TS1005: ',' expected.\n../../../../tmp/tmpp7c0ad2u.ts(21,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let list = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            list.push(l1[i]);\n        }\n    }\n    return list;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510023,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l1[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123079,
      "stdout": "[ 1, 2, 3, 4, 5, 6 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510023,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510023,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let common_elements: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            common_elements.push(l1[i]);\n        }\n    }\n    return common_elements;\n}\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3,\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123079,
      "stdout": "../../../../tmp/tmp9ze4o1rj.ts(21,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let common_elements: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            common_elements.push(l1[i]);\n        }\n    }\n    return common_elements;\n}\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123079,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l1[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "../../../../tmp/tmpoprgpwjx.ts(22,1): error TS1005: ',' expected.\n../../../../tmp/tmpoprgpwjx.ts(22,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l1[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n  let common_elements: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if (l1[i] === l2[i] && l2[i] === l3[i]) {\n      common_elements.push(l1[i]);\n    }\n  }\n  return common_elements;\n}\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123079,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let common_elements: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            common_elements.push(l1[i]);\n        }\n    }\n    return common_elements;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510023,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i: number = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 7]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7], [1, 2, 3, 4, 5, 7]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7], [1, 2, 3, 4, 5, 6, 7]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7], [1, 2, 3, 4, 5, 6, 7, 8]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5,\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123079,
      "stdout": "../../../../tmp/tmp2f02mixz.ts(21,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510023,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i: number = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123079,
      "stdout": "../../../../tmp/tmpsl5ogklx.ts(22,1): error TS1005: ',' expected.\n../../../../tmp/tmpsl5ogklx.ts(22,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let common_elements: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            common_elements.push(l1[i]);\n        }\n    }\n    return common_elements;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123079,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\nconsole.log(extract_index_list([1, 2, 3], [2, 3, 4], [3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123079,
      "stdout": "[]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l1[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]));\nconsole.log(extract_index_list([1, 2\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123079,
      "stdout": "../../../../tmp/tmpkt1ew0jd.ts(21,1): error TS1005: ',' expected.\n../../../../tmp/tmpkt1ew0jd.ts(21,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let common_elements: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            common_elements.push(l1[i]);\n        }\n    }\n    return common_elements;\n}\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123079,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123079,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n  let result: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if (l1[i] == l2[i] && l2[i] == l3[i]) {\n      result.push(l1[i]);\n    }\n  }\n  return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123079,
      "stdout": "../../../../tmp/tmp4erxwlwj.ts(22,1): error TS1005: ',' expected.\n../../../../tmp/tmp4erxwlwj.ts(22,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let common_elements: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l1[i] === l3[i]) {\n            common_elements.push(l1[i]);\n        }\n    }\n    return common_elements;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123079,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: any = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3], [2, 3, 4], [3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123079,
      "stdout": "[]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510023,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: any = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123079,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let common_list: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            common_list.push(l1[i]);\n        }\n    }\n    return common_list;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n  let common_list: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if (l1[i] === l2[i] && l1[i] === l3[i]) {\n      common_list.push(l1[i]);\n    }\n  }\n  return common_list;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123079,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510023,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let l4: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l1[i] === l3[i]) {\n            l4.push(l1[i]);\n        }\n    }\n    return l4;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [2, 3, 4, 5, 6], [3, 4, 5, 6, 7]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "[]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let common_elements: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            common_elements.push(l1[i]);\n        }\n    }\n    return common_elements;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l1[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n  let result: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if (l1[i] === l2[i] && l2[i] === l3[i]) {\n      result.push(l1[i]);\n    }\n  }\n  return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123079,
      "stdout": "../../../../tmp/tmpoaq0x1at.ts(22,1): error TS1005: ',' expected.\n../../../../tmp/tmpoaq0x1at.ts(22,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123080,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let common_list: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            common_list.push(l1[i]);\n        }\n    }\n    return common_list;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123079,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l1[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [2, 3, 4, 5, 6], [3, 4, 5, 6, 7]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "[]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "../../../../tmp/tmpoprgpwjx.ts(22,1): error TS1005: ',' expected.\n../../../../tmp/tmpoprgpwjx.ts(22,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i: number = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l1[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(extract_index_list([1, 2, 3, 4, 5], [1, 2\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "../../../../tmp/tmpoprgpwjx.ts(22,1): error TS1005: ',' expected.\n../../../../tmp/tmpoprgpwjx.ts(22,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: any = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1666123079,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list(l1: number[], l2: number[], l3: number[]): any {\n    let result: number[] = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l1[i] === l2[i] && l2[i] === l3[i]) {\n            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_index_list;\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6]);\n  assert.deepEqual(candidate([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[]);\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
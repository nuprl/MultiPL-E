{
  "name": "mbpp_297_flatten_list",
  "language": "ts",
  "prompt": "//Write a function to flatten a given nested array structure.\nfunction flatten_list(list1: any): number[] {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_297_flatten_list.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = flatten_list;\n  assert.deepEqual(candidate([0, 10, [20, 30], 40, 50, [60, 70, 80], [90, 100, 110, 120]]),[0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120]);\n  assert.deepEqual(candidate([[10, 20], [40], [30, 56, 25], [10, 20], [33], [40]]),[10, 20, 40, 30, 56, 25, 10, 20, 33, 40]);\n  assert.deepEqual(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]),[1, 2, 3, 4, 5, 6, 10, 11, 12, 7, 8, 9]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let list2: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (Array.isArray(list1[i])) {\n            list2 = list2.concat(flatten_list(list1[i]));\n        } else {\n            list2.push(list1[i]);\n        }\n    }\n    return list2;\n}\n\nlet list1 = [1, [2, [3, 4], [[5]]]];\nconsole.log(flatten_list(list1));\n",
    "    let list2: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (typeof list1[i] == \"number\") {\n            list2.push(list1[i]);\n        } else {\n            list2 = list2.concat(flatten_list(list1[i]));\n        }\n    }\n    return list2;\n}\n\nconsole.log(flatten_list([1, [2, 3], [4, [5, 6]]]));\n",
    "    let list2: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (Array.isArray(list1[i])) {\n            list2 = list2.concat(flatten_list(list1[i]));\n        } else {\n            list2.push(list1[i]);\n        }\n    }\n    return list2;\n}\n\nconsole.log(flatten_list([1, [2, [3, 4], [[5]]]]));\n",
    "    let list2: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (Array.isArray(list1[i])) {\n            list2 = list2.concat(flatten_list(list1[i]));\n        } else {\n            list2.push(list1[i]);\n        }\n    }\n    return list2;\n}\n\nconsole.log(flatten_list([1, [2, [3, [4, 5], 6], 7], 8]));\n",
    "    let list2: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (Array.isArray(list1[i])) {\n            list2 = list2.concat(flatten_list(list1[i]));\n        } else {\n            list2.push(list1[i]);\n        }\n    }\n    return list2;\n}\n",
    "    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (typeof list1[i] === \"number\") {\n            result.push(list1[i]);\n        } else {\n            result = result.concat(flatten_list(list1[i]));\n        }\n    }\n    return result;\n}\n\nconsole.log(flatten_list([1, [2, [3, 4], [[5]]]]));\n",
    "    let list2: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (typeof list1[i] == 'number') {\n            list2.push(list1[i]);\n        } else {\n            list2 = list2.concat(flatten_list(list1[i]));\n        }\n    }\n    return list2;\n}\n\nconsole.log(flatten_list([1, [2, 3], [[4, 5], 6]]));\n",
    "    let list2: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (typeof list1[i] === \"number\") {\n            list2.push(list1[i]);\n        } else {\n            list2 = list2.concat(flatten_list(list1[i]));\n        }\n    }\n    return list2;\n}\n\nconsole.log(flatten_list([1, [2, [3, 4], [[5]]]]));\nconsole.log(flatten_list([[1, [1, 1]], [2, [2, 2]], [3, [3, 3]]]));\nconsole.log(flatten_list([[[3]], [4], 5]));\nconsole.log(flatten_list([[[3]]]));\nconsole.log(flatten_list([]));\n",
    "    let list2: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (Array.isArray(list1[i])) {\n            list2 = list2.concat(flatten_list(list1[i]));\n        } else {\n            list2.push(list1[i]);\n        }\n    }\n    return list2;\n}\n\nconsole.log(flatten_list([1, [2, [3, 4], [[5]]]]));\nconsole.log(flatten_list([[1, [1, 1]], [2, [2, 2]], [3, [3, 3]]]));\n",
    "    let list2: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (typeof list1[i] == \"number\") {\n            list2.push(list1[i]);\n        } else {\n            list2 = list2.concat(flatten_list(list1[i]));\n        }\n    }\n    return list2;\n}\n\nconsole.log(flatten_list([1, [2, [3, 4], [[5]]]]));\n",
    "    let list2: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (Array.isArray(list1[i])) {\n            list2 = list2.concat(flatten_list(list1[i]));\n        } else {\n            list2.push(list1[i]);\n        }\n    }\n    return list2;\n}\n\nconsole.log(flatten_list([1, [2, [3, 4], [[5]]]]));\n",
    "    let list2: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (Array.isArray(list1[i])) {\n            list2 = list2.concat(flatten_list(list1[i]));\n        } else {\n            list2.push(list1[i]);\n        }\n    }\n    return list2;\n}\n\nconsole.log(flatten_list([1, [2, 3], [[4, 5], 6]]));\n",
    "    let list2: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (typeof list1[i] == 'number') {\n            list2.push(list1[i]);\n        } else {\n            list2 = list2.concat(flatten_list(list1[i]));\n        }\n    }\n    return list2;\n}\n\nconsole.log(flatten_list([1, [2, 3], [[4], [5, 6, [7, 8, [9]]]]]));\n",
    "    let list2: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (typeof list1[i] === 'number') {\n            list2.push(list1[i]);\n        } else {\n            list2 = list2.concat(flatten_list(list1[i]));\n        }\n    }\n    return list2;\n}\n\nconsole.log(flatten_list([[1, 2, [3, 4]], [5, 6], 7]));\n",
    "    let list2: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (typeof list1[i] == 'number') {\n            list2.push(list1[i]);\n        } else {\n            list2 = list2.concat(flatten_list(list1[i]));\n        }\n    }\n    return list2;\n}\n\nconsole.log(flatten_list([1, [2, 3], [4, [5, 6]]]));\n",
    "    let list2: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (Array.isArray(list1[i])) {\n            list2 = list2.concat(flatten_list(list1[i]));\n        } else {\n            list2.push(list1[i]);\n        }\n    }\n    return list2;\n}\n",
    "    let list2: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (Array.isArray(list1[i])) {\n            list2 = list2.concat(flatten_list(list1[i]));\n        } else {\n            list2.push(list1[i]);\n        }\n    }\n    return list2;\n}\n\nconsole.log(flatten_list([1, 2, [3, 4], [5, 6]]));\nconsole.log(flatten_list([1, [2, [3, 4], [[5], 6]]]));\n",
    "    let list2: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (typeof list1[i] == \"number\") {\n            list2.push(list1[i]);\n        } else {\n            list2 = list2.concat(flatten_list(list1[i]));\n        }\n    }\n    return list2;\n}\n\nconsole.log(flatten_list([1, [2, [3, 4], [[5]]]]));\n",
    "    let flat_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (Array.isArray(list1[i])) {\n            flat_list = flat_list.concat(flatten_list(list1[i]));\n        } else {\n            flat_list.push(list1[i]);\n        }\n    }\n    return flat_list;\n}\n\nconsole.log(flatten_list([1, [2, [3, 4], [[5]]]]));\n",
    "    let list2: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (typeof list1[i] === \"number\") {\n            list2.push(list1[i]);\n        } else {\n            list2 = list2.concat(flatten_list(list1[i]));\n        }\n    }\n    return list2;\n}\n\nconsole.log(flatten_list([1, [2, 3], [[4, 5], 6]]));\n"
  ]
}
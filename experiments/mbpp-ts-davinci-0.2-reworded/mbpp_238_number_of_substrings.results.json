{
  "name": "mbpp_238_number_of_substrings",
  "language": "ts",
  "prompt": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_238_number_of_substrings.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(number_of_substrings(\"w3resource\"));\nconsole.log(number_of_substrings(\"w3\"));\nconsole.log(number_of_substrings(\"w\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings(\"abc\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        for (let j: number = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n  let count: number = 0;\n  for (let i: number = 0; i < str.length; i++) {\n    for (let j: number = i + 1; j <= str.length; j++) {\n      if (str.substring(i, j)) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        for (let j: number = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(number_of_substrings(\"w3resource\"));\nconsole.log(number_of_substrings(\"w3\"));\nconsole.log(number_of_substrings(\"w\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        for (let j: number = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        for (let j: number = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122645,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        for (let j: number = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings(\"w3resource\"));\nconsole.log(number_of_substrings(\"w3\"));\nconsole.log(number_of_substrings(\"w\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122645,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n  let count = 0;\n  for (let i = 0; i < str.length; i++) {\n    for (let j = i + 1; j <= str.length; j++) {\n      if (str.slice(i, j)) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconsole.log(number_of_substrings(\"w3resource\"));\nconsole.log(number_of_substrings(\"w3\"));\nconsole.log(number_of_substrings(\"w\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122645,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        for (let j: number = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings(\"w3resource\"));\nconsole.log(number_of_substrings(\"w3\"));\nconsole.log(number_of_substrings(\"w\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122645,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        for (let j: number = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(number_of_substrings(\"w3resource\"));\nconsole.log(number_of_substrings(\"w3\"));\nconsole.log(number_of_substrings(\"w\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n  let count = 0;\n  for (let i = 0; i < str.length; i++) {\n    for (let j = i + 1; j <= str.length; j++) {\n      if (str.slice(i, j) !== '') {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122645,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings(\"w3resource\"));\nconsole.log(number_of_substrings(\"w3\"));\nconsole.log(number_of_substrings(\"w\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122645,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings(\"abc\"));\nconsole.log(number_of_substrings(\"aaaa\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122645,
      "stdout": "6\n10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let result: number = str.length;\n    for (let i: number = 0; i < str.length; i++) {\n        for (let j: number = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j) !== '') {\n                result++;\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpwydxoifk.js:16:12)\n    at Object.<anonymous> (/tmp/tmpwydxoifk.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        for (let j: number = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        for (let j: number = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings(\"w3resource\"));\nconsole.log(number_of_substrings(\"w3\"));\nconsole.log(number_of_substrings(\"w\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122645,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings(\"abc\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n  let count = 0;\n  for (let i = 0; i < str.length; i++) {\n    for (let j = i + 1; j <= str.length; j++) {\n      if (str.substring(i, j)) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\nconsole.log(number_of_substrings(\"w3resource\"));\nconsole.log(number_of_substrings(\"w3\"));\nconsole.log(number_of_substrings(\"w\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122645,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        for (let j: number = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let result: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        for (let j: number = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                result++;\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        for (let j: number = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        for (let j: number = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings(\"w3resource\"));\nconsole.log(number_of_substrings(\"w3\"));\nconsole.log(number_of_substrings(\"w\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122645,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings(\"w3resource\"));\nconsole.log(number_of_substrings(\"w3\"));\nconsole.log(number_of_substrings(\"w\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122645,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n  let count = 0;\n  for (let i = 0; i < str.length; i++) {\n    for (let j = i + 1; j <= str.length; j++) {\n      if (str.substring(i, j)) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconsole.log(number_of_substrings(\"w3resource\"));\nconsole.log(number_of_substrings(\"w3\"));\nconsole.log(number_of_substrings(\"w\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122645,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        for (let j: number = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let result: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        for (let j: number = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                result++;\n            }\n        }\n    }\n    return result;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122645,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(number_of_substrings(\"w3resource\"));\nconsole.log(number_of_substrings(\"w3\"));\nconsole.log(number_of_substrings(\"w\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        for (let j: number = i + 1; j <= str.length; j++) {\n            let sub_str: string = str.substring(i, j);\n            if (sub_str.length > 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122645,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        for (let j: number = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n  let count = 0;\n  for (let i = 0; i < str.length; i++) {\n    for (let j = i + 1; j <= str.length; j++) {\n      if (str.substring(i, j)) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconsole.log(number_of_substrings(\"w3resource\"));\nconsole.log(number_of_substrings(\"w3\"));\nconsole.log(number_of_substrings(\"w\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122645,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings(\"abc\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        for (let j: number = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        for (let j: number = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        for (let j: number = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(number_of_substrings(\"w3resource\"));\nconsole.log(number_of_substrings(\"w3\"));\nconsole.log(number_of_substrings(\"w\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        for (let j: number = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122645,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        for (let j: number = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        for (let j: number = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        for (let j: number = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(number_of_substrings(\"w3resource\"));\nconsole.log(number_of_substrings(\"w3\"));\nconsole.log(number_of_substrings(\"w\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        for (let j: number = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        for (let j: number = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings(\"w3resource\"));\nconsole.log(number_of_substrings(\"w3\"));\nconsole.log(number_of_substrings(\"w\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122645,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        for (let j: number = i + 1; j <= str.length; j++) {\n            let sub_str: string = str.substring(i, j);\n            if (sub_str.length > 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122645,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(number_of_substrings(\"w3resource\"));\nconsole.log(number_of_substrings(\"w3\"));\nconsole.log(number_of_substrings(\"w\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings(\"abc\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        for (let j: number = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = 1; j <= str.length - i; j++) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122645,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        for (let j: number = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        for (let j: number = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(number_of_substrings(\"w3resource\"));\nconsole.log(number_of_substrings(\"w3\"));\nconsole.log(number_of_substrings(\"w\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122645,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        for (let j: number = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n  let count = 0;\n  for (let i = 0; i < str.length; i++) {\n    for (let j = i + 1; j <= str.length; j++) {\n      if (str.slice(i, j)) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconsole.log(number_of_substrings(\"w3resource\"));\nconsole.log(number_of_substrings(\"w3\"));\nconsole.log(number_of_substrings(\"w\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122645,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings(\"abc\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(number_of_substrings(\"w3resource\"));\nconsole.log(number_of_substrings(\"w3\"));\nconsole.log(number_of_substrings(\"w\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            let sub_str = str.substring(i, j);\n            if (sub_str.length > 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122645,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        for (let j: number = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let result: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        for (let j: number = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                result++;\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122645,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j) != \"\") {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(number_of_substrings(\"abc\"));\nconsole.log(number_of_substrings(\"aaaaa\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122645,
      "stdout": "6\n15\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(number_of_substrings(\"w3resource\"));\nconsole.log(number_of_substrings(\"w3\"));\nconsole.log(number_of_substrings(\"w\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        for (let j: number = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(number_of_substrings(\"w3resource\"));\nconsole.log(number_of_substrings(\"w3\"));\nconsole.log(number_of_substrings(\"w\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            let sub_str = str.substring(i, j);\n            if (sub_str.length > 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122645,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings(\"abc\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let result: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        for (let j: number = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                result++;\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(number_of_substrings(\"w3resource\"));\nconsole.log(number_of_substrings(\"w3\"));\nconsole.log(number_of_substrings(\"w\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        for (let j: number = i + 1; j < str.length + 1; j++) {\n            let sub_str: string = str.substring(i, j);\n            if (sub_str.length > 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122645,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(number_of_substrings(\"w3resource\"));\nconsole.log(number_of_substrings(\"w3\"));\nconsole.log(number_of_substrings(\"w\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        for (let j: number = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        for (let j: number = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510050,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(number_of_substrings('w3resource'));\nconsole.log(number_of_substrings('w3'));\nconsole.log(number_of_substrings('w'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122645,
      "stdout": "55\n3\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_8_square_nums",
  "language": "ts",
  "prompt": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_8_square_nums.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(n => n * n);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(x => x * x);\n}\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function (num) {\n        return num * num;\n    });\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function (num) {\n        return num * num;\n    });\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function (num) {\n        return num * num;\n    });\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function (num) {\n        return num * num;\n    });\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(n => n * n);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function (num) {\n        return num * num;\n    });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(n => n * n);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function (num) {\n        return num * num;\n    });\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function (num) {\n        return num * num;\n    });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(n => n * n);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function (num) {\n        return num * num;\n    });\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function (num) {\n        return num * num;\n    });\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function (num) {\n        return num * num;\n    });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(x => x * x);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(x => x * x);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function (num) {\n        return num * num;\n    });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(x => x * x);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    let squares: number[] = [];\n    for (let i = 0; i < nums.length; i++) {\n        squares.push(nums[i] * nums[i]);\n    }\n    return squares;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function (num) {\n        return num * num;\n    });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(n => n * n);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(n => n * n);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function (num) {\n        return num * num;\n    });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function (num) {\n        return num * num;\n    });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function (num) {\n        return num * num;\n    });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(x => x * x);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(x => x * x);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(x => x * x);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(x => x * x);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(x => x * x);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(x => x * x);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function (num) {\n        return num * num;\n    });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function (num) {\n        return num * num;\n    });\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function (num) {\n        return num * num;\n    });\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    let squares: number[] = [];\n    for (let i = 0; i < nums.length; i++) {\n        squares.push(nums[i] * nums[i]);\n    }\n    return squares;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(n => n * n);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(n => n * n);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(x => x * x);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(x => x * x);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(n => n * n);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function (num) {\n        return num * num;\n    });\n}\n\nconsole.log(square_nums([1, 2, 3]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "[ 1, 4, 9 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function(num) {\n        return num * num;\n    });\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(n => n * n);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(n => n * n);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function (num) {\n        return num * num;\n    });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(n => n * n);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(x => x * x);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function (num) {\n        return num * num;\n    });\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n  return nums.map(num => num * num);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function(num) {\n        return num * num;\n    });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(x => x * x);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map((n) => n * n);\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(n => n * n);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(x => x * x);\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function (num) {\n        return num * num;\n    });\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(x => x * x);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(x => x * x);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n  return nums.map(x => x * x);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(n => n * n);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(n => n * n);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(x => x * x);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function (num) {\n        return num * num;\n    });\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function (num) {\n        return num * num;\n    });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num ** 2);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(x => x * x);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(x => x * x);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function (num) {\n        return num * num;\n    });\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function (num) {\n        return num * num;\n    });\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(n => n * n);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function (num) {\n        return num * num;\n    });\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num ** 2);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(x => x * x);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(x => x * x);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num ** 2);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(n => n * n);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(n => n * n);\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function (num) {\n        return num * num;\n    });\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(x => x * x);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function (num) {\n        return num * num;\n    });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    let squares: number[] = [];\n    for (let num of nums) {\n        squares.push(num * num);\n    }\n    return squares;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function (num) {\n        return num * num;\n    });\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function (num) {\n        return num * num;\n    });\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n  return nums.map((num) => num ** 2);\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(x => x * x);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(n => n * n);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(x => x * x);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    let squares: number[] = [];\n    for (let i = 0; i < nums.length; i++) {\n        squares.push(nums[i] * nums[i]);\n    }\n    return squares;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(x => x * x);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function (num) {\n        return num * num;\n    });\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function (num) {\n        return num * num;\n    });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(x => x * x);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    var squares: number[] = [];\n    for (var i = 0; i < nums.length; i++) {\n        squares.push(nums[i] * nums[i]);\n    }\n    return squares;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(n => n * n);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(x => x * x);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function (num) {\n        return num * num;\n    });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n  return nums.map(function (num) {\n    return num * num;\n  });\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(x => x * x);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function (num) {\n        return num * num;\n    });\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(x => x * x);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function (num) {\n        return num * num;\n    });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function (num) {\n        return num * num;\n    });\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function (num) {\n        return num * num;\n    });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function (num) {\n        return num * num;\n    });\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n  return nums.map(num => num * num);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(x => x * x);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(x => x * x);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(x => x * x);\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function (num) {\n        return num * num;\n    });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(x => x * x);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function (num) {\n        return num * num;\n    });\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(x => x * x);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function (num) {\n        return num * num;\n    });\n}\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(x => x * x);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(n => n * n);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function (num) {\n        return num * num;\n    });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(n => n * n);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(x => x * x);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < nums.length; i++) {\n        result.push(nums[i] * nums[i]);\n    }\n    return result;\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(x => x * x);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function (num) {\n        return num * num;\n    });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(x => x * x);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(x => x * x);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function(num) {\n        return num * num;\n    });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function (num) {\n        return num * num;\n    });\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(x => x * x);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function (num) {\n        return num * num;\n    });\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function (num) {\n        return num * num;\n    });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(n => n * n);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(x => x * x);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num ** 2);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function (num) {\n        return num * num;\n    });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(function (num) {\n        return num * num;\n    });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(n => n * n);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(n => n * n);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(x => x * x);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num ** 2);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find squares of individual elements in an array.\nfunction square_nums(nums: number[]): number[] {\n    return nums.map(num => num * num);\n}\n\nconsole.log(square_nums([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = square_nums;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n  assert.deepEqual(candidate([10, 20, 30]),[100, 400, 900]);\n  assert.deepEqual(candidate([12, 15]),[144, 225]);\n}\n\ntest();",
      "timestamp": 1665509671,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
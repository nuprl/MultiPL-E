{
  "name": "mbpp_123_amicable_numbers_sum",
  "language": "ts",
  "prompt": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_123_amicable_numbers_sum.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let divisors_sum = divisors_sum_of(i);\n        if (divisors_sum > i && divisors_sum_of(divisors_sum) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpopmqm344.ts(5,28): error TS2304: Cannot find name 'divisors_sum_of'.\n../../../../tmp/tmpopmqm344.ts(6,33): error TS2304: Cannot find name 'divisors_sum_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let divisors_sum = sum_of_divisors(i);\n        if (divisors_sum > i && sum_of_divisors(divisors_sum) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmp944q6o15.ts(5,28): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp944q6o15.ts(6,33): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (b == i && a != b) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmp8fgec4z7.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp8fgec4z7.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpe97k6qtw.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpe97k6qtw.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let result: number = 0;\n    for (let i: number = 1; i < limit; i++) {\n        let sum_of_divisors: number = sum_of_divisors_of(i);\n        if (sum_of_divisors > i) {\n            let sum_of_divisors_of_sum_of_divisors: number = sum_of_divisors_of(sum_of_divisors);\n            if (sum_of_divisors_of_sum_of_divisors == i) {\n                result += i;\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmp8e9zxatd.ts(5,39): error TS2304: Cannot find name 'sum_of_divisors_of'.\n../../../../tmp/tmp8e9zxatd.ts(7,62): error TS2304: Cannot find name 'sum_of_divisors_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (b == i && a != b) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmp8ujls_hy.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp8ujls_hy.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        if (is_amicable(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpnu7_aqxg.ts(5,13): error TS2304: Cannot find name 'is_amicable'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let divisors = get_divisors(i);\n        let divisors_sum = divisors.reduce((a, b) => a + b);\n        let divisors_divisors = get_divisors(divisors_sum);\n        let divisors_divisors_sum = divisors_divisors.reduce((a, b) => a + b);\n        if (divisors_divisors_sum === i && divisors_sum !== i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpz7io144i.ts(5,24): error TS2304: Cannot find name 'get_divisors'.\n../../../../tmp/tmpz7io144i.ts(7,33): error TS2304: Cannot find name 'get_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= limit; i++) {\n        let sum_divisors_i: number = sum_divisors(i);\n        if (sum_divisors_i > i) {\n            let sum_divisors_sum_divisors_i: number = sum_divisors(sum_divisors_i);\n            if (sum_divisors_sum_divisors_i === i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpfcz11sv4.ts(5,38): error TS2552: Cannot find name 'sum_divisors'. Did you mean 'sum_divisors_i'?\n../../../../tmp/tmpfcz11sv4.ts(7,55): error TS2552: Cannot find name 'sum_divisors'. Did you mean 'sum_divisors_i'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let sum_of_divisors = sum_of_divisors_of(i);\n        if (sum_of_divisors > i) {\n            let sum_of_divisors_of_sum_of_divisors = sum_of_divisors_of(sum_of_divisors);\n            if (sum_of_divisors_of_sum_of_divisors == i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpiilr5oz_.ts(5,31): error TS2304: Cannot find name 'sum_of_divisors_of'.\n../../../../tmp/tmpiilr5oz_.ts(7,54): error TS2304: Cannot find name 'sum_of_divisors_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        if (is_amicable_number(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpjei0cux1.ts(5,13): error TS2304: Cannot find name 'is_amicable_number'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= limit; i++) {\n        let a: number = sum_of_divisors(i);\n        let b: number = sum_of_divisors(a);\n        if (b == i && a != b) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmp31e0dnef.ts(5,25): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp31e0dnef.ts(6,25): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i == b && i != a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmp28zhp6rh.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp28zhp6rh.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i === b && i !== a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpnvxm91pm.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpnvxm91pm.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) == i) {\n            sum += i + a;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpwayjsotr.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpwayjsotr.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (b == i && a != b) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmp8fgec4z7.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp8fgec4z7.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= limit; i++) {\n        let a: number = sum_of_divisors(i);\n        let b: number = sum_of_divisors(a);\n        if (i == b && i != a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmp7q7bqz9f.ts(5,25): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp7q7bqz9f.ts(6,25): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let a = sum_proper_divisors(i);\n        let b = sum_proper_divisors(a);\n        if (b == i && a != b) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmppjs7y2oa.ts(5,17): error TS2304: Cannot find name 'sum_proper_divisors'.\n../../../../tmp/tmppjs7y2oa.ts(6,17): error TS2304: Cannot find name 'sum_proper_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        if (is_amicable(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpnu7_aqxg.ts(5,13): error TS2304: Cannot find name 'is_amicable'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpe97k6qtw.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpe97k6qtw.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        if (is_amicable(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpnu7_aqxg.ts(5,13): error TS2304: Cannot find name 'is_amicable'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        if (is_amicable(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmpufc31fcq.ts(5,13): error TS2304: Cannot find name 'is_amicable'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= limit; i++) {\n        let sum_divisors_i: number = sum_divisors(i);\n        if (sum_divisors_i > i) {\n            let sum_divisors_j: number = sum_divisors(sum_divisors_i);\n            if (sum_divisors_j === i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmpjptgf2lv.ts(5,38): error TS2552: Cannot find name 'sum_divisors'. Did you mean 'sum_divisors_i'?\n../../../../tmp/tmpjptgf2lv.ts(7,42): error TS2552: Cannot find name 'sum_divisors'. Did you mean 'sum_divisors_j'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n  let sum = 0;\n  for (let i = 1; i <= limit; i++) {\n    let divisors = get_divisors(i);\n    let divisors_sum = divisors.reduce((a, b) => a + b, 0);\n    if (i !== divisors_sum && i === get_divisors(divisors_sum).reduce((a, b) => a + b, 0)) {\n      sum += i;\n    }\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122682,
      "stdout": "../../../../tmp/tmp52tbt6x6.ts(5,20): error TS2304: Cannot find name 'get_divisors'.\n../../../../tmp/tmp52tbt6x6.ts(7,37): error TS2304: Cannot find name 'get_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let sum_of_divisors = sum_of_divisors_of(i);\n        if (sum_of_divisors > i && sum_of_divisors_of(sum_of_divisors) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122682,
      "stdout": "../../../../tmp/tmp2f_x46e6.ts(5,31): error TS2304: Cannot find name 'sum_of_divisors_of'.\n../../../../tmp/tmp2f_x46e6.ts(6,36): error TS2304: Cannot find name 'sum_of_divisors_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let divisors_sum = divisors_sum_of(i);\n        if (divisors_sum > i && divisors_sum_of(divisors_sum) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpopmqm344.ts(5,28): error TS2304: Cannot find name 'divisors_sum_of'.\n../../../../tmp/tmpopmqm344.ts(6,33): error TS2304: Cannot find name 'divisors_sum_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i == b && a != b) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmpzotfq1go.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpzotfq1go.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i = 1; i < limit; i++) {\n        let sum_of_divisors_i: number = sum_of_divisors(i);\n        let sum_of_divisors_j: number = sum_of_divisors(sum_of_divisors_i);\n        if (i === sum_of_divisors_j && i !== sum_of_divisors_i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmpkzwge7vu.ts(5,41): error TS2552: Cannot find name 'sum_of_divisors'. Did you mean 'sum_of_divisors_i'?\n../../../../tmp/tmpkzwge7vu.ts(6,41): error TS2552: Cannot find name 'sum_of_divisors'. Did you mean 'sum_of_divisors_i'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (i === sum_of_divisors(a) && i !== a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmpv3degi0v.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpv3degi0v.ts(6,19): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) == i) {\n            sum += i + a;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpwayjsotr.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpwayjsotr.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (i != a && sum_of_divisors(a) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmpp8b5vt_1.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpp8b5vt_1.ts(6,23): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let sum_of_divisors = sum_of_divisors_of(i);\n        if (sum_of_divisors != i && sum_of_divisors_of(sum_of_divisors) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmpyahqmk4r.ts(5,31): error TS2304: Cannot find name 'sum_of_divisors_of'.\n../../../../tmp/tmpyahqmk4r.ts(6,37): error TS2304: Cannot find name 'sum_of_divisors_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= limit; i++) {\n        let sum_of_divisors: number = sum_of_divisors_of(i);\n        if (sum_of_divisors > i) {\n            let sum_of_divisors_of_sum_of_divisors: number = sum_of_divisors_of(sum_of_divisors);\n            if (sum_of_divisors_of_sum_of_divisors == i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmpvbspm9be.ts(5,39): error TS2304: Cannot find name 'sum_of_divisors_of'.\n../../../../tmp/tmpvbspm9be.ts(7,62): error TS2304: Cannot find name 'sum_of_divisors_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n  let sum = 0;\n  for (let i = 1; i <= limit; i++) {\n    const a = sum_of_divisors(i);\n    const b = sum_of_divisors(a);\n    if (b === i && a !== b) {\n      sum += i;\n    }\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmp9kjgr9rn.ts(5,15): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp9kjgr9rn.ts(6,15): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i == b && i != a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmp64ov131c.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp64ov131c.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmpxne4_ou0.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpxne4_ou0.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let sum_of_divisors = sum_of_divisors_of_number(i);\n        if (i == sum_of_divisors_of_number(sum_of_divisors) && i != sum_of_divisors) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmpvwu_0w19.ts(5,31): error TS2304: Cannot find name 'sum_of_divisors_of_number'.\n../../../../tmp/tmpvwu_0w19.ts(6,18): error TS2304: Cannot find name 'sum_of_divisors_of_number'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) === i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmpt13200xp.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpt13200xp.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let divisors_sum = divisors_sum_of(i);\n        if (divisors_sum > i && divisors_sum_of(divisors_sum) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpopmqm344.ts(5,28): error TS2304: Cannot find name 'divisors_sum_of'.\n../../../../tmp/tmpopmqm344.ts(6,33): error TS2304: Cannot find name 'divisors_sum_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_proper_divisors(i);\n        if (a != i && sum_of_proper_divisors(a) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmp8ltvdn0h.ts(5,17): error TS2304: Cannot find name 'sum_of_proper_divisors'.\n../../../../tmp/tmp8ltvdn0h.ts(6,23): error TS2304: Cannot find name 'sum_of_proper_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let sum_of_divisors = sum_of_divisors_of(i);\n        if (sum_of_divisors > i && sum_of_divisors_of(sum_of_divisors) === i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmpsuz28kat.ts(5,31): error TS2304: Cannot find name 'sum_of_divisors_of'.\n../../../../tmp/tmpsuz28kat.ts(6,36): error TS2304: Cannot find name 'sum_of_divisors_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) == i) {\n            sum += i + a;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpwayjsotr.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpwayjsotr.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmpxne4_ou0.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpxne4_ou0.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let divisors = get_divisors(i);\n        let sum_divisors = sum_array(divisors);\n        if (sum_divisors > i) {\n            let divisors_sum_divisors = get_divisors(sum_divisors);\n            let sum_divisors_sum_divisors = sum_array(divisors_sum_divisors);\n            if (sum_divisors_sum_divisors == i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmp5zx6mofy.ts(5,24): error TS2304: Cannot find name 'get_divisors'.\n../../../../tmp/tmp5zx6mofy.ts(6,28): error TS2304: Cannot find name 'sum_array'.\n../../../../tmp/tmp5zx6mofy.ts(8,41): error TS2304: Cannot find name 'get_divisors'.\n../../../../tmp/tmp5zx6mofy.ts(9,45): error TS2304: Cannot find name 'sum_array'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let sum_divisors_i = sum_of_divisors(i);\n        let sum_divisors_j = sum_of_divisors(sum_divisors_i);\n        if (sum_divisors_j == i && sum_divisors_i != sum_divisors_j) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmpqoyxqmhh.ts(5,30): error TS2552: Cannot find name 'sum_of_divisors'. Did you mean 'sum_divisors_i'?\n../../../../tmp/tmpqoyxqmhh.ts(6,30): error TS2552: Cannot find name 'sum_of_divisors'. Did you mean 'sum_divisors_i'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let sum_of_divisors = sum_of_divisors_of(i);\n        if (sum_of_divisors > i) {\n            let sum_of_divisors_of_sum_of_divisors = sum_of_divisors_of(sum_of_divisors);\n            if (sum_of_divisors_of_sum_of_divisors == i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpiilr5oz_.ts(5,31): error TS2304: Cannot find name 'sum_of_divisors_of'.\n../../../../tmp/tmpiilr5oz_.ts(7,54): error TS2304: Cannot find name 'sum_of_divisors_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= limit; i++) {\n        let divisors_sum: number = sum_of_divisors(i);\n        if (sum_of_divisors(divisors_sum) === i && i !== divisors_sum) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmpxh_s_sa0.ts(5,36): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpxh_s_sa0.ts(6,13): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i == b && i != a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmp64ov131c.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp64ov131c.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i) {\n            let b = sum_of_divisors(a);\n            if (b == i) {\n                sum += i + a;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122682,
      "stdout": "../../../../tmp/tmpvlkgj65x.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpvlkgj65x.ts(7,21): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i == b && i != a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmp64ov131c.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp64ov131c.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (b === i && a !== b) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmpk51yrzz6.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpk51yrzz6.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let sum_of_divisors = sum_of_divisors_of(i);\n        if (sum_of_divisors > i && sum_of_divisors_of(sum_of_divisors) === i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmp1_oyv1dt.ts(5,31): error TS2304: Cannot find name 'sum_of_divisors_of'.\n../../../../tmp/tmp1_oyv1dt.ts(6,36): error TS2304: Cannot find name 'sum_of_divisors_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (b == i && a != b) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmp8fgec4z7.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp8fgec4z7.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let sum_of_divisors = sum_of_divisors_of(i);\n        if (sum_of_divisors > i) {\n            let sum_of_divisors_of_sum_of_divisors = sum_of_divisors_of(sum_of_divisors);\n            if (sum_of_divisors_of_sum_of_divisors == i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpiilr5oz_.ts(5,31): error TS2304: Cannot find name 'sum_of_divisors_of'.\n../../../../tmp/tmpiilr5oz_.ts(7,54): error TS2304: Cannot find name 'sum_of_divisors_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) == i) {\n            sum += i + a;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpwayjsotr.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpwayjsotr.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i == b && a != b) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmpzotfq1go.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpzotfq1go.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let divisors_sum = divisors_sum_of(i);\n        if (i == divisors_sum_of(divisors_sum) && i != divisors_sum) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122686,
      "stdout": "../../../../tmp/tmpwy0dytxz.ts(5,28): error TS2304: Cannot find name 'divisors_sum_of'.\n../../../../tmp/tmpwy0dytxz.ts(6,18): error TS2304: Cannot find name 'divisors_sum_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) == i) {\n            sum += i + a;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpwayjsotr.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpwayjsotr.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        if (is_amicable_number(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122686,
      "stdout": "../../../../tmp/tmpf7sy4lji.ts(5,13): error TS2304: Cannot find name 'is_amicable_number'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) == i) {\n            sum += i + a;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpwayjsotr.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpwayjsotr.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let j = sum_of_divisors(i);\n        if (i != j && sum_of_divisors(j) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122686,
      "stdout": "../../../../tmp/tmpj3c_lz8p.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpj3c_lz8p.ts(6,23): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        if (is_amicable(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpnu7_aqxg.ts(5,13): error TS2304: Cannot find name 'is_amicable'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        if (is_amicable(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpnu7_aqxg.ts(5,13): error TS2304: Cannot find name 'is_amicable'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) == i) {\n            sum += i + a;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpwayjsotr.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpwayjsotr.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i === b && i !== a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpnvxm91pm.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpnvxm91pm.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let sum_divisors_i = sum_of_divisors(i);\n        if (sum_divisors_i > i) {\n            let sum_divisors_j = sum_of_divisors(sum_divisors_i);\n            if (sum_divisors_j == i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122686,
      "stdout": "../../../../tmp/tmp5azxl6p0.ts(5,30): error TS2552: Cannot find name 'sum_of_divisors'. Did you mean 'sum_divisors_i'?\n../../../../tmp/tmp5azxl6p0.ts(7,34): error TS2552: Cannot find name 'sum_of_divisors'. Did you mean 'sum_divisors_j'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i = 1; i < limit; i++) {\n        let sum_of_divisors = sum_of_divisors_of(i);\n        if (sum_of_divisors > i && sum_of_divisors_of(sum_of_divisors) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122687,
      "stdout": "../../../../tmp/tmp9oeytllr.ts(5,31): error TS2304: Cannot find name 'sum_of_divisors_of'.\n../../../../tmp/tmp9oeytllr.ts(6,36): error TS2304: Cannot find name 'sum_of_divisors_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i == b && i != a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmp64ov131c.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp64ov131c.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        const sum_of_divisors_i = sum_of_divisors(i);\n        if (sum_of_divisors_i > i) {\n            const sum_of_divisors_j = sum_of_divisors(sum_of_divisors_i);\n            if (sum_of_divisors_j === i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122687,
      "stdout": "../../../../tmp/tmp7tz6q6g1.ts(5,35): error TS2552: Cannot find name 'sum_of_divisors'. Did you mean 'sum_of_divisors_i'?\n../../../../tmp/tmp7tz6q6g1.ts(7,39): error TS2552: Cannot find name 'sum_of_divisors'. Did you mean 'sum_of_divisors_j'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i < limit; i++) {\n        if (is_amicable(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122687,
      "stdout": "../../../../tmp/tmpm1h9khjd.ts(5,13): error TS2304: Cannot find name 'is_amicable'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i = 1; i < limit; i++) {\n        let sum_of_divisors: number = sum_of_divisors_of(i);\n        if (sum_of_divisors > i && sum_of_divisors_of(sum_of_divisors) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122686,
      "stdout": "../../../../tmp/tmpdl0nibai.ts(5,39): error TS2304: Cannot find name 'sum_of_divisors_of'.\n../../../../tmp/tmpdl0nibai.ts(6,36): error TS2304: Cannot find name 'sum_of_divisors_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i < limit; i++) {\n        let sum_of_divisors: number = sum_of_divisors_of(i);\n        if (sum_of_divisors_of(sum_of_divisors) === i && sum_of_divisors !== i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122686,
      "stdout": "../../../../tmp/tmpts63gloy.ts(5,39): error TS2304: Cannot find name 'sum_of_divisors_of'.\n../../../../tmp/tmpts63gloy.ts(6,13): error TS2304: Cannot find name 'sum_of_divisors_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let sum_of_divisors = sum_of_divisors_of(i);\n        if (sum_of_divisors > i) {\n            let sum_of_divisors_of_sum_of_divisors = sum_of_divisors_of(sum_of_divisors);\n            if (sum_of_divisors_of_sum_of_divisors == i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122687,
      "stdout": "../../../../tmp/tmp86xo0r99.ts(5,31): error TS2304: Cannot find name 'sum_of_divisors_of'.\n../../../../tmp/tmp86xo0r99.ts(7,54): error TS2304: Cannot find name 'sum_of_divisors_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let sum_of_divisors = sum_of_divisors_of(i);\n        if (sum_of_divisors > i && sum_of_divisors_of(sum_of_divisors) === i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmp1_oyv1dt.ts(5,31): error TS2304: Cannot find name 'sum_of_divisors_of'.\n../../../../tmp/tmp1_oyv1dt.ts(6,36): error TS2304: Cannot find name 'sum_of_divisors_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i == b && i != a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmp64ov131c.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp64ov131c.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i < limit; i++) {\n        let a: number = sum_of_divisors(i);\n        let b: number = sum_of_divisors(a);\n        if (b == i && a != b) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122687,
      "stdout": "../../../../tmp/tmpfcnkzlq4.ts(5,25): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpfcnkzlq4.ts(6,25): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        if (is_amicable_number(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122686,
      "stdout": "../../../../tmp/tmpf7sy4lji.ts(5,13): error TS2304: Cannot find name 'is_amicable_number'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n  let sum = 0;\n  for (let i = 1; i < limit; i++) {\n    let sum_of_divisors = sum_of_divisors_of(i);\n    if (sum_of_divisors > i && sum_of_divisors_of(sum_of_divisors) === i) {\n      sum += i;\n    }\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122687,
      "stdout": "../../../../tmp/tmpbu_6wcnu.ts(5,27): error TS2304: Cannot find name 'sum_of_divisors_of'.\n../../../../tmp/tmpbu_6wcnu.ts(6,32): error TS2304: Cannot find name 'sum_of_divisors_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let divisors_sum = divisors_sum_of(i);\n        if (i != divisors_sum && divisors_sum_of(divisors_sum) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122686,
      "stdout": "../../../../tmp/tmp5syu9kqw.ts(5,28): error TS2304: Cannot find name 'divisors_sum_of'.\n../../../../tmp/tmp5syu9kqw.ts(6,34): error TS2304: Cannot find name 'divisors_sum_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) == i) {\n            sum += a + i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122687,
      "stdout": "../../../../tmp/tmpdr5t385w.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpdr5t385w.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i === b && i !== a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpnvxm91pm.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpnvxm91pm.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (b === i && a !== b) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmpk51yrzz6.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpk51yrzz6.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i === b && i !== a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpnvxm91pm.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpnvxm91pm.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) === i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmpt13200xp.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpt13200xp.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmpxne4_ou0.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpxne4_ou0.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (b === i && a !== b) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmpk51yrzz6.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpk51yrzz6.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) == i) {\n            sum += i + a;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpwayjsotr.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpwayjsotr.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (b == i && a != b) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmp8fgec4z7.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp8fgec4z7.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let sum_divisors_i = sum_of_divisors(i);\n        if (sum_divisors_i > i) {\n            let sum_divisors_j = sum_of_divisors(sum_divisors_i);\n            if (sum_divisors_j === i) {\n                sum += i;\n                sum += sum_divisors_i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122686,
      "stdout": "../../../../tmp/tmpktvh0mb0.ts(5,30): error TS2552: Cannot find name 'sum_of_divisors'. Did you mean 'sum_divisors_i'?\n../../../../tmp/tmpktvh0mb0.ts(7,34): error TS2552: Cannot find name 'sum_of_divisors'. Did you mean 'sum_divisors_j'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i < limit; i++) {\n        let sum_of_divisors: number = sum_of_divisors_of(i);\n        if (sum_of_divisors_of(sum_of_divisors) === i && sum_of_divisors !== i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122686,
      "stdout": "../../../../tmp/tmpts63gloy.ts(5,39): error TS2304: Cannot find name 'sum_of_divisors_of'.\n../../../../tmp/tmpts63gloy.ts(6,13): error TS2304: Cannot find name 'sum_of_divisors_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i === b && i !== a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpnvxm91pm.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpnvxm91pm.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        if (is_amicable(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpnu7_aqxg.ts(5,13): error TS2304: Cannot find name 'is_amicable'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i) {\n            let b = sum_of_divisors(a);\n            if (b == i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122687,
      "stdout": "../../../../tmp/tmpf2tl6sdn.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpf2tl6sdn.ts(7,21): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        if (is_amicable(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpnu7_aqxg.ts(5,13): error TS2304: Cannot find name 'is_amicable'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) === i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122687,
      "stdout": "../../../../tmp/tmpk9th76xe.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpk9th76xe.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (b == i && a != b) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmp8fgec4z7.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp8fgec4z7.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i === b && i !== a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpnvxm91pm.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpnvxm91pm.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i === b && i !== a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpnvxm91pm.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpnvxm91pm.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpe97k6qtw.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpe97k6qtw.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let d = sum_of_divisors(i);\n        if (i != d && sum_of_divisors(d) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122687,
      "stdout": "../../../../tmp/tmpv9a2pk4k.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpv9a2pk4k.ts(6,23): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        if (is_amicable(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpnu7_aqxg.ts(5,13): error TS2304: Cannot find name 'is_amicable'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        if (is_amicable(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpnu7_aqxg.ts(5,13): error TS2304: Cannot find name 'is_amicable'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) === i) {\n            sum += a + i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122687,
      "stdout": "../../../../tmp/tmpdap6l5v5.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpdap6l5v5.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) === i) {\n            sum += i + a;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122687,
      "stdout": "../../../../tmp/tmpbo0xvnzu.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpbo0xvnzu.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        if (is_amicable(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpnu7_aqxg.ts(5,13): error TS2304: Cannot find name 'is_amicable'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        if (is_amicable(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpnu7_aqxg.ts(5,13): error TS2304: Cannot find name 'is_amicable'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= limit; i++) {\n        if (is_amicable(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122687,
      "stdout": "../../../../tmp/tmphz1kttx3.ts(5,13): error TS2304: Cannot find name 'is_amicable'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let sum_of_divisors_of_i = sum_of_divisors(i);\n        if (sum_of_divisors_of_i > i) {\n            let sum_of_divisors_of_sum_of_divisors_of_i = sum_of_divisors(sum_of_divisors_of_i);\n            if (sum_of_divisors_of_sum_of_divisors_of_i == i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122687,
      "stdout": "../../../../tmp/tmp6z4swq3l.ts(5,36): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp6z4swq3l.ts(7,59): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let a = sum_of_divisors(i);\n        if (i === sum_of_divisors(a) && i !== a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122687,
      "stdout": "../../../../tmp/tmpl8ugl_mk.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpl8ugl_mk.ts(6,19): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let divisors = get_divisors(i);\n        let sum_divisors = divisors.reduce((a, b) => a + b, 0);\n        if (sum_divisors > i && sum_divisors < limit) {\n            let divisors_sum_divisors = get_divisors(sum_divisors);\n            let sum_divisors_sum_divisors = divisors_sum_divisors.reduce((a, b) => a + b, 0);\n            if (sum_divisors_sum_divisors == i) {\n                sum += i + sum_divisors;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122691,
      "stdout": "../../../../tmp/tmp4ewiz7z0.ts(5,24): error TS2304: Cannot find name 'get_divisors'.\n../../../../tmp/tmp4ewiz7z0.ts(8,41): error TS2304: Cannot find name 'get_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (b === i && a !== b) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmpk51yrzz6.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpk51yrzz6.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i == b && i != a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmp64ov131c.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp64ov131c.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        if (is_amicable_number(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpjei0cux1.ts(5,13): error TS2304: Cannot find name 'is_amicable_number'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let sum_of_divisors = sum_of_divisors_of(i);\n        if (sum_of_divisors > i && sum_of_divisors_of(sum_of_divisors) === i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmpsuz28kat.ts(5,31): error TS2304: Cannot find name 'sum_of_divisors_of'.\n../../../../tmp/tmpsuz28kat.ts(6,36): error TS2304: Cannot find name 'sum_of_divisors_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let sum_of_divisors = sum_of_divisors_of(i);\n        if (sum_of_divisors > i && sum_of_divisors_of(sum_of_divisors) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122682,
      "stdout": "../../../../tmp/tmp2f_x46e6.ts(5,31): error TS2304: Cannot find name 'sum_of_divisors_of'.\n../../../../tmp/tmp2f_x46e6.ts(6,36): error TS2304: Cannot find name 'sum_of_divisors_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) === i) {\n            sum += i + a;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122687,
      "stdout": "../../../../tmp/tmpbo0xvnzu.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpbo0xvnzu.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i == b && i != a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122691,
      "stdout": "../../../../tmp/tmpx5jjcva5.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpx5jjcva5.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) == i) {\n            sum += i + a;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpwayjsotr.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpwayjsotr.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) === i) {\n            sum += i + a;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122687,
      "stdout": "../../../../tmp/tmpbo0xvnzu.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpbo0xvnzu.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let sum_divisors_i = sum_divisors(i);\n        if (sum_divisors_i > i) {\n            let sum_divisors_sum_divisors_i = sum_divisors(sum_divisors_i);\n            if (sum_divisors_sum_divisors_i == i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122691,
      "stdout": "../../../../tmp/tmpzo3lni8q.ts(5,30): error TS2552: Cannot find name 'sum_divisors'. Did you mean 'sum_divisors_i'?\n../../../../tmp/tmpzo3lni8q.ts(7,47): error TS2552: Cannot find name 'sum_divisors'. Did you mean 'sum_divisors_i'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let sum_divisors_i = sum_divisors(i);\n        if (sum_divisors_i > i && sum_divisors(sum_divisors_i) === i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122691,
      "stdout": "../../../../tmp/tmpt7r13yvm.ts(5,30): error TS2552: Cannot find name 'sum_divisors'. Did you mean 'sum_divisors_i'?\n../../../../tmp/tmpt7r13yvm.ts(6,35): error TS2552: Cannot find name 'sum_divisors'. Did you mean 'sum_divisors_i'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let sum_of_divisors_i = sum_of_divisors(i);\n        let sum_of_divisors_sum_of_divisors_i = sum_of_divisors(sum_of_divisors_i);\n        if (sum_of_divisors_sum_of_divisors_i === i && sum_of_divisors_i !== i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122691,
      "stdout": "../../../../tmp/tmpbt398quh.ts(5,33): error TS2552: Cannot find name 'sum_of_divisors'. Did you mean 'sum_of_divisors_i'?\n../../../../tmp/tmpbt398quh.ts(6,49): error TS2552: Cannot find name 'sum_of_divisors'. Did you mean 'sum_of_divisors_i'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n  let sum = 0;\n  for (let i = 1; i < limit; i++) {\n    let divisors = sum_of_divisors(i);\n    if (i === sum_of_divisors(divisors) && i !== divisors) {\n      sum += i;\n    }\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122692,
      "stdout": "../../../../tmp/tmpqxmss2_z.ts(5,20): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpqxmss2_z.ts(6,15): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i = 1; i < limit; i++) {\n        let divisor_sum: number = sum_of_divisors(i);\n        if (i == sum_of_divisors(divisor_sum) && i != divisor_sum) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122691,
      "stdout": "../../../../tmp/tmpn5spdck9.ts(5,35): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpn5spdck9.ts(6,18): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i) {\n            let b = sum_of_divisors(a);\n            if (b == i) {\n                sum += i + a;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122682,
      "stdout": "../../../../tmp/tmpvlkgj65x.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpvlkgj65x.ts(7,21): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpe97k6qtw.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpe97k6qtw.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        if (is_amicable_number(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122686,
      "stdout": "../../../../tmp/tmpf7sy4lji.ts(5,13): error TS2304: Cannot find name 'is_amicable_number'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        if (is_amicable_number(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpjei0cux1.ts(5,13): error TS2304: Cannot find name 'is_amicable_number'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (b == i && a != b) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmp8fgec4z7.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp8fgec4z7.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (b == i && a != b) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmp8ujls_hy.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp8ujls_hy.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        if (is_amicable(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpnu7_aqxg.ts(5,13): error TS2304: Cannot find name 'is_amicable'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i) {\n            let b = sum_of_divisors(a);\n            if (b == i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122687,
      "stdout": "../../../../tmp/tmpf2tl6sdn.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpf2tl6sdn.ts(7,21): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let sum_of_divisors = sum_of_divisors_of(i);\n        if (sum_of_divisors > i) {\n            let sum_of_divisors_of_sum_of_divisors = sum_of_divisors_of(sum_of_divisors);\n            if (sum_of_divisors_of_sum_of_divisors == i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122687,
      "stdout": "../../../../tmp/tmp86xo0r99.ts(5,31): error TS2304: Cannot find name 'sum_of_divisors_of'.\n../../../../tmp/tmp86xo0r99.ts(7,54): error TS2304: Cannot find name 'sum_of_divisors_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let sum_of_divisors = sum_of_divisors_of(i);\n        if (sum_of_divisors > i && sum_of_divisors_of(sum_of_divisors) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122692,
      "stdout": "../../../../tmp/tmp26z49t_b.ts(5,31): error TS2304: Cannot find name 'sum_of_divisors_of'.\n../../../../tmp/tmp26z49t_b.ts(6,36): error TS2304: Cannot find name 'sum_of_divisors_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n  let sum = 0;\n  for (let i = 1; i < limit; i++) {\n    let a = sum_of_divisors(i);\n    if (a > i && sum_of_divisors(a) == i) {\n      sum += a + i;\n    }\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122692,
      "stdout": "../../../../tmp/tmpefmkz637.ts(5,13): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpefmkz637.ts(6,18): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let divisors_sum = divisors_sum_of(i);\n        if (divisors_sum > i && divisors_sum_of(divisors_sum) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpopmqm344.ts(5,28): error TS2304: Cannot find name 'divisors_sum_of'.\n../../../../tmp/tmpopmqm344.ts(6,33): error TS2304: Cannot find name 'divisors_sum_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i) {\n            let b = sum_of_divisors(a);\n            if (b == i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122692,
      "stdout": "../../../../tmp/tmpenu8hmw5.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpenu8hmw5.ts(7,21): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpe97k6qtw.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpe97k6qtw.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i = 1; i < limit; i++) {\n        let sum_of_divisors_i: number = sum_of_divisors(i);\n        let sum_of_divisors_sum_of_divisors_i: number = sum_of_divisors(sum_of_divisors_i);\n        if (sum_of_divisors_sum_of_divisors_i == i && sum_of_divisors_i != sum_of_divisors_sum_of_divisors_i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122692,
      "stdout": "../../../../tmp/tmpp68i806t.ts(5,41): error TS2552: Cannot find name 'sum_of_divisors'. Did you mean 'sum_of_divisors_i'?\n../../../../tmp/tmpp68i806t.ts(6,57): error TS2552: Cannot find name 'sum_of_divisors'. Did you mean 'sum_of_divisors_i'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i < limit; i++) {\n        let a: number = sum_of_divisors(i);\n        let b: number = sum_of_divisors(a);\n        if (i == b && a != b) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122692,
      "stdout": "../../../../tmp/tmpj1ovojx7.ts(5,25): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpj1ovojx7.ts(6,25): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (i != a && sum_of_divisors(a) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmpp8b5vt_1.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpp8b5vt_1.ts(6,23): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        if (is_amicable_number(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122686,
      "stdout": "../../../../tmp/tmpf7sy4lji.ts(5,13): error TS2304: Cannot find name 'is_amicable_number'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        if (is_amicable(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmpufc31fcq.ts(5,13): error TS2304: Cannot find name 'is_amicable'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i === b && i !== a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpnvxm91pm.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpnvxm91pm.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let sum_of_divisors = sum_of_divisors_of(i);\n        if (sum_of_divisors > i && sum_of_divisors_of(sum_of_divisors) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122692,
      "stdout": "../../../../tmp/tmp26z49t_b.ts(5,31): error TS2304: Cannot find name 'sum_of_divisors_of'.\n../../../../tmp/tmp26z49t_b.ts(6,36): error TS2304: Cannot find name 'sum_of_divisors_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        if (is_amicable(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmpufc31fcq.ts(5,13): error TS2304: Cannot find name 'is_amicable'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let sum_divisors = sum_of_divisors(i);\n        if (sum_divisors > i && sum_of_divisors(sum_divisors) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122692,
      "stdout": "../../../../tmp/tmptdp5yrgf.ts(5,28): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmptdp5yrgf.ts(6,33): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpe97k6qtw.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpe97k6qtw.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let divisors_sum = sum_of_divisors(i);\n        if (i != divisors_sum && sum_of_divisors(divisors_sum) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122692,
      "stdout": "../../../../tmp/tmpfes_bqeh.ts(5,28): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpfes_bqeh.ts(6,34): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let sum_divisors_i = sum_divisors(i);\n        if (sum_divisors_i > i) {\n            let sum_divisors_sum_divisors_i = sum_divisors(sum_divisors_i);\n            if (sum_divisors_sum_divisors_i == i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122692,
      "stdout": "../../../../tmp/tmp842abtdz.ts(5,30): error TS2552: Cannot find name 'sum_divisors'. Did you mean 'sum_divisors_i'?\n../../../../tmp/tmp842abtdz.ts(7,47): error TS2552: Cannot find name 'sum_divisors'. Did you mean 'sum_divisors_i'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        if (is_amicable(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpnu7_aqxg.ts(5,13): error TS2304: Cannot find name 'is_amicable'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        if (is_amicable(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmpufc31fcq.ts(5,13): error TS2304: Cannot find name 'is_amicable'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        const divisors_sum = sum_of_divisors(i);\n        if (sum_of_divisors(divisors_sum) === i && i !== divisors_sum) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122691,
      "stdout": "../../../../tmp/tmpipqpy1xe.ts(5,30): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpipqpy1xe.ts(6,13): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i = 1; i < limit; i++) {\n        let divisors_sum: number = divisors_sum_of(i);\n        if (divisors_sum > i && divisors_sum_of(divisors_sum) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122692,
      "stdout": "../../../../tmp/tmpgx04sl3c.ts(5,36): error TS2304: Cannot find name 'divisors_sum_of'.\n../../../../tmp/tmpgx04sl3c.ts(6,33): error TS2304: Cannot find name 'divisors_sum_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n  let sum = 0;\n  for (let i = 1; i <= limit; i++) {\n    const divisors = get_divisors(i);\n    const sum_divisors = divisors.reduce((acc, cur) => acc + cur, 0);\n    const sum_divisors_divisors = get_divisors(sum_divisors).reduce((acc, cur) => acc + cur, 0);\n    if (sum_divisors_divisors === i && sum_divisors !== i) {\n      sum += i;\n    }\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122692,
      "stdout": "../../../../tmp/tmpfc56j8na.ts(5,22): error TS2304: Cannot find name 'get_divisors'.\n../../../../tmp/tmpfc56j8na.ts(7,35): error TS2304: Cannot find name 'get_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i = 1; i < limit; i++) {\n        let a: number = sum_of_divisors(i);\n        let b: number = sum_of_divisors(a);\n        if (a != b && b == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122692,
      "stdout": "../../../../tmp/tmp1digo86e.ts(5,25): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp1digo86e.ts(6,25): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let divisors_sum = sum_of_divisors(i);\n        if (divisors_sum > i && sum_of_divisors(divisors_sum) === i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122692,
      "stdout": "../../../../tmp/tmpzm1lydsj.ts(5,28): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpzm1lydsj.ts(6,33): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i < limit; i++) {\n        let sum_of_divisors: number = sum_of_divisors_of(i);\n        if (sum_of_divisors > i) {\n            let sum_of_divisors_of_sum_of_divisors: number = sum_of_divisors_of(sum_of_divisors);\n            if (sum_of_divisors_of_sum_of_divisors == i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122692,
      "stdout": "../../../../tmp/tmpvc4q1d0f.ts(5,39): error TS2304: Cannot find name 'sum_of_divisors_of'.\n../../../../tmp/tmpvc4q1d0f.ts(7,62): error TS2304: Cannot find name 'sum_of_divisors_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let sum_of_divisors_i = sum_of_divisors(i);\n        if (sum_of_divisors_i > i) {\n            let sum_of_divisors_sum_of_divisors_i = sum_of_divisors(sum_of_divisors_i);\n            if (sum_of_divisors_sum_of_divisors_i == i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122692,
      "stdout": "../../../../tmp/tmpwl0tg7sx.ts(5,33): error TS2552: Cannot find name 'sum_of_divisors'. Did you mean 'sum_of_divisors_i'?\n../../../../tmp/tmpwl0tg7sx.ts(7,53): error TS2552: Cannot find name 'sum_of_divisors'. Did you mean 'sum_of_divisors_i'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i == b && i != a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmp28zhp6rh.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp28zhp6rh.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i < limit; i++) {\n        let a: number = sum_of_proper_divisors(i);\n        let b: number = sum_of_proper_divisors(a);\n        if (i == b && i != a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122692,
      "stdout": "../../../../tmp/tmpwqgiv4fk.ts(5,25): error TS2304: Cannot find name 'sum_of_proper_divisors'.\n../../../../tmp/tmpwqgiv4fk.ts(6,25): error TS2304: Cannot find name 'sum_of_proper_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i == b && i != a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmp64ov131c.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp64ov131c.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i < limit; i++) {\n        let a: number = sum_of_divisors(i);\n        if (a > i) {\n            let b: number = sum_of_divisors(a);\n            if (b == i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "../../../../tmp/tmpc4wb_3pu.ts(5,25): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpc4wb_3pu.ts(7,29): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let divisors_sum = divisors_sum_of(i);\n        if (divisors_sum_of(divisors_sum) === i && divisors_sum !== i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "../../../../tmp/tmprlj7q2es.ts(5,28): error TS2304: Cannot find name 'divisors_sum_of'.\n../../../../tmp/tmprlj7q2es.ts(6,13): error TS2304: Cannot find name 'divisors_sum_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (i == sum_of_divisors(a) && i != a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "../../../../tmp/tmpcxzk5gqx.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpcxzk5gqx.ts(6,18): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (b == i && a != b) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmp8fgec4z7.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp8fgec4z7.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i == b && i != a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmp28zhp6rh.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp28zhp6rh.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let sum_of_divisors = sum_of_divisors_of(i);\n        if (sum_of_divisors > i && sum_of_divisors_of(sum_of_divisors) === i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmpsuz28kat.ts(5,31): error TS2304: Cannot find name 'sum_of_divisors_of'.\n../../../../tmp/tmpsuz28kat.ts(6,36): error TS2304: Cannot find name 'sum_of_divisors_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) == i) {\n            sum += i + a;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "../../../../tmp/tmpbyogunqt.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpbyogunqt.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let divisors_sum = get_divisors_sum(i);\n        if (divisors_sum > i) {\n            let divisors_sum_divisors_sum = get_divisors_sum(divisors_sum);\n            if (divisors_sum_divisors_sum == i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "../../../../tmp/tmptsgg6d98.ts(5,28): error TS2304: Cannot find name 'get_divisors_sum'.\n../../../../tmp/tmptsgg6d98.ts(7,45): error TS2304: Cannot find name 'get_divisors_sum'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let j = sum_of_divisors(i);\n        if (i == sum_of_divisors(j) && i != j) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "../../../../tmp/tmpzj8ndr54.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpzj8ndr54.ts(6,18): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i == b && a != b) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "../../../../tmp/tmp__dwuj_y.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp__dwuj_y.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i = 1; i < limit; i++) {\n        let a: number = sum_of_divisors(i);\n        let b: number = sum_of_divisors(a);\n        if (i === b && i !== a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "../../../../tmp/tmpddwb34id.ts(5,25): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpddwb34id.ts(6,25): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let sum_of_divisors = sum_of_divisors_of(i);\n        if (sum_of_divisors > i && sum_of_divisors_of(sum_of_divisors) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122692,
      "stdout": "../../../../tmp/tmp26z49t_b.ts(5,31): error TS2304: Cannot find name 'sum_of_divisors_of'.\n../../../../tmp/tmp26z49t_b.ts(6,36): error TS2304: Cannot find name 'sum_of_divisors_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i < limit; i++) {\n        let sum_of_divisors: number = sum_of_divisors_of(i);\n        if (sum_of_divisors > i && sum_of_divisors_of(sum_of_divisors) === i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "../../../../tmp/tmp0ao73vpv.ts(5,39): error TS2304: Cannot find name 'sum_of_divisors_of'.\n../../../../tmp/tmp0ao73vpv.ts(6,36): error TS2304: Cannot find name 'sum_of_divisors_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i < limit; i++) {\n        let a: number = sum_of_divisors(i);\n        let b: number = sum_of_divisors(a);\n        if (i == b && i != a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "../../../../tmp/tmpmy29f2og.ts(5,25): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpmy29f2og.ts(6,25): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= limit; i++) {\n        let sum_of_divisors: number = sum_of_divisors_of(i);\n        if (sum_of_divisors > i) {\n            let sum_of_divisors_of_sum_of_divisors: number = sum_of_divisors_of(sum_of_divisors);\n            if (sum_of_divisors_of_sum_of_divisors === i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "../../../../tmp/tmpi1c0ycja.ts(5,39): error TS2304: Cannot find name 'sum_of_divisors_of'.\n../../../../tmp/tmpi1c0ycja.ts(7,62): error TS2304: Cannot find name 'sum_of_divisors_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i == b && i != a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmp28zhp6rh.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp28zhp6rh.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) === i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122687,
      "stdout": "../../../../tmp/tmpk9th76xe.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpk9th76xe.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) === i) {\n            sum += i + a;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122687,
      "stdout": "../../../../tmp/tmpbo0xvnzu.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpbo0xvnzu.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) === i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122687,
      "stdout": "../../../../tmp/tmpk9th76xe.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpk9th76xe.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        if (is_amicable(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmpufc31fcq.ts(5,13): error TS2304: Cannot find name 'is_amicable'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i) {\n            let b = sum_of_divisors(a);\n            if (b == i) {\n                sum += a + b;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "../../../../tmp/tmpu940_da5.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpu940_da5.ts(7,21): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n  let sum = 0;\n  for (let i = 1; i < limit; i++) {\n    let divisors = get_divisors(i);\n    let divisors_sum = divisors.reduce((a, b) => a + b, 0);\n    let divisors_divisors = get_divisors(divisors_sum);\n    let divisors_divisors_sum = divisors_divisors.reduce((a, b) => a + b, 0);\n    if (divisors_divisors_sum === i && divisors_sum !== i) {\n      sum += i;\n    }\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "../../../../tmp/tmph6wtwp9b.ts(5,20): error TS2304: Cannot find name 'get_divisors'.\n../../../../tmp/tmph6wtwp9b.ts(7,29): error TS2304: Cannot find name 'get_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let d = sum_of_divisors(i);\n        if (d > i && sum_of_divisors(d) === i) {\n            sum += i + d;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "../../../../tmp/tmpdyo5te4a.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpdyo5te4a.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i === b && i !== a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpnvxm91pm.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpnvxm91pm.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a != i && sum_of_divisors(a) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "../../../../tmp/tmppqrb968p.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmppqrb968p.ts(6,23): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let sum_of_divisors = sum_of_divisors_of(i);\n        if (sum_of_divisors > i && sum_of_divisors_of(sum_of_divisors) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122692,
      "stdout": "../../../../tmp/tmp26z49t_b.ts(5,31): error TS2304: Cannot find name 'sum_of_divisors_of'.\n../../../../tmp/tmp26z49t_b.ts(6,36): error TS2304: Cannot find name 'sum_of_divisors_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) === i) {\n            sum += i + a;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122687,
      "stdout": "../../../../tmp/tmpbo0xvnzu.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpbo0xvnzu.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i == b && i != a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmp28zhp6rh.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp28zhp6rh.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= limit; i++) {\n        let sum_of_divisors: number = sum_of_divisors_of(i);\n        if (sum_of_divisors > i && sum_of_divisors_of(sum_of_divisors) === i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "../../../../tmp/tmpb3w_qfu5.ts(5,39): error TS2304: Cannot find name 'sum_of_divisors_of'.\n../../../../tmp/tmpb3w_qfu5.ts(6,36): error TS2304: Cannot find name 'sum_of_divisors_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n  let sum = 0;\n  for (let i = 1; i < limit; i++) {\n    let a = sum_of_divisors(i);\n    let b = sum_of_divisors(a);\n    if (i == b && i != a) {\n      sum += i;\n    }\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "../../../../tmp/tmp54ojxynp.ts(5,13): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp54ojxynp.ts(6,13): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let sum_of_divisors = sum_of_divisors_of(i);\n        if (sum_of_divisors > i) {\n            let sum_of_divisors_of_sum_of_divisors = sum_of_divisors_of(sum_of_divisors);\n            if (sum_of_divisors_of_sum_of_divisors == i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpiilr5oz_.ts(5,31): error TS2304: Cannot find name 'sum_of_divisors_of'.\n../../../../tmp/tmpiilr5oz_.ts(7,54): error TS2304: Cannot find name 'sum_of_divisors_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i == b && a != b) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmpzotfq1go.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpzotfq1go.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (b == i && a != b) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmp8fgec4z7.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp8fgec4z7.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i === b && a !== b) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "../../../../tmp/tmp5b03_hii.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp5b03_hii.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        if (amicable_numbers(i, i + 1)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "../../../../tmp/tmpftnhle6k.ts(5,13): error TS2304: Cannot find name 'amicable_numbers'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i === b && i !== a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpnvxm91pm.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpnvxm91pm.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let sum_of_divisors_i = sum_of_divisors(i);\n        if (sum_of_divisors_i > i) {\n            let sum_of_divisors_sum_of_divisors_i = sum_of_divisors(sum_of_divisors_i);\n            if (sum_of_divisors_sum_of_divisors_i === i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "../../../../tmp/tmpuv4n3ntb.ts(5,33): error TS2552: Cannot find name 'sum_of_divisors'. Did you mean 'sum_of_divisors_i'?\n../../../../tmp/tmpuv4n3ntb.ts(7,53): error TS2552: Cannot find name 'sum_of_divisors'. Did you mean 'sum_of_divisors_i'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i == b && i != a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmp64ov131c.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp64ov131c.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    }
  ]
}
{
  "name": "mbpp_745_divisible_by_digits",
  "language": "ts",
  "prompt": "//Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/tsthon-exercises/lambda/tsthon-lambda-exercise-24.php\nfunction divisible_by_digits(startnum: number, endnum: number): number[] {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_745_divisible_by_digits.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisible_by_digits;\n  assert.deepEqual(candidate(1, 22),[1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]);\n  assert.deepEqual(candidate(1, 15),[1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]);\n  assert.deepEqual(candidate(20, 25),[22, 24]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        if (i.toString().split('').every(x => i % parseInt(x) == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(divisible_by_digits(1, 100));\nconsole.log(divisible_by_digits(100, 200));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let isDivisible = true;\n        while (num > 0) {\n            let digit = num % 10;\n            if (digit === 0 || i % digit !== 0) {\n                isDivisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] != 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split(\"\").map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] != 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split(\"\").map(x => parseInt(x));\n        if (digits.every(x => i % x == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "  let result: number[] = [];\n  for (let i = startnum; i <= endnum; i++) {\n    let digits: number[] = i.toString().split(\"\").map(Number);\n    if (digits.every(digit => i % digit === 0)) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let isDivisible = true;\n        while (num > 0) {\n            let digit = num % 10;\n            if (digit === 0 || i % digit !== 0) {\n                isDivisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split(\"\").map(Number);\n        let isDivisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let isDivisible: boolean = true;\n        let num: number = i;\n        while (num > 0) {\n            let digit: number = num % 10;\n            if (digit === 0 || i % digit !== 0) {\n                isDivisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split(\"\").map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let is_divisible = true;\n        while (num > 0) {\n            let digit = num % 10;\n            if (digit === 0 || i % digit !== 0) {\n                is_divisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (is_divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\nconsole.log(divisible_by_digits(100, 200));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let divisible = true;\n        while (num > 0) {\n            let digit = num % 10;\n            if (i % digit !== 0) {\n                divisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\nconsole.log(divisible_by_digits(100, 500));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(divisible_by_digits(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let isDivisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let isDivisible = true;\n        while (num > 0) {\n            let digit = num % 10;\n            if (i % digit !== 0) {\n                isDivisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\nconsole.log(divisible_by_digits(100, 500));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let digits: number[] = [];\n        while (num > 0) {\n            digits.push(num % 10);\n            num = Math.floor(num / 10);\n        }\n        let isDivisible = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: string[] = i.toString().split('');\n        let isDivisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % parseInt(digits[j]) !== 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let divisible = true;\n        while (num > 0) {\n            let digit = num % 10;\n            if (digit === 0 || i % digit !== 0) {\n                divisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let digits: number[] = [];\n        while (num > 0) {\n            digits.push(num % 10);\n            num = Math.floor(num / 10);\n        }\n        let isDivisible = digits.every(digit => i % digit === 0);\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i: number = startnum; i <= endnum; i++) {\n        let num: number = i;\n        let isDivisible: boolean = true;\n        while (num > 0) {\n            let digit: number = num % 10;\n            if (digit === 0 || i % digit !== 0) {\n                isDivisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\nconsole.log(divisible_by_digits(100, 1000));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let isDivisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let divisible = true;\n        while (num > 0) {\n            let digit = num % 10;\n            if (digit === 0 || i % digit !== 0) {\n                divisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split(\"\").map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let divisible = true;\n        while (num > 0) {\n            let digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                divisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let divisible = true;\n        while (num > 0) {\n            let digit = num % 10;\n            if (digit === 0 || i % digit !== 0) {\n                divisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let isDivisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let isDivisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(10, 20));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        while (num > 0) {\n            let digit = num % 10;\n            if (digit !== 0 && i % digit === 0) {\n                num = Math.floor(num / 10);\n            } else {\n                break;\n            }\n        }\n        if (num === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let divisible = true;\n        while (num > 0) {\n            let digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                divisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i: number = startnum; i <= endnum; i++) {\n        let num: number = i;\n        let divisible: boolean = true;\n        while (num > 0) {\n            let digit: number = num % 10;\n            if (i % digit !== 0) {\n                divisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: string[] = i.toString().split('');\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % parseInt(digits[j]) !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\nconsole.log(divisible_by_digits(1000, 10000));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let isDivisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let isDivisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split(\"\").map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] != 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(x => parseInt(x));\n        let isDivisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] != 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let isDivisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let divisible = true;\n        while (num > 0) {\n            let digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                divisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(d => i % d == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num: number = i;\n        let digits: number[] = [];\n        while (num > 0) {\n            digits.push(num % 10);\n            num = Math.floor(num / 10);\n        }\n        let isDivisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] != 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(divisible_by_digits(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(x => parseInt(x));\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] != 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: string[] = i.toString().split(\"\");\n        let isDivisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % parseInt(digits[j]) !== 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: string[] = i.toString().split(\"\");\n        let isDivisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % parseInt(digits[j]) != 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num: number = i;\n        let digits: number[] = [];\n        while (num > 0) {\n            digits.push(num % 10);\n            num = Math.floor(num / 10);\n        }\n        if (digits.every(digit => i % digit == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(x => i % x == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let flag = true;\n        while (num > 0) {\n            let digit = num % 10;\n            if (digit === 0 || i % digit !== 0) {\n                flag = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (flag) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let divisible: boolean = true;\n        let digits: number[] = i.toString().split('').map(Number);\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] != 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: string[] = i.toString().split('');\n        let isDivisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % parseInt(digits[j]) != 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        if (i < 10) {\n            result.push(i);\n        } else {\n            let num = i;\n            let isDivisible = true;\n            while (num > 0) {\n                let digit = num % 10;\n                if (digit === 0 || i % digit !== 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num = Math.floor(num / 10);\n            }\n            if (isDivisible) {\n                result.push(i);\n            }\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let is_divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                is_divisible = false;\n                break;\n            }\n        }\n        if (is_divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let isDivisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (digits[j] !== 0 && i % digits[j] !== 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let isDivisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split(\"\").map(Number);\n        if (digits.every(digit => i % digit == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let divisible = true;\n        while (num > 0) {\n            let digit = num % 10;\n            if (digit === 0 || i % digit !== 0) {\n                divisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let digits: number[] = [];\n        while (num > 0) {\n            digits.push(num % 10);\n            num = Math.floor(num / 10);\n        }\n        if (digits.every(digit => i % digit == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(x => parseInt(x));\n        if (digits.every(x => i % x == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let is_divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                is_divisible = false;\n                break;\n            }\n        }\n        if (is_divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(divisible_by_digits(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let isDivisible = true;\n        let num = i;\n        while (num > 0) {\n            let digit = num % 10;\n            if (digit === 0 || i % digit !== 0) {\n                isDivisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let divisible = true;\n        while (num > 0) {\n            let digit = num % 10;\n            if (digit === 0 || i % digit !== 0) {\n                divisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\nconsole.log(divisible_by_digits(1000, 10000));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\nconsole.log(divisible_by_digits(100, 500));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let isDivisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] != 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\nconsole.log(divisible_by_digits(1000, 10000));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let digits: number[] = [];\n        while (num > 0) {\n            digits.push(num % 10);\n            num = Math.floor(num / 10);\n        }\n        let isDivisible = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let isDivisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] != 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let digits: number[] = [];\n        while (num > 0) {\n            digits.push(num % 10);\n            num = Math.floor(num / 10);\n        }\n        let isDivisible = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] != 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let isDivisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(divisible_by_digits(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let digits: number[] = [];\n        while (num > 0) {\n            digits.push(num % 10);\n            num = Math.floor(num / 10);\n        }\n        if (digits.every(digit => i % digit == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split(\"\").map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] != 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\n",
    "    let result: number[] = [];\n    for (let i: number = startnum; i <= endnum; i++) {\n        let digits: number[] = String(i).split(\"\").map(Number);\n        let isDivisible: boolean = true;\n        for (let j: number = 0; j < digits.length; j++) {\n            if (i % digits[j] != 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let divisible = true;\n        while (num > 0) {\n            let digit = num % 10;\n            if (digit === 0 || i % digit !== 0) {\n                divisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let digits: number[] = [];\n        while (num > 0) {\n            digits.push(num % 10);\n            num = Math.floor(num / 10);\n        }\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split(\"\").map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(10, 100));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let divisible = true;\n        while (num > 0) {\n            let digit = num % 10;\n            if (i % digit !== 0) {\n                divisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: string[] = i.toString().split('');\n        let isDivisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % parseInt(digits[j]) !== 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let divisible = true;\n        while (num > 0) {\n            let digit = num % 10;\n            if (digit === 0 || i % digit !== 0) {\n                divisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\nconsole.log(divisible_by_digits(100, 200));\nconsole.log(divisible_by_digits(1000, 2000));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let isDivisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split(\"\").map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let isDivisible: boolean = true;\n        let digits: number[] = i.toString().split('').map(Number);\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let nums: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit == 0)) {\n            nums.push(i);\n        }\n    }\n    return nums;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(divisible_by_digits(10, 20));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits = i.toString().split('');\n        let divisible = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % parseInt(digits[j]) !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(divisible_by_digits(1, 100));\nconsole.log(divisible_by_digits(1000, 10000));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split(\"\").map(Number);\n        let isDivisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(x => parseInt(x));\n        let isDivisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: string[] = i.toString().split('');\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % parseInt(digits[j]) !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num: number = i;\n        let digits: number[] = [];\n        while (num > 0) {\n            digits.push(num % 10);\n            num = Math.floor(num / 10);\n        }\n        if (digits.every(digit => i % digit == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let divisible = true;\n        while (num > 0) {\n            let digit = num % 10;\n            if (digit === 0 || i % digit !== 0) {\n                divisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let divisible = true;\n        while (num > 0) {\n            let digit = num % 10;\n            if (digit === 0 || i % digit !== 0) {\n                divisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let isDivisible: boolean = true;\n        for (let digit of digits) {\n            if (i % digit !== 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits = i.toString().split('');\n        let divisible = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % parseInt(digits[j]) !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(divisible_by_digits(1, 100));\nconsole.log(divisible_by_digits(1000, 2000));\nconsole.log(divisible_by_digits(10000, 20000));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: string[] = i.toString().split('');\n        let isDivisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % parseInt(digits[j]) !== 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let isDivisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\nconsole.log(divisible_by_digits(100, 200));\nconsole.log(divisible_by_digits(1000, 2000));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits = i.toString().split('');\n        let isDivisible = digits.every(digit => i % parseInt(digit) === 0);\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(divisible_by_digits(1, 100));\nconsole.log(divisible_by_digits(100, 200));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let divisible = true;\n        while (num > 0) {\n            let digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                divisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let nums: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            nums.push(i);\n        }\n    }\n    return nums;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num: number = i;\n        let divisible: boolean = true;\n        while (num > 0) {\n            let digit: number = num % 10;\n            if (digit === 0 || i % digit !== 0) {\n                divisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\nconsole.log(divisible_by_digits(100, 1000));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let divisible = true;\n        while (num > 0) {\n            let digit = num % 10;\n            if (digit === 0 || i % digit !== 0) {\n                divisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\nconsole.log(divisible_by_digits(100, 200));\nconsole.log(divisible_by_digits(1000, 2000));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let isDivisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\nconsole.log(divisible_by_digits(1000, 2000));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let isDivisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] != 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let digits: number[] = [];\n        while (num > 0) {\n            digits.push(num % 10);\n            num = Math.floor(num / 10);\n        }\n        if (digits.every(x => i % x == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let digits: number[] = [];\n        while (num > 0) {\n            digits.push(num % 10);\n            num = Math.floor(num / 10);\n        }\n        if (digits.every(d => i % d == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] != 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\nconsole.log(divisible_by_digits(1000, 2000));\nconsole.log(divisible_by_digits(1000, 3000));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split(\"\").map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] != 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let isDivisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let isDivisible = true;\n        while (num > 0) {\n            let digit = num % 10;\n            if (digit === 0 || i % digit !== 0) {\n                isDivisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let digits: number[] = [];\n        while (num > 0) {\n            digits.push(num % 10);\n            num = Math.floor(num / 10);\n        }\n        let isDivisible = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split(\"\").map(Number);\n        if (digits.every(digit => i % digit == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i.toString();\n        let isDivisible = true;\n        for (let j = 0; j < num.length; j++) {\n            if (i % parseInt(num[j]) != 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let divisible = true;\n        while (num > 0) {\n            let digit = num % 10;\n            if (i % digit !== 0) {\n                divisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let isDivisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] != 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every((digit) => i % digit == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num: number = i;\n        let divisible: boolean = true;\n        while (num > 0) {\n            let digit: number = num % 10;\n            if (digit === 0 || i % digit !== 0) {\n                divisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let isDivisible: boolean = digits.every(digit => i % digit === 0);\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let isDivisible = true;\n        while (num > 0) {\n            let digit = num % 10;\n            if (digit === 0 || i % digit !== 0) {\n                isDivisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        digits.forEach(digit => {\n            if (i % digit != 0) {\n                divisible = false;\n            }\n        });\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let flag: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] != 0) {\n                flag = false;\n                break;\n            }\n        }\n        if (flag) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        if (i.toString().split('').every(x => i % parseInt(x) == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let isDivisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let isDivisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: string[] = i.toString().split(\"\");\n        let is_divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % parseInt(digits[j]) != 0) {\n                is_divisible = false;\n                break;\n            }\n        }\n        if (is_divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits = i.toString().split('');\n        let isDivisible = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % parseInt(digits[j]) !== 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: string[] = i.toString().split('');\n        let isDivisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % parseInt(digits[j]) !== 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(d => i % d == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: string[] = i.toString().split(\"\");\n        let isDivisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % parseInt(digits[j]) != 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let divisible = true;\n        while (num > 0) {\n            let digit = num % 10;\n            if (digit === 0 || i % digit !== 0) {\n                divisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\nconsole.log(divisible_by_digits(100, 500));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(divisible_by_digits(1, 100));\nconsole.log(divisible_by_digits(100, 1000));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let digits: number[] = [];\n        while (num > 0) {\n            digits.push(num % 10);\n            num = Math.floor(num / 10);\n        }\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i: number = startnum; i <= endnum; i++) {\n        let digits: string[] = i.toString().split(\"\");\n        let divisible: boolean = true;\n        for (let j: number = 0; j < digits.length; j++) {\n            if (i % parseInt(digits[j]) !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "  let result: number[] = [];\n  for (let i = startnum; i <= endnum; i++) {\n    let digits: number[] = i.toString().split(\"\").map(Number);\n    let divisible: boolean = true;\n    for (let j = 0; j < digits.length; j++) {\n      if (i % digits[j] !== 0) {\n        divisible = false;\n        break;\n      }\n    }\n    if (divisible) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        if (i.toString().split('').every(x => i % parseInt(x) == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i.toString();\n        let flag = true;\n        for (let j = 0; j < num.length; j++) {\n            if (i % parseInt(num[j]) != 0) {\n                flag = false;\n                break;\n            }\n        }\n        if (flag) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "  let result: number[] = [];\n  for (let i = startnum; i <= endnum; i++) {\n    let num = i;\n    let divisible = true;\n    while (num > 0) {\n      let digit = num % 10;\n      if (digit === 0 || i % digit !== 0) {\n        divisible = false;\n        break;\n      }\n      num = Math.floor(num / 10);\n    }\n    if (divisible) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let divisible = true;\n        while (num > 0) {\n            let digit = num % 10;\n            if (digit === 0 || i % digit !== 0) {\n                divisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let divisible: boolean = true;\n        let digits: number[] = i.toString().split('').map(Number);\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\nconsole.log(divisible_by_digits(1000, 10000));\n",
    "    let arr: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let flag: boolean = true;\n        let temp: number = i;\n        while (temp > 0) {\n            let digit: number = temp % 10;\n            if (digit === 0) {\n                flag = false;\n                break;\n            }\n            if (i % digit !== 0) {\n                flag = false;\n                break;\n            }\n            temp = Math.floor(temp / 10);\n        }\n        if (flag) {\n            arr.push(i);\n        }\n    }\n    return arr;\n}\nconsole.log(divisible_by_digits(1, 100));\nconsole.log(divisible_by_digits(100, 200));\nconsole.log(divisible_by_digits(1000, 2000));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let divisible = true;\n        while (num > 0) {\n            let digit = num % 10;\n            if (digit === 0 || i % digit !== 0) {\n                divisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n"
  ]
}
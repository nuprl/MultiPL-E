{
  "name": "mbpp_61_count_Substrings",
  "language": "ts",
  "prompt": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_61_count_Substrings.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum == j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sub = s.substring(i, j);\n            let sum = 0;\n            for (let k = 0; k < sub.length; k++) {\n                sum += parseInt(sub[k]);\n            }\n            if (sum == sub.length) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum == (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum == j - i) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n  let count = 0;\n  for (let i = 0; i < s.length; i++) {\n    for (let j = i + 1; j <= s.length; j++) {\n      let sub = s.substring(i, j);\n      let sum = 0;\n      for (let k = 0; k < sub.length; k++) {\n        sum += parseInt(sub[k]);\n      }\n      if (sum == sub.length) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum === j - i) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count: number = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum: number = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum == (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum === j - i) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sub = s.substring(i, j);\n            let sum = 0;\n            for (let k = 0; k < sub.length; k++) {\n                sum += parseInt(sub[k]);\n            }\n            if (sum == sub.length) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum == j - i) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum == (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"123\"));\nconsole.log(count_Substrings(\"0123\"));\nconsole.log(count_Substrings(\"01230\"));\nconsole.log(count_Substrings(\"012345\"));\nconsole.log(count_Substrings(\"0123456789\"));\nconsole.log(count_Substrings(\"0123456789abc\"));\nconsole.log(count_Substrings(\"0123456789abcdef\"));\nconsole.log(count_Substrings(\"0123456789abcdefghij\"));\nconsole.log(count_Substrings(\"0123456789abcdefghijklmnopqrstuvwxyz\"));\nconsole.log(count_Substrings(\"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum == j - i) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum === j - i) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"123\"));\nconsole.log(count_Substrings(\"0123\"));\nconsole.log(count_Substrings(\"01230\"));\nconsole.log(count_Substrings(\"012345\"));\nconsole.log(count_Substrings(\"0123456789\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122709,
      "stdout": "1\n2\n2\n2\n2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sub = s.substring(i, j);\n            let sum = 0;\n            for (let k = 0; k < sub.length; k++) {\n                sum += parseInt(sub[k]);\n            }\n            if (sum == sub.length) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"1351\"));\nconsole.log(count_Substrings(\"4878\"));\nconsole.log(count_Substrings(\"1234\"));\nconsole.log(count_Substrings(\"12341234\"));\nconsole.log(count_Substrings(\"123412341234\"));\nconsole.log(count_Substrings(\"1234123412341234\"));\nconsole.log(count_Substrings(\"12341234123412341234\"));\nconsole.log(count_Substrings(\"123412341234123412341234\"));\nconsole.log(count_Substrings(\"1234123412341234123412341234\"));\nconsole.log(count_Substrings(\"12341234123412341234123412341234\"));\nconsole.log(count_Substrings(\"123412341234123412341234123412341234\"));\nconsole.log(count_Substrings(\"1234123412341234123412341234123412341234\"));\nconsole.log(count_Substrings(\"12341234123412341234123412341234123412341234\"));\nconsole.log(count_Substrings(\"123412341234123412341234123412341234123412341234\"));\nconsole.log(count_Substrings(\"1234123412341234123412341234123412341234123412341234\"));\nconsole.log(count_Substrings(\"12341234123412\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122709,
      "stdout": "../../../../tmp/tmp5kce5wvm.ts(33,45): error TS1002: Unterminated string literal.\n../../../../tmp/tmp5kce5wvm.ts(34,1): error TS1005: ',' expected.\n../../../../tmp/tmp5kce5wvm.ts(34,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            let str = s.slice(i, j);\n            for (let k = 0; k < str.length; k++) {\n                sum += parseInt(str[k]);\n            }\n            if (sum == str.length) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"123\"));\nconsole.log(count_Substrings(\"0123\"));\nconsole.log(count_Substrings(\"01230\"));\nconsole.log(count_Substrings(\"012304\"));\nconsole.log(count_Substrings(\"0123045\"));\nconsole.log(count_Substrings(\"01230456\"));\nconsole.log(count_Substrings(\"012304567\"));\nconsole.log(count_Substrings(\"0123045678\"));\nconsole.log(count_Substrings(\"01230456789\"));\nconsole.log(count_Substrings(\"012304567890\"));\nconsole.log(count_Substrings(\"0123045678901\"));\nconsole.log(count_Substrings(\"01230456789012\"));\nconsole.log(count_Substrings(\"012304567890123\"));\nconsole.log(count_Substrings(\"0123045678901234\"));\nconsole.log(count_Substrings(\"01230456789012345\"));\nconsole.log(count_Substrings(\"012304567890123456\"));\nconsole.log(count_Substrings(\"0123045678901234567\"));\nconsole.log(count_Substrings(\"01230456789012345678\"));\nconsole.log(count_Substrings(\"012304567890123456789\"));\nconsole.log(count_Substrings(\"0123045678901234567890\"));\nconsole.log(count_Substrings(\"01230456789012345678901\"));\nconsole.log(count_Substrings\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122709,
      "stdout": "../../../../tmp/tmphv1gx1d0.ts(40,1): error TS1005: ',' expected.\n../../../../tmp/tmphv1gx1d0.ts(40,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += Number(s[j]);\n            if (sum === (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"13511235\"));\nconsole.log(count_Substrings(\"123\"));\nconsole.log(count_Substrings(\"011235\"));\nconsole.log(count_Substrings(\"011235x\"));\nconsole.log(count_Substrings(\"0000\"));\nconsole.log(count_Substrings(\"011235\"));\nconsole.log(count_Substrings(\"011235\"));\nconsole.log(count_Substrings(\"011235\"));\nconsole.log(count_Substrings(\"011235\"));\nconsole.log(count_Substrings(\"011235\"));\nconsole.log(count_Substrings(\"011235\"));\nconsole.log(count_Substrings(\"011235\"));\nconsole.log(count_Substrings(\"011235\"));\nconsole.log(count_Substrings(\"011235\"));\nconsole.log(count_Substrings(\"011235\"));\nconsole.log(count_Substrings(\"011235\"));\nconsole.log(count_Substrings(\"011235\"));\nconsole.log(count_Substrings(\"011235\"));\nconsole.log(count_Substrings(\"011235\"));\nconsole.log(count_Substrings(\"011235\"));\nconsole.log(count_Substrings(\"011235\"));\nconsole.log(count_Substrings(\"011235\"));\nconsole.log(count_Substrings(\"011235\"));\nconsole.log(count_Substrings(\"011235\"));\nconsole.log(count_Substrings(\"011235\"));\nconsole.log(count_Substrings(\"011235\"));\nconsole.log(count_Substrings(\"011235\"));\nconsole.log(count_Substrings(\"011235\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122709,
      "stdout": "4\n1\n4\n4\n0\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum == j - i) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"123\"));\nconsole.log(count_Substrings(\"0123\"));\nconsole.log(count_Substrings(\"01230\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122709,
      "stdout": "1\n2\n2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n  let count = 0;\n  for (let i = 0; i < s.length; i++) {\n    for (let j = i + 1; j <= s.length; j++) {\n      let sum = 0;\n      for (let k = i; k < j; k++) {\n        sum += parseInt(s[k]);\n      }\n      if (sum === j - i) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconsole.log(count_Substrings(\"13511235\"));\nconsole.log(count_Substrings(\"132112\"));\nconsole.log(count_Substrings(\"112112224\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122709,
      "stdout": "4\n4\n6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122709,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"123abc\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122709,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum === j - i) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"13511235\"));\nconsole.log(count_Substrings(\"1351123511\"));\nconsole.log(count_Substrings(\"123\"));\nconsole.log(count_Substrings(\"011235\"));\nconsole.log(count_Substrings(\"01123511\"));\nconsole.log(count_Substrings(\"0000\"));\nconsole.log(count_Substrings(\"01123511\"));\nconsole.log(count_Substrings(\"01123511\"));\nconsole.log(count_Substrings(\"01123511\"));\nconsole.log(count_Substrings(\"01123511\"));\nconsole.log(count_Substrings(\"01123511\"));\nconsole.log(count_Substrings(\"01123511\"));\nconsole.log(count_Substrings(\"01123511\"));\nconsole.log(count_Substrings(\"01123511\"));\nconsole.log(count_Substrings(\"01123511\"));\nconsole.log(count_Substrings(\"01123511\"));\nconsole.log(count_Substrings(\"01123511\"));\nconsole.log(count_Substrings(\"01123511\"));\nconsole.log(count_Substrings(\"01123511\"));\nconsole.log(count_Substrings(\"01123511\"));\nconsole.log(count_Substrings(\"01123511\"));\nconsole.log(count_Substrings(\"01123511\"));\nconsole.log(count_Substrings(\"01123511\"));\nconsole.log(count_Substrings(\"01123511\"));\nconsole.log(count_Substrings(\"01123511\"));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122709,
      "stdout": "../../../../tmp/tmpxkfg59rg.ts(43,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum == (j - i)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_Substrings(\"13511235\"));\nconsole.log(count_Substrings(\"123\"));\nconsole.log(count_Substrings(\"011235\"));\nconsole.log(count_Substrings(\"011235\"));\nconsole.log(count_Substrings(\"011235\"));\nconsole.log(count_Substrings(\"011235\"));\nconsole.log(count_Substrings(\"011235\"));\nconsole.log(count_Substrings(\"011235\"));\nconsole.log(count_Substrings(\"011235\"));\nconsole.log(count_Substrings(\"011235\"));\nconsole.log(count_Substrings(\"011235\"));\nconsole.log(count_Substrings(\"011235\"));\nconsole.log(count_Substrings(\"011235\"));\nconsole.log(count_Substrings(\"011235\"));\nconsole.log(count_Substrings(\"011235\"));\nconsole.log(count_Substrings(\"011235\"));\nconsole.log(count_Substrings(\"011235\"));\nconsole.log(count_Substrings(\"011235\"));\nconsole.log(count_Substrings(\"011235\"));\nconsole.log(count_Substrings(\"011235\"));\nconsole.log(count_Substrings(\"011235\"));\nconsole.log(count_Substrings(\"011235\"));\nconsole.log(count_Substrings(\"011235\"));\nconsole.log(count_Substrings(\"011235\"));\nconsole.log(count_Substrings(\"011235\"));\nconsole.log(count_Substrings(\"011235\"));\nconsole.log(count_Sub\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122709,
      "stdout": "../../../../tmp/tmpetr6ur_w.ts(45,1): error TS1005: ',' expected.\n../../../../tmp/tmpetr6ur_w.ts(45,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum == (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let subStr = s.substring(i, j);\n            let sum = 0;\n            for (let k = 0; k < subStr.length; k++) {\n                sum += parseInt(subStr.charAt(k));\n            }\n            if (sum == subStr.length) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"123\"));\nconsole.log(count_Substrings(\"0123\"));\nconsole.log(count_Substrings(\"01230\"));\nconsole.log(count_Substrings(\"012304\"));\nconsole.log(count_Substrings(\"0123045\"));\nconsole.log(count_Substrings(\"012304567\"));\nconsole.log(count_Substrings(\"01230456789\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122709,
      "stdout": "1\n2\n2\n2\n2\n2\n2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum == j - i) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_Substrings(\"13112221\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122709,
      "stdout": "5\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            let str = s.substring(i, j);\n            for (let k = 0; k < str.length; k++) {\n                sum += parseInt(str[k]);\n            }\n            if (sum == str.length) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122709,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"123\"));\nconsole.log(count_Substrings(\"1234\"));\nconsole.log(count_Substrings(\"4321\"));\nconsole.log(count_Substrings(\"43211\"));\nconsole.log(count_Substrings(\"43212\"));\nconsole.log(count_Substrings(\"432123\"));\nconsole.log(count_Substrings(\"4321234\"));\nconsole.log(count_Substrings(\"43212345\"));\nconsole.log(count_Substrings(\"432123456\"));\nconsole.log(count_Substrings(\"4321234567\"));\nconsole.log(count_Substrings(\"43212345678\"));\nconsole.log(count_Substrings(\"432123456789\"));\nconsole.log(count_Substrings(\"43212345678910\"));\nconsole.log(count_Substrings(\"4321234567891011\"));\nconsole.log(count_Substrings(\"432123456789101112\"));\nconsole.log(count_Substrings(\"43212345678910111213\"));\nconsole.log(count_Substrings(\"4321234567891011121314\"));\nconsole.log(count_Substrings(\"432123456789101112131415\"));\nconsole.log(count_Substrings(\"43212345678910111213141516\"));\nconsole.log(count_Substrings(\"4321234567891011121314151617\"));\nconsole.log(count_Substrings(\"432123456789101112131415161718\"));\nconsole.log(count_Substrings(\"43212345678910111213141516171819\"));\nconsole.log(count_Substrings(\"432123456789101112131415161718\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122709,
      "stdout": "../../../../tmp/tmpy6tp1jvo.ts(37,61): error TS1002: Unterminated string literal.\n../../../../tmp/tmpy6tp1jvo.ts(38,1): error TS1005: ',' expected.\n../../../../tmp/tmpy6tp1jvo.ts(38,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum == (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"13112221\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122709,
      "stdout": "5\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sub = s.substring(i, j);\n            if (sub.length === sum_Digits(sub)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122709,
      "stdout": "../../../../tmp/tmpkhatvfj_.ts(7,32): error TS2304: Cannot find name 'sum_Digits'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"123\"));\nconsole.log(count_Substrings(\"0123\"));\nconsole.log(count_Substrings(\"01230\"));\nconsole.log(count_Substrings(\"012304\"));\nconsole.log(count_Substrings(\"0123045\"));\nconsole.log(count_Substrings(\"01230456\"));\nconsole.log(count_Substrings(\"012304567\"));\nconsole.log(count_Substrings(\"0123045678\"));\nconsole.log(count_Substrings(\"01230456789\"));\nconsole.log(count_Substrings(\"012304567891\"));\nconsole.log(count_Substrings(\"0123045678912\"));\nconsole.log(count_Substrings(\"01230456789123\"));\nconsole.log(count_Substrings(\"012304567891234\"));\nconsole.log(count_Substrings(\"0123045678912345\"));\nconsole.log(count_Substrings(\"01230456789123456\"));\nconsole.log(count_Substrings(\"012304567891234567\"));\nconsole.log(count_Substrings(\"0123045678912345678\"));\nconsole.log(count_Substrings(\"01230456789123456789\"));\nconsole.log(count_Substrings(\"012304567891234567891\"));\nconsole.log(count_Substrings(\"0123045678912345678912\"));\nconsole.log(count_Substrings(\"01230456789123456789123\"));\nconsole.log(count_Substrings(\"012304567891234567891234\"));\nconsole.log(count_Substrings(\"0123045678912345678912345\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122709,
      "stdout": "../../../../tmp/tmph4qygif1.ts(37,56): error TS1002: Unterminated string literal.\n../../../../tmp/tmph4qygif1.ts(38,1): error TS1005: ',' expected.\n../../../../tmp/tmph4qygif1.ts(38,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let result = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === (j - i + 1)) {\n                result++;\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(count_Substrings(\"123\"));\nconsole.log(count_Substrings(\"0123\"));\nconsole.log(count_Substrings(\"01230\"));\nconsole.log(count_Substrings(\"012304\"));\nconsole.log(count_Substrings(\"0123045\"));\nconsole.log(count_Substrings(\"01230456\"));\nconsole.log(count_Substrings(\"012304567\"));\nconsole.log(count_Substrings(\"0123045678\"));\nconsole.log(count_Substrings(\"01230456789\"));\nconsole.log(count_Substrings(\"012304567891\"));\nconsole.log(count_Substrings(\"0123045678912\"));\nconsole.log(count_Substrings(\"01230456789123\"));\nconsole.log(count_Substrings(\"012304567891234\"));\nconsole.log(count_Substrings(\"0123045678912345\"));\nconsole.log(count_Substrings(\"01230456789123456\"));\nconsole.log(count_Substrings(\"012304567891234567\"));\nconsole.log(count_Substrings(\"0123045678912345678\"));\nconsole.log(count_Substrings(\"01230456789123456789\"));\nconsole.log(count_Substrings(\"012304567891234567891\"));\nconsole.log(count_Substrings(\"0123045678912345678912\"));\nconsole.log(count_Substrings(\"01230456789123456789123\"));\nconsole.log(count_Substrings(\"012304567891234567891234\"));\nconsole.log(count_Substrings(\"01230456789123456789123\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122709,
      "stdout": "../../../../tmp/tmp9vqh4y9q.ts(38,54): error TS1002: Unterminated string literal.\n../../../../tmp/tmp9vqh4y9q.ts(39,1): error TS1005: ',' expected.\n../../../../tmp/tmp9vqh4y9q.ts(39,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum == j - i) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"13511235\"));\nconsole.log(count_Substrings(\"123\"));\nconsole.log(count_Substrings(\"011235\"));\nconsole.log(count_Substrings(\"011235x\"));\nconsole.log(count_Substrings(\"1111112\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122709,
      "stdout": "4\n1\n4\n4\n21\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            let str = s.slice(i, j);\n            for (let k = 0; k < str.length; k++) {\n                sum += parseInt(str[k]);\n            }\n            if (sum === str.length) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"13511235\"));\nconsole.log(count_Substrings(\"1351123\"));\nconsole.log(count_Substrings(\"135112\"));\nconsole.log(count_Substrings(\"13511\"));\nconsole.log(count_Substrings(\"1351\"));\nconsole.log(count_Substrings(\"135\"));\nconsole.log(count_Substrings(\"13\"));\nconsole.log(count_Substrings(\"1\"));\nconsole.log(count_Substrings(\"\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122709,
      "stdout": "4\n4\n4\n4\n2\n1\n1\n1\n0\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum === j - i) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_Substrings(\"123\"));\nconsole.log(count_Substrings(\"0123\"));\nconsole.log(count_Substrings(\"01230\"));\nconsole.log(count_Substrings(\"012345\"));\nconsole.log(count_Substrings(\"0123456789\"));\nconsole.log(count_Substrings(\"01234567890123456789\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122709,
      "stdout": "1\n2\n2\n2\n2\n4\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_Substrings(\"13112221\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122709,
      "stdout": "5\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_Substrings(\"13112221\"));\nconsole.log(count_Substrings(\"112112\"));\nconsole.log(count_Substrings(\"112112112\"));\nconsole.log(count_Substrings(\"111111\"));\nconsole.log(count_Substrings(\"\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122709,
      "stdout": "5\n6\n9\n21\n0\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n  let count = 0;\n  for (let i = 0; i < s.length; i++) {\n    let sum = 0;\n    for (let j = i; j < s.length; j++) {\n      sum += parseInt(s[j]);\n      if (sum === j - i + 1) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122711,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_Substrings('13511235'));\nconsole.log(count_Substrings('123'));\nconsole.log(count_Substrings('011235'));\nconsole.log(count_Substrings('011235'));\nconsole.log(count_Substrings('011235'));\nconsole.log(count_Substrings('011235'));\nconsole.log(count_Substrings('011235'));\nconsole.log(count_Substrings('011235'));\nconsole.log(count_Substrings('011235'));\nconsole.log(count_Substrings('011235'));\nconsole.log(count_Substrings('011235'));\nconsole.log(count_Substrings('011235'));\nconsole.log(count_Substrings('011235'));\nconsole.log(count_Substrings('011235'));\nconsole.log(count_Substrings('011235'));\nconsole.log(count_Substrings('011235'));\nconsole.log(count_Substrings('011235'));\nconsole.log(count_Substrings('011235'));\nconsole.log(count_Substrings('011235'));\nconsole.log(count_Substrings('011235'));\nconsole.log(count_Substrings('011235'));\nconsole.log(count_Substrings('011235'));\nconsole.log(count_Substrings('011235'));\nconsole.log(count_Substrings('011235'));\nconsole.log(count_Substrings('011235'));\nconsole.log(count_Substrings('011235'));\nconsole.log(count_Substrings('011235'));\nconsole.log(count_Substrings('0112\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122711,
      "stdout": "../../../../tmp/tmpn2__7txt.ts(43,35): error TS1002: Unterminated string literal.\n../../../../tmp/tmpn2__7txt.ts(44,1): error TS1005: ',' expected.\n../../../../tmp/tmpn2__7txt.ts(44,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum == j - i) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n  let count = 0;\n  for (let i = 0; i < s.length; i++) {\n    for (let j = i + 1; j <= s.length; j++) {\n      let sum = 0;\n      for (let k = i; k < j; k++) {\n        sum += parseInt(s[k]);\n      }\n      if (sum === j - i) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconsole.log(count_Substrings(\"13511235\"));\nconsole.log(count_Substrings(\"132112\"));\nconsole.log(count_Substrings(\"112112224\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122711,
      "stdout": "4\n4\n6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sub = s.substring(i, j);\n            let sum = 0;\n            for (let k = 0; k < sub.length; k++) {\n                sum += parseInt(sub[k]);\n            }\n            if (sum === sub.length) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122711,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122709,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum == (j - i)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"123\"));\nconsole.log(count_Substrings(\"1234\"));\nconsole.log(count_Substrings(\"101\"));\nconsole.log(count_Substrings(\"1010\"));\nconsole.log(count_Substrings(\"1111\"));\nconsole.log(count_Substrings(\"1234\"));\nconsole.log(count_Substrings(\"12345\"));\nconsole.log(count_Substrings(\"123456789\"));\nconsole.log(count_Substrings(\"12345678910\"));\nconsole.log(count_Substrings(\"1234567891011\"));\nconsole.log(count_Substrings(\"123456789101112\"));\nconsole.log(count_Substrings(\"12345678910111213\"));\nconsole.log(count_Substrings(\"1234567891011121314\"));\nconsole.log(count_Substrings(\"123456789101112131415\"));\nconsole.log(count_Substrings(\"12345678910111213141516\"));\nconsole.log(count_Substrings(\"1234567891011121314151617\"));\nconsole.log(count_Substrings(\"123456789101112131415161718\"));\nconsole.log(count_Substrings(\"12345678910111213141516171819\"));\nconsole.log(count_Substrings(\"1234567891011121314151617181920\"));\nconsole.log(count_Substrings(\"123456789101112131415161718192021\"));\nconsole.log(count_Substrings(\"12345678910111213141516171819202122\"));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122711,
      "stdout": "1\n1\n2\n2\n10\n1\n1\n1\n2\n5\n10\n13\n14\n15\n16\n17\n18\n19\n20\n23\n23\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum == j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum == (j - i)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"123\"));\nconsole.log(count_Substrings(\"0123\"));\nconsole.log(count_Substrings(\"01230\"));\nconsole.log(count_Substrings(\"012304\"));\nconsole.log(count_Substrings(\"0123045\"));\nconsole.log(count_Substrings(\"01230456\"));\nconsole.log(count_Substrings(\"012304567\"));\nconsole.log(count_Substrings(\"0123045678\"));\nconsole.log(count_Substrings(\"01230456789\"));\nconsole.log(count_Substrings(\"012304567891\"));\nconsole.log(count_Substrings(\"0123045678912\"));\nconsole.log(count_Substrings(\"01230456789123\"));\nconsole.log(count_Substrings(\"012304567891234\"));\nconsole.log(count_Substrings(\"0123045678912345\"));\nconsole.log(count_Substrings(\"01230456789123456\"));\nconsole.log(count_Substrings(\"012304567891234567\"));\nconsole.log(count_Substrings(\"0123045678912345678\"));\nconsole.log(count_Substrings(\"01230456789123456789\"));\nconsole.log(count_Substrings(\"012304567891234567891\"));\nconsole.log(count_Substrings(\"0123045678912345678912\"));\nconsole.log(count_Substrings(\"01230456789123456789123\"));\nconsole.log(count_Substrings(\"012304567891234567891234\"));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122711,
      "stdout": "1\n2\n2\n2\n2\n2\n2\n2\n2\n3\n3\n3\n3\n3\n3\n3\n3\n3\n4\n4\n4\n4\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count: number = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let subStr: string = s.substring(i, j);\n            let sum: number = 0;\n            for (let k = 0; k < subStr.length; k++) {\n                sum += parseInt(subStr[k]);\n            }\n            if (sum == subStr.length) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"123\"));\nconsole.log(count_Substrings(\"0123\"));\nconsole.log(count_Substrings(\"01230\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122712,
      "stdout": "1\n2\n2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"123\"));\nconsole.log(count_Substrings(\"0123\"));\nconsole.log(count_Substrings(\"01230\"));\nconsole.log(count_Substrings(\"012304\"));\nconsole.log(count_Substrings(\"0123045\"));\nconsole.log(count_Substrings(\"01230456\"));\nconsole.log(count_Substrings(\"012304567\"));\nconsole.log(count_Substrings(\"0123045678\"));\nconsole.log(count_Substrings(\"01230456789\"));\nconsole.log(count_Substrings(\"012304567891\"));\nconsole.log(count_Substrings(\"0123045678912\"));\nconsole.log(count_Substrings(\"01230456789123\"));\nconsole.log(count_Substrings(\"012304567891234\"));\nconsole.log(count_Substrings(\"0123045678912345\"));\nconsole.log(count_Substrings(\"01230456789123456\"));\nconsole.log(count_Substrings(\"012304567891234567\"));\nconsole.log(count_Substrings(\"0123045678912345678\"));\nconsole.log(count_Substrings(\"01230456789123456789\"));\nconsole.log(count_Substrings(\"012304567891234567891\"));\nconsole.log(count_Substrings(\"0123045678912345678912\"));\nconsole.log(count_Substrings(\"01230456789123456789123\"));\nconsole.log(count_Substrings(\"012304567891234567891234\"));\nconsole.log(count_Substrings(\"0123045678912345678912345\")\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122711,
      "stdout": "../../../../tmp/tmpus470nou.ts(38,1): error TS1005: ',' expected.\n../../../../tmp/tmpus470nou.ts(38,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum == j - i) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum === j - i) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"123\"));\nconsole.log(count_Substrings(\"0123\"));\nconsole.log(count_Substrings(\"01230\"));\nconsole.log(count_Substrings(\"0123456789\"));\nconsole.log(count_Substrings(\"01234567890123456789\"));\nconsole.log(count_Substrings(\"012345678901234567890123456789\"));\nconsole.log(count_Substrings(\"0123456789012345678901234567890123456789\"));\nconsole.log(count_Substrings(\"01234567890123456789012345678901234567890123456789\"));\nconsole.log(count_Substrings(\"012345678901234567890123456789012345678901234567890123456789\"));\nconsole.log(count_Substrings(\"0123456789012345678901234567890123456789012345678901234567890123456789\"));\nconsole.log(count_Substrings(\"01234567890123456789012345678901234567890123456789012345678901234567890123456789\"));\nconsole.log(count_Substrings(\"012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789\"));\nconsole.log(count_Substrings(\"012345678901234567890123456789\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122711,
      "stdout": "../../../../tmp/tmptp65gkxy.ts(29,61): error TS1002: Unterminated string literal.\n../../../../tmp/tmptp65gkxy.ts(30,1): error TS1005: ',' expected.\n../../../../tmp/tmptp65gkxy.ts(30,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_Substrings(\"123\"));\nconsole.log(count_Substrings(\"0123\"));\nconsole.log(count_Substrings(\"01230\"));\nconsole.log(count_Substrings(\"0123456789\"));\nconsole.log(count_Substrings(\"01234567890123456789\"));\nconsole.log(count_Substrings(\"012345678901234567890123456789\"));\nconsole.log(count_Substrings(\"0123456789012345678901234567890123456789\"));\nconsole.log(count_Substrings(\"01234567890123456789012345678901234567890123456789\"));\nconsole.log(count_Substrings(\"012345678901234567890123456789012345678901234567890123456789\"));\nconsole.log(count_Substrings(\"0123456789012345678901234567890123456789012345678901234567890123456789\"));\nconsole.log(count_Substrings(\"01234567890123456789012345678901234567890123456789012345678901234567890123456789\"));\nconsole.log(count_Substrings(\"012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789\"));\nconsole.log(count_Substrings(\"012345678901234567890123456789012345678901234567890123456789012345\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122711,
      "stdout": "../../../../tmp/tmpri8j_tmb.ts(28,97): error TS1002: Unterminated string literal.\n../../../../tmp/tmpri8j_tmb.ts(29,1): error TS1005: ',' expected.\n../../../../tmp/tmpri8j_tmb.ts(29,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122709,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum === j - i) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"13112221\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122712,
      "stdout": "5\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count: number = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum: number = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum == (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum == (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"13112221\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122709,
      "stdout": "5\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_Substrings('13121312'));\nconsole.log(count_Substrings('11211230'));\nconsole.log(count_Substrings('123123'));\nconsole.log(count_Substrings('12'));\nconsole.log(count_Substrings('312'));\nconsole.log(count_Substrings('1234'));\nconsole.log(count_Substrings('312'));\nconsole.log(count_Substrings('312'));\nconsole.log(count_Substrings('312'));\nconsole.log(count_Substrings('312'));\nconsole.log(count_Substrings('312'));\nconsole.log(count_Substrings('312'));\nconsole.log(count_Substrings('312'));\nconsole.log(count_Substrings('312'));\nconsole.log(count_Substrings('312'));\nconsole.log(count_Substrings('312'));\nconsole.log(count_Substrings('312'));\nconsole.log(count_Substrings('312'));\nconsole.log(count_Substrings('312'));\nconsole.log(count_Substrings('312'));\nconsole.log(count_Substrings('312'));\nconsole.log(count_Substrings('312'));\nconsole.log(count_Substrings('312'));\nconsole.log(count_Substrings('312'));\nconsole.log(count_Substrings('312'));\nconsole.log(count_Substrings('312'));\nconsole.log(count_Substrings('312'));\nconsole.log(count_Substrings('312'));\nconsole.log(count_Substrings('312'));\nconsole.log(count_Substrings('312'));\nconsole.log(count_Substrings('312'));\nconsole.log(count\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122711,
      "stdout": "../../../../tmp/tmpqcqfg1l6.ts(48,1): error TS1005: ',' expected.\n../../../../tmp/tmpqcqfg1l6.ts(48,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum == j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"13112221\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122711,
      "stdout": "5\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum == j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum == j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"123123\"));\nconsole.log(count_Substrings(\"121121\"));\nconsole.log(count_Substrings(\"121212\"));\nconsole.log(count_Substrings(\"12121212\"));\nconsole.log(count_Substrings(\"1212121212\"));\nconsole.log(count_Substrings(\"121212121212\"));\nconsole.log(count_Substrings(\"12121212121212\"));\nconsole.log(count_Substrings(\"1212121212121212\"));\nconsole.log(count_Substrings(\"121212121212121212\"));\nconsole.log(count_Substrings(\"12121212121212121212\"));\nconsole.log(count_Substrings(\"1212121212121212121212\"));\nconsole.log(count_Substrings(\"121212121212121212121212\"));\nconsole.log(count_Substrings(\"12121212121212121212121212\"));\nconsole.log(count_Substrings(\"1212121212121212121212121212\"));\nconsole.log(count_Substrings(\"121212121212121212121212121212\"));\nconsole.log(count_Substrings(\"12121212121212121212121212121212\"));\nconsole.log(count_Substrings(\"1212121212121212121212121212121212\"));\nconsole.log(count_Substrings(\"121212121212121212121212121212121212\"));\nconsole.log(count_Substrings(\"12121212121212121212121212121212121212\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122711,
      "stdout": "../../../../tmp/tmpm_j51ntu.ts(33,69): error TS1002: Unterminated string literal.\n../../../../tmp/tmpm_j51ntu.ts(34,1): error TS1005: ',' expected.\n../../../../tmp/tmpm_j51ntu.ts(34,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum == (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122709,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let result = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum == (j - i)) {\n                result++;\n            }\n        }\n    }\n    return result;\n}\nconsole.log(count_Substrings('123'));\nconsole.log(count_Substrings('1234'));\nconsole.log(count_Substrings('43210'));\nconsole.log(count_Substrings('432101'));\nconsole.log(count_Substrings('4321012'));\nconsole.log(count_Substrings('43210123'));\nconsole.log(count_Substrings('432101234'));\nconsole.log(count_Substrings('4321012345'));\nconsole.log(count_Substrings('43210123456'));\nconsole.log(count_Substrings('432101234567'));\nconsole.log(count_Substrings('4321012345678'));\nconsole.log(count_Substrings('43210123456789'));\nconsole.log(count_Substrings('432101234567890'));\nconsole.log(count_Substrings('4321012345678901'));\nconsole.log(count_Substrings('43210123456789012'));\nconsole.log(count_Substrings('432101234567890123'));\nconsole.log(count_Substrings('4321012345678901234'));\nconsole.log(count_Substrings('43210123456789012345'));\nconsole.log(count_Substrings('432101234567890123456'));\nconsole.log(count_Substrings('4321012345678901234567'));\nconsole.log(count_Substrings('43210123456789012345678'));\nconsole.log(count_Substrings('4321012345\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122712,
      "stdout": "../../../../tmp/tmppa6_ytq6.ts(38,41): error TS1002: Unterminated string literal.\n../../../../tmp/tmppa6_ytq6.ts(39,1): error TS1005: ',' expected.\n../../../../tmp/tmppa6_ytq6.ts(39,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122709,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum === j - i) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"13511235\"));\nconsole.log(count_Substrings(\"132112\"));\nconsole.log(count_Substrings(\"112112224\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122712,
      "stdout": "4\n4\n6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum == j - i) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_Substrings(\"123\"));\nconsole.log(count_Substrings(\"0123\"));\nconsole.log(count_Substrings(\"01230\"));\nconsole.log(count_Substrings(\"012345\"));\nconsole.log(count_Substrings(\"01234567\"));\nconsole.log(count_Substrings(\"0123456789\"));\nconsole.log(count_Substrings(\"01234567890123456789\"));\nconsole.log(count_Substrings(\"012345678901234567890123456789\"));\nconsole.log(count_Substrings(\"0123456789012345678901234567890123456789\"));\nconsole.log(count_Substrings(\"01234567890123456789012345678901234567890123456789\"));\nconsole.log(count_Substrings(\"012345678901234567890123456789012345678901234567890123456789\"));\nconsole.log(count_Substrings(\"0123456789012345678901234567890123456789012345678901234567890123456789\"));\nconsole.log(count_Substrings(\"01234567890123456789012345678901234567890123456789012345678901234567890123456789\"));\nconsole.log(count_Substrings(\"012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789\"));\nconsole.log(count_Substrings(\"01\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122711,
      "stdout": "../../../../tmp/tmpgj21tvgq.ts(30,33): error TS1002: Unterminated string literal.\n../../../../tmp/tmpgj21tvgq.ts(31,1): error TS1005: ',' expected.\n../../../../tmp/tmpgj21tvgq.ts(31,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"123\"));\nconsole.log(count_Substrings(\"0123\"));\nconsole.log(count_Substrings(\"1234\"));\nconsole.log(count_Substrings(\"12345\"));\nconsole.log(count_Substrings(\"1234567890\"));\nconsole.log(count_Substrings(\"12345678901\"));\nconsole.log(count_Substrings(\"123456789012\"));\nconsole.log(count_Substrings(\"1234567890123\"));\nconsole.log(count_Substrings(\"12345678901234\"));\nconsole.log(count_Substrings(\"123456789012345\"));\nconsole.log(count_Substrings(\"1234567890123456\"));\nconsole.log(count_Substrings(\"12345678901234567\"));\nconsole.log(count_Substrings(\"123456789012345678\"));\nconsole.log(count_Substrings(\"1234567890123456789\"));\nconsole.log(count_Substrings(\"12345678901234567890\"));\nconsole.log(count_Substrings(\"123456789012345678901\"));\nconsole.log(count_Substrings(\"1234567890123456789012\"));\nconsole.log(count_Substrings(\"12345678901234567890123\"));\nconsole.log(count_Substrings(\"123456789012345678901234\"));\nconsole.log(count_Substrings(\"1234567890123456789012345\"));\nconsole.log(count_Substrings(\"12345678901234567890123456\"));\nconsole.log(count_Substrings(\"1234567890123456789\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122712,
      "stdout": "../../../../tmp/tmpsnbqpgyu.ts(36,50): error TS1002: Unterminated string literal.\n../../../../tmp/tmpsnbqpgyu.ts(37,1): error TS1005: ',' expected.\n../../../../tmp/tmpsnbqpgyu.ts(37,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum == (j - i)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"123\"));\nconsole.log(count_Substrings(\"0123\"));\nconsole.log(count_Substrings(\"01230\"));\nconsole.log(count_Substrings(\"012345\"));\nconsole.log(count_Substrings(\"0123456789\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122712,
      "stdout": "1\n2\n2\n2\n2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum == j - i) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"123\"));\nconsole.log(count_Substrings(\"0123\"));\nconsole.log(count_Substrings(\"01230\"));\nconsole.log(count_Substrings(\"012345\"));\nconsole.log(count_Substrings(\"0123456789\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122712,
      "stdout": "1\n2\n2\n2\n2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_Substrings('13511235'));\nconsole.log(count_Substrings('1351123'));\nconsole.log(count_Substrings('135112'));\nconsole.log(count_Substrings('1351'));\nconsole.log(count_Substrings('135'));\nconsole.log(count_Substrings('13'));\nconsole.log(count_Substrings('1'));\nconsole.log(count_Substrings('0'));\nconsole.log(count_Substrings('01'));\nconsole.log(count_Substrings('012'));\nconsole.log(count_Substrings('0123'));\nconsole.log(count_Substrings('01234'));\nconsole.log(count_Substrings('012345'));\nconsole.log(count_Substrings('0123456'));\nconsole.log(count_Substrings('01234567'));\nconsole.log(count_Substrings('012345678'));\nconsole.log(count_Substrings('0123456789'));\nconsole.log(count_Substrings('01234567890'));\nconsole.log(count_Substrings('012345678901'));\nconsole.log(count_Substrings('0123456789012'));\nconsole.log(count_Substrings('01234567890123'));\nconsole.log(count_Substrings('012345678901234'));\nconsole.log(count_Substrings('0123456789012345'));\nconsole.log(count_Substrings('01234567890123456'));\nconsole.log(count_Substrings('012345678901234567'));\nconsole.log(count_Substrings('0123456789012345678\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122712,
      "stdout": "../../../../tmp/tmp3bzwflpk.ts(41,50): error TS1002: Unterminated string literal.\n../../../../tmp/tmp3bzwflpk.ts(42,1): error TS1005: ',' expected.\n../../../../tmp/tmp3bzwflpk.ts(42,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122709,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n  let count = 0;\n  for (let i = 0; i < s.length; i++) {\n    for (let j = i + 1; j <= s.length; j++) {\n      let sum = 0;\n      for (let k = i; k < j; k++) {\n        sum += parseInt(s[k]);\n      }\n      if (sum === j - i) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122712,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum == (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n  let count = 0;\n  for (let i = 0; i < s.length; i++) {\n    for (let j = i + 1; j <= s.length; j++) {\n      let sum = 0;\n      for (let k = i; k < j; k++) {\n        sum += parseInt(s[k]);\n      }\n      if (sum === j - i) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\nconsole.log(count_Substrings(\"13511235\"));\nconsole.log(count_Substrings(\"132112\"));\nconsole.log(count_Substrings(\"112112224\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122712,
      "stdout": "4\n4\n6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"13112221\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122712,
      "stdout": "5\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum == (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_Substrings(\"13121312\"));\nconsole.log(count_Substrings(\"11211230\"));\nconsole.log(count_Substrings(\"123123\"));\nconsole.log(count_Substrings(\"1201212\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "4\n6\n2\n9\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"13112221\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122712,
      "stdout": "5\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum == j - i) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"123\"));\nconsole.log(count_Substrings(\"0123\"));\nconsole.log(count_Substrings(\"01230\"));\nconsole.log(count_Substrings(\"012345\"));\nconsole.log(count_Substrings(\"0123456789\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122712,
      "stdout": "1\n2\n2\n2\n2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sub = s.substring(i, j);\n            let sum = 0;\n            for (let k = 0; k < sub.length; k++) {\n                sum += parseInt(sub[k]);\n            }\n            if (sum === sub.length) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_Substrings(\"123\"));\nconsole.log(count_Substrings(\"0123\"));\nconsole.log(count_Substrings(\"012304\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "1\n2\n2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n  let result = 0;\n  for (let i = 0; i < s.length; i++) {\n    let sum = 0;\n    for (let j = i; j < s.length; j++) {\n      sum += parseInt(s[j]);\n      if (sum === j - i + 1) {\n        result++;\n      }\n    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum == (j - i)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum == (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_Substrings(\"13112221\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "5\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122709,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sub = s.substring(i, j);\n            let sum = 0;\n            for (let k = 0; k < sub.length; k++) {\n                sum += parseInt(sub[k]);\n            }\n            if (sum === sub.length) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122711,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum == (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n  let count = 0;\n  for (let i = 0; i < s.length; i++) {\n    for (let j = i + 1; j <= s.length; j++) {\n      let sum = 0;\n      let sub = s.substring(i, j);\n      for (let k = 0; k < sub.length; k++) {\n        sum += Number(sub[k]);\n      }\n      if (sum === sub.length) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconsole.log(count_Substrings(\"13511235\"));\nconsole.log(count_Substrings(\"132112\"));\nconsole.log(count_Substrings(\"133312\"));\nconsole.log(count_Substrings(\"112112\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "4\n4\n2\n6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += Number(s[k]);\n            }\n            if (sum === (j - i)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sub = s.substring(i, j);\n            if (sub.length === sum_Digits(sub)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122709,
      "stdout": "../../../../tmp/tmpkhatvfj_.ts(7,32): error TS2304: Cannot find name 'sum_Digits'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sub = s.substring(i, j);\n            if (sub.length === sub.split('').reduce((a, b) => a + +b, 0)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings('123abc'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += Number(s[j]);\n            if (sum === j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"123\"));\nconsole.log(count_Substrings(\"0123\"));\nconsole.log(count_Substrings(\"01230\"));\nconsole.log(count_Substrings(\"012304\"));\nconsole.log(count_Substrings(\"0123045\"));\nconsole.log(count_Substrings(\"01230456\"));\nconsole.log(count_Substrings(\"012304567\"));\nconsole.log(count_Substrings(\"0123045678\"));\nconsole.log(count_Substrings(\"01230456789\"));\nconsole.log(count_Substrings(\"012304567891\"));\nconsole.log(count_Substrings(\"0123045678912\"));\nconsole.log(count_Substrings(\"01230456789123\"));\nconsole.log(count_Substrings(\"012304567891234\"));\nconsole.log(count_Substrings(\"0123045678912345\"));\nconsole.log(count_Substrings(\"01230456789123456\"));\nconsole.log(count_Substrings(\"012304567891234567\"));\nconsole.log(count_Substrings(\"0123045678912345678\"));\nconsole.log(count_Substrings(\"01230456789123456789\"));\nconsole.log(count_Substrings(\"012304567891234567891\"));\nconsole.log(count_Substrings(\"0123045678912345678912\"));\nconsole.log(count_Substrings(\"01230456789123456789123\"));\nconsole.log(count_Substrings(\"012304567891234567891234\"));\nconsole.log(count_Substrings(\"0123045678912345678912345\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "1\n2\n2\n2\n2\n2\n2\n2\n2\n3\n3\n3\n3\n3\n3\n3\n3\n3\n4\n4\n4\n4\n4\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum == (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_Substrings(\"13112221\"));\nconsole.log(count_Substrings(\"112112\"));\nconsole.log(count_Substrings(\"1121121\"));\nconsole.log(count_Substrings(\"1111112\"));\nconsole.log(count_Substrings(\"111111\"));\nconsole.log(count_Substrings(\"11111\"));\nconsole.log(count_Substrings(\"1111\"));\nconsole.log(count_Substrings(\"111\"));\nconsole.log(count_Substrings(\"11\"));\nconsole.log(count_Substrings(\"1\"));\nconsole.log(count_Substrings(\"\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "5\n6\n7\n21\n21\n15\n10\n6\n3\n1\n0\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum == (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_Substrings(\"123\"));\nconsole.log(count_Substrings(\"0123\"));\nconsole.log(count_Substrings(\"01230\"));\nconsole.log(count_Substrings(\"012304\"));\nconsole.log(count_Substrings(\"0123045\"));\nconsole.log(count_Substrings(\"01230456\"));\nconsole.log(count_Substrings(\"012304567\"));\nconsole.log(count_Substrings(\"0123045678\"));\nconsole.log(count_Substrings(\"01230456789\"));\nconsole.log(count_Substrings(\"012304567891\"));\nconsole.log(count_Substrings(\"0123045678912\"));\nconsole.log(count_Substrings(\"01230456789123\"));\nconsole.log(count_Substrings(\"012304567891234\"));\nconsole.log(count_Substrings(\"0123045678912345\"));\nconsole.log(count_Substrings(\"01230456789123456\"));\nconsole.log(count_Substrings(\"012304567891234567\"));\nconsole.log(count_Substrings(\"0123045678912345678\"));\nconsole.log(count_Substrings(\"01230456789123456789\"));\nconsole.log(count_Substrings(\"012304567891234567891\"));\nconsole.log(count_Substrings(\"0123045678912345678912\"));\nconsole.log(count_Substrings(\"01230456789123456789123\"));\nconsole.log(count_Substrings(\"012304567891234567891234\"));\nconsole.log(count_Substrings(\"01230456789123456789123\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "../../../../tmp/tmp8qp_d7ft.ts(38,54): error TS1002: Unterminated string literal.\n../../../../tmp/tmp8qp_d7ft.ts(39,1): error TS1005: ',' expected.\n../../../../tmp/tmp8qp_d7ft.ts(39,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum == (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_Substrings(\"13112221\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "5\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"123\"));\nconsole.log(count_Substrings(\"1234\"));\nconsole.log(count_Substrings(\"4321\"));\nconsole.log(count_Substrings(\"4321234\"));\nconsole.log(count_Substrings(\"43212345\"));\nconsole.log(count_Substrings(\"123454321\"));\nconsole.log(count_Substrings(\"12345\"));\nconsole.log(count_Substrings(\"123456789\"));\nconsole.log(count_Substrings(\"987654321\"));\nconsole.log(count_Substrings(\"\"));\nconsole.log(count_Substrings(\"0\"));\nconsole.log(count_Substrings(\"0123456789\"));\nconsole.log(count_Substrings(\"01\"));\nconsole.log(count_Substrings(\"0123\"));\nconsole.log(count_Substrings(\"012345\"));\nconsole.log(count_Substrings(\"01234567\"));\nconsole.log(count_Substrings(\"0123456789\"));\nconsole.log(count_Substrings(\"01234567891\"));\nconsole.log(count_Substrings(\"012345678912\"));\nconsole.log(count_Substrings(\"0123456789123\"));\nconsole.log(count_Substrings(\"01234567891234\"));\nconsole.log(count_Substrings(\"012345678912345\"));\nconsole.log(count_Substrings(\"0123456789123456\"));\nconsole.log(count_Substrings(\"01234567891234567\"));\nconsole.log(count_Substrings(\"012345678912345678\"));\nconsole.log(count_Substrings(\"0123456789123\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "../../../../tmp/tmpfnukyx0q.ts(40,44): error TS1002: Unterminated string literal.\n../../../../tmp/tmpfnukyx0q.ts(41,1): error TS1005: ',' expected.\n../../../../tmp/tmpfnukyx0q.ts(41,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += Number(s[k]);\n            }\n            if (sum === j - i) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_Substrings(\"1321\"));\nconsole.log(count_Substrings(\"1322\"));\nconsole.log(count_Substrings(\"1323\"));\nconsole.log(count_Substrings(\"112\"));\nconsole.log(count_Substrings(\"123\"));\nconsole.log(count_Substrings(\"1234\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "2\n1\n1\n3\n1\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_Substrings(\"13112221\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "5\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sub = s.substring(i, j);\n            let sum = 0;\n            for (let k = 0; k < sub.length; k++) {\n                sum += parseInt(sub[k]);\n            }\n            if (sum == sub.length) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"1351\"));\nconsole.log(count_Substrings(\"4878\"));\nconsole.log(count_Substrings(\"1234\"));\nconsole.log(count_Substrings(\"12341234\"));\nconsole.log(count_Substrings(\"1111\"));\nconsole.log(count_Substrings(\"123456789\"));\nconsole.log(count_Substrings(\"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "2\n0\n1\n2\n10\n1\n31\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sub = s.substring(i, j);\n            let sum = 0;\n            for (let k = 0; k < sub.length; k++) {\n                sum += parseInt(sub[k]);\n            }\n            if (sum == sub.length) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"123abc\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122709,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum == (j - i)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sub = s.substring(i, j);\n            let sum = 0;\n            for (let k = 0; k < sub.length; k++) {\n                sum += parseInt(sub[k]);\n            }\n            if (sum === sub.length) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122711,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sub = s.substring(i, j);\n            if (sub.length === sub.split('').reduce((a, b) => a + parseInt(b), 0)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings('123abc'));\nconsole.log(count_Substrings('abcd'));\nconsole.log(count_Substrings('aaaaa'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "1\n0\n0\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sub = s.substring(i, j);\n            let sum = 0;\n            for (let k = 0; k < sub.length; k++) {\n                sum += parseInt(sub[k]);\n            }\n            if (sum == sub.length) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sub = s.substring(i, j);\n            if (sub.length === sub.split('').reduce((a, b) => a + parseInt(b), 0)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            let str = s.substring(i, j);\n            for (let k = 0; k < str.length; k++) {\n                sum += parseInt(str[k]);\n            }\n            if (sum == str.length) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"123\"));\nconsole.log(count_Substrings(\"1234\"));\nconsole.log(count_Substrings(\"10101\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "1\n1\n3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum == j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_Substrings(\"13121312\"));\nconsole.log(count_Substrings(\"11211230\"));\nconsole.log(count_Substrings(\"123123\"));\nconsole.log(count_Substrings(\"1201212\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "4\n6\n2\n9\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"123\"));\nconsole.log(count_Substrings(\"0123\"));\nconsole.log(count_Substrings(\"01230\"));\nconsole.log(count_Substrings(\"012345\"));\nconsole.log(count_Substrings(\"0123456789\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "1\n2\n2\n2\n2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sub = s.slice(i, j);\n            let sum = 0;\n            for (let k = 0; k < sub.length; k++) {\n                sum += parseInt(sub[k]);\n            }\n            if (sum == sub.length) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"123abc\"));\nconsole.log(count_Substrings(\"abcd\"));\nconsole.log(count_Substrings(\"aaaaa\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "1\n0\n0\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"13112221\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122712,
      "stdout": "5\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sub = s.substring(i, j);\n            let sum = 0;\n            for (let k = 0; k < sub.length; k++) {\n                sum += parseInt(sub[k]);\n            }\n            if (sum == sub.length) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122709,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum === (j - i)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122717,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n  let count = 0;\n  for (let i = 0; i < s.length; i++) {\n    for (let j = i + 1; j <= s.length; j++) {\n      let sub = s.substring(i, j);\n      let sum = 0;\n      for (let k = 0; k < sub.length; k++) {\n        sum += parseInt(sub[k]);\n      }\n      if (sum == sub.length) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\nconsole.log(count_Substrings(\"123abc\"));\nconsole.log(count_Substrings(\"ab12\"));\nconsole.log(count_Substrings(\"1234\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122717,
      "stdout": "1\n1\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum == (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum === j - i) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let subString = s.substring(i, j);\n            let sum = 0;\n            for (let k = 0; k < subString.length; k++) {\n                sum += parseInt(subString[k]);\n            }\n            if (sum == subString.length) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122717,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n  let count = 0;\n  for (let i = 0; i < s.length; i++) {\n    for (let j = i + 1; j <= s.length; j++) {\n      let sum = 0;\n      for (let k = i; k < j; k++) {\n        sum += parseInt(s[k]);\n      }\n      if (sum === j - i) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122712,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n  let count = 0;\n  for (let i = 0; i < s.length; i++) {\n    for (let j = i + 1; j <= s.length; j++) {\n      let sum = 0;\n      for (let k = i; k < j; k++) {\n        sum += parseInt(s[k]);\n      }\n      if (sum == j - i) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122717,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"13112221\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122717,
      "stdout": "5\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum == (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"13112221\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122709,
      "stdout": "5\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sub = s.substring(i, j);\n            let sum = 0;\n            for (let k = 0; k < sub.length; k++) {\n                sum += parseInt(sub[k]);\n            }\n            if (sum == sub.length) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n  let count = 0;\n  for (let i = 0; i < s.length; i++) {\n    for (let j = i + 1; j <= s.length; j++) {\n      let sub = s.substring(i, j);\n      let sum = 0;\n      for (let k = 0; k < sub.length; k++) {\n        sum += parseInt(sub[k]);\n      }\n      if (sum === sub.length) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122717,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum == j - i) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n  let count = 0;\n  for (let i = 0; i < s.length; i++) {\n    for (let j = i + 1; j <= s.length; j++) {\n      let sum = 0;\n      let sub = s.substring(i, j);\n      for (let k = 0; k < sub.length; k++) {\n        sum += parseInt(sub[k]);\n      }\n      if (sum === sub.length) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconsole.log(count_Substrings(\"123abc\"));\nconsole.log(count_Substrings(\"abcd\"));\nconsole.log(count_Substrings(\"abab\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122717,
      "stdout": "1\n0\n0\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum == j - i) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum == j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_Substrings(\"13112221\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122709,
      "stdout": "5\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += Number(s[j]);\n            if (sum === (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"13112221\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122717,
      "stdout": "5\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum == j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"13112221\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122711,
      "stdout": "5\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum == j - i) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"13112221\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122717,
      "stdout": "5\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum === (j - i)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122717,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sub = s.substring(i, j);\n            let sum = 0;\n            for (let k = 0; k < sub.length; k++) {\n                sum += parseInt(sub[k]);\n            }\n            if (sum == sub.length) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sub = s.substring(i, j);\n            let sum = 0;\n            for (let k = 0; k < sub.length; k++) {\n                sum += parseInt(sub[k]);\n            }\n            if (sum == sub.length) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"1321\"));\nconsole.log(count_Substrings(\"123\"));\nconsole.log(count_Substrings(\"1234\"));\nconsole.log(count_Substrings(\"1234\"));\nconsole.log(count_Substrings(\"10203\"));\nconsole.log(count_Substrings(\"21358\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122717,
      "stdout": "2\n1\n1\n1\n4\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum == (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum === j - i) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_Substrings(\"13:45:20\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122717,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum == (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sub = s.substring(i, j);\n            let sum = 0;\n            for (let k = 0; k < sub.length; k++) {\n                sum += parseInt(sub[k]);\n            }\n            if (sum == sub.length) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum == j - i) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum == j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122709,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_Substrings('123'));\nconsole.log(count_Substrings('1234'));\nconsole.log(count_Substrings('4321'));\nconsole.log(count_Substrings('4321234'));\nconsole.log(count_Substrings('43212345'));\nconsole.log(count_Substrings('123454321'));\nconsole.log(count_Substrings('12344321'));\nconsole.log(count_Substrings('1234123454321'));\nconsole.log(count_Substrings('123451234512345'));\nconsole.log(count_Substrings('1234512345123451'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122717,
      "stdout": "1\n1\n1\n1\n1\n2\n2\n3\n3\n4\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum == j - i) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum == j - i) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum == j - i) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"123\"));\nconsole.log(count_Substrings(\"0123\"));\nconsole.log(count_Substrings(\"01230\"));\nconsole.log(count_Substrings(\"012345\"));\nconsole.log(count_Substrings(\"01234567\"));\nconsole.log(count_Substrings(\"0123456789\"));\nconsole.log(count_Substrings(\"012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122717,
      "stdout": "../../../../tmp/tmphcivdzt2.ts(23,631): error TS1002: Unterminated string literal.\n../../../../tmp/tmphcivdzt2.ts(24,1): error TS1005: ',' expected.\n../../../../tmp/tmphcivdzt2.ts(24,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum === j - i) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_Substrings(\"1351\"));\nconsole.log(count_Substrings(\"4882\"));\nconsole.log(count_Substrings(\"123\"));\nconsole.log(count_Substrings(\"1234\"));\nconsole.log(count_Substrings(\"411\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122717,
      "stdout": "2\n0\n1\n1\n3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum == j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum == (j - i)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n  let count = 0;\n  for (let i = 0; i < s.length; i++) {\n    for (let j = i + 1; j <= s.length; j++) {\n      if (sumDigits(s.substring(i, j)) === j - i) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122717,
      "stdout": "../../../../tmp/tmp00bwq0k6.ts(6,11): error TS2304: Cannot find name 'sumDigits'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum == (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum == j - i) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i; j < s.length; j++) {\n            let sum = 0;\n            for (let k = i; k <= j; k++) {\n                sum += Number(s[k]);\n            }\n            if (sum === (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"13511235\"));\nconsole.log(count_Substrings(\"123\"));\nconsole.log(count_Substrings(\"011235\"));\nconsole.log(count_Substrings(\"011235x\"));\nconsole.log(count_Substrings(\"1111112\"));\nconsole.log(count_Substrings(\"\"));\nconsole.log(count_Substrings(\"0\"));\nconsole.log(count_Substrings(\"1\"));\nconsole.log(count_Substrings(\"2\"));\nconsole.log(count_Substrings(\"3\"));\nconsole.log(count_Substrings(\"4\"));\nconsole.log(count_Substrings(\"5\"));\nconsole.log(count_Substrings(\"6\"));\nconsole.log(count_Substrings(\"7\"));\nconsole.log(count_Substrings(\"8\"));\nconsole.log(count_Substrings(\"9\"));\nconsole.log(count_Substrings(\"10\"));\nconsole.log(count_Substrings(\"11\"));\nconsole.log(count_Substrings(\"12\"));\nconsole.log(count_Substrings(\"13\"));\nconsole.log(count_Substrings(\"14\"));\nconsole.log(count_Substrings(\"15\"));\nconsole.log(count_Substrings(\"16\"));\nconsole.log(count_Substrings(\"17\"));\nconsole.log(count_Substrings(\"18\"));\nconsole.log(count_Substrings(\"19\"));\nconsole.log(count_Substrings(\"20\"));\nconsole.log(count_Substrings(\"21\"));\nconsole.log(count_Substrings(\"22\"));\nconsole.log(count_Substrings(\"23\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122717,
      "stdout": "4\n1\n4\n4\n21\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n1\n3\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n0\n0\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122709,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum == j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_Substrings(\"123\"));\nconsole.log(count_Substrings(\"1234\"));\nconsole.log(count_Substrings(\"4321\"));\nconsole.log(count_Substrings(\"4321234\"));\nconsole.log(count_Substrings(\"43212345\"));\nconsole.log(count_Substrings(\"123454321\"));\nconsole.log(count_Substrings(\"12345\"));\nconsole.log(count_Substrings(\"123456789\"));\nconsole.log(count_Substrings(\"1234567890\"));\nconsole.log(count_Substrings(\"12345678901\"));\nconsole.log(count_Substrings(\"123456789012\"));\nconsole.log(count_Substrings(\"1234567890123\"));\nconsole.log(count_Substrings(\"12345678901234\"));\nconsole.log(count_Substrings(\"123456789012345\"));\nconsole.log(count_Substrings(\"1234567890123456\"));\nconsole.log(count_Substrings(\"12345678901234567\"));\nconsole.log(count_Substrings(\"123456789012345678\"));\nconsole.log(count_Substrings(\"1234567890123456789\"));\nconsole.log(count_Substrings(\"12345678901234567890\"));\nconsole.log(count_Substrings(\"123456789012345678901\"));\nconsole.log(count_Substrings(\"1234567890123456789012\"));\nconsole.log(count_Substrings(\"12345678901234567890123\"));\nconsole.log(count_Substrings(\"123456789012345678901234\"));\nconsole.\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122717,
      "stdout": "../../../../tmp/tmplvccq_i2.ts(39,9): error TS1003: Identifier expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum == (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_Substrings('13112221'));\nconsole.log(count_Substrings('11212'));\nconsole.log(count_Substrings('1111'));\nconsole.log(count_Substrings('1234'));\nconsole.log(count_Substrings('12345'));\nconsole.log(count_Substrings('123456'));\nconsole.log(count_Substrings('1234567'));\nconsole.log(count_Substrings('12345678'));\nconsole.log(count_Substrings('123456789'));\nconsole.log(count_Substrings('1234567890'));\nconsole.log(count_Substrings('12345678901'));\nconsole.log(count_Substrings('123456789012'));\nconsole.log(count_Substrings('1234567890123'));\nconsole.log(count_Substrings('12345678901234'));\nconsole.log(count_Substrings('123456789012345'));\nconsole.log(count_Substrings('1234567890123456'));\nconsole.log(count_Substrings('12345678901234567'));\nconsole.log(count_Substrings('123456789012345678'));\nconsole.log(count_Substrings('1234567890123456789'));\nconsole.log(count_Substrings('12345678901234567890'));\nconsole.log(count_Substrings('123456789012345678901'));\nconsole.log(count_Substrings('1234567890123456789012'));\nconsole.log(count_Substrings('12345678901234567890123'));\nconsole.log(count_Substrings('1234567\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122717,
      "stdout": "../../../../tmp/tmp2eraj68l.ts(39,38): error TS1002: Unterminated string literal.\n../../../../tmp/tmp2eraj68l.ts(40,1): error TS1005: ',' expected.\n../../../../tmp/tmp2eraj68l.ts(40,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum == (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"123\"));\nconsole.log(count_Substrings(\"1234\"));\nconsole.log(count_Substrings(\"4321\"));\nconsole.log(count_Substrings(\"4321234\"));\nconsole.log(count_Substrings(\"43212345\"));\nconsole.log(count_Substrings(\"123123\"));\nconsole.log(count_Substrings(\"1231234\"));\nconsole.log(count_Substrings(\"12312345\"));\nconsole.log(count_Substrings(\"123123456\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122717,
      "stdout": "1\n1\n1\n1\n1\n2\n2\n2\n2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum == (j - i)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_Substrings(\"1321\"));\nconsole.log(count_Substrings(\"1234\"));\nconsole.log(count_Substrings(\"4321\"));\nconsole.log(count_Substrings(\"4321\"));\nconsole.log(count_Substrings(\"1234\"));\nconsole.log(count_Substrings(\"1234\"));\nconsole.log(count_Substrings(\"1234\"));\nconsole.log(count_Substrings(\"1234\"));\nconsole.log(count_Substrings(\"1234\"));\nconsole.log(count_Substrings(\"1234\"));\nconsole.log(count_Substrings(\"1234\"));\nconsole.log(count_Substrings(\"1234\"));\nconsole.log(count_Substrings(\"1234\"));\nconsole.log(count_Substrings(\"1234\"));\nconsole.log(count_Substrings(\"1234\"));\nconsole.log(count_Substrings(\"1234\"));\nconsole.log(count_Substrings(\"1234\"));\nconsole.log(count_Substrings(\"1234\"));\nconsole.log(count_Substrings(\"1234\"));\nconsole.log(count_Substrings(\"1234\"));\nconsole.log(count_Substrings(\"1234\"));\nconsole.log(count_Substrings(\"1234\"));\nconsole.log(count_Substrings(\"1234\"));\nconsole.log(count_Substrings(\"1234\"));\nconsole.log(count_Substrings(\"1234\"));\nconsole.log(count_Substrings(\"1234\"));\nconsole.log(count_Substrings(\"1234\"));\nconsole.log(count_Substrings(\"1234\"));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122717,
      "stdout": "../../../../tmp/tmp2vvklmqb.ts(47,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122709,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum === j - i) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sub = s.substring(i, j);\n            if (sub.length === sum_Digits(sub)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122709,
      "stdout": "../../../../tmp/tmpkhatvfj_.ts(7,32): error TS2304: Cannot find name 'sum_Digits'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum == j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"123\"));\nconsole.log(count_Substrings(\"1234\"));\nconsole.log(count_Substrings(\"4321\"));\nconsole.log(count_Substrings(\"4321234\"));\nconsole.log(count_Substrings(\"43212345\"));\nconsole.log(count_Substrings(\"12345\"));\nconsole.log(count_Substrings(\"123454321\"));\nconsole.log(count_Substrings(\"0012341234500\"));\nconsole.log(count_Substrings(\"0012341234500\"));\nconsole.log(count_Substrings(\"0\"));\nconsole.log(count_Substrings(\"\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122717,
      "stdout": "1\n1\n1\n1\n1\n1\n2\n3\n3\n0\n0\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_Substrings(\"13112221\"));\nconsole.log(count_Substrings(\"112112\"));\nconsole.log(count_Substrings(\"11112\"));\nconsole.log(count_Substrings(\"1111\"));\nconsole.log(count_Substrings(\"111\"));\nconsole.log(count_Substrings(\"11\"));\nconsole.log(count_Substrings(\"1\"));\nconsole.log(count_Substrings(\"\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122718,
      "stdout": "5\n6\n10\n10\n6\n3\n1\n0\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum == j - i) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum == j - i) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum == j - i) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum === j - i) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"123\"));\nconsole.log(count_Substrings(\"1234\"));\nconsole.log(count_Substrings(\"101\"));\nconsole.log(count_Substrings(\"10101\"));\nconsole.log(count_Substrings(\"1111\"));\nconsole.log(count_Substrings(\"11111\"));\nconsole.log(count_Substrings(\"11111\"));\nconsole.log(count_Substrings(\"111111\"));\nconsole.log(count_Substrings(\"1111111\"));\nconsole.log(count_Substrings(\"11111111\"));\nconsole.log(count_Substrings(\"111111111\"));\nconsole.log(count_Substrings(\"1111111111\"));\nconsole.log(count_Substrings(\"11111111111\"));\nconsole.log(count_Substrings(\"111111111111\"));\nconsole.log(count_Substrings(\"1111111111111\"));\nconsole.log(count_Substrings(\"11111111111111\"));\nconsole.log(count_Substrings(\"111111111111111\"));\nconsole.log(count_Substrings(\"1111111111111111\"));\nconsole.log(count_Substrings(\"11111111111111111\"));\nconsole.log(count_Substrings(\"111111111111111111\"));\nconsole.log(count_Substrings(\"1111111111111111111\"));\nconsole.log(count_Substrings(\"11111111111111111111\"));\nconsole.log(count_Substrings(\"111111111111111111111\"));\nconsole.log(count_Substrings(\"1111111111111111111111\"));\nconsole.log(count_Substrings(\"11111111111111111111111\"));\nconsole.log(count_Substrings(\"111111111111111111111111\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122717,
      "stdout": "../../../../tmp/tmpp69x1r9i.ts(42,55): error TS1002: Unterminated string literal.\n../../../../tmp/tmpp69x1r9i.ts(43,1): error TS1005: ',' expected.\n../../../../tmp/tmpp69x1r9i.ts(43,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count: number = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum: number = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum == (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_Substrings(\"13112221\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122719,
      "stdout": "5\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum == j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"13112221\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122711,
      "stdout": "5\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sub = s.slice(i, j);\n            let sum = 0;\n            for (let k = 0; k < sub.length; k++) {\n                sum += parseInt(sub[k]);\n            }\n            if (sum == sub.length) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"123\"));\nconsole.log(count_Substrings(\"0123\"));\nconsole.log(count_Substrings(\"01230\"));\nconsole.log(count_Substrings(\"012301\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122718,
      "stdout": "1\n2\n2\n3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum == (j - i)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum === j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_577_last_Digit_Factorial",
  "language": "ts",
  "prompt": "//Write a tsthon function to find the last digit in factorial of a given number.\nfunction last_Digit_Factorial(n: number): number {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_577_last_Digit_Factorial.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = last_Digit_Factorial;\n  assert.deepEqual(candidate(4),4);\n  assert.deepEqual(candidate(21),0);\n  assert.deepEqual(candidate(30),0);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\n",
    "    let factorial: number = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\n",
    "    let factorial: number = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\n",
    "    let fact: number = 1;\n    for (let i = 1; i <= n; i++) {\n        fact = fact * i;\n    }\n    return fact % 10;\n}\n",
    "    let factorial: number = 1;\n    for (let i: number = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial: number = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(15));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(25));\nconsole.log(last_Digit_Factorial(30));\nconsole.log(last_Digit_Factorial(35));\nconsole.log(last_Digit_Factorial(40));\nconsole.log(last_Digit_Factorial(45));\nconsole.log(last_Digit_Factorial(50));\nconsole.log(last_Digit_Factorial(55));\nconsole.log(last_Digit_Factorial(60));\nconsole.log(last_Digit_Factorial(65));\nconsole.log(last_Digit_Factorial(70));\nconsole.log(last_Digit_Factorial(75));\nconsole.log(last_Digit_Factorial(80));\nconsole.log(last_Digit_Factorial(85));\nconsole.log(last_Digit_Factorial(90));\nconsole.log(last_Digit_Factorial(95));\nconsole.log(last_Digit_Factorial(100));\n",
    "    let factorial: number = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\n",
    "    let factorial: number = 1;\n    for (let i: number = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(50));\nconsole.log(last_Digit_Factorial(100));\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\n\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(100));\n",
    "    let factorial: number = 1;\n    for (let i: number = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    let last_digit: number = factorial % 10;\n    return last_digit;\n}\nlet result: number = last_Digit_Factorial(5);\nconsole.log(result);\n",
    "    let factorial: number = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(100));",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(15));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(25));\nconsole.log(last_Digit_Factorial(30));\nconsole.log(last_Digit_Factorial(35));\nconsole.log(last_Digit_Factorial(40));\nconsole.log(last_Digit_Factorial(45));\nconsole.log(last_Digit_Factorial(50));\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(100));\n\n",
    "    let factorial: number = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\n",
    "    let factorial: number = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial: number = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(100));\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(50));\nconsole.log(last_Digit_Factorial(100));\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(50));\nconsole.log(last_Digit_Factorial(100));\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(50));\nconsole.log(last_Digit_Factorial(100));\n",
    "    let fact: number = 1;\n    for (let i = 1; i <= n; i++) {\n        fact = fact * i;\n    }\n    return fact % 10;\n}\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(15));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(25));\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(15));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(25));\nconsole.log(last_Digit_Factorial(30));\nconsole.log(last_Digit_Factorial(35));\nconsole.log(last_Digit_Factorial(40));\nconsole.log(last_Digit_Factorial(45));\nconsole.log(last_Digit_Factorial(50));\nconsole.log(last_Digit_Factorial(55));\nconsole.log(last_Digit_Factorial(60));\nconsole.log(last_Digit_Factorial(65));\nconsole.log(last_Digit_Factorial(70));\nconsole.log(last_Digit_Factorial(75));\nconsole.log(last_Digit_Factorial(80));\nconsole.log(last_Digit_Factorial(85));\nconsole.log(last_Digit_Factorial(90));\nconsole.log(last_Digit_Factorial(95));\nconsole.log(last_Digit_Factorial(100));\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(50));\nconsole.log(last_Digit_Factorial(100));\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    let lastDigit = factorial % 10;\n    return lastDigit;\n}\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(50));\nconsole.log(last_Digit_Factorial(100));\n",
    "    let factorial: number = 1;\n    for (let i: number = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(15));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(25));\n",
    "    let factorial: number = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    let lastDigit: number = factorial % 10;\n    return lastDigit;\n}\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial: number = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(50));\nconsole.log(last_Digit_Factorial(100));\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial: number = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\n\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(15));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(25));\nconsole.log(last_Digit_Factorial(30));\nconsole.log(last_Digit_Factorial(35));\nconsole.log(last_Digit_Factorial(40));\nconsole.log(last_Digit_Factorial(45));\nconsole.log(last_Digit_Factorial(50));\nconsole.log(last_Digit_Factorial(55));\nconsole.log(last_Digit_Factorial(60));\nconsole.log(last_Digit_Factorial(65));\nconsole.log(last_Digit_Factorial(70));\nconsole.log(last_Digit_Factorial(75));\nconsole.log(last_Digit_Factorial(80));\nconsole.log(last_Digit_Factorial(85));\nconsole.log(last_Digit_Factorial(90));\nconsole.log(last_Digit_Factorial(95));\nconsole.log(last_Digit_Factorial(100));\n",
    "    let factorial: number = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\n\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(15));\n",
    "    if (n < 0) {\n        return -1;\n    }\n    if (n <= 1) {\n        return 1;\n    }\n    return (n * last_Digit_Factorial(n - 1)) % 10;\n}\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(100));\n",
    "    let factorial: number = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(15));\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial: number = 1;\n    for (let i: number = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(15));\n",
    "    let fact = 1;\n    for (let i = 1; i <= n; i++) {\n        fact = fact * i;\n    }\n    return fact % 10;\n}\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    let lastDigit = factorial % 10;\n    return lastDigit;\n}\n\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(50));\nconsole.log(last_Digit_Factorial(100));\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(50));\nconsole.log(last_Digit_Factorial(100));\n",
    "    let factorial: number = 1;\n    for (let i: number = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(15));\nconsole.log(last_Digit_Factorial(20));\n",
    "    let factorial: number = 1;\n    for (let i: number = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial: number = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial: number = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial: number = 1;\n    for (let i: number = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n",
    "    let fact: number = 1;\n    for (let i = 1; i <= n; i++) {\n        fact = fact * i;\n    }\n    return fact % 10;\n}\n",
    "    let factorial: number = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    let last_digit: number = factorial % 10;\n    return last_digit;\n}\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(0));\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(50));\nconsole.log(last_Digit_Factorial(100));\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\n",
    "    let fact: number = 1;\n    for (let i = 1; i <= n; i++) {\n        fact = fact * i;\n    }\n    return fact % 10;\n}\n\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(15));\n",
    "    let factorial: number = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(15));\n",
    "    let factorial: number = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(15));\nconsole.log(last_Digit_Factorial(20));\n",
    "    let factorial: number = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(50));\nconsole.log(last_Digit_Factorial(100));",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial: number = 1;\n    for (let i: number = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n",
    "  let fact: number = 1;\n  for (let i = 1; i <= n; i++) {\n    fact = fact * i;\n  }\n  return fact % 10;\n}\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(15));\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\n\nconsole.log(last_Digit_Factorial(4));\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(9));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(1));\nconsole.log(last_Digit_Factorial(2));\nconsole.log(last_Digit_Factorial(3));\nconsole.log(last_Digit_Factorial(30));\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(100));\n",
    "    let factorial: number = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\n",
    "    let factorial: number = 1;\n    for (let i: number = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial: number = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial: number = 1;\n    for (let i: number = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(4));\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(6));\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial: number = 1;\n    for (let i: number = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    let last_digit: number = factorial % 10;\n    return last_digit;\n}\n",
    "    let factorial: number = 1;\n    for (let i: number = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(15));\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial: number = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(50));\nconsole.log(last_Digit_Factorial(100));\n",
    "    let factorial: number = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(50));\nconsole.log(last_Digit_Factorial(100));\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(15));\n",
    "    let factorial: number = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\n",
    "    let fact: number = 1;\n    for (let i = 1; i <= n; i++) {\n        fact = fact * i;\n    }\n    return fact % 10;\n}\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial: number = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial: number = 1;\n    for (let i: number = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(50));\nconsole.log(last_Digit_Factorial(100));",
    "    let factorial: number = 1;\n    for (let i: number = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(15));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(25));\nconsole.log(last_Digit_Factorial(30));\nconsole.log(last_Digit_Factorial(35));\nconsole.log(last_Digit_Factorial(40));\nconsole.log(last_Digit_Factorial(45));\nconsole.log(last_Digit_Factorial(50));\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(15));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(25));\nconsole.log(last_Digit_Factorial(30));\nconsole.log(last_Digit_Factorial(35));\nconsole.log(last_Digit_Factorial(40));\nconsole.log(last_Digit_Factorial(45));\nconsole.log(last_Digit_Factorial(50));\nconsole.log(last_Digit_Factorial(55));\nconsole.log(last_Digit_Factorial(60));\nconsole.log(last_Digit_Factorial(65));\nconsole.log(last_Digit_Factorial(70));\nconsole.log(last_Digit_Factorial(75));\nconsole.log(last_Digit_Factorial(80));\nconsole.log(last_Digit_Factorial(85));\nconsole.log(last_Digit_Factorial(90));\nconsole.log(last_Digit_Factorial(95));\nconsole.log(last_Digit_Factorial(100));\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(50));\nconsole.log(last_Digit_Factorial(100));\n\n",
    "    let factorial: number = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    let lastDigit: number = factorial % 10;\n    return lastDigit;\n}\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(0));\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(100));\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(15));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(25));\nconsole.log(last_Digit_Factorial(30));\nconsole.log(last_Digit_Factorial(35));\nconsole.log(last_Digit_Factorial(40));\nconsole.log(last_Digit_Factorial(45));\nconsole.log(last_Digit_Factorial(50));\nconsole.log(last_Digit_Factorial(55));\nconsole.log(last_Digit_Factorial(60));\nconsole.log(last_Digit_Factorial(65));\nconsole.log(last_Digit_Factorial(70));\nconsole.log(last_Digit_Factorial(75));\nconsole.log(last_Digit_Factorial(80));\nconsole.log(last_Digit_Factorial(85));\nconsole.log(last_Digit_Factorial(90));\nconsole.log(last_Digit_Factorial(95));\nconsole.log(last_Digit_Factorial(100));\nconsole.log(last_Digit_Factorial(105));\nconsole.log(last_Digit_Factorial(110));\nconsole.log(last_Digit_Factorial(115));\nconsole.log(last_Digit_Factorial(120));\nconsole.log(last_Digit_Factorial(125));\nconsole.log(last_Digit_Factorial(130));\nconsole.log(last_Digit_Factorial(135));\nconsole.log(last_Digit_Factorial(140));\nconsole.log(last_Digit_Factorial(145));\nconsole.log(last_Digit_Factorial(150));\nconsole.log(last_Digit_Factorial(155));\nconsole",
    "    if (n < 0)\n        return;\n    if (n <= 1)\n        return 1;\n    else\n        return (n * last_Digit_Factorial(n - 1)) % 10;\n}\n",
    "    let factorial: number = 1;\n    for (let i: number = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    let lastDigit: number = factorial % 10;\n    return lastDigit;\n}\n",
    "    let factorial: number = 1;\n    for (let i: number = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(15));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(25));\nconsole.log(last_Digit_Factorial(30));\nconsole.log(last_Digit_Factorial(35));\nconsole.log(last_Digit_Factorial(40));\nconsole.log(last_Digit_Factorial(45));\nconsole.log(last_Digit_Factorial(50));\nconsole.log(last_Digit_Factorial(55));\nconsole.log(last_Digit_Factorial(60));\nconsole.log(last_Digit_Factorial(65));\nconsole.log(last_Digit_Factorial(70));\nconsole.log(last_Digit_Factorial(75));\nconsole.log(last_Digit_Factorial(80));\nconsole.log(last_Digit_Factorial(85));\nconsole.log(last_Digit_Factorial(90));\nconsole.log(last_Digit_Factorial(95));\nconsole.log(last_Digit_Factorial(100));\n",
    "    let factorial: number = 1;\n    for (let i: number = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(15));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(25));\nconsole.log(last_Digit_Factorial(30));\nconsole.log(last_Digit_Factorial(35));\nconsole.log(last_Digit_Factorial(40));\nconsole.log(last_Digit_Factorial(45));\nconsole.log(last_Digit_Factorial(50));\nconsole.log(last_Digit_Factorial(55));\nconsole.log(last_Digit_Factorial(60));\nconsole.log(last_Digit_Factorial(65));\nconsole.log(last_Digit_Factorial(70));\nconsole.log(last_Digit_Factorial(75));\nconsole.log(last_Digit_Factorial(80));\nconsole.log(last_Digit_Factorial(85));\nconsole.log(last_Digit_Factorial(90));\nconsole.log(last_Digit_Factorial(95));\nconsole.log(last_Digit_Factorial(100));\nconsole.log(last_Digit_Factorial(105));\nconsole.log(last_Digit_Factorial(110));\nconsole.log(last_Digit_Factorial(115));\nconsole.log(last_Digit_Factorial(120));\nconsole.log(last_Digit_Factorial(125));\nconsole.log(last_Digit_Factorial(130));\nconsole.log(last_Digit_Factorial(135));\nconsole.log(last_Digit_Factorial(140));\nconsole.log(last_Digit_Factorial(145));\nconsole.log(last_Digit_Factorial(150));\nconsole.log(last_Digit_Factorial(155));\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\n\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(15));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(25));\nconsole.log(last_Digit_Factorial(30));\nconsole.log(last_Digit_Factorial(35));\nconsole.log(last_Digit_Factorial(40));\nconsole.log(last_Digit_Factorial(45));\nconsole.log(last_Digit_Factorial(50));\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(15));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(25));\nconsole.log(last_Digit_Factorial(30));\nconsole.log(last_Digit_Factorial(35));\nconsole.log(last_Digit_Factorial(40));\nconsole.log(last_Digit_Factorial(45));\nconsole.log(last_Digit_Factorial(50));\nconsole.log(last_Digit_Factorial(55));\nconsole.log(last_Digit_Factorial(60));\nconsole.log(last_Digit_Factorial(65));\nconsole.log(last_Digit_Factorial(70));\nconsole.log(last_Digit_Factorial(75));\nconsole.log(last_Digit_Factorial(80));\nconsole.log(last_Digit_Factorial(85));\nconsole.log(last_Digit_Factorial(90));\nconsole.log(last_Digit_Factorial(95));\nconsole.log(last_Digit_Factorial(100));\nconsole.log(last_Digit_Factorial(105));\nconsole.log(last_Digit_Factorial(110));\nconsole.log(last_Digit_Factorial(115));\nconsole.log(last_Digit_Factorial(120));\nconsole.log(last_Digit_Factorial(125));\nconsole.log(last_Digit_Factorial(130));\nconsole.log(last_Digit_Factorial(135));\nconsole.log(last_Digit_Factorial(140));\nconsole.log(last_Digit_Factorial(145));\nconsole.log(last_Digit_Factorial(150));\nconsole.log(last_Digit_Factorial(155));\nconsole",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial: number = 1;\n    for (let i: number = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n",
    "    let fact: number = 1;\n    for (let i = 1; i <= n; i++) {\n        fact = fact * i;\n    }\n    let last_digit: number = fact % 10;\n    return last_digit;\n}\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(15));\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial: number = 1;\n    for (let i: number = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial: number = 1;\n    for (let i: number = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    let last_digit: number = factorial % 10;\n    return last_digit;\n}\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(0));\n",
    "    let factorial: number = 1;\n    for (let i: number = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(50));\nconsole.log(last_Digit_Factorial(100));\n",
    "    let factorial: number = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial: number = 1;\n    for (let i: number = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    let lastDigit: number = factorial % 10;\n    return lastDigit;\n}\n",
    "    let factorial: number = 1;\n    for (let i: number = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    let last_digit: number = factorial % 10;\n    return last_digit;\n}\n",
    "    let factorial: number = 1;\n    for (let i: number = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial: number = 1;\n    for (let i: number = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial: number = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial: number = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(100));",
    "    let fact: number = 1;\n    for (let i = 1; i <= n; i++) {\n        fact = fact * i;\n    }\n    return fact % 10;\n}\n\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(100));\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(100));\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(50));\nconsole.log(last_Digit_Factorial(100));\n",
    "    let factorial: number = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    let last_digit: number = factorial % 10;\n    return last_digit;\n}\n",
    "    let factorial: number = 1;\n    for (let i: number = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial: number = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\n\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(50));\nconsole.log(last_Digit_Factorial(100));\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(12));\nconsole.log(last_Digit_Factorial(150));\n",
    "    let fact: number = 1;\n    for (let i = 1; i <= n; i++) {\n        fact = fact * i;\n    }\n    return fact % 10;\n}\n\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(50));\nconsole.log(last_Digit_Factorial(100));",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial: number = 1;\n    for (let i: number = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    let last_digit: number = factorial % 10;\n    return last_digit;\n}\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    else {\n        return (n * last_Digit_Factorial(n - 1));\n    }\n}\n\nconsole.log(last_Digit_Factorial(5));\n",
    "  let factorial = 1;\n  for (let i = 1; i <= n; i++) {\n    factorial *= i;\n  }\n  return factorial % 10;\n}\n\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(100));\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n",
    "    let fact = 1;\n    for (let i = 1; i <= n; i++) {\n        fact = fact * i;\n    }\n    return fact % 10;\n}\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(50));\nconsole.log(last_Digit_Factorial(100));\n",
    "    let result: number = 1;\n    for (let i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result % 10;\n}\n\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(100));\n",
    "    if (n < 0)\n        return;\n    if (n <= 1)\n        return 1;\n    else\n        return (n * last_Digit_Factorial(n - 1)) % 10;\n}\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(15));\n",
    "    let fact: number = 1;\n    for (let i = 1; i <= n; i++) {\n        fact = fact * i;\n    }\n    return fact % 10;\n}\n\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(50));\nconsole.log(last_Digit_Factorial(100));\n",
    "    let fact: number = 1;\n    for (let i = 1; i <= n; i++) {\n        fact = fact * i;\n    }\n    let last_digit = fact % 10;\n    return last_digit;\n}\n",
    "    let factorial: number = 1;\n    for (let i: number = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n",
    "  let factorial: number = 1;\n  for (let i: number = 1; i <= n; i++) {\n    factorial *= i;\n  }\n  return factorial % 10;\n}\n\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(50));\nconsole.log(last_Digit_Factorial(100));\n",
    "    let factorial: number = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(15));\nconsole.log(last_Digit_Factorial(20));\n",
    "    let fact: number = 1;\n    for (let i = 1; i <= n; i++) {\n        fact = fact * i;\n    }\n    return fact % 10;\n}\n",
    "    let factorial: number = 1;\n    for (let i: number = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial: number = 1;\n    for (let i: number = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(0));\n",
    "    let fact: number = 1;\n    for (let i = 1; i <= n; i++) {\n        fact = fact * i;\n    }\n    return fact % 10;\n}\n",
    "    let factorial: number = 1;\n    for (let i: number = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(15));\nconsole.log(last_Digit_Factorial(20));\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial: number = 1;\n    for (let i: number = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(50));\nconsole.log(last_Digit_Factorial(100));\n",
    "    let factorial: number = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial: number = 1;\n    for (let i: number = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    let lastDigit: number = factorial % 10;\n    return lastDigit;\n}\n",
    "    let fact = 1;\n    for (let i = 1; i <= n; i++) {\n        fact = fact * i;\n    }\n    return fact % 10;\n}\n",
    "    let factorial: number = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(15));\n",
    "    let factorial: number = 1;\n    for (let i: number = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    let last_digit: number = factorial % 10;\n    return last_digit;\n}\n",
    "    let factorial: number = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(15));\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial: number = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(100));",
    "    let factorial: number = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(15));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(25));\n",
    "    let factorial: number = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(15));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(25));\nconsole.log(last_Digit_Factorial(30));\nconsole.log(last_Digit_Factorial(35));\nconsole.log(last_Digit_Factorial(40));\nconsole.log(last_Digit_Factorial(45));\nconsole.log(last_Digit_Factorial(50));\n",
    "    let result: number = 1;\n    for (let i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result % 10;\n}\n\nconsole.log(last_Digit_Factorial(4));\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(6));\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\n",
    "    let factorial: number = 1;\n    for (let i: number = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(15));\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\n\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(15));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(25));\nconsole.log(last_Digit_Factorial(30));\nconsole.log(last_Digit_Factorial(35));\nconsole.log(last_Digit_Factorial(40));\nconsole.log(last_Digit_Factorial(45));\nconsole.log(last_Digit_Factorial(50));\nconsole.log(last_Digit_Factorial(55));\nconsole.log(last_Digit_Factorial(60));\nconsole.log(last_Digit_Factorial(65));\nconsole.log(last_Digit_Factorial(70));\nconsole.log(last_Digit_Factorial(75));\nconsole.log(last_Digit_Factorial(80));\nconsole.log(last_Digit_Factorial(85));\nconsole.log(last_Digit_Factorial(90));\nconsole.log(last_Digit_Factorial(95));\nconsole.log(last_Digit_Factorial(100));\nconsole.log(last_Digit_Factorial(105));\nconsole.log(last_Digit_Factorial(110));\nconsole.log(last_Digit_Factorial(115));\nconsole.log(last_Digit_Factorial(120));\nconsole.log(last_Digit_Factorial(125));\nconsole.log(last_Digit_Factorial(130));\nconsole.log(last_Digit_Factorial(135));\nconsole.log(last_Digit_Factorial(140));\nconsole.log(last_Digit_Factorial(145));\nconsole.log(last_Digit_Factorial(150));\nconsole.log(last_Digit_Factorial(155",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial: number = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(50));\nconsole.log(last_Digit_Factorial(100));\n",
    "    let factorial: number = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(15));\n",
    "    let fact: number = 1;\n    for (let i = 1; i <= n; i++) {\n        fact = fact * i;\n    }\n    return fact % 10;\n}\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(0));\n",
    "    let factorial: number = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(15));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(25));\nconsole.log(last_Digit_Factorial(30));\nconsole.log(last_Digit_Factorial(35));\nconsole.log(last_Digit_Factorial(40));\nconsole.log(last_Digit_Factorial(45));\nconsole.log(last_Digit_Factorial(50));\nconsole.log(last_Digit_Factorial(55));\nconsole.log(last_Digit_Factorial(60));\nconsole.log(last_Digit_Factorial(65));\nconsole.log(last_Digit_Factorial(70));\nconsole.log(last_Digit_Factorial(75));\nconsole.log(last_Digit_Factorial(80));\nconsole.log(last_Digit_Factorial(85));\nconsole.log(last_Digit_Factorial(90));\nconsole.log(last_Digit_Factorial(95));\nconsole.log(last_Digit_Factorial(100));\n",
    "    let factorial: number = 1;\n    for (let i: number = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\n",
    "    if (n < 0) {\n        return -1;\n    }\n    if (n <= 1) {\n        return 1;\n    }\n    else {\n        return (n * last_Digit_Factorial(n - 1));\n    }\n}\nconsole.log(last_Digit_Factorial(5));\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial: number = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    let last_digit: number = factorial % 10;\n    return last_digit;\n}\nconsole.log(last_Digit_Factorial(5));\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    let lastDigit = factorial % 10;\n    return lastDigit;\n}\n",
    "    let factorial: number = 1;\n    for (let i: number = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    let last_digit: number = factorial % 10;\n    return last_digit;\n}\n",
    "    let fact = 1;\n    for (let i = 1; i <= n; i++) {\n        fact = fact * i;\n    }\n    return fact % 10;\n}\n",
    "    let fact: number = 1;\n    for (let i = 1; i <= n; i++) {\n        fact = fact * i;\n    }\n    return fact % 10;\n}\n",
    "    let fact: number = 1;\n    for (let i: number = 1; i <= n; i++) {\n        fact = fact * i;\n    }\n    return fact % 10;\n}\n",
    "    if (n < 0)\n        return;\n    if (n <= 1)\n        return 1;\n    return (n * last_Digit_Factorial(n - 1)) % 10;\n}\nconsole.log(last_Digit_Factorial(5));\n",
    "    if (n < 0) {\n        return -1;\n    }\n    if (n <= 1) {\n        return 1;\n    }\n    return (n * last_Digit_Factorial(n - 1)) % 10;\n}\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial: number = 1;\n    for (let i: number = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(15));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(25));\nconsole.log(last_Digit_Factorial(30));\nconsole.log(last_Digit_Factorial(35));\nconsole.log(last_Digit_Factorial(40));\nconsole.log(last_Digit_Factorial(45));\nconsole.log(last_Digit_Factorial(50));\nconsole.log(last_Digit_Factorial(55));\nconsole.log(last_Digit_Factorial(60));\nconsole.log(last_Digit_Factorial(65));\nconsole.log(last_Digit_Factorial(70));\nconsole.log(last_Digit_Factorial(75));\nconsole.log(last_Digit_Factorial(80));\nconsole.log(last_Digit_Factorial(85));\nconsole.log(last_Digit_Factorial(90));\nconsole.log(last_Digit_Factorial(95));\nconsole.log(last_Digit_Factorial(100));\nconsole.log(last_Digit_Factorial(105));\nconsole.log(last_Digit_Factorial(110));\nconsole.log(last_Digit_Factorial(115));\nconsole.log(last_Digit_Factorial(120));\nconsole.log(last_Digit_Factorial(125));\nconsole.log(last_Digit_Factorial(130));\nconsole.log(last_Digit_Factorial(135));\nconsole.log(last_Digit_Factorial(140));\nconsole.log(last_Digit_Factorial(145));\nconsole.log(last_Digit_Factorial(150));\nconsole.log(last_Digit_Factorial(",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(15));\n",
    "    let factorial: number = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(15));\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial: number = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(50));\nconsole.log(last_Digit_Factorial(100));\n",
    "    let factorial = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial % 10;\n}\n",
    "    let factorial: number = 1;\n    for (let i = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\nconsole.log(last_Digit_Factorial(5));\nconsole.log(last_Digit_Factorial(10));\nconsole.log(last_Digit_Factorial(20));\nconsole.log(last_Digit_Factorial(0));\n"
  ]
}
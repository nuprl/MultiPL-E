{
  "name": "mbpp_411_snake_to_camel",
  "language": "ts",
  "prompt": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_411_snake_to_camel.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "  let newWord: string = '';\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === '_') {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('apples_and_oranges'));",
    "  return word.replace(/_\\w/g, (match) => match[1].toUpperCase());\n}\n\nconsole.log(snake_to_camel(\"snake_case\"));\nconsole.log(snake_to_camel(\"snake_case_string\"));\nconsole.log(snake_to_camel(\"snake\"));\nconsole.log(snake_to_camel(\"SNAKE_CASE\"));\n",
    "  let newWord: string = \"\";\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"javascript_exercises\"));\n",
    "  let camelCase = word.replace(/_\\w/g, (match) => match[1].toUpperCase());\n  return camelCase;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"javascript_is_awesome\"));\nconsole.log(snake_to_camel(\"coding_challenge\"));\n",
    "  let newWord = \"\";\n  for (let i = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"javascript_is_awesome\"));\nconsole.log(snake_to_camel(\"coding_challenge\"));\n",
    "  return word.replace(/(_\\w)/g, (match) => match[1].toUpperCase());\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"javascript_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\nconsole.log(sn",
    "  return word.replace(/(-\\w)/g, (match) => match[1].toUpperCase());\n}\n\nconsole.log(snake_to_camel(\"hello-world\"));\nconsole.log(snake_to_camel(\"snake-case-string\"));\nconsole.log(snake_to_camel(\"snake_case_string\"));\nconsole.log(snake_to_camel(\"snake_case_string\"));\nconsole.log(snake_to_camel(\"snake-case-string\"));\nconsole.log(snake_to_camel(\"snake-case-string\"));\n",
    "  let newWord: string = \"\";\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snakes_go_hiss\"));\nconsole.log(snake_to_camel(\"say_hello_to_my_little_friend\"));\nconsole.log(snake_to_camel(\"bootcamp_prep_is_cool\"));\nconsole.log(snake_to_camel(\"BOOtcamp_PREP_iS_cOol\"));\nconsole.log(snake_to_camel(\"\"));",
    "  let newWord = word.split(\"_\");\n  for (let i = 1; i < newWord.length; i++) {\n    newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n  }\n  return newWord.join(\"\");\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snakes_go_hiss\"));\nconsole.log(snake_to_camel(\"say_hello_to_my_little_friend\"));\nconsole.log(snake_to_camel(\"bootcamp_prep_is_cool\"));\nconsole.log(snake_to_camel(\"BOOtcamp_PREP_iS_cOol\"));\nconsole.log(snake_to_camel(\"\"));",
    "  let result: string = \"\";\n  let wordArr: string[] = word.split(\"_\");\n  for (let i: number = 0; i < wordArr.length; i++) {\n    if (i > 0) {\n      result += wordArr[i].charAt(0).toUpperCase() + wordArr[i].slice(1);\n    } else {\n      result += wordArr[i];\n    }\n  }\n  return result;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snake_to_camel\"));\nconsole.log(snake_to_camel(\"snake_case_to_camel_case\"));\n",
    "    let newWord: string = '';\n    for (let i: number = 0; i < word.length; i++) {\n        if (word[i] === '_') {\n            newWord += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('main'));",
    "    let newWord: string = '';\n    for (let i: number = 0; i < word.length; i++) {\n        if (word[i] === '_') {\n            newWord += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('apples_and_oranges'));\n",
    "  let newWord = \"\";\n  for (let i = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"javascript_exercises\"));\nconsole.log(snake_to_camel(\"java_script_exercises\"));",
    "  return word.replace(/(_\\w)/g, (match) => match[1].toUpperCase());\n}\n\nconsole.log(snake_to_camel(\"snake_to_camel\"));\nconsole.log(snake_to_camel(\"snake_to_camel_case\"));\nconsole.log(snake_to_camel(\"snake_to_camel_case_string\"));\n",
    "  return word.replace(/(-\\w)/g, (match) => match[1].toUpperCase());\n}\n\nconsole.log(snake_to_camel(\"hello-world\"));\nconsole.log(snake_to_camel(\"snake-case-string\"));\nconsole.log(snake_to_camel(\"snake_case_string\"));\nconsole.log(snake_to_camel(\"snake_case-string\"));\n",
    "    return word.replace(/(_\\w)/g, (match) => match[1].toUpperCase());\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"javascript_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\n",
    "  let newWord: string = \"\";\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snakes_go_hiss\"));\nconsole.log(snake_to_camel(\"say_hello_to_my_little_friend\"));\nconsole.log(snake_to_camel(\"bootcamp_prep_is_cool\"));\nconsole.log(snake_to_camel(\"BOOtcamp_PREP_iS_cOol\"));\nconsole.log(snake_to_camel(\"\"));",
    "  return word.replace(/(_\\w)/g, (match) => match[1].toUpperCase());\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"javascript_is_awesome\"));\nconsole.log(snake_to_camel(\"coding_challenge\"));\n",
    "  return word.replace(/_\\w/g, (match) => match[1].toUpperCase());\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"javascript_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\n",
    "  let newWord: string = \"\";\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"java_script_exercises\"));\nconsole.log(snake_to_camel(\"java_script_exercises_test\"));"
  ]
}
{
  "name": "mbpp_443_largest_neg",
  "language": "ts",
  "prompt": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_443_largest_neg.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var large = list1[0];\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0 && list1[i] > large) {\n            large = list1[i];\n        }\n    }\n    return large;\n}\nvar list1 = [23, 89, 6, 29, 56, 45, 77, 32];\nconsole.log(\"The largest negative number is: \" + largest_neg(list1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1665517349,
      "stdout": "The largest negative number is: 23\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpboiaqhq2.js:16:12)\n    at Object.<anonymous> (/tmp/tmpboiaqhq2.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    neg_list.sort();\n    return neg_list[0];\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1665517349,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpr_20q_8h.js:16:12)\n    at Object.<anonymous> (/tmp/tmpr_20q_8h.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var max = list1[0];\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > max) {\n                max = list1[i];\n            }\n        }\n    }\n    return max;\n}\n\nconsole.log(\"Largest negative number is: \" + largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1665517349,
      "stdout": "Largest negative number is: -1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp3nvet0z_.js:17:12)\n    at Object.<anonymous> (/tmp/tmp3nvet0z_.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var neg_list: number[] = [];\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    neg_list.sort();\n    return neg_list[0];\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1665517349,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpybdfm2rk.js:16:12)\n    at Object.<anonymous> (/tmp/tmpybdfm2rk.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    if (neg_list.length == 0) {\n        return 0;\n    }\n    else {\n        let largest_neg = neg_list[0];\n        for (let i = 0; i < neg_list.length; i++) {\n            if (neg_list[i] > largest_neg) {\n                largest_neg = neg_list[i];\n            }\n        }\n        return largest_neg;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1665517349,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpw4kb93lv.js:25:12)\n    at Object.<anonymous> (/tmp/tmpw4kb93lv.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let largest_neg: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > largest_neg) {\n                largest_neg = list1[i];\n            }\n        }\n    }\n    return largest_neg;\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1665517349,
      "stdout": "0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp8lsw77tl.js:17:12)\n    at Object.<anonymous> (/tmp/tmp8lsw77tl.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = list1.filter(function (num) {\n        return num < 0;\n    })\n    let max_neg = Math.max.apply(null, neg_list);\n    return max_neg;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1665517349,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpwetz8rek.js:12:12)\n    at Object.<anonymous> (/tmp/tmpwetz8rek.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    neg_list.sort();\n    return neg_list[0];\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1665517349,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpr_20q_8h.js:16:12)\n    at Object.<anonymous> (/tmp/tmpr_20q_8h.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    let largest_neg: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    for (let i = 0; i < neg_list.length; i++) {\n        if (neg_list[i] > largest_neg) {\n            largest_neg = neg_list[i];\n        }\n    }\n    return largest_neg;\n}\nconsole.log(largest_neg([1, 2, -3, -4, -5, -6, -7]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1665517349,
      "stdout": "0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpkvozxxv2.js:21:12)\n    at Object.<anonymous> (/tmp/tmpkvozxxv2.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    neg_list.sort();\n    return neg_list[0];\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1665517349,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpjljs4324.js:16:12)\n    at Object.<anonymous> (/tmp/tmpjljs4324.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let largest_neg: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > largest_neg) {\n                largest_neg = list1[i];\n            }\n        }\n    }\n    return largest_neg;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1665517349,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp2cp855dc.js:16:12)\n    at Object.<anonymous> (/tmp/tmp2cp855dc.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = list1.filter(function (value) {\n        return value < 0;\n    });\n    return Math.max(...neg_list);\n}\n\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1665517349,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpzt004u6v.js:12:12)\n    at Object.<anonymous> (/tmp/tmpzt004u6v.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var neg_list: number[] = [];\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    return Math.max.apply(null, neg_list);\n}\nconsole.log(\"Largest negative number is: \" + largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1665517349,
      "stdout": "Largest negative number is: -1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp5nxb8ha3.js:15:12)\n    at Object.<anonymous> (/tmp/tmp5nxb8ha3.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    if (neg_list.length > 0) {\n        return Math.max(...neg_list);\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1665517349,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpkzb71max.js:20:12)\n    at Object.<anonymous> (/tmp/tmpkzb71max.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = list1.filter(function (num) {\n        return num < 0;\n    });\n    let max_neg: number = Math.max(...neg_list);\n    return max_neg;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1665517349,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp3ztsosax.js:12:12)\n    at Object.<anonymous> (/tmp/tmp3ztsosax.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    neg_list.sort();\n    return neg_list[0];\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1665517349,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpr_20q_8h.js:16:12)\n    at Object.<anonymous> (/tmp/tmpr_20q_8h.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var neg_list: number[] = [];\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    neg_list.sort();\n    return neg_list[0];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1665517349,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpomy0y8w5.js:15:12)\n    at Object.<anonymous> (/tmp/tmpomy0y8w5.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let large_neg: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > large_neg) {\n                large_neg = list1[i];\n            }\n        }\n    }\n    return large_neg;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1665517349,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp4rpxixek.js:16:12)\n    at Object.<anonymous> (/tmp/tmp4rpxixek.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let largest_neg: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > largest_neg) {\n                largest_neg = list1[i];\n            }\n        }\n    }\n    return largest_neg;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1665517349,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp2cp855dc.js:16:12)\n    at Object.<anonymous> (/tmp/tmp2cp855dc.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    let max_neg = neg_list[0];\n    for (let i = 0; i < neg_list.length; i++) {\n        if (neg_list[i] > max_neg) {\n            max_neg = neg_list[i];\n        }\n    }\n    return max_neg;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1665517349,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpwyqapz95.js:20:12)\n    at Object.<anonymous> (/tmp/tmpwyqapz95.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var neg_list: number[] = [];\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    return Math.max(...neg_list);\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp_waozj4n.js:15:12)\n    at Object.<anonymous> (/tmp/tmp_waozj4n.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    let max = neg_list[0];\n    for (let i = 0; i < neg_list.length; i++) {\n        if (neg_list[i] > max) {\n            max = neg_list[i];\n        }\n    }\n    return max;\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpy8163ol8.js:21:12)\n    at Object.<anonymous> (/tmp/tmpy8163ol8.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    if (neg_list.length == 0) {\n        return 0;\n    }\n    else {\n        var largest = neg_list[0];\n        for (let i = 0; i < neg_list.length; i++) {\n            if (neg_list[i] > largest) {\n                largest = neg_list[i];\n            }\n        }\n        return largest;\n    }\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpxtsxz9cu.js:26:12)\n    at Object.<anonymous> (/tmp/tmpxtsxz9cu.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var max: number = list1[0];\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] > max) {\n            max = list1[i];\n        }\n    }\n    return max;\n}\nvar list1 = [23, 89, 6, 29, 56, 45, 77, 32];\nconsole.log(\"The largest number is \" + largest_neg(list1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "The largest number is 89\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmps2d666f5.js:16:12)\n    at Object.<anonymous> (/tmp/tmps2d666f5.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var largest = list1[0];\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > largest) {\n                largest = list1[i];\n            }\n        }\n    }\n    return largest;\n}\n\nvar list1 = [45, -9, 15, -35, -23, 0, -1, 4, -5];\nconsole.log(\"Largest negative number is : \" + largest_neg(list1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "Largest negative number is : 45\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpup57la_y.js:18:12)\n    at Object.<anonymous> (/tmp/tmpup57la_y.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var max_neg: number = 0;\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > max_neg) {\n                max_neg = list1[i];\n            }\n        }\n    }\n    return max_neg;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpgork9o8d.js:16:12)\n    at Object.<anonymous> (/tmp/tmpgork9o8d.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    let max = neg_list[0];\n    for (let i = 0; i < neg_list.length; i++) {\n        if (neg_list[i] > max) {\n            max = neg_list[i];\n        }\n    }\n    return max;\n}\n\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp93lppna3.js:21:12)\n    at Object.<anonymous> (/tmp/tmp93lppna3.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var neg_list: number[] = [];\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    return Math.max(...neg_list);\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp3h5dy8av.js:15:12)\n    at Object.<anonymous> (/tmp/tmp3h5dy8av.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var max = 0;\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > max) {\n                max = list1[i];\n            }\n        }\n    }\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpsigw9ldf.js:16:12)\n    at Object.<anonymous> (/tmp/tmpsigw9ldf.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = list1.filter(function (num) {\n        return num < 0;\n    });\n    if (neg_list.length == 0) {\n        return 0;\n    }\n    else {\n        return Math.max(...neg_list);\n    }\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpgzvpvfln.js:17:12)\n    at Object.<anonymous> (/tmp/tmpgzvpvfln.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let largest_neg: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > largest_neg) {\n                largest_neg = list1[i];\n            }\n        }\n    }\n    return largest_neg;\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1665517349,
      "stdout": "0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp8lsw77tl.js:17:12)\n    at Object.<anonymous> (/tmp/tmp8lsw77tl.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list = list1.filter(x => x < 0);\n    let max = neg_list[0];\n    for (let i = 0; i < neg_list.length; i++) {\n        if (neg_list[i] > max) {\n            max = neg_list[i];\n        }\n    }\n    return max;\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpfq9tyi4v.js:16:12)\n    at Object.<anonymous> (/tmp/tmpfq9tyi4v.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var neg_list: number[] = [];\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    if (neg_list.length == 0) {\n        return 0;\n    }\n    else {\n        var max = neg_list[0];\n        for (var i = 0; i < neg_list.length; i++) {\n            if (neg_list[i] > max) {\n                max = neg_list[i];\n            }\n        }\n        return max;\n    }\n}\nvar list1 = [23, -89, 45, -9, 0, -2, 4, 56, -45, -10];\nconsole.log(\"The largest negative number is: \" + largest_neg(list1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "The largest negative number is: -2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpvkg984f1.js:27:12)\n    at Object.<anonymous> (/tmp/tmpvkg984f1.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    return Math.max(...neg_list);\n}\n\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpvrnlg6gt.js:15:12)\n    at Object.<anonymous> (/tmp/tmpvrnlg6gt.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var max: number = 0;\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > max) {\n                max = list1[i];\n            }\n        }\n    }\n    return max;\n}\n\nvar list1: number[] = [-1, -2, -3, -4, -5, -6];\nconsole.log(\"The largest negative number from the given array is: \" + largest_neg(list1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "The largest negative number from the given array is: 0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp209mhdg1.js:18:12)\n    at Object.<anonymous> (/tmp/tmp209mhdg1.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    let max_neg: number = neg_list[0];\n    for (let i = 0; i < neg_list.length; i++) {\n        if (neg_list[i] > max_neg) {\n            max_neg = neg_list[i];\n        }\n    }\n    return max_neg;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpx9q2hh77.js:20:12)\n    at Object.<anonymous> (/tmp/tmpx9q2hh77.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    neg_list.sort();\n    return neg_list[0];\n}\nconsole.log(\"Largest negative number is: \" + largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "Largest negative number is: -1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpgfpvooer.js:16:12)\n    at Object.<anonymous> (/tmp/tmpgfpvooer.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    let max = neg_list[0];\n    for (let i = 0; i < neg_list.length; i++) {\n        if (neg_list[i] > max) {\n            max = neg_list[i];\n        }\n    }\n    return max;\n}\n\nlet list1: number[] = [23, 89, 6, 29, 56, 45, 77, 32];\nconsole.log(largest_neg(list1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "undefined\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp2q_nq70w.js:22:12)\n    at Object.<anonymous> (/tmp/tmp2q_nq70w.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var largest = 0;\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > largest) {\n                largest = list1[i];\n            }\n        }\n    }\n    return largest;\n}\nvar list1 = [23, 89, 6, 29, 56, 45, 77, 32];\nconsole.log(\"Largest negative number is : \" + largest_neg(list1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "Largest negative number is : 0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpefg5iqt_.js:18:12)\n    at Object.<anonymous> (/tmp/tmpefg5iqt_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var max: number = list1[0];\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] > max) {\n            max = list1[i];\n        }\n    }\n    return max;\n}\nvar list1: number[] = [23, 89, 6, 29, 56, 45, 77, 32];\nvar result: number = largest_neg(list1);\nconsole.log(\"The largest number is : \" + result);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "The largest number is : 89\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmptxzqp6_k.js:17:12)\n    at Object.<anonymous> (/tmp/tmptxzqp6_k.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var neg_list: number[] = [];\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    neg_list.sort();\n    return neg_list[0];\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1665517349,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpybdfm2rk.js:16:12)\n    at Object.<anonymous> (/tmp/tmpybdfm2rk.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    neg_list.sort();\n    return neg_list[0];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmphcz84nuf.js:15:12)\n    at Object.<anonymous> (/tmp/tmphcz84nuf.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var neg_list: number[] = [];\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    if (neg_list.length == 0) {\n        return 0;\n    }\n    else {\n        var largest = neg_list[0];\n        for (var i = 0; i < neg_list.length; i++) {\n            if (neg_list[i] > largest) {\n                largest = neg_list[i];\n            }\n        }\n        return largest;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmphvd7g5ti.js:25:12)\n    at Object.<anonymous> (/tmp/tmphvd7g5ti.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let largest_neg_num: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > largest_neg_num) {\n                largest_neg_num = list1[i];\n            }\n        }\n    }\n    return largest_neg_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpbvvi38xc.js:16:12)\n    at Object.<anonymous> (/tmp/tmpbvvi38xc.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let largest_neg_num: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > largest_neg_num) {\n                largest_neg_num = list1[i];\n            }\n        }\n    }\n    return largest_neg_num;\n}\n\nconsole.log(largest_neg([-1, -2, -3, -4, -5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp3ew0v3c2.js:17:12)\n    at Object.<anonymous> (/tmp/tmp3ew0v3c2.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var neg_list: number[] = [];\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    var max_neg = neg_list[0];\n    for (var i = 0; i < neg_list.length; i++) {\n        if (neg_list[i] > max_neg) {\n            max_neg = neg_list[i];\n        }\n    }\n    return max_neg;\n}\nvar list1 = [23, 89, 6, 29, 56, 45, 77, 32];\nconsole.log(\"Largest negative number is : \" + largest_neg(list1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123079,
      "stdout": "Largest negative number is : undefined\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpbijb26bx.js:22:12)\n    at Object.<anonymous> (/tmp/tmpbijb26bx.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var neg_list: number[] = [];\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    if (neg_list.length == 0) {\n        return 0;\n    }\n    else {\n        var max = neg_list[0];\n        for (var i = 0; i < neg_list.length; i++) {\n            if (neg_list[i] > max) {\n                max = neg_list[i];\n            }\n        }\n        return max;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123079,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp3aonz6om.js:25:12)\n    at Object.<anonymous> (/tmp/tmp3aonz6om.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    return Math.max(...neg_list);\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123079,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp2fvrwn9c.js:15:12)\n    at Object.<anonymous> (/tmp/tmp2fvrwn9c.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = list1.filter(function (num) {\n        return num < 0;\n    });\n    let max_neg: number = Math.max(...neg_list);\n    return max_neg;\n}\nconsole.log(largest_neg([23, -90, -45, -19, 0, -2, -1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123079,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp7q6qy9nw.js:13:12)\n    at Object.<anonymous> (/tmp/tmp7q6qy9nw.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var neg_list: number[] = [];\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    neg_list.sort();\n    return neg_list[0];\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1665517349,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpybdfm2rk.js:16:12)\n    at Object.<anonymous> (/tmp/tmpybdfm2rk.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let largest_neg: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > largest_neg) {\n                largest_neg = list1[i];\n            }\n        }\n    }\n    return largest_neg;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1665517349,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp2cp855dc.js:16:12)\n    at Object.<anonymous> (/tmp/tmp2cp855dc.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var neg_list: number[] = [];\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    return Math.max.apply(null, neg_list);\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123079,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpmebq1q0w.js:15:12)\n    at Object.<anonymous> (/tmp/tmpmebq1q0w.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    let largest_neg = neg_list[0];\n    for (let i = 0; i < neg_list.length; i++) {\n        if (neg_list[i] > largest_neg) {\n            largest_neg = neg_list[i];\n        }\n    }\n    return largest_neg;\n}\nconsole.log(\"Largest negative number is: \" + largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123080,
      "stdout": "Largest negative number is: -1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpefo_8s14.js:21:12)\n    at Object.<anonymous> (/tmp/tmpefo_8s14.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    let max = neg_list[0];\n    for (let i = 0; i < neg_list.length; i++) {\n        if (neg_list[i] > max) {\n            max = neg_list[i];\n        }\n    }\n    return max;\n}\nlet list1: number[] = [23, -89, 45, -9, 0, 78, -90, -45, 56, -23, -78, 90, 45];\nconsole.log(\"The largest negative number is: \" + largest_neg(list1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123080,
      "stdout": "The largest negative number is: -9\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpvlr1_vtt.js:22:12)\n    at Object.<anonymous> (/tmp/tmpvlr1_vtt.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var max: number = 0;\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > max) {\n                max = list1[i];\n            }\n        }\n    }\n    return max;\n}\n\nvar list1: number[] = [23, 89, 6, 29, 56, 45, 77, 32];\nconsole.log(\"The largest negative number is: \" + largest_neg(list1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123080,
      "stdout": "The largest negative number is: 0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmphnijx8s5.js:18:12)\n    at Object.<anonymous> (/tmp/tmphnijx8s5.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var neg_list: number[] = [];\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    return Math.max.apply(null, neg_list);\n}\nconsole.log(largest_neg([23, -90, -12, 0, -45, 67]));\nconsole.log(largest_neg([45, -90, -12, 0, -45, 67]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123080,
      "stdout": "-12\n-12\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp6owvm7bo.js:16:12)\n    at Object.<anonymous> (/tmp/tmp6owvm7bo.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let max = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > max) {\n                max = list1[i];\n            }\n        }\n    }\n    return max;\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123080,
      "stdout": "0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpagqh7tnb.js:17:12)\n    at Object.<anonymous> (/tmp/tmpagqh7tnb.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var neg_list: number[] = [];\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    neg_list.sort();\n    return neg_list[0];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1665517349,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpomy0y8w5.js:15:12)\n    at Object.<anonymous> (/tmp/tmpomy0y8w5.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    if (neg_list.length == 0) {\n        return 0;\n    }\n    else {\n        var max = neg_list[0];\n        for (let i = 0; i < neg_list.length; i++) {\n            if (neg_list[i] > max) {\n                max = neg_list[i];\n            }\n        }\n        return max;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123080,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpahsykw2w.js:25:12)\n    at Object.<anonymous> (/tmp/tmpahsykw2w.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list = list1.filter(function (num) {\n        return num < 0;\n    });\n    let max_neg = Math.max(...neg_list);\n    return max_neg;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123080,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp3j2g7bzd.js:12:12)\n    at Object.<anonymous> (/tmp/tmp3j2g7bzd.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = list1.filter(x => x < 0);\n    return Math.max(...neg_list);\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123080,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpyw3wodd6.js:10:12)\n    at Object.<anonymous> (/tmp/tmpyw3wodd6.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var neg_list: number[] = [];\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    if (neg_list.length == 0) {\n        return 0;\n    }\n    else {\n        var largest_neg = neg_list[0];\n        for (var i = 0; i < neg_list.length; i++) {\n            if (neg_list[i] > largest_neg) {\n                largest_neg = neg_list[i];\n            }\n        }\n        return largest_neg;\n    }\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123080,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpqdqpzasp.js:26:12)\n    at Object.<anonymous> (/tmp/tmpqdqpzasp.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    if (neg_list.length == 0) {\n        return 0;\n    }\n    else {\n        var max = neg_list[0];\n        for (let i = 0; i < neg_list.length; i++) {\n            if (neg_list[i] > max) {\n                max = neg_list[i];\n            }\n        }\n        return max;\n    }\n}\nvar list1 = [23, -89, 45, -9, 0, -1, 4, -56, -90, 78];\nconsole.log(\"The largest negative number is: \" + largest_neg(list1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123080,
      "stdout": "The largest negative number is: -1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmptv66uu8v.js:27:12)\n    at Object.<anonymous> (/tmp/tmptv66uu8v.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = list1.filter(x => x < 0);\n    return Math.max(...neg_list);\n}\n\nconsole.log(largest_neg([44, -5, 0, -1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123080,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp0u8b9r7l.js:10:12)\n    at Object.<anonymous> (/tmp/tmp0u8b9r7l.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var neg_list: number[] = [];\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    return Math.max(...neg_list);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123080,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmprdxu87xo.js:14:12)\n    at Object.<anonymous> (/tmp/tmprdxu87xo.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    let max_neg = neg_list[0];\n    for (let i = 0; i < neg_list.length; i++) {\n        if (neg_list[i] > max_neg) {\n            max_neg = neg_list[i];\n        }\n    }\n    return max_neg;\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123080,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpu6ih6178.js:21:12)\n    at Object.<anonymous> (/tmp/tmpu6ih6178.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = list1.filter(function (num) {\n        return num < 0;\n    });\n    if (neg_list.length == 0) {\n        return 0;\n    }\n    else {\n        return Math.max(...neg_list);\n    }\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123080,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp751ifz72.js:17:12)\n    at Object.<anonymous> (/tmp/tmp751ifz72.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    if (neg_list.length == 0) {\n        return 0;\n    }\n    else {\n        let max_neg = neg_list[0];\n        for (let i = 1; i < neg_list.length; i++) {\n            if (neg_list[i] > max_neg) {\n                max_neg = neg_list[i];\n            }\n        }\n        return max_neg;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123080,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpbcmdoht6.js:25:12)\n    at Object.<anonymous> (/tmp/tmpbcmdoht6.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    let max_neg: number = neg_list[0];\n    for (let i = 0; i < neg_list.length; i++) {\n        if (neg_list[i] > max_neg) {\n            max_neg = neg_list[i];\n        }\n    }\n    return max_neg;\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123080,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpcf6gzn1m.js:21:12)\n    at Object.<anonymous> (/tmp/tmpcf6gzn1m.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var large_neg: number = 0;\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > large_neg) {\n                large_neg = list1[i];\n            }\n        }\n    }\n    return large_neg;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123080,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpkdhvubzw.js:16:12)\n    at Object.<anonymous> (/tmp/tmpkdhvubzw.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let largest_neg: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > largest_neg) {\n                largest_neg = list1[i];\n            }\n        }\n    }\n    return largest_neg;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1665517349,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp2cp855dc.js:16:12)\n    at Object.<anonymous> (/tmp/tmp2cp855dc.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var neg_list: number[] = [];\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    var max_neg = neg_list[0];\n    for (var i = 0; i < neg_list.length; i++) {\n        if (neg_list[i] > max_neg) {\n            max_neg = neg_list[i];\n        }\n    }\n    return max_neg;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123080,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpet0u6q6g.js:20:12)\n    at Object.<anonymous> (/tmp/tmpet0u6q6g.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var max: number = 0;\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > max) {\n                max = list1[i];\n            }\n        }\n    }\n    return max;\n}\nvar list1 = [23, 89, 6, 29, 56, 45, 77, 32];\nconsole.log(\"Largest negative number is : \" + largest_neg(list1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123082,
      "stdout": "Largest negative number is : 0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpw2e0o1lt.js:18:12)\n    at Object.<anonymous> (/tmp/tmpw2e0o1lt.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let large = list1[0];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > large) {\n                large = list1[i];\n            }\n        }\n    }\n    return large;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123082,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpaqydv0ym.js:16:12)\n    at Object.<anonymous> (/tmp/tmpaqydv0ym.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list = list1.filter(x => x < 0);\n    let max = neg_list[0];\n    for (let i = 0; i < neg_list.length; i++) {\n        if (neg_list[i] > max) {\n            max = neg_list[i];\n        }\n    }\n    return max;\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123082,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmplf167_v9.js:16:12)\n    at Object.<anonymous> (/tmp/tmplf167_v9.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var largest = 0;\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > largest) {\n                largest = list1[i];\n            }\n        }\n    }\n    return largest;\n}\nvar list1 = [23, 89, 6, 29, 56, 45, 77, 32];\nconsole.log(\"Largest negative number is : \" + largest_neg(list1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "Largest negative number is : 0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpefg5iqt_.js:18:12)\n    at Object.<anonymous> (/tmp/tmpefg5iqt_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var max = 0;\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > max) {\n                max = list1[i];\n            }\n        }\n    }\n    return max;\n}\nvar list1 = [23, 89, 6, 29, 56, 45, 77, 32];\nconsole.log(\"The largest negative number is : \" + largest_neg(list1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123082,
      "stdout": "The largest negative number is : 0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpxkodrtl_.js:18:12)\n    at Object.<anonymous> (/tmp/tmpxkodrtl_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    neg_list.sort();\n    return neg_list[0];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123082,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp3fy1as9m.js:15:12)\n    at Object.<anonymous> (/tmp/tmp3fy1as9m.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    let max = neg_list[0];\n    for (let i = 0; i < neg_list.length; i++) {\n        if (neg_list[i] > max) {\n            max = neg_list[i];\n        }\n    }\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123082,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpn43leejf.js:20:12)\n    at Object.<anonymous> (/tmp/tmpn43leejf.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    if (neg_list.length == 0) {\n        return 0;\n    }\n    else {\n        let max = neg_list[0];\n        for (let i = 0; i < neg_list.length; i++) {\n            if (neg_list[i] > max) {\n                max = neg_list[i];\n            }\n        }\n        return max;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123082,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpkesi6x2w.js:25:12)\n    at Object.<anonymous> (/tmp/tmpkesi6x2w.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    let max = neg_list[0];\n    for (let i = 0; i < neg_list.length; i++) {\n        if (neg_list[i] > max) {\n            max = neg_list[i];\n        }\n    }\n    return max;\n}\n\nlet list1: number[] = [23, -89, 45, -9, 0, -2, 4, 56, -45, -10];\nconsole.log(largest_neg(list1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123082,
      "stdout": "-2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp4i7684yn.js:22:12)\n    at Object.<anonymous> (/tmp/tmp4i7684yn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    return Math.min(...neg_list);\n}\nconsole.log(largest_neg([1, 2, -3, 4, -5, -6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123082,
      "stdout": "-6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    let max = neg_list[0];\n    for (let i = 0; i < neg_list.length; i++) {\n        if (neg_list[i] > max) {\n            max = neg_list[i];\n        }\n    }\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123082,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpn43leejf.js:20:12)\n    at Object.<anonymous> (/tmp/tmpn43leejf.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    let largest_neg = neg_list[0];\n    for (let i = 0; i < neg_list.length; i++) {\n        if (neg_list[i] > largest_neg) {\n            largest_neg = neg_list[i];\n        }\n    }\n    return largest_neg;\n}\n\nconsole.log(largest_neg([-1, -2, -3, -4, -5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123082,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmphh44euhj.js:21:12)\n    at Object.<anonymous> (/tmp/tmphh44euhj.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    neg_list.sort();\n    return neg_list[0];\n}\n\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123083,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp0hs0zpvr.js:16:12)\n    at Object.<anonymous> (/tmp/tmp0hs0zpvr.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    return Math.max(...neg_list);\n}\n\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9]));\n\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123083,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpevebn490.js:15:12)\n    at Object.<anonymous> (/tmp/tmpevebn490.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    let largest_neg_num: number = neg_list[0];\n    for (let i = 0; i < neg_list.length; i++) {\n        if (neg_list[i] > largest_neg_num) {\n            largest_neg_num = neg_list[i];\n        }\n    }\n    return largest_neg_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123083,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpii7eovzx.js:20:12)\n    at Object.<anonymous> (/tmp/tmpii7eovzx.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = list1.filter(function (num) {\n        return num < 0;\n    });\n    if (neg_list.length == 0) {\n        return 0;\n    }\n    else {\n        return Math.max(...neg_list);\n    }\n}\n\nconsole.log(largest_neg([1, 2, -3, 4, -5, -6, 7, 8, 9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123083,
      "stdout": "-3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpwuh_om8n.js:17:12)\n    at Object.<anonymous> (/tmp/tmpwuh_om8n.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    neg_list.sort();\n    return neg_list[0];\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1665517349,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpr_20q_8h.js:16:12)\n    at Object.<anonymous> (/tmp/tmpr_20q_8h.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var neg_list: number[] = [];\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    return Math.max(...neg_list);\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp_waozj4n.js:15:12)\n    at Object.<anonymous> (/tmp/tmp_waozj4n.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var max = 0;\n    var i: number;\n    for (i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > max) {\n                max = list1[i];\n            }\n        }\n    }\n    return max;\n}\nvar list1 = [23, 89, 6, 29, 56, 45, 77, 32];\nconsole.log(\"The largest negative number is : \" + largest_neg(list1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123083,
      "stdout": "The largest negative number is : 0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp2o2xg068.js:19:12)\n    at Object.<anonymous> (/tmp/tmp2o2xg068.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    if (neg_list.length == 0) {\n        return 0;\n    }\n    else {\n        let max_neg = neg_list[0];\n        for (let i = 0; i < neg_list.length; i++) {\n            if (neg_list[i] > max_neg) {\n                max_neg = neg_list[i];\n            }\n        }\n        return max_neg;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123083,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpe55_4ovv.js:25:12)\n    at Object.<anonymous> (/tmp/tmpe55_4ovv.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var max_neg = list1[0];\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0 && list1[i] > max_neg) {\n            max_neg = list1[i];\n        }\n    }\n    return max_neg;\n}\nconsole.log(\"Largest negative number is: \" + largest_neg([-1, -2, -3, -4, -5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123083,
      "stdout": "Largest negative number is: -1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpayys5_fp.js:15:12)\n    at Object.<anonymous> (/tmp/tmpayys5_fp.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var neg_list: number[] = [];\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    var max = neg_list[0];\n    for (var i = 0; i < neg_list.length; i++) {\n        if (neg_list[i] > max) {\n            max = neg_list[i];\n        }\n    }\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123083,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp7wz2odll.js:20:12)\n    at Object.<anonymous> (/tmp/tmp7wz2odll.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    return Math.max(...neg_list);\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123079,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp2fvrwn9c.js:15:12)\n    at Object.<anonymous> (/tmp/tmp2fvrwn9c.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    if (neg_list.length == 0) {\n        return 0;\n    }\n    else {\n        let max = neg_list[0];\n        for (let i = 0; i < neg_list.length; i++) {\n            if (neg_list[i] > max) {\n                max = neg_list[i];\n            }\n        }\n        return max;\n    }\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123083,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp2179xkq_.js:26:12)\n    at Object.<anonymous> (/tmp/tmp2179xkq_.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    if (neg_list.length == 0) {\n        return 0;\n    }\n    else {\n        let max_neg = neg_list[0];\n        for (let i = 1; i < neg_list.length; i++) {\n            if (neg_list[i] > max_neg) {\n                max_neg = neg_list[i];\n            }\n        }\n        return max_neg;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123080,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpbcmdoht6.js:25:12)\n    at Object.<anonymous> (/tmp/tmpbcmdoht6.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let large_neg: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > large_neg) {\n                large_neg = list1[i];\n            }\n        }\n    }\n    return large_neg;\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123083,
      "stdout": "0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmptfdn4yct.js:17:12)\n    at Object.<anonymous> (/tmp/tmptfdn4yct.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = list1.filter(function (value) {\n        return value < 0;\n    });\n    let largest_neg_num: number = Math.max.apply(null, neg_list);\n    return largest_neg_num;\n}\nconsole.log(largest_neg([23, -90, -12, 0, -45, 56, 78, -90, 89]));\nconsole.log(largest_neg([23, 90, 12, 0, 45, 56, 78, 90, 89]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123083,
      "stdout": "-12\n-Infinity\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmphs73s2t9.js:14:12)\n    at Object.<anonymous> (/tmp/tmphs73s2t9.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    let largest_neg = neg_list[0];\n    for (let i = 0; i < neg_list.length; i++) {\n        if (neg_list[i] > largest_neg) {\n            largest_neg = neg_list[i];\n        }\n    }\n    return largest_neg;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123083,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp7qnl6fkk.js:20:12)\n    at Object.<anonymous> (/tmp/tmp7qnl6fkk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let max: number = list1[0];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > max) {\n                max = list1[i];\n            }\n        }\n    }\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123083,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpv2roq1ru.js:16:12)\n    at Object.<anonymous> (/tmp/tmpv2roq1ru.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    let max = neg_list[0];\n    for (let i = 0; i < neg_list.length; i++) {\n        if (neg_list[i] > max) {\n            max = neg_list[i];\n        }\n    }\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123082,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpn43leejf.js:20:12)\n    at Object.<anonymous> (/tmp/tmpn43leejf.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    return Math.max(...neg_list);\n}\n\nconsole.log(largest_neg([1, 2, -3, 4, -5, 6, -7, 8, 9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123084,
      "stdout": "-3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpo5cfpg9h.js:15:12)\n    at Object.<anonymous> (/tmp/tmpo5cfpg9h.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var max: number = 0;\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > max) {\n                max = list1[i];\n            }\n        }\n    }\n    return max;\n}\nvar list1: number[] = [23, 89, 6, 29, 56, 45, 77, 32];\nconsole.log(\"Largest negative number is : \" + largest_neg(list1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123085,
      "stdout": "Largest negative number is : 0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpy4n1sx3g.js:18:12)\n    at Object.<anonymous> (/tmp/tmpy4n1sx3g.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    let max = neg_list[0];\n    for (let i = 0; i < neg_list.length; i++) {\n        if (neg_list[i] > max) {\n            max = neg_list[i];\n        }\n    }\n    return max;\n}\n\nconsole.log(largest_neg([1, 2, 3, -4, -5, -6, -7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123085,
      "stdout": "-4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpjvwgzpy3.js:21:12)\n    at Object.<anonymous> (/tmp/tmpjvwgzpy3.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = list1.filter(function (num) {\n        return num < 0;\n    });\n    if (neg_list.length == 0) {\n        return 0;\n    }\n    else {\n        return Math.max(...neg_list);\n    }\n}\nconsole.log(largest_neg([1, 2, -3, 4, -5, -6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123085,
      "stdout": "-3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpf9ewn_be.js:17:12)\n    at Object.<anonymous> (/tmp/tmpf9ewn_be.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var neg_list: number[] = [];\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    return Math.max(...neg_list);\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123085,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpjfo102l_.js:15:12)\n    at Object.<anonymous> (/tmp/tmpjfo102l_.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var largest = 0;\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > largest) {\n                largest = list1[i];\n            }\n        }\n    }\n    return largest;\n}\nvar list1 = [23, 89, 6, 29, 56, 45, 77, 32];\nconsole.log(\"Largest negative number is : \" + largest_neg(list1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "Largest negative number is : 0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpefg5iqt_.js:18:12)\n    at Object.<anonymous> (/tmp/tmpefg5iqt_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    if (neg_list.length == 0) {\n        return 0;\n    }\n    else {\n        let max = neg_list[0];\n        for (let i = 1; i < neg_list.length; i++) {\n            if (neg_list[i] > max) {\n                max = neg_list[i];\n            }\n        }\n        return max;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpuais4ncw.js:25:12)\n    at Object.<anonymous> (/tmp/tmpuais4ncw.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    let max = neg_list[0];\n    for (let i = 0; i < neg_list.length; i++) {\n        if (neg_list[i] > max) {\n            max = neg_list[i];\n        }\n    }\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123082,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpn43leejf.js:20:12)\n    at Object.<anonymous> (/tmp/tmpn43leejf.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var neg_list: number[] = [];\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    if (neg_list.length == 0) {\n        return 0;\n    }\n    else {\n        var max = neg_list[0];\n        for (var i = 0; i < neg_list.length; i++) {\n            if (neg_list[i] > max) {\n                max = neg_list[i];\n            }\n        }\n        return max;\n    }\n}\nvar list1 = [23, 89, 6, 29, 56, 45, 77, 32];\nconsole.log(\"The largest negative number from the list is: \" + largest_neg(list1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123085,
      "stdout": "The largest negative number from the list is: 0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp_77rxnoa.js:27:12)\n    at Object.<anonymous> (/tmp/tmp_77rxnoa.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var max = 0;\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > max) {\n                max = list1[i];\n            }\n        }\n    }\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpsigw9ldf.js:16:12)\n    at Object.<anonymous> (/tmp/tmpsigw9ldf.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    let max: number = neg_list[0];\n    for (let i = 0; i < neg_list.length; i++) {\n        if (neg_list[i] > max) {\n            max = neg_list[i];\n        }\n    }\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp2v6brvtv.js:20:12)\n    at Object.<anonymous> (/tmp/tmp2v6brvtv.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let largest: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > largest) {\n                largest = list1[i];\n            }\n        }\n    }\n    return largest;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpl7p5at2r.js:16:12)\n    at Object.<anonymous> (/tmp/tmpl7p5at2r.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    let max_neg = neg_list[0];\n    for (let i = 0; i < neg_list.length; i++) {\n        if (neg_list[i] > max_neg) {\n            max_neg = neg_list[i];\n        }\n    }\n    return max_neg;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1665517349,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpwyqapz95.js:20:12)\n    at Object.<anonymous> (/tmp/tmpwyqapz95.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = list1.filter(function (num) {\n        return num < 0;\n    });\n    if (neg_list.length == 0) {\n        return 0;\n    }\n    else {\n        let max_neg = neg_list[0];\n        for (let i = 0; i < neg_list.length; i++) {\n            if (neg_list[i] > max_neg) {\n                max_neg = neg_list[i];\n            }\n        }\n        return max_neg;\n    }\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123085,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp_4vegc08.js:23:12)\n    at Object.<anonymous> (/tmp/tmp_4vegc08.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let largest_neg: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > largest_neg) {\n                largest_neg = list1[i];\n            }\n        }\n    }\n    return largest_neg;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1665517349,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp2cp855dc.js:16:12)\n    at Object.<anonymous> (/tmp/tmp2cp855dc.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    let max_neg = neg_list[0];\n    for (let i = 0; i < neg_list.length; i++) {\n        if (neg_list[i] > max_neg) {\n            max_neg = neg_list[i];\n        }\n    }\n    return max_neg;\n}\nlet list1 = [23, 89, 6, 29, 56, 45, 77, 32];\nconsole.log(largest_neg(list1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123085,
      "stdout": "undefined\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpqflsk_79.js:22:12)\n    at Object.<anonymous> (/tmp/tmpqflsk_79.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list = list1.filter(x => x < 0);\n    let max = neg_list[0];\n    for (let i = 0; i < neg_list.length; i++) {\n        if (neg_list[i] > max) {\n            max = neg_list[i];\n        }\n    }\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp22_3njbv.js:15:12)\n    at Object.<anonymous> (/tmp/tmp22_3njbv.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    neg_list.sort();\n    return neg_list[0];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmphcz84nuf.js:15:12)\n    at Object.<anonymous> (/tmp/tmphcz84nuf.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var max = 0;\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > max) {\n                max = list1[i];\n            }\n        }\n    }\n    return max;\n}\nvar list1 = [23, 89, 6, 29, 56, 45, 77, 32];\nconsole.log(\"Largest negative number is : \" + largest_neg(list1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123085,
      "stdout": "Largest negative number is : 0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpg8__busn.js:18:12)\n    at Object.<anonymous> (/tmp/tmpg8__busn.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let largest_neg = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > largest_neg) {\n                largest_neg = list1[i];\n            }\n        }\n    }\n    return largest_neg;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpewjz8ibk.js:16:12)\n    at Object.<anonymous> (/tmp/tmpewjz8ibk.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var neg_list: number[] = [];\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    return Math.max(...neg_list);\n}\nconsole.log(largest_neg([1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123086,
      "stdout": "-2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpbjj9514h.js:15:12)\n    at Object.<anonymous> (/tmp/tmpbjj9514h.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    if (neg_list.length == 0) {\n        return 0;\n    }\n    else {\n        let max = neg_list[0];\n        for (let i = 0; i < neg_list.length; i++) {\n            if (neg_list[i] > max) {\n                max = neg_list[i];\n            }\n        }\n        return max;\n    }\n}\nconsole.log(largest_neg([1, 2, -3, -4, -5, -6, 7, 8, 9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123085,
      "stdout": "-3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpp_1thtjn.js:26:12)\n    at Object.<anonymous> (/tmp/tmpp_1thtjn.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    let max = neg_list[0];\n    for (let i = 0; i < neg_list.length; i++) {\n        if (neg_list[i] > max) {\n            max = neg_list[i];\n        }\n    }\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123082,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpn43leejf.js:20:12)\n    at Object.<anonymous> (/tmp/tmpn43leejf.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    let largest_neg = neg_list[0];\n    for (let i = 0; i < neg_list.length; i++) {\n        if (neg_list[i] > largest_neg) {\n            largest_neg = neg_list[i];\n        }\n    }\n    return largest_neg;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123083,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp7qnl6fkk.js:20:12)\n    at Object.<anonymous> (/tmp/tmp7qnl6fkk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var max: number = 0;\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > max) {\n                max = list1[i];\n            }\n        }\n    }\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpghehf5w2.js:16:12)\n    at Object.<anonymous> (/tmp/tmpghehf5w2.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var neg_list: number[] = [];\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    if (neg_list.length == 0) {\n        return 0;\n    }\n    else {\n        var max_neg = neg_list[0];\n        for (var i = 0; i < neg_list.length; i++) {\n            if (neg_list[i] > max_neg) {\n                max_neg = neg_list[i];\n            }\n        }\n        return max_neg;\n    }\n}\nconsole.log(largest_neg([1, 2, 3, -1, -2, -3, -4, -5]));\nconsole.log(largest_neg([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123085,
      "stdout": "-1\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpbuj9k3xy.js:27:12)\n    at Object.<anonymous> (/tmp/tmpbuj9k3xy.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var largest = 0;\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > largest) {\n                largest = list1[i];\n            }\n        }\n    }\n    return largest;\n}\nvar list1 = [23, 89, 6, 29, 56, 45, 77, 32];\nconsole.log(\"Largest negative number is : \" + largest_neg(list1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "Largest negative number is : 0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpefg5iqt_.js:18:12)\n    at Object.<anonymous> (/tmp/tmpefg5iqt_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    let max = neg_list[0];\n    for (let i = 0; i < neg_list.length; i++) {\n        if (neg_list[i] > max) {\n            max = neg_list[i];\n        }\n    }\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123082,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpn43leejf.js:20:12)\n    at Object.<anonymous> (/tmp/tmpn43leejf.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let largest_neg: number = list1[0];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > largest_neg) {\n                largest_neg = list1[i];\n            }\n        }\n    }\n    return largest_neg;\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123086,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp41g5ft99.js:17:12)\n    at Object.<anonymous> (/tmp/tmp41g5ft99.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    if (neg_list.length == 0) {\n        return 0;\n    }\n    else {\n        let max = neg_list[0];\n        for (let i = 1; i < neg_list.length; i++) {\n            if (neg_list[i] > max) {\n                max = neg_list[i];\n            }\n        }\n        return max;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpuais4ncw.js:25:12)\n    at Object.<anonymous> (/tmp/tmpuais4ncw.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = list1.filter(function (num) {\n        return num < 0;\n    });\n    if (neg_list.length == 0) {\n        return 0;\n    }\n    else {\n        let max_neg: number = neg_list[0];\n        for (let i = 0; i < neg_list.length; i++) {\n            if (max_neg < neg_list[i]) {\n                max_neg = neg_list[i];\n            }\n        }\n        return max_neg;\n    }\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\nconsole.log(largest_neg([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123085,
      "stdout": "-1\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp4ky7rp7p.js:24:12)\n    at Object.<anonymous> (/tmp/tmp4ky7rp7p.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var neg_list = list1.filter(function (num) {\n        return num < 0;\n    });\n    return Math.max.apply(Math, neg_list);\n}\nconsole.log(\"largest negative number is: \" + largest_neg([-1, -2, -3, -4, -5, -6, -7]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123086,
      "stdout": "largest negative number is: -1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpwtapap33.js:12:12)\n    at Object.<anonymous> (/tmp/tmpwtapap33.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    neg_list.sort();\n    return neg_list[0];\n}\n\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123083,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp0hs0zpvr.js:16:12)\n    at Object.<anonymous> (/tmp/tmp0hs0zpvr.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let largest_neg = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (largest_neg < list1[i]) {\n                largest_neg = list1[i];\n            }\n        }\n    }\n    return largest_neg;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123086,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp44t6bnjd.js:16:12)\n    at Object.<anonymous> (/tmp/tmp44t6bnjd.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    neg_list.sort();\n    return neg_list[0];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmphcz84nuf.js:15:12)\n    at Object.<anonymous> (/tmp/tmphcz84nuf.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let largest_neg = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > largest_neg) {\n                largest_neg = list1[i];\n            }\n        }\n    }\n    return largest_neg;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpewjz8ibk.js:16:12)\n    at Object.<anonymous> (/tmp/tmpewjz8ibk.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    let max = neg_list[0];\n    for (let i = 0; i < neg_list.length; i++) {\n        if (neg_list[i] > max) {\n            max = neg_list[i];\n        }\n    }\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123082,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpn43leejf.js:20:12)\n    at Object.<anonymous> (/tmp/tmpn43leejf.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let max: number = list1[0];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] > max) {\n            max = list1[i];\n        }\n    }\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123086,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpf4wvh4ar.js:14:12)\n    at Object.<anonymous> (/tmp/tmpf4wvh4ar.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list = list1.filter(x => x < 0);\n    let max_neg = Math.max(...neg_list);\n    return max_neg;\n}\n\nconsole.log(largest_neg([1, 2, -3, 4, -5, 6, -7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123087,
      "stdout": "-3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpj_wz9dtk.js:11:12)\n    at Object.<anonymous> (/tmp/tmpj_wz9dtk.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    let max: number = neg_list[0];\n    for (let i = 0; i < neg_list.length; i++) {\n        if (neg_list[i] > max) {\n            max = neg_list[i];\n        }\n    }\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp2v6brvtv.js:20:12)\n    at Object.<anonymous> (/tmp/tmp2v6brvtv.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    return Math.min(...neg_list);\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123088,
      "stdout": "-10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var neg_list: number[] = [];\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    neg_list.sort();\n    return neg_list[0];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1665517349,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpomy0y8w5.js:15:12)\n    at Object.<anonymous> (/tmp/tmpomy0y8w5.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    return Math.max(...neg_list);\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123088,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpz0okwpf6.js:15:12)\n    at Object.<anonymous> (/tmp/tmpz0okwpf6.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var largest = 0;\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > largest) {\n                largest = list1[i];\n            }\n        }\n    }\n    return largest;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpr5n8ac9m.js:16:12)\n    at Object.<anonymous> (/tmp/tmpr5n8ac9m.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let max_neg = list1[0];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0 && list1[i] > max_neg) {\n            max_neg = list1[i];\n        }\n    }\n    return max_neg;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmptq1_94pz.js:14:12)\n    at Object.<anonymous> (/tmp/tmptq1_94pz.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = list1.filter(function (num) {\n        return num < 0;\n    });\n    if (neg_list.length == 0) {\n        return 0;\n    }\n    else {\n        let max_neg: number = Math.max(...neg_list);\n        return max_neg;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp3ls15s_u.js:17:12)\n    at Object.<anonymous> (/tmp/tmp3ls15s_u.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    let max = neg_list[0];\n    for (let i = 0; i < neg_list.length; i++) {\n        if (neg_list[i] > max) {\n            max = neg_list[i];\n        }\n    }\n    return max;\n}\nconsole.log(largest_neg([1, 2, -3, -4, -5, -6, -7, -8, -9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123088,
      "stdout": "-3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp1jhr987j.js:21:12)\n    at Object.<anonymous> (/tmp/tmp1jhr987j.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    let max = neg_list[0];\n    for (let i = 0; i < neg_list.length; i++) {\n        if (neg_list[i] > max) {\n            max = neg_list[i];\n        }\n    }\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123082,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpn43leejf.js:20:12)\n    at Object.<anonymous> (/tmp/tmpn43leejf.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    neg_list.sort();\n    return neg_list[0];\n}\n\nconsole.log(largest_neg([-2, -3, -4, -5, -6, -7, -8, -9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123088,
      "stdout": "-10\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp0o67f2fy.js:16:12)\n    at Object.<anonymous> (/tmp/tmp0o67f2fy.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let largest_neg = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > largest_neg) {\n                largest_neg = list1[i];\n            }\n        }\n    }\n    return largest_neg;\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123088,
      "stdout": "0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpjad_c6gt.js:17:12)\n    at Object.<anonymous> (/tmp/tmpjad_c6gt.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var neg_list: number[] = [];\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    if (neg_list.length == 0) {\n        return 0;\n    }\n    else {\n        var max = neg_list[0];\n        for (var i = 1; i < neg_list.length; i++) {\n            if (neg_list[i] > max) {\n                max = neg_list[i];\n            }\n        }\n        return max;\n    }\n}\nvar list1 = [23, 89, 6, 29, 56, 45, 77, 32];\nconsole.log(\"The largest negative number is \" + largest_neg(list1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123088,
      "stdout": "The largest negative number is 0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmprt5qge0a.js:27:12)\n    at Object.<anonymous> (/tmp/tmprt5qge0a.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    let max_neg = neg_list[0];\n    for (let i = 0; i < neg_list.length; i++) {\n        if (neg_list[i] > max_neg) {\n            max_neg = neg_list[i];\n        }\n    }\n    return max_neg;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1665517349,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpwyqapz95.js:20:12)\n    at Object.<anonymous> (/tmp/tmpwyqapz95.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let largest_neg: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > largest_neg) {\n                largest_neg = list1[i];\n            }\n        }\n    }\n    return largest_neg;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1665517349,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp2cp855dc.js:16:12)\n    at Object.<anonymous> (/tmp/tmp2cp855dc.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    neg_list.sort();\n    return neg_list[0];\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123088,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp3p5rncka.js:16:12)\n    at Object.<anonymous> (/tmp/tmp3p5rncka.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = list1.filter(function (num) {\n        return num < 0;\n    });\n    let max_neg: number = Math.max(...neg_list);\n    return max_neg;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1665517349,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp3ztsosax.js:12:12)\n    at Object.<anonymous> (/tmp/tmp3ztsosax.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    if (neg_list.length == 0) {\n        return 0;\n    }\n    else {\n        var largest = neg_list[0];\n        for (let i = 1; i < neg_list.length; i++) {\n            if (neg_list[i] > largest) {\n                largest = neg_list[i];\n            }\n        }\n        return largest;\n    }\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123088,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpv9b1c1bf.js:26:12)\n    at Object.<anonymous> (/tmp/tmpv9b1c1bf.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let largest_neg_num: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > largest_neg_num) {\n                largest_neg_num = list1[i];\n            }\n        }\n    }\n    return largest_neg_num;\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123088,
      "stdout": "0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpk67e15b2.js:17:12)\n    at Object.<anonymous> (/tmp/tmpk67e15b2.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let largest = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > largest) {\n                largest = list1[i];\n            }\n        }\n    }\n    return largest;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp1oqf3sul.js:16:12)\n    at Object.<anonymous> (/tmp/tmp1oqf3sul.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    let max = neg_list[0];\n    for (let i = 0; i < neg_list.length; i++) {\n        if (neg_list[i] > max) {\n            max = neg_list[i];\n        }\n    }\n    return max;\n}\nconsole.log(largest_neg([1, 2, 3, -1, -2, -3, -4, -5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123088,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpp71tejwe.js:21:12)\n    at Object.<anonymous> (/tmp/tmpp71tejwe.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let largest_neg: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > largest_neg) {\n                largest_neg = list1[i];\n            }\n        }\n    }\n    return largest_neg;\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123088,
      "stdout": "0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpn2xopbjp.js:17:12)\n    at Object.<anonymous> (/tmp/tmpn2xopbjp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var max: number = list1[0];\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0 && list1[i] > max) {\n            max = list1[i];\n        }\n    }\n    return max;\n}\nvar list1: number[] = [-1, -2, -3, -4, -5, -6, -7, -8, -9, -10];\nconsole.log(\"Largest negative number is \" + largest_neg(list1));\n\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123088,
      "stdout": "Largest negative number is -1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp5wpy8kyt.js:16:12)\n    at Object.<anonymous> (/tmp/tmp5wpy8kyt.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    neg_list.sort();\n    return neg_list[0];\n}\n\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123083,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp0hs0zpvr.js:16:12)\n    at Object.<anonymous> (/tmp/tmp0hs0zpvr.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var neg_list: number[] = [];\n    var max_neg: number = 0;\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    for (var j = 0; j < neg_list.length; j++) {\n        if (neg_list[j] > max_neg) {\n            max_neg = neg_list[j];\n        }\n    }\n    return max_neg;\n}\nconsole.log(largest_neg([23, -89, 90, -6, -7]));\nconsole.log(largest_neg([45, -9, 15, -39, 8, 0]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123088,
      "stdout": "0\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp46zdxf8e.js:22:12)\n    at Object.<anonymous> (/tmp/tmp46zdxf8e.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = list1.filter(num => num < 0);\n    return Math.max(...neg_list);\n}\n\nconsole.log(largest_neg([-1, -2, -3, -4, -5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123088,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp11cx3eum.js:10:12)\n    at Object.<anonymous> (/tmp/tmp11cx3eum.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var neg_list: number[] = [];\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    var max = neg_list[0];\n    for (var i = 0; i < neg_list.length; i++) {\n        if (neg_list[i] > max) {\n            max = neg_list[i];\n        }\n    }\n    return max;\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123088,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpsxm6xzit.js:21:12)\n    at Object.<anonymous> (/tmp/tmpsxm6xzit.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    neg_list.sort();\n    return neg_list[0];\n}\n\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123083,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp0hs0zpvr.js:16:12)\n    at Object.<anonymous> (/tmp/tmp0hs0zpvr.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    return Math.min(...neg_list);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let largest_neg: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > largest_neg) {\n                largest_neg = list1[i];\n            }\n        }\n    }\n    return largest_neg;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1665517349,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp2cp855dc.js:16:12)\n    at Object.<anonymous> (/tmp/tmp2cp855dc.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = list1.filter(function (num) {\n        return num < 0;\n    });\n    return Math.max(...neg_list);\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123088,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpdy1lr10k.js:12:12)\n    at Object.<anonymous> (/tmp/tmpdy1lr10k.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var largest = 0;\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > largest) {\n                largest = list1[i];\n            }\n        }\n    }\n    return largest;\n}\nvar list1 = [23, 89, 6, 29, 56, 45, 77, 32];\nconsole.log(\"The largest negative number is: \" + largest_neg(list1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123089,
      "stdout": "The largest negative number is: 0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpzvj0wrsd.js:18:12)\n    at Object.<anonymous> (/tmp/tmpzvj0wrsd.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    return Math.max(...neg_list);\n}\n\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpvrnlg6gt.js:15:12)\n    at Object.<anonymous> (/tmp/tmpvrnlg6gt.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    let max = neg_list[0];\n    for (let i = 0; i < neg_list.length; i++) {\n        if (neg_list[i] > max) {\n            max = neg_list[i];\n        }\n    }\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123082,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpn43leejf.js:20:12)\n    at Object.<anonymous> (/tmp/tmpn43leejf.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    if (neg_list.length == 0) {\n        return 0;\n    }\n    else {\n        return Math.max(...neg_list);\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123089,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp2bznow3l.js:19:12)\n    at Object.<anonymous> (/tmp/tmp2bznow3l.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var max: number = 0;\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > max) {\n                max = list1[i];\n            }\n        }\n    }\n    return max;\n}\nvar list1: number[] = [23, 89, 6, 29, 56, 45, 77, 32];\nconsole.log(\"The largest negative number is : \" + largest_neg(list1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123089,
      "stdout": "The largest negative number is : 0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpcgrzw3dn.js:18:12)\n    at Object.<anonymous> (/tmp/tmpcgrzw3dn.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = list1.filter(function (num) {\n        return num < 0;\n    });\n    let largest_neg = neg_list[0];\n    for (let i = 1; i < neg_list.length; i++) {\n        if (neg_list[i] > largest_neg) {\n            largest_neg = neg_list[i];\n        }\n    }\n    return largest_neg;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123090,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpxe1gcmy9.js:17:12)\n    at Object.<anonymous> (/tmp/tmpxe1gcmy9.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    if (neg_list.length == 0) {\n        return 0;\n    }\n    else {\n        let max = neg_list[0];\n        for (let i = 0; i < neg_list.length; i++) {\n            if (neg_list[i] > max) {\n                max = neg_list[i];\n            }\n        }\n        return max;\n    }\n}\nconsole.log(largest_neg([1, 2, -3, 4, -5, 6, -7, 8, -9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123090,
      "stdout": "-3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpttby4jq6.js:26:12)\n    at Object.<anonymous> (/tmp/tmpttby4jq6.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let largest_neg: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > largest_neg) {\n                largest_neg = list1[i];\n            }\n        }\n    }\n    return largest_neg;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1665517349,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp2cp855dc.js:16:12)\n    at Object.<anonymous> (/tmp/tmp2cp855dc.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var largest = 0;\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > largest) {\n                largest = list1[i];\n            }\n        }\n    }\n    return largest;\n}\nvar list1 = [23, 89, 6, 29, 56, 45, 77, 32];\nconsole.log(\"Largest negative number is : \" + largest_neg(list1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "Largest negative number is : 0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpefg5iqt_.js:18:12)\n    at Object.<anonymous> (/tmp/tmpefg5iqt_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let largest_neg = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > largest_neg) {\n                largest_neg = list1[i];\n            }\n        }\n    }\n    return largest_neg;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpewjz8ibk.js:16:12)\n    at Object.<anonymous> (/tmp/tmpewjz8ibk.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    if (neg_list.length == 0) {\n        return 0;\n    }\n    else {\n        let max = neg_list[0];\n        for (let i = 0; i < neg_list.length; i++) {\n            if (neg_list[i] > max) {\n                max = neg_list[i];\n            }\n        }\n        return max;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123082,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpkesi6x2w.js:25:12)\n    at Object.<anonymous> (/tmp/tmpkesi6x2w.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    neg_list.sort();\n    return neg_list[0];\n}\nconsole.log(\"Largest negative number is: \" + largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "Largest negative number is: -1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpgfpvooer.js:16:12)\n    at Object.<anonymous> (/tmp/tmpgfpvooer.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    if (neg_list.length == 0) {\n        return 0;\n    }\n    else {\n        let max: number = neg_list[0];\n        for (let i = 0; i < neg_list.length; i++) {\n            if (neg_list[i] > max) {\n                max = neg_list[i];\n            }\n        }\n        return max;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123090,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpadtkhnkb.js:25:12)\n    at Object.<anonymous> (/tmp/tmpadtkhnkb.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let largest_neg: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > largest_neg) {\n                largest_neg = list1[i];\n            }\n        }\n    }\n    return largest_neg;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1665517349,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp2cp855dc.js:16:12)\n    at Object.<anonymous> (/tmp/tmp2cp855dc.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    let max = neg_list[0];\n    for (let i = 0; i < neg_list.length; i++) {\n        if (neg_list[i] > max) {\n            max = neg_list[i];\n        }\n    }\n    return max;\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpy8163ol8.js:21:12)\n    at Object.<anonymous> (/tmp/tmpy8163ol8.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    neg_list.sort();\n    return neg_list[0];\n}\n\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123083,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp0hs0zpvr.js:16:12)\n    at Object.<anonymous> (/tmp/tmp0hs0zpvr.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    if (neg_list.length == 0) {\n        return 0;\n    }\n    else {\n        let max = neg_list[0];\n        for (let i = 0; i < neg_list.length; i++) {\n            if (neg_list[i] > max) {\n                max = neg_list[i];\n            }\n        }\n        return max;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123082,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpkesi6x2w.js:25:12)\n    at Object.<anonymous> (/tmp/tmpkesi6x2w.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var neg_list: number[] = [];\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    var max = neg_list[0];\n    for (var i = 0; i < neg_list.length; i++) {\n        if (neg_list[i] > max) {\n            max = neg_list[i];\n        }\n    }\n    return max;\n}\nvar list1 = [23, -89, 45, -9, 0, -7, 12, 56, -45, -23, 78, -89, 90];\nconsole.log(\"Largest negative number is: \" + largest_neg(list1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123090,
      "stdout": "Largest negative number is: -7\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp6xyafr_s.js:22:12)\n    at Object.<anonymous> (/tmp/tmp6xyafr_s.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let large_neg: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > large_neg) {\n                large_neg = list1[i];\n            }\n        }\n    }\n    return large_neg;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1665517349,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp4rpxixek.js:16:12)\n    at Object.<anonymous> (/tmp/tmp4rpxixek.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    if (neg_list.length == 0) {\n        return 0;\n    }\n    else {\n        let max = neg_list[0];\n        for (let i = 0; i < neg_list.length; i++) {\n            if (neg_list[i] > max) {\n                max = neg_list[i];\n            }\n        }\n        return max;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123082,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpkesi6x2w.js:25:12)\n    at Object.<anonymous> (/tmp/tmpkesi6x2w.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var max_neg = 0;\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > max_neg) {\n                max_neg = list1[i];\n            }\n        }\n    }\n    return max_neg;\n}\n\nvar list1 = [23, -90, -45, -19, -67, -32];\nconsole.log(\"Largest negative number is: \" + largest_neg(list1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123090,
      "stdout": "Largest negative number is: 0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpl4yjm3nv.js:18:12)\n    at Object.<anonymous> (/tmp/tmpl4yjm3nv.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var max: number = 0;\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > max) {\n                max = list1[i];\n            }\n        }\n    }\n    return max;\n}\nvar list1: number[] = [23, 89, 6, 29, 56, 45, 77, 32];\nconsole.log(\"Largest negative number is : \" + largest_neg(list1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123085,
      "stdout": "Largest negative number is : 0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpy4n1sx3g.js:18:12)\n    at Object.<anonymous> (/tmp/tmpy4n1sx3g.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    if (neg_list.length == 0) {\n        return 0;\n    }\n    else {\n        var max = neg_list[0];\n        for (let i = 0; i < neg_list.length; i++) {\n            if (neg_list[i] > max) {\n                max = neg_list[i];\n            }\n        }\n        return max;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123080,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpahsykw2w.js:25:12)\n    at Object.<anonymous> (/tmp/tmpahsykw2w.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var max = 0;\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > max) {\n                max = list1[i];\n            }\n        }\n    }\n    return max;\n}\nvar list1 = [23, 89, 6, 29, 56, 45, 77, 32];\nconsole.log(\"The largest negative number is: \" + largest_neg(list1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123090,
      "stdout": "The largest negative number is: 0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp4vu_y4wx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp4vu_y4wx.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list = list1.filter(function (num) {\n        return num < 0;\n    });\n    let max_neg = Math.max.apply(null, neg_list);\n    return max_neg;\n}\n\nlet list1 = [23, -90, 67, -9, 0, -2, 4, -56, 7, 12, -5];\nconsole.log(\"Largest negative number is: \" + largest_neg(list1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123090,
      "stdout": "Largest negative number is: -2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpdu3ii8um.js:14:12)\n    at Object.<anonymous> (/tmp/tmpdu3ii8um.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    var i: number;\n    var max: number = list1[0];\n    for (i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > max) {\n                max = list1[i];\n            }\n        }\n    }\n    return max;\n}\nvar list1 = [23, 89, 6, 29, 56, 45, 77, 32];\nvar list2 = [2, -7, -9, -12, -5, -2];\nvar list3 = [12, 14, -95, 3];\nconsole.log(\"Largest negative number is : \" + largest_neg(list1));\nconsole.log(\"Largest negative number is : \" + largest_neg(list2));\nconsole.log(\"Largest negative number is : \" + largest_neg(list3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123090,
      "stdout": "Largest negative number is : 23\nLargest negative number is : 2\nLargest negative number is : 12\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpqjxfacx1.js:23:12)\n    at Object.<anonymous> (/tmp/tmpqjxfacx1.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    let max_neg = neg_list[0];\n    for (let i = 0; i < neg_list.length; i++) {\n        if (neg_list[i] > max_neg) {\n            max_neg = neg_list[i];\n        }\n    }\n    return max_neg;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1665517349,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpwyqapz95.js:20:12)\n    at Object.<anonymous> (/tmp/tmpwyqapz95.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    if (neg_list.length == 0) {\n        return 0;\n    }\n    else {\n        let max = neg_list[0];\n        for (let i = 0; i < neg_list.length; i++) {\n            if (neg_list[i] > max) {\n                max = neg_list[i];\n            }\n        }\n        return max;\n    }\n}\nconsole.log(largest_neg([1, 2, -3, -4, -5, 6, 7]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123090,
      "stdout": "-3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmp0iixzv47.js:26:12)\n    at Object.<anonymous> (/tmp/tmp0iixzv47.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the largest negative number from the given array.\nfunction largest_neg(list1: number[]): number {\n    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    if (neg_list.length == 0) {\n        return 0;\n    }\n    else {\n        let max = neg_list[0];\n        for (let i = 0; i < neg_list.length; i++) {\n            if (neg_list[i] > max) {\n                max = neg_list[i];\n            }\n        }\n        return max;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
      "timestamp": 1666123082,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n-6\n    at test (/tmp/tmpkesi6x2w.js:25:12)\n    at Object.<anonymous> (/tmp/tmpkesi6x2w.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: -6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    }
  ]
}
{
  "name": "mbpp_166_find_even_pair",
  "language": "ts",
  "prompt": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_166_find_even_pair.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 == 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122758,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 == 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122758,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let result = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        result++;\n      }\n    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122758,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 == 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122758,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let even_pairs = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        even_pairs++;\n      }\n    }\n  }\n  return even_pairs;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122759,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let even_pairs = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        even_pairs++;\n      }\n    }\n  }\n  return even_pairs;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122759,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 == 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122758,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 == 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122758,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    let even_count = 0;\n    let odd_count = 0;\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] % 2 === 0) {\n            even_count++;\n        } else {\n            odd_count++;\n        }\n    }\n    count = even_count * odd_count;\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122758,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n6\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmpx80t99_e.js:20:12)\n    at Object.<anonymous> (/tmp/tmpx80t99_e.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let even_pairs = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                even_pairs++;\n            }\n        }\n    }\n    return even_pairs;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122758,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 == 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122758,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let pairs = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        pairs++;\n      }\n    }\n  }\n  return pairs;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122758,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 == 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122758,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let even_pairs = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 == 0) {\n                even_pairs++;\n            }\n        }\n    }\n    return even_pairs;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122759,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let result = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                result++;\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122758,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let even = 0;\n    let odd = 0;\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n        }\n    }\n    return even * odd;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122758,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n6\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmpselc7ggn.js:18:12)\n    at Object.<anonymous> (/tmp/tmpselc7ggn.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 == 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122758,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let even_pairs = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 == 0) {\n                even_pairs++;\n            }\n        }\n    }\n    return even_pairs;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122759,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 == 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122758,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 == 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122758,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let even_count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                even_count++;\n            }\n        }\n    }\n    return even_count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122758,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 == 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122758,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let even_count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                even_count++;\n            }\n        }\n    }\n    return even_count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122758,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 == 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122758,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
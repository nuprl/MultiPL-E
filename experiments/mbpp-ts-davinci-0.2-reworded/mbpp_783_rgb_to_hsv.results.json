{
  "name": "mbpp_783_rgb_to_hsv",
  "language": "ts",
  "prompt": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_783_rgb_to_hsv.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let r1: number, g1: number, b1: number;\n    let cmax: number, cmin: number, diff: number;\n    let r2: number, g2: number, b2: number;\n\n    r1 = r / 255;\n    g1 = g / 255;\n    b1 = b / 255;\n\n    cmax = Math.max(r1, g1, b1);\n    cmin = Math.min(r1, g1, b1);\n    diff = cmax - cmin;\n\n    if (diff == 0) {\n        h = 0;\n    } else if (cmax == r1) {\n        h = 60 * (((g1 - b1) / diff) % 6);\n    } else if (cmax == g1) {\n        h = 60 * (((b1 - r1) / diff) + 2);\n    } else {\n        h = 60 * (((r1 - g1) / diff) + 4);\n    }\n\n    if (cmax == 0) {\n        s = 0;\n    } else {\n        s = (diff / cmax) * 100;\n    }\n\n    v = cmax * 100;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmplsjiydce.js:41:12)\n    at Object.<anonymous> (/tmp/tmplsjiydce.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let r1: number, g1: number, b1: number;\n    let cmax: number, cmin: number, diff: number;\n    let rr: number, gg: number, bb: number;\n\n    r1 = r / 255;\n    g1 = g / 255;\n    b1 = b / 255;\n\n    cmax = Math.max(r1, g1, b1);\n    cmin = Math.min(r1, g1, b1);\n    diff = cmax - cmin;\n    v = cmax;\n\n    if (diff == 0) {\n        h = 0;\n        s = 0;\n    } else {\n        s = diff / cmax;\n        rr = ((cmax - r1) / 6) / diff;\n        gg = ((cmax - g1) / 6) / diff;\n        bb = ((cmax - b1) / 6) / diff;\n\n        if (r1 == cmax) {\n            h = bb - gg;\n        } else if (g1 == cmax) {\n            h = (1 / 3) + rr - bb;\n        } else if (b1 == cmax) {\n            h = (2 / 3) + gg - rr;\n        }\n\n        if (h < 0) {\n            h = h + 1;\n        } else if (h > 1) {\n            h = h - 1;\n        }\n    }\n\n    return {\n        h: Math.round(h * 360),\n        s: Math.round(s * 100),\n        v: Math.round(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpmhtxnvrv.js:48:12)\n    at Object.<anonymous> (/tmp/tmpmhtxnvrv.js:52:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    var rr, gg, bb,\n        r = r / 255,\n        g = g / 255,\n        b = b / 255,\n        h, s,\n        v = Math.max(r, g, b),\n        diff = v - Math.min(r, g, b),\n        diffc = function(c: number) {\n            return (v - c) / 6 / diff + 1 / 2;\n        };\n\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(r);\n        gg = diffc(g);\n        bb = diffc(b);\n\n        if (r === v) {\n            h = bb - gg;\n        } else if (g === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (b === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: Math.round(s * 100),\n        v: Math.round(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpacymkuiy.js:39:12)\n    at Object.<anonymous> (/tmp/tmpacymkuiy.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let max = Math.max(r, g, b);\n    let min = Math.min(r, g, b);\n    let diff = max - min;\n    if (max == min) {\n        h = 0;\n    } else if (max == r) {\n        h = 60 * (((g - b) / diff) % 6);\n    } else if (max == g) {\n        h = 60 * (((b - r) / diff) + 2);\n    } else if (max == b) {\n        h = 60 * (((r - g) / diff) + 4);\n    }\n    if (max == 0) {\n        s = 0;\n    } else {\n        s = 1 - (min / max);\n    }\n    v = max;\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 255\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp72k8869j.js:35:12)\n    at Object.<anonymous> (/tmp/tmp72k8869j.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 255 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    let h, s, v;\n    let min = Math.min(r, g, b);\n    let max = Math.max(r, g, b);\n    let delta = max - min;\n    v = max;\n    if (max == 0) {\n        s = 0;\n    } else {\n        s = delta / max;\n    }\n    if (delta == 0) {\n        h = 0;\n    } else if (r == max) {\n        h = (g - b) / delta;\n    } else if (g == max) {\n        h = 2 + (b - r) / delta;\n    } else if (b == max) {\n        h = 4 + (r - g) / delta;\n    }\n    h *= 60;\n    if (h < 0) {\n        h += 360;\n    }\n    h = Math.round(h);\n    s = Math.round(s * 100);\n    v = Math.round(v * 100);\n    return {\n        hue: h,\n        saturation: s,\n        value: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  hue: 0,\n  saturation: 0,\n  value: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpwz55ab1n.js:45:12)\n    at Object.<anonymous> (/tmp/tmpwz55ab1n.js:49:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { hue: 0, saturation: 0, value: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r1 = r / 255;\n    let g1 = g / 255;\n    let b1 = b / 255;\n    let cmax = Math.max(r1, g1, b1);\n    let cmin = Math.min(r1, g1, b1);\n    let delta = cmax - cmin;\n    let h = 0;\n    let s = 0;\n    let v = 0;\n    if (delta == 0) {\n        h = 0;\n    } else if (cmax == r1) {\n        h = 60 * (((g1 - b1) / delta) % 6);\n    } else if (cmax == g1) {\n        h = 60 * (((b1 - r1) / delta) + 2);\n    } else if (cmax == b1) {\n        h = 60 * (((r1 - g1) / delta) + 4);\n    }\n    if (cmax == 0) {\n        s = 0;\n    } else {\n        s = delta / cmax;\n    }\n    v = cmax;\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpdn3p061z.js:40:12)\n    at Object.<anonymous> (/tmp/tmpdn3p061z.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let r_prime: number = r / 255;\n    let g_prime: number = g / 255;\n    let b_prime: number = b / 255;\n    let c_max: number = Math.max(r_prime, g_prime, b_prime);\n    let c_min: number = Math.min(r_prime, g_prime, b_prime);\n    let delta: number = c_max - c_min;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else if (c_max == b_prime) {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n\n    v = c_max;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpfzzx12bd.js:38:12)\n    at Object.<anonymous> (/tmp/tmpfzzx12bd.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    let max = Math.max(r, g, b);\n    let min = Math.min(r, g, b);\n    let h, s, v = max;\n    let d = max - min;\n    s = max == 0 ? 0 : d / max;\n    if (max == min) {\n        h = 0; // achromatic\n    } else {\n        switch (max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n        h /= 6;\n    }\n    return [h, s, v];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmprg67t2gp.js:33:12)\n    at Object.<anonymous> (/tmp/tmprg67t2gp.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0, 1 ],\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let max = Math.max(r, g, b);\n    let min = Math.min(r, g, b);\n    let delta = max - min;\n\n    if (max == 0) {\n        s = 0;\n    } else {\n        s = delta / max;\n    }\n\n    if (max == min) {\n        h = 0;\n    } else if (max == r) {\n        h = 60 * (((g - b) / delta) % 6);\n    } else if (max == g) {\n        h = 60 * (((b - r) / delta) + 2);\n    } else if (max == b) {\n        h = 60 * (((r - g) / delta) + 4);\n    }\n\n    v = max;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 255\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpbq8kqr4c.js:35:12)\n    at Object.<anonymous> (/tmp/tmpbq8kqr4c.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 255 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        }else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpkeurn5zb.js:44:12)\n    at Object.<anonymous> (/tmp/tmpkeurn5zb.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    var rr, gg, bb,\n        r = r / 255,\n        g = g / 255,\n        b = b / 255,\n        h, s,\n        v = Math.max(r, g, b),\n        diff = v - Math.min(r, g, b),\n        diffc = function (c: number) {\n            return (v - c) / 6 / diff + 1 / 2;\n        };\n\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(r);\n        gg = diffc(g);\n        bb = diffc(b);\n\n        if (r === v) {\n            h = bb - gg;\n        } else if (g === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (b === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: Math.round(s * 100),\n        v: Math.round(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp5lvdgx64.js:39:12)\n    at Object.<anonymous> (/tmp/tmp5lvdgx64.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    let h: number, s: number, v: number;\n    let min: number = Math.min(r, g, b);\n    let max: number = Math.max(r, g, b);\n    let delta: number = max - min;\n    v = max;\n    if (max === 0) {\n        s = 0;\n    } else {\n        s = delta / max;\n    }\n    if (delta === 0) {\n        h = 0;\n    } else if (r === max) {\n        h = (g - b) / delta;\n    } else if (g === max) {\n        h = 2 + (b - r) / delta;\n    } else {\n        h = 4 + (r - g) / delta;\n    }\n    h *= 60;\n    if (h < 0) {\n        h += 360;\n    }\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpp4mhexh7.js:42:12)\n    at Object.<anonymous> (/tmp/tmpp4mhexh7.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rprime = r / 255;\n    let gprime = g / 255;\n    let bprime = b / 255;\n    let cmax = Math.max(rprime, gprime, bprime);\n    let cmin = Math.min(rprime, gprime, bprime);\n    let delta = cmax - cmin;\n    let h = 0;\n    let s = 0;\n    let v = 0;\n    if (delta == 0) {\n        h = 0;\n    }\n    else if (cmax == rprime) {\n        h = 60 * (((gprime - bprime) / delta) % 6);\n    }\n    else if (cmax == gprime) {\n        h = 60 * (((bprime - rprime) / delta) + 2);\n    }\n    else if (cmax == bprime) {\n        h = 60 * (((rprime - gprime) / delta) + 4);\n    }\n    if (cmax == 0) {\n        s = 0;\n    }\n    else {\n        s = (delta / cmax) * 100;\n    }\n    v = cmax * 100;\n    return { h: h, s: s, v: v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp3gv6xhv5.js:36:12)\n    at Object.<anonymous> (/tmp/tmp3gv6xhv5.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let r1: number, g1: number, b1: number;\n    let cmax: number, cmin: number, diff: number;\n    r1 = r / 255;\n    g1 = g / 255;\n    b1 = b / 255;\n    cmax = Math.max(r1, g1, b1);\n    cmin = Math.min(r1, g1, b1);\n    diff = cmax - cmin;\n    if (cmax === cmin) {\n        h = 0;\n    } else if (cmax === r1) {\n        h = 60 * (((g1 - b1) / diff) % 6);\n    } else if (cmax === g1) {\n        h = 60 * (((b1 - r1) / diff) + 2);\n    } else if (cmax === b1) {\n        h = 60 * (((r1 - g1) / diff) + 4);\n    }\n    if (cmax === 0) {\n        s = 0;\n    } else {\n        s = (diff / cmax) * 100;\n    }\n    v = cmax * 100;\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp5m9nzc8w.js:40:12)\n    at Object.<anonymous> (/tmp/tmp5m9nzc8w.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h = 0;\n    let s = 0;\n    let v = 0;\n    let min = Math.min(r, g, b);\n    let max = Math.max(r, g, b);\n    let delta = max - min;\n    v = max;\n    if (max != 0) {\n        s = delta / max;\n    } else {\n        s = 0;\n        h = -1;\n        return {h, s, v};\n    }\n    if (r == max) {\n        h = (g - b) / delta;\n    } else if (g == max) {\n        h = 2 + (b - r) / delta;\n    } else {\n        h = 4 + (r - g) / delta;\n    }\n    h *= 60;\n    if (h < 0) {\n        h += 360;\n    }\n    return {h, s, v};\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: NaN,\n  s: 0,\n  v: 255\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpky4adkks.js:36:12)\n    at Object.<anonymous> (/tmp/tmpky4adkks.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: NaN, s: 0, v: 255 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r_prime = r / 255;\n    let g_prime = g / 255;\n    let b_prime = b / 255;\n\n    let c_max = Math.max(r_prime, g_prime, b_prime);\n    let c_min = Math.min(r_prime, g_prime, b_prime);\n    let delta = c_max - c_min;\n\n    let h: number;\n    let s: number;\n    let v: number;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else if (c_max == b_prime) {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n\n    v = c_max;\n\n    return { h, s, v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpyq5glxga.js:36:12)\n    at Object.<anonymous> (/tmp/tmpyq5glxga.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r1 = r / 255;\n    let g1 = g / 255;\n    let b1 = b / 255;\n\n    let cmax = Math.max(r1, g1, b1);\n    let cmin = Math.min(r1, g1, b1);\n    let delta = cmax - cmin;\n\n    let h = 0;\n    let s = 0;\n    let v = 0;\n\n    if (delta == 0) {\n        h = 0;\n    }\n    else if (cmax == r1) {\n        h = 60 * (((g1 - b1) / delta) % 6);\n    }\n    else if (cmax == g1) {\n        h = 60 * (((b1 - r1) / delta) + 2);\n    }\n    else if (cmax == b1) {\n        h = 60 * (((r1 - g1) / delta) + 4);\n    }\n\n    if (cmax == 0) {\n        s = 0;\n    }\n    else {\n        s = (delta / cmax) * 100;\n    }\n\n    v = cmax * 100;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpirglqx8s.js:40:12)\n    at Object.<anonymous> (/tmp/tmpirglqx8s.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    var computedH = 0;\n    var computedS = 0;\n    var computedV = 0;\n\n    //remove spaces from input RGB values, convert to int\n    var r = parseInt(('' + r).replace(/\\s/g, ''), 10);\n    var g = parseInt(('' + g).replace(/\\s/g, ''), 10);\n    var b = parseInt(('' + b).replace(/\\s/g, ''), 10);\n\n    if (r == null || g == null || b == null ||\n        isNaN(r) || isNaN(g) || isNaN(b)) {\n        alert('Please enter numeric RGB values!');\n        return;\n    }\n    if (r < 0 || g < 0 || b < 0 || r > 255 || g > 255 || b > 255) {\n        alert('RGB values must be in the range 0 to 255.');\n        return;\n    }\n\n    r = r / 255;\n    g = g / 255;\n    b = b / 255;\n    var minRGB = Math.min(r, Math.min(g, b));\n    var maxRGB = Math.max(r, Math.max(g, b));\n\n    // Black-gray-white\n    if (minRGB == maxRGB) {\n        computedV = minRGB;\n        return [0, 0, computedV];\n    }\n\n    // Colors other than black-gray-white:\n    var d = (r == minRGB) ? g - b : ((b == minRGB) ? r - g : b - r);\n    var h = (r == minRGB) ? 3 : ((b == minRGB) ? 1 : 5);\n    computedH = 60 * (h - d / (maxRGB - minRGB));\n    computedS = (maxRGB - minRGB) / maxRGB;\n    computedV = maxRGB;\n    return [computedH, computedS, computedV];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp369_dlqv.js:40:12)\n    at Object.<anonymous> (/tmp/tmp369_dlqv.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0, 1 ],\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let r_prime: number = r / 255;\n    let g_prime: number = g / 255;\n    let b_prime: number = b / 255;\n    let c_max: number = Math.max(r_prime, g_prime, b_prime);\n    let c_min: number = Math.min(r_prime, g_prime, b_prime);\n    let delta: number = c_max - c_min;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else if (c_max == b_prime) {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n\n    v = c_max;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpfzzx12bd.js:38:12)\n    at Object.<anonymous> (/tmp/tmpfzzx12bd.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let r_prime: number, g_prime: number, b_prime: number;\n    let c_max: number, c_min: number;\n    let delta: number;\n\n    r_prime = r / 255;\n    g_prime = g / 255;\n    b_prime = b / 255;\n\n    c_max = Math.max(r_prime, g_prime, b_prime);\n    c_min = Math.min(r_prime, g_prime, b_prime);\n    delta = c_max - c_min;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n\n    v = c_max;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpn0ooev_c.js:41:12)\n    at Object.<anonymous> (/tmp/tmpn0ooev_c.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r1 = r / 255;\n    let g1 = g / 255;\n    let b1 = b / 255;\n\n    let cmax = Math.max(r1, g1, b1);\n    let cmin = Math.min(r1, g1, b1);\n    let delta = cmax - cmin;\n\n    let h = 0;\n    let s = 0;\n    let v = 0;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (cmax == r1) {\n        h = 60 * (((g1 - b1) / delta) % 6);\n    } else if (cmax == g1) {\n        h = 60 * (((b1 - r1) / delta) + 2);\n    } else if (cmax == b1) {\n        h = 60 * (((r1 - g1) / delta) + 4);\n    }\n\n    if (cmax == 0) {\n        s = 0;\n    } else {\n        s = delta / cmax;\n    }\n\n    v = cmax;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmptui97hfv.js:40:12)\n    at Object.<anonymous> (/tmp/tmptui97hfv.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let max: number = Math.max(r, g, b);\n    let min: number = Math.min(r, g, b);\n    let delta: number = max - min;\n    if (max == 0) {\n        s = 0;\n    } else {\n        s = delta / max;\n    }\n    if (max == min) {\n        h = 0;\n    } else if (max == r) {\n        h = 60 * (((g - b) / delta) % 6);\n    } else if (max == g) {\n        h = 60 * (((b - r) / delta) + 2);\n    } else if (max == b) {\n        h = 60 * (((r - g) / delta) + 4);\n    }\n    v = max;\n    return { h: h, s: s, v: v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 255\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpojbfgu9j.js:31:12)\n    at Object.<anonymous> (/tmp/tmpojbfgu9j.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 255 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r1 = r / 255;\n    let g1 = g / 255;\n    let b1 = b / 255;\n\n    let cmax = Math.max(r1, g1, b1);\n    let cmin = Math.min(r1, g1, b1);\n    let delta = cmax - cmin;\n    let h = 0;\n    let s = 0;\n    let v = 0;\n\n    if (delta == 0) {\n        h = 0;\n    }\n    else if (cmax == r1) {\n        h = 60 * (((g1 - b1) / delta) % 6);\n    }\n    else if (cmax == g1) {\n        h = 60 * (((b1 - r1) / delta) + 2);\n    }\n    else if (cmax == b1) {\n        h = 60 * (((r1 - g1) / delta) + 4);\n    }\n\n    if (cmax == 0) {\n        s = 0;\n    }\n    else {\n        s = (delta / cmax) * 100;\n    }\n\n    v = cmax * 100;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmps91z9aj4.js:40:12)\n    at Object.<anonymous> (/tmp/tmps91z9aj4.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    r /= 255;\n    g /= 255;\n    b /= 255;\n\n    let max = Math.max(r, g, b);\n    let min = Math.min(r, g, b);\n\n    let h = 0;\n    let s = 0;\n    let v = max;\n\n    let d = max - min;\n    s = max == 0 ? 0 : d / max;\n\n    if (max == min) {\n        h = 0; // achromatic\n    } else {\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n        }\n        h /= 6;\n    }\n\n    return [h, s, v];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp_r76134_.js:35:12)\n    at Object.<anonymous> (/tmp/tmp_r76134_.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0, 1 ],\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rprime = r / 255;\n    let gprime = g / 255;\n    let bprime = b / 255;\n    let cmax = Math.max(rprime, gprime, bprime);\n    let cmin = Math.min(rprime, gprime, bprime);\n    let delta = cmax - cmin;\n    let h = 0;\n    let s = 0;\n    let v = 0;\n    if (delta == 0) {\n        h = 0;\n    }\n    else if (cmax == rprime) {\n        h = 60 * (((gprime - bprime) / delta) % 6);\n    }\n    else if (cmax == gprime) {\n        h = 60 * (((bprime - rprime) / delta) + 2);\n    }\n    else if (cmax == bprime) {\n        h = 60 * (((rprime - gprime) / delta) + 4);\n    }\n    if (cmax == 0) {\n        s = 0;\n    }\n    else {\n        s = (delta / cmax) * 100;\n    }\n    v = cmax * 100;\n    return { h: h, s: s, v: v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp3gv6xhv5.js:36:12)\n    at Object.<anonymous> (/tmp/tmp3gv6xhv5.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n  let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n  rabs = r / 255;\n  gabs = g / 255;\n  babs = b / 255;\n  v = Math.max(rabs, gabs, babs),\n    diff = v - Math.min(rabs, gabs, babs);\n  diffc = c => (v - c) / 6 / diff + 1 / 2;\n  percentRoundFn = num => Math.round(num * 100) / 100;\n  if (diff == 0) {\n    h = s = 0;\n  } else {\n    s = diff / v;\n    rr = diffc(rabs);\n    gg = diffc(gabs);\n    bb = diffc(babs);\n\n    if (rabs === v) {\n      h = bb - gg;\n    } else if (gabs === v) {\n      h = 1 / 3 + rr - bb;\n    } else if (babs === v) {\n      h = 2 / 3 + gg - rr;\n    }\n    if (h < 0) {\n      h += 1;\n    } else if (h > 1) {\n      h -= 1;\n    }\n  }\n  return {\n    h: Math.round(h * 360),\n    s: percentRoundFn(s * 100),\n    v: percentRoundFn(v * 100)\n  };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpndbbitv8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpndbbitv8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r_prime = r / 255;\n    let g_prime = g / 255;\n    let b_prime = b / 255;\n\n    let c_max = Math.max(r_prime, g_prime, b_prime);\n    let c_min = Math.min(r_prime, g_prime, b_prime);\n    let delta = c_max - c_min;\n\n    let h = 0;\n    let s = 0;\n    let v = c_max;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else if (c_max == b_prime) {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp0hns9l33.js:39:12)\n    at Object.<anonymous> (/tmp/tmp0hns9l33.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rprime = r / 255;\n    let gprime = g / 255;\n    let bprime = b / 255;\n\n    let cmax = Math.max(rprime, gprime, bprime);\n    let cmin = Math.min(rprime, gprime, bprime);\n    let delta = cmax - cmin;\n\n    let h = 0;\n    let s = 0;\n    let v = 0;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (cmax == rprime) {\n        h = 60 * (((gprime - bprime) / delta) % 6);\n    } else if (cmax == gprime) {\n        h = 60 * (((bprime - rprime) / delta) + 2);\n    } else if (cmax == bprime) {\n        h = 60 * (((rprime - gprime) / delta) + 4);\n    }\n\n    if (cmax == 0) {\n        s = 0;\n    } else {\n        s = (delta / cmax) * 100;\n    }\n\n    v = cmax * 100;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpp0ks0bwy.js:40:12)\n    at Object.<anonymous> (/tmp/tmpp0ks0bwy.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let r_prime: number, g_prime: number, b_prime: number;\n    let c_max: number, c_min: number, delta: number;\n\n    r_prime = r / 255;\n    g_prime = g / 255;\n    b_prime = b / 255;\n\n    c_max = Math.max(r_prime, g_prime, b_prime);\n    c_min = Math.min(r_prime, g_prime, b_prime);\n    delta = c_max - c_min;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n\n    v = c_max;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp6yi7i3kt.js:40:12)\n    at Object.<anonymous> (/tmp/tmp6yi7i3kt.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number = 0;\n    let s: number = 0;\n    let v: number = 0;\n    let min: number = 0;\n    let max: number = 0;\n    let delta: number = 0;\n\n    r /= 255;\n    g /= 255;\n    b /= 255;\n\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n\n    v = max;\n\n    delta = max - min;\n\n    if (max != 0) {\n        s = delta / max;\n    } else {\n        s = 0;\n        h = -1;\n        return { h, s, v };\n    }\n\n    if (r == max) {\n        h = (g - b) / delta;\n    } else if (g == max) {\n        h = 2 + (b - r) / delta;\n    } else {\n        h = 4 + (r - g) / delta;\n    }\n\n    h *= 60;\n    if (h < 0) {\n        h += 360;\n    }\n\n    return { h, s, v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: NaN,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpkk063eoa.js:42:12)\n    at Object.<anonymous> (/tmp/tmpkk063eoa.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: NaN, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r_prime = r / 255;\n    let g_prime = g / 255;\n    let b_prime = b / 255;\n\n    let c_max = Math.max(r_prime, g_prime, b_prime);\n    let c_min = Math.min(r_prime, g_prime, b_prime);\n    let delta = c_max - c_min;\n\n    let h = 0;\n    let s = 0;\n    let v = 0;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else if (c_max == b_prime) {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n\n    v = c_max;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp8s5xijen.js:40:12)\n    at Object.<anonymous> (/tmp/tmp8s5xijen.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r_prime = r / 255;\n    let g_prime = g / 255;\n    let b_prime = b / 255;\n    let c_max = Math.max(r_prime, g_prime, b_prime);\n    let c_min = Math.min(r_prime, g_prime, b_prime);\n    let delta = c_max - c_min;\n    let h = 0;\n    let s = 0;\n    let v = c_max;\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else if (c_max == b_prime) {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n    return {\n        h: h,\n        s: s,\n        v: v\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpfytkepkv.js:39:12)\n    at Object.<anonymous> (/tmp/tmpfytkepkv.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h = 0;\n    let s = 0;\n    let v = 0;\n    let max = Math.max(r, g, b);\n    let min = Math.min(r, g, b);\n    let diff = max - min;\n    if (diff == 0) {\n        h = 0;\n    }\n    else if (max == r) {\n        h = 60 * ((g - b) / diff);\n    }\n    else if (max == g) {\n        h = 60 * ((b - r) / diff) + 120;\n    }\n    else if (max == b) {\n        h = 60 * ((r - g) / diff) + 240;\n    }\n    if (h < 0) {\n        h += 360;\n    }\n    if (max == 0) {\n        s = 0;\n    }\n    else {\n        s = 1 - (min / max);\n    }\n    v = max;\n    return { h: h, s: s, v: v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 255\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpvgatqu5d.js:36:12)\n    at Object.<anonymous> (/tmp/tmpvgatqu5d.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 255 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let max = Math.max(r, g, b);\n    let min = Math.min(r, g, b);\n    let delta = max - min;\n    v = max;\n    if (max == 0) {\n        s = 0;\n    } else {\n        s = delta / max;\n    }\n    if (max == min) {\n        h = 0;\n    } else if (max == r) {\n        if (g >= b) {\n            h = 60 * ((g - b) / delta);\n        } else {\n            h = 60 * ((g - b) / delta) + 360;\n        }\n    } else if (max == g) {\n        h = 60 * ((b - r) / delta) + 120;\n    } else if (max == b) {\n        h = 60 * ((r - g) / delta) + 240;\n    }\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 255\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpp_tf7hca.js:40:12)\n    at Object.<anonymous> (/tmp/tmpp_tf7hca.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 255 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let r_prime: number, g_prime: number, b_prime: number;\n    let c_max: number, c_min: number;\n    let delta: number;\n\n    r_prime = r / 255;\n    g_prime = g / 255;\n    b_prime = b / 255;\n\n    c_max = Math.max(r_prime, g_prime, b_prime);\n    c_min = Math.min(r_prime, g_prime, b_prime);\n    delta = c_max - c_min;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n\n    v = c_max;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpn0ooev_c.js:41:12)\n    at Object.<anonymous> (/tmp/tmpn0ooev_c.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    r /= 255, g /= 255, b /= 255;\n    var max = Math.max(r, g, b), min = Math.min(r, g, b);\n    var h, s, v = max;\n    var d = max - min;\n    s = max == 0 ? 0 : d / max;\n    if (max == min) {\n        h = 0; // achromatic\n    } else {\n        switch (max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, v: v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpc6jr3d5n.js:30:12)\n    at Object.<anonymous> (/tmp/tmpc6jr3d5n.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let r_prime: number, g_prime: number, b_prime: number;\n    let c_max: number, c_min: number;\n    let delta: number;\n\n    r_prime = r / 255;\n    g_prime = g / 255;\n    b_prime = b / 255;\n\n    c_max = Math.max(r_prime, g_prime, b_prime);\n    c_min = Math.min(r_prime, g_prime, b_prime);\n    delta = c_max - c_min;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n\n    v = c_max;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpn0ooev_c.js:41:12)\n    at Object.<anonymous> (/tmp/tmpn0ooev_c.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r_prime = r / 255;\n    let g_prime = g / 255;\n    let b_prime = b / 255;\n    let c_max = Math.max(r_prime, g_prime, b_prime);\n    let c_min = Math.min(r_prime, g_prime, b_prime);\n    let delta = c_max - c_min;\n\n    let h = 0;\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else if (c_max == b_prime) {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n\n    let s = 0;\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n\n    let v = c_max;\n\n    return { h: h, s: s, v: v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp71keq94n.js:35:12)\n    at Object.<anonymous> (/tmp/tmp71keq94n.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number;\n    let s: number;\n    let v: number;\n    let max: number = Math.max(r, g, b);\n    let min: number = Math.min(r, g, b);\n    let delta: number = max - min;\n    if (max == 0) {\n        s = 0;\n    } else {\n        s = delta / max;\n    }\n    if (delta == 0) {\n        h = 0;\n    } else if (r == max) {\n        h = (g - b) / delta;\n    } else if (g == max) {\n        h = 2 + (b - r) / delta;\n    } else if (b == max) {\n        h = 4 + (r - g) / delta;\n    }\n    h = h * 60;\n    if (h < 0) {\n        h = h + 360;\n    }\n    v = max / 255;\n    return { h: h, s: s, v: v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123492,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp7br0mo2s.js:37:12)\n    at Object.<anonymous> (/tmp/tmp7br0mo2s.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let r_prime: number, g_prime: number, b_prime: number;\n    let c_max: number, c_min: number, delta: number;\n\n    r_prime = r / 255;\n    g_prime = g / 255;\n    b_prime = b / 255;\n\n    c_max = Math.max(r_prime, g_prime, b_prime);\n    c_min = Math.min(r_prime, g_prime, b_prime);\n    delta = c_max - c_min;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n\n    v = c_max;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp6yi7i3kt.js:40:12)\n    at Object.<anonymous> (/tmp/tmp6yi7i3kt.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r1 = r / 255;\n    let g1 = g / 255;\n    let b1 = b / 255;\n    let cmax = Math.max(r1, g1, b1);\n    let cmin = Math.min(r1, g1, b1);\n    let delta = cmax - cmin;\n    let h = 0;\n    let s = 0;\n    let v = 0;\n    if (delta == 0) {\n        h = 0;\n    } else if (cmax == r1) {\n        h = 60 * (((g1 - b1) / delta) % 6);\n    } else if (cmax == g1) {\n        h = 60 * (((b1 - r1) / delta) + 2);\n    } else if (cmax == b1) {\n        h = 60 * (((r1 - g1) / delta) + 4);\n    }\n    if (cmax == 0) {\n        s = 0;\n    } else {\n        s = delta / cmax;\n    }\n    v = cmax;\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpdn3p061z.js:40:12)\n    at Object.<anonymous> (/tmp/tmpdn3p061z.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let r1: number, g1: number, b1: number;\n    let cmax: number, cmin: number, diff: number;\n    let rr: number, gg: number, bb: number;\n\n    r1 = r / 255;\n    g1 = g / 255;\n    b1 = b / 255;\n\n    cmax = Math.max(r1, g1, b1);\n    cmin = Math.min(r1, g1, b1);\n    diff = cmax - cmin;\n    v = cmax;\n\n    if (diff == 0) {\n        h = 0;\n        s = 0;\n    }\n    else {\n        s = diff / cmax;\n        rr = (((cmax - r1) / 6) + (diff / 2)) / diff;\n        gg = (((cmax - g1) / 6) + (diff / 2)) / diff;\n        bb = (((cmax - b1) / 6) + (diff / 2)) / diff;\n\n        if (r1 == cmax) {\n            h = bb - gg;\n        }\n        else if (g1 == cmax) {\n            h = (1 / 3) + rr - bb;\n        }\n        else if (b1 == cmax) {\n            h = (2 / 3) + gg - rr;\n        }\n\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n    }\n\n    return {\n        h: Math.round(h * 360),\n        s: Math.round(s * 100),\n        v: Math.round(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123492,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp7wyby45a.js:48:12)\n    at Object.<anonymous> (/tmp/tmp7wyby45a.js:52:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number;\n    let s: number;\n    let v: number;\n    let max: number = Math.max(r, g, b);\n    let min: number = Math.min(r, g, b);\n    let diff: number = max - min;\n\n    if (max == min) {\n        h = 0;\n    } else if (max == r) {\n        h = 60 * (((g - b) / diff) % 6);\n    } else if (max == g) {\n        h = 60 * (((b - r) / diff) + 2);\n    } else if (max == b) {\n        h = 60 * (((r - g) / diff) + 4);\n    }\n\n    if (max == 0) {\n        s = 0;\n    } else {\n        s = diff / max;\n    }\n\n    v = max;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123492,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 255\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpqubbiefq.js:37:12)\n    at Object.<anonymous> (/tmp/tmpqubbiefq.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 255 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r_prime = r / 255;\n    let g_prime = g / 255;\n    let b_prime = b / 255;\n\n    let c_max = Math.max(r_prime, g_prime, b_prime);\n    let c_min = Math.min(r_prime, g_prime, b_prime);\n    let delta = c_max - c_min;\n\n    let h = 0;\n    let s = 0;\n    let v = 0;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else if (c_max == b_prime) {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n\n    v = c_max;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp8s5xijen.js:40:12)\n    at Object.<anonymous> (/tmp/tmp8s5xijen.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    let h = 0;\n    let s = 0;\n    let v = 0;\n    let min = Math.min(r, g, b);\n    let max = Math.max(r, g, b);\n    let delta = max - min;\n    v = max;\n    if (max != 0) {\n        s = delta / max;\n    } else {\n        s = 0;\n        h = -1;\n        return {\n            h: h,\n            s: s,\n            v: v\n        };\n    }\n    if (r == max) {\n        h = (g - b) / delta;\n    } else if (g == max) {\n        h = 2 + (b - r) / delta;\n    } else {\n        h = 4 + (r - g) / delta;\n    }\n    h *= 60;\n    if (h < 0) {\n        h += 360;\n    }\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123492,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: NaN,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpcameierc.js:47:12)\n    at Object.<anonymous> (/tmp/tmpcameierc.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: NaN, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    var rr, gg, bb,\n        r = r / 255,\n        g = g / 255,\n        b = b / 255,\n        h, s,\n        v = Math.max(r, g, b),\n        diff = v - Math.min(r, g, b),\n        diffc = function(c: number) {\n            return (v - c) / 6 / diff + 1 / 2;\n        };\n\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(r);\n        gg = diffc(g);\n        bb = diffc(b);\n\n        if (r === v) {\n            h = bb - gg;\n        } else if (g === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (b === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: Math.round(s * 100),\n        v: Math.round(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpacymkuiy.js:39:12)\n    at Object.<anonymous> (/tmp/tmpacymkuiy.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let max: number = Math.max(r, g, b);\n    let min: number = Math.min(r, g, b);\n    let diff: number = max - min;\n    if (max === min) {\n        h = 0;\n    } else if (max === r) {\n        h = 60 * (((g - b) / diff) % 6);\n    } else if (max === g) {\n        h = 60 * (((b - r) / diff) + 2);\n    } else if (max === b) {\n        h = 60 * (((r - g) / diff) + 4);\n    }\n    if (max === 0) {\n        s = 0;\n    } else {\n        s = diff / max;\n    }\n    v = max / 255;\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123492,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpglhhd7_j.js:35:12)\n    at Object.<anonymous> (/tmp/tmpglhhd7_j.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let r_prime: number = r / 255;\n    let g_prime: number = g / 255;\n    let b_prime: number = b / 255;\n    let c_max: number = Math.max(r_prime, g_prime, b_prime);\n    let c_min: number = Math.min(r_prime, g_prime, b_prime);\n    let delta: number = c_max - c_min;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n\n    v = c_max;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123492,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp2prf_b3q.js:38:12)\n    at Object.<anonymous> (/tmp/tmp2prf_b3q.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r1 = r / 255;\n    let g1 = g / 255;\n    let b1 = b / 255;\n\n    let cmax = Math.max(r1, g1, b1);\n    let cmin = Math.min(r1, g1, b1);\n    let delta = cmax - cmin;\n\n    let hue = 0;\n    let saturation = 0;\n    let value = 0;\n\n    if (delta == 0) {\n        hue = 0;\n    } else if (cmax == r1) {\n        hue = 60 * (((g1 - b1) / delta) % 6);\n    } else if (cmax == g1) {\n        hue = 60 * (((b1 - r1) / delta) + 2);\n    } else {\n        hue = 60 * (((r1 - g1) / delta) + 4);\n    }\n\n    if (cmax == 0) {\n        saturation = 0;\n    } else {\n        saturation = (delta / cmax) * 100;\n    }\n\n    value = cmax * 100;\n\n    return {\n        hue: hue,\n        saturation: saturation,\n        value: value\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123492,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  hue: 0,\n  saturation: 0,\n  value: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpescrx0sm.js:40:12)\n    at Object.<anonymous> (/tmp/tmpescrx0sm.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { hue: 0, saturation: 0, value: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let r1: number, g1: number, b1: number;\n    let cmax: number, cmin: number, diff: number;\n    r1 = r / 255;\n    g1 = g / 255;\n    b1 = b / 255;\n    cmax = Math.max(r1, g1, b1);\n    cmin = Math.min(r1, g1, b1);\n    diff = cmax - cmin;\n    if (diff == 0) {\n        h = 0;\n    } else if (cmax == r1) {\n        h = 60 * (((g1 - b1) / diff) % 6);\n    } else if (cmax == g1) {\n        h = 60 * (((b1 - r1) / diff) + 2);\n    } else if (cmax == b1) {\n        h = 60 * (((r1 - g1) / diff) + 4);\n    }\n    if (cmax == 0) {\n        s = 0;\n    } else {\n        s = (diff / cmax) * 100;\n    }\n    v = cmax * 100;\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123492,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmph31tnbu8.js:40:12)\n    at Object.<anonymous> (/tmp/tmph31tnbu8.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    let h: number, s: number, v: number;\n    let min: number = Math.min(r, g, b);\n    let max: number = Math.max(r, g, b);\n    let delta: number = max - min;\n    v = max;\n    if (max == 0) {\n        s = 0;\n    } else {\n        s = delta / max;\n    }\n    if (delta == 0) {\n        h = 0;\n    } else if (r == max) {\n        h = (g - b) / delta;\n    } else if (g == max) {\n        h = 2 + (b - r) / delta;\n    } else {\n        h = 4 + (r - g) / delta;\n    }\n    h = Math.round(h * 60);\n    if (h < 0) {\n        h += 360;\n    }\n    s = Math.round(s * 100);\n    v = Math.round(v * 100);\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123492,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpvtheuqe4.js:44:12)\n    at Object.<anonymous> (/tmp/tmpvtheuqe4.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r_prime = r / 255;\n    let g_prime = g / 255;\n    let b_prime = b / 255;\n\n    let c_max = Math.max(r_prime, g_prime, b_prime);\n    let c_min = Math.min(r_prime, g_prime, b_prime);\n    let delta = c_max - c_min;\n\n    let h = 0;\n    let s = 0;\n    let v = 0;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else if (c_max == b_prime) {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n\n    v = c_max;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp8s5xijen.js:40:12)\n    at Object.<anonymous> (/tmp/tmp8s5xijen.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    r /= 255, g /= 255, b /= 255;\n    let max = Math.max(r, g, b), min = Math.min(r, g, b);\n    let h, s, v = max;\n    let d = max - min;\n    s = max == 0 ? 0 : d / max;\n    if (max == min) {\n        h = 0; // achromatic\n    } else {\n        switch (max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n        h /= 6;\n    }\n    return [h, s, v];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123492,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpwwnujpvw.js:30:12)\n    at Object.<anonymous> (/tmp/tmpwwnujpvw.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0, 1 ],\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let min: number, max: number, delta: number;\n\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    v = max;\n\n    delta = max - min;\n\n    if (max != 0) {\n        s = delta / max;\n    } else {\n        s = 0;\n        h = -1;\n        return { h, s, v };\n    }\n\n    if (r == max) {\n        h = (g - b) / delta;\n    } else if (g == max) {\n        h = 2 + (b - r) / delta;\n    } else {\n        h = 4 + (r - g) / delta;\n    }\n\n    h *= 60;\n    if (h < 0) {\n        h += 360;\n    }\n\n    return { h, s, v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123492,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: NaN,\n  s: 0,\n  v: 255\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpuna0sb2a.js:35:12)\n    at Object.<anonymous> (/tmp/tmpuna0sb2a.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: NaN, s: 0, v: 255 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let r_prime: number, g_prime: number, b_prime: number;\n    let c_max: number, c_min: number;\n    let delta: number;\n\n    r_prime = r / 255;\n    g_prime = g / 255;\n    b_prime = b / 255;\n\n    c_max = Math.max(r_prime, g_prime, b_prime);\n    c_min = Math.min(r_prime, g_prime, b_prime);\n    delta = c_max - c_min;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n\n    v = c_max;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpn0ooev_c.js:41:12)\n    at Object.<anonymous> (/tmp/tmpn0ooev_c.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let r_prime: number, g_prime: number, b_prime: number;\n    let c_max: number, c_min: number;\n    let delta: number;\n\n    r_prime = r / 255;\n    g_prime = g / 255;\n    b_prime = b / 255;\n\n    c_max = Math.max(r_prime, g_prime, b_prime);\n    c_min = Math.min(r_prime, g_prime, b_prime);\n    delta = c_max - c_min;\n\n    if (delta == 0)\n        h = 0;\n    else if (c_max == r_prime)\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    else if (c_max == g_prime)\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    else\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n\n    if (c_max == 0)\n        s = 0;\n    else\n        s = delta / c_max;\n\n    v = c_max;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123492,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpg4e_o3zj.js:35:12)\n    at Object.<anonymous> (/tmp/tmpg4e_o3zj.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r1 = r / 255;\n    let g1 = g / 255;\n    let b1 = b / 255;\n    let cmax = Math.max(r1, g1, b1);\n    let cmin = Math.min(r1, g1, b1);\n    let delta = cmax - cmin;\n    let h = 0;\n    let s = 0;\n    let v = 0;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (cmax == r1) {\n        h = 60 * (((g1 - b1) / delta) % 6);\n    } else if (cmax == g1) {\n        h = 60 * (((b1 - r1) / delta) + 2);\n    } else if (cmax == b1) {\n        h = 60 * (((r1 - g1) / delta) + 4);\n    }\n\n    if (cmax == 0) {\n        s = 0;\n    } else {\n        s = delta / cmax;\n    }\n\n    v = cmax;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123492,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp8tj_62ax.js:40:12)\n    at Object.<anonymous> (/tmp/tmp8tj_62ax.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r1 = r / 255;\n    let g1 = g / 255;\n    let b1 = b / 255;\n\n    let cmax = Math.max(r1, g1, b1);\n    let cmin = Math.min(r1, g1, b1);\n    let delta = cmax - cmin;\n\n    let h = 0;\n    let s = 0;\n    let v = 0;\n\n    if (delta == 0)\n        h = 0;\n    else if (cmax == r1)\n        h = 60 * (((g1 - b1) / delta) % 6);\n    else if (cmax == g1)\n        h = 60 * (((b1 - r1) / delta) + 2);\n    else\n        h = 60 * (((r1 - g1) / delta) + 4);\n\n    if (cmax == 0)\n        s = 0;\n    else\n        s = (delta / cmax) * 100;\n\n    v = cmax * 100;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123492,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpzggnczyq.js:34:12)\n    at Object.<anonymous> (/tmp/tmpzggnczyq.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let r_prime: number, g_prime: number, b_prime: number;\n    let c_max: number, c_min: number, delta: number;\n\n    r_prime = r / 255;\n    g_prime = g / 255;\n    b_prime = b / 255;\n\n    c_max = Math.max(r_prime, g_prime, b_prime);\n    c_min = Math.min(r_prime, g_prime, b_prime);\n    delta = c_max - c_min;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n\n    v = c_max;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp6yi7i3kt.js:40:12)\n    at Object.<anonymous> (/tmp/tmp6yi7i3kt.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let min: number, max: number, delta: number;\n\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    v = max;\n    delta = max - min;\n\n    if (max != 0)\n        s = delta / max;\n    else {\n        s = 0;\n        h = -1;\n        return { h, s, v };\n    }\n\n    if (r == max)\n        h = (g - b) / delta;\n    else if (g == max)\n        h = 2 + (b - r) / delta;\n    else\n        h = 4 + (r - g) / delta;\n\n    h *= 60;\n    if (h < 0)\n        h += 360;\n\n    return { h, s, v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123492,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: NaN,\n  s: 0,\n  v: 255\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpxfhk22bm.js:30:12)\n    at Object.<anonymous> (/tmp/tmpxfhk22bm.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: NaN, s: 0, v: 255 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    var rr, gg, bb,\n        r = r / 255,\n        g = g / 255,\n        b = b / 255,\n        h, s,\n        v = Math.max(r, g, b),\n        diff = v - Math.min(r, g, b),\n        diffc = function(c: number) {\n            return (v - c) / 6 / diff + 1 / 2;\n        };\n\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(r);\n        gg = diffc(g);\n        bb = diffc(b);\n\n        if (r === v) {\n            h = bb - gg;\n        } else if (g === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (b === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: Math.round(s * 100),\n        v: Math.round(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpacymkuiy.js:39:12)\n    at Object.<anonymous> (/tmp/tmpacymkuiy.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r_prime = r / 255;\n    let g_prime = g / 255;\n    let b_prime = b / 255;\n    let c_max = Math.max(r_prime, g_prime, b_prime);\n    let c_min = Math.min(r_prime, g_prime, b_prime);\n    let delta = c_max - c_min;\n    let h = 0;\n    let s = 0;\n    let v = 0;\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else if (c_max == b_prime) {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n    v = c_max;\n    return {h: h, s: s, v: v};\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123492,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpadop9cu5.js:36:12)\n    at Object.<anonymous> (/tmp/tmpadop9cu5.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    r /= 255;\n    g /= 255;\n    b /= 255;\n\n    let max = Math.max(r, g, b);\n    let min = Math.min(r, g, b);\n    let h, s, v = max;\n\n    let d = max - min;\n    s = max == 0 ? 0 : d / max;\n\n    if (max == min) {\n        h = 0; // achromatic\n    } else {\n        switch (max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n\n        h /= 6;\n    }\n\n    return [h, s, v];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123492,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmprb7ha9_7.js:33:12)\n    at Object.<anonymous> (/tmp/tmprb7ha9_7.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0, 1 ],\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let r1: number, g1: number, b1: number;\n    let max: number, min: number;\n    let diff: number;\n    r1 = r / 255;\n    g1 = g / 255;\n    b1 = b / 255;\n    max = Math.max(r1, g1, b1);\n    min = Math.min(r1, g1, b1);\n    diff = max - min;\n    v = max;\n    if (max == 0) {\n        s = 0;\n    } else {\n        s = diff / max;\n    }\n    if (max == min) {\n        h = 0;\n    } else {\n        if (max == r1) {\n            if (g1 >= b1) {\n                h = 60 * ((g1 - b1) / diff);\n            } else {\n                h = 60 * ((g1 - b1) / diff) + 360;\n            }\n        } else if (max == g1) {\n            h = 60 * ((b1 - r1) / diff) + 120;\n        } else if (max == b1) {\n            h = 60 * ((r1 - g1) / diff) + 240;\n        }\n    }\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123492,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp19x_3oh4.js:48:12)\n    at Object.<anonymous> (/tmp/tmp19x_3oh4.js:52:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rprime = r / 255;\n    let gprime = g / 255;\n    let bprime = b / 255;\n    let cmax = Math.max(rprime, gprime, bprime);\n    let cmin = Math.min(rprime, gprime, bprime);\n    let delta = cmax - cmin;\n    let h = 0;\n    let s = 0;\n    let v = 0;\n    if (delta == 0) {\n        h = 0;\n    } else if (cmax == rprime) {\n        h = 60 * (((gprime - bprime) / delta) % 6);\n    } else if (cmax == gprime) {\n        h = 60 * (((bprime - rprime) / delta) + 2);\n    } else if (cmax == bprime) {\n        h = 60 * (((rprime - gprime) / delta) + 4);\n    }\n    if (cmax == 0) {\n        s = 0;\n    } else {\n        s = (delta / cmax) * 100;\n    }\n    v = cmax * 100;\n    return { h: h, s: s, v: v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123492,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp6zyo7bp3.js:36:12)\n    at Object.<anonymous> (/tmp/tmp6zyo7bp3.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number;\n    let s: number;\n    let v: number;\n    let max: number = Math.max(r, g, b);\n    let min: number = Math.min(r, g, b);\n    let diff: number = max - min;\n    if (max == min) {\n        h = 0;\n    } else if (max == r) {\n        h = 60 * (((g - b) / diff) % 6);\n    } else if (max == g) {\n        h = 60 * (((b - r) / diff) + 2);\n    } else if (max == b) {\n        h = 60 * (((r - g) / diff) + 4);\n    }\n    if (max == 0) {\n        s = 0;\n    } else {\n        s = (diff / max) * 100;\n    }\n    v = max * 100;\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123492,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 25500\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpqf0rdstx.js:37:12)\n    at Object.<anonymous> (/tmp/tmpqf0rdstx.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 25500 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r_prime = r / 255;\n    let g_prime = g / 255;\n    let b_prime = b / 255;\n\n    let c_max = Math.max(r_prime, g_prime, b_prime);\n    let c_min = Math.min(r_prime, g_prime, b_prime);\n    let delta = c_max - c_min;\n\n    let h = 0;\n    let s = 0;\n    let v = 0;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else if (c_max == b_prime) {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n\n    v = c_max;\n\n    return { h: h, s: s, v: v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123492,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmptnxwouyl.js:36:12)\n    at Object.<anonymous> (/tmp/tmptnxwouyl.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let r_prime: number = r / 255;\n    let g_prime: number = g / 255;\n    let b_prime: number = b / 255;\n    let c_max: number = Math.max(r_prime, g_prime, b_prime);\n    let c_min: number = Math.min(r_prime, g_prime, b_prime);\n    let delta: number = c_max - c_min;\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n    v = c_max;\n    return { h: h, s: s, v: v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123492,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpupm86nw0.js:34:12)\n    at Object.<anonymous> (/tmp/tmpupm86nw0.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r_prime = r / 255;\n    let g_prime = g / 255;\n    let b_prime = b / 255;\n    let c_max = Math.max(r_prime, g_prime, b_prime);\n    let c_min = Math.min(r_prime, g_prime, b_prime);\n    let delta = c_max - c_min;\n\n    let h = 0;\n    let s = 0;\n    let v = 0;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else if (c_max == b_prime) {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n\n    v = c_max;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123492,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp55qn8ob5.js:40:12)\n    at Object.<anonymous> (/tmp/tmp55qn8ob5.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    let max = Math.max(r, g, b);\n    let min = Math.min(r, g, b);\n    let h = 0;\n    let s = 0;\n    let v = max;\n    let d = max - min;\n    s = max === 0 ? 0 : d / max;\n    if (max === min) {\n        h = 0;\n    } else {\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n        }\n        h /= 6;\n    }\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpc6em_zv2.js:39:12)\n    at Object.<anonymous> (/tmp/tmpc6em_zv2.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rprime = r / 255;\n    let gprime = g / 255;\n    let bprime = b / 255;\n    let cmax = Math.max(rprime, gprime, bprime);\n    let cmin = Math.min(rprime, gprime, bprime);\n    let delta = cmax - cmin;\n    let h = 0;\n    let s = 0;\n    let v = 0;\n    if (delta == 0) {\n        h = 0;\n    } else if (cmax == rprime) {\n        h = 60 * (((gprime - bprime) / delta) % 6);\n    } else if (cmax == gprime) {\n        h = 60 * (((bprime - rprime) / delta) + 2);\n    } else if (cmax == bprime) {\n        h = 60 * (((rprime - gprime) / delta) + 4);\n    }\n    if (cmax == 0) {\n        s = 0;\n    } else {\n        s = (delta / cmax) * 100;\n    }\n    v = cmax * 100;\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpmefzit28.js:40:12)\n    at Object.<anonymous> (/tmp/tmpmefzit28.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    let max = Math.max(r, g, b);\n    let min = Math.min(r, g, b);\n    let h, s, v = max;\n    let d = max - min;\n    s = max == 0 ? 0 : d / max;\n    if (max == min) {\n        h = 0; // achromatic\n    } else {\n        switch (max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n        h /= 6;\n    }\n    return [h, s, v];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmprg67t2gp.js:33:12)\n    at Object.<anonymous> (/tmp/tmprg67t2gp.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0, 1 ],\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let r1: number, g1: number, b1: number;\n    let cmax: number, cmin: number, diff: number;\n    let rr: number, gg: number, bb: number;\n\n    r1 = r / 255;\n    g1 = g / 255;\n    b1 = b / 255;\n\n    cmax = Math.max(r1, g1, b1);\n    cmin = Math.min(r1, g1, b1);\n    diff = cmax - cmin;\n    v = cmax;\n\n    if (diff == 0) {\n        h = 0;\n        s = 0;\n    } else {\n        s = diff / cmax;\n        rr = ((cmax - r1) / 6) / diff;\n        gg = ((cmax - g1) / 6) / diff;\n        bb = ((cmax - b1) / 6) / diff;\n\n        if (r1 == cmax) {\n            h = bb - gg;\n        } else if (g1 == cmax) {\n            h = (1 / 3) + rr - bb;\n        } else if (b1 == cmax) {\n            h = (2 / 3) + gg - rr;\n        }\n\n        if (h < 0) {\n            h = h + 1;\n        } else if (h > 1) {\n            h = h - 1;\n        }\n    }\n\n    return {\n        h: Math.round(h * 360),\n        s: Math.round(s * 100),\n        v: Math.round(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpmhtxnvrv.js:48:12)\n    at Object.<anonymous> (/tmp/tmpmhtxnvrv.js:52:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let r_prime: number, g_prime: number, b_prime: number;\n    let c_max: number, c_min: number;\n    let delta: number;\n\n    r_prime = r / 255;\n    g_prime = g / 255;\n    b_prime = b / 255;\n\n    c_max = Math.max(r_prime, g_prime, b_prime);\n    c_min = Math.min(r_prime, g_prime, b_prime);\n    delta = c_max - c_min;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n\n    v = c_max;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpn0ooev_c.js:41:12)\n    at Object.<anonymous> (/tmp/tmpn0ooev_c.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rprime = r / 255;\n    let gprime = g / 255;\n    let bprime = b / 255;\n    let cmax = Math.max(rprime, gprime, bprime);\n    let cmin = Math.min(rprime, gprime, bprime);\n    let delta = cmax - cmin;\n    let h = 0;\n    let s = 0;\n    let v = 0;\n    if (delta === 0) {\n        h = 0;\n    } else if (cmax === rprime) {\n        h = 60 * (((gprime - bprime) / delta) % 6);\n    } else if (cmax === gprime) {\n        h = 60 * (((bprime - rprime) / delta) + 2);\n    } else {\n        h = 60 * (((rprime - gprime) / delta) + 4);\n    }\n    if (cmax === 0) {\n        s = 0;\n    } else {\n        s = delta / cmax;\n    }\n    v = cmax;\n    return {h: h, s: s, v: v};\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp4dwliu1r.js:36:12)\n    at Object.<anonymous> (/tmp/tmp4dwliu1r.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    let max = Math.max(r, g, b);\n    let min = Math.min(r, g, b);\n    let h = 0;\n    let s = 0;\n    let v = max;\n    let d = max - min;\n    s = max == 0 ? 0 : d / max;\n    if (max == min) {\n        h = 0;\n    } else {\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n        }\n        h /= 6;\n    }\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpsikxuztx.js:39:12)\n    at Object.<anonymous> (/tmp/tmpsikxuztx.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        }else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpkeurn5zb.js:44:12)\n    at Object.<anonymous> (/tmp/tmpkeurn5zb.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    r = r / 255;\n    g = g / 255;\n    b = b / 255;\n    let h, s, v;\n    let min = Math.min(r, g, b);\n    let max = Math.max(r, g, b);\n    v = max;\n    let delta = max - min;\n    if (max != 0) {\n        s = delta / max;\n    } else {\n        s = 0;\n        h = -1;\n        return { h, s, v };\n    }\n    if (r == max) {\n        h = (g - b) / delta;\n    } else if (g == max) {\n        h = 2 + (b - r) / delta;\n    } else {\n        h = 4 + (r - g) / delta;\n    }\n    h *= 60;\n    if (h < 0) {\n        h += 360;\n    }\n    return { h, s, v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: NaN,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpvoczqq4x.js:37:12)\n    at Object.<anonymous> (/tmp/tmpvoczqq4x.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: NaN, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rprime = r / 255;\n    let gprime = g / 255;\n    let bprime = b / 255;\n\n    let cmax = Math.max(rprime, gprime, bprime);\n    let cmin = Math.min(rprime, gprime, bprime);\n    let delta = cmax - cmin;\n\n    let h = 0;\n    let s = 0;\n    let v = 0;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (cmax == rprime) {\n        h = 60 * (((gprime - bprime) / delta) % 6);\n    } else if (cmax == gprime) {\n        h = 60 * (((bprime - rprime) / delta) + 2);\n    } else if (cmax == bprime) {\n        h = 60 * (((rprime - gprime) / delta) + 4);\n    }\n\n    if (cmax == 0) {\n        s = 0;\n    } else {\n        s = delta / cmax;\n    }\n\n    v = cmax;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp8ey3jy00.js:40:12)\n    at Object.<anonymous> (/tmp/tmp8ey3jy00.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rprime = r / 255;\n    let gprime = g / 255;\n    let bprime = b / 255;\n    let cmax = Math.max(rprime, gprime, bprime);\n    let cmin = Math.min(rprime, gprime, bprime);\n    let delta = cmax - cmin;\n    let h = 0;\n    let s = 0;\n    let v = 0;\n    if (delta == 0) {\n        h = 0;\n    } else if (cmax == rprime) {\n        h = 60 * (((gprime - bprime) / delta) % 6);\n    } else if (cmax == gprime) {\n        h = 60 * (((bprime - rprime) / delta) + 2);\n    } else if (cmax == bprime) {\n        h = 60 * (((rprime - gprime) / delta) + 4);\n    }\n    if (cmax == 0) {\n        s = 0;\n    } else {\n        s = (delta / cmax) * 100;\n    }\n    v = cmax * 100;\n    return { h: h, s: s, v: v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123492,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp6zyo7bp3.js:36:12)\n    at Object.<anonymous> (/tmp/tmp6zyo7bp3.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    let h: number, s: number, v: number;\n    let min: number = Math.min(r, g, b);\n    let max: number = Math.max(r, g, b);\n    let delta: number = max - min;\n    v = max;\n    if (max == 0) {\n        s = 0;\n    } else {\n        s = delta / max;\n    }\n    if (delta == 0) {\n        h = 0;\n    } else if (r == max) {\n        h = (g - b) / delta;\n    } else if (g == max) {\n        h = 2 + (b - r) / delta;\n    } else {\n        h = 4 + (r - g) / delta;\n    }\n    h = Math.round(h * 60);\n    if (h < 0) {\n        h += 360;\n    }\n    s = Math.round(s * 100);\n    v = Math.round(v * 100);\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123492,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpvtheuqe4.js:44:12)\n    at Object.<anonymous> (/tmp/tmpvtheuqe4.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let r_prime: number, g_prime: number, b_prime: number;\n    let c_max: number, c_min: number;\n    let delta: number;\n\n    r_prime = r / 255;\n    g_prime = g / 255;\n    b_prime = b / 255;\n\n    c_max = Math.max(r_prime, g_prime, b_prime);\n    c_min = Math.min(r_prime, g_prime, b_prime);\n    delta = c_max - c_min;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n\n    v = c_max;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpn0ooev_c.js:41:12)\n    at Object.<anonymous> (/tmp/tmpn0ooev_c.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r_prime = r / 255;\n    let g_prime = g / 255;\n    let b_prime = b / 255;\n    let c_max = Math.max(r_prime, g_prime, b_prime);\n    let c_min = Math.min(r_prime, g_prime, b_prime);\n    let delta = c_max - c_min;\n    let h;\n    let s;\n    let v;\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else if (c_max == b_prime) {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n    v = c_max;\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpldz5rdon.js:40:12)\n    at Object.<anonymous> (/tmp/tmpldz5rdon.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let max: number = Math.max(r, g, b);\n    let min: number = Math.min(r, g, b);\n    let diff: number = max - min;\n\n    if (max == min) {\n        h = 0;\n    } else if (max == r) {\n        h = 60 * (((g - b) / diff) % 6);\n    } else if (max == g) {\n        h = 60 * (((b - r) / diff) + 2);\n    } else if (max == b) {\n        h = 60 * (((r - g) / diff) + 4);\n    }\n\n    if (max == 0) {\n        s = 0;\n    } else {\n        s = (diff / max) * 100;\n    }\n\n    v = max * 100;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 25500\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpaz7ich50.js:35:12)\n    at Object.<anonymous> (/tmp/tmpaz7ich50.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 25500 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r_prime = r / 255;\n    let g_prime = g / 255;\n    let b_prime = b / 255;\n\n    let c_max = Math.max(r_prime, g_prime, b_prime);\n    let c_min = Math.min(r_prime, g_prime, b_prime);\n    let delta = c_max - c_min;\n\n    let h = 0;\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else if (c_max == b_prime) {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n\n    let s = 0;\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n\n    let v = c_max;\n\n    return { h, s, v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpxgjm7266.js:35:12)\n    at Object.<anonymous> (/tmp/tmpxgjm7266.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        }else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpkeurn5zb.js:44:12)\n    at Object.<anonymous> (/tmp/tmpkeurn5zb.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r_prime = r / 255;\n    let g_prime = g / 255;\n    let b_prime = b / 255;\n\n    let c_max = Math.max(r_prime, g_prime, b_prime);\n    let c_min = Math.min(r_prime, g_prime, b_prime);\n    let delta = c_max - c_min;\n\n    let h = 0;\n    let s = 0;\n    let v = 0;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else if (c_max == b_prime) {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n\n    v = c_max;\n\n    return { h: h, s: s, v: v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123492,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmptnxwouyl.js:36:12)\n    at Object.<anonymous> (/tmp/tmptnxwouyl.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number = 0;\n    let s: number = 0;\n    let v: number = 0;\n    let min: number = Math.min(r, g, b);\n    let max: number = Math.max(r, g, b);\n    let delta: number = max - min;\n    v = max;\n    if (max != 0) {\n        s = delta / max;\n    } else {\n        s = 0;\n        h = -1;\n        return { h, s, v };\n    }\n    if (r == max) {\n        h = (g - b) / delta;\n    } else if (g == max) {\n        h = 2 + (b - r) / delta;\n    } else {\n        h = 4 + (r - g) / delta;\n    }\n    h *= 60;\n    if (h < 0) {\n        h += 360;\n    }\n    return { h, s, v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: NaN,\n  s: 0,\n  v: 255\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpq5r_25ei.js:36:12)\n    at Object.<anonymous> (/tmp/tmpq5r_25ei.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: NaN, s: 0, v: 255 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        }else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpkeurn5zb.js:44:12)\n    at Object.<anonymous> (/tmp/tmpkeurn5zb.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        }else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpkeurn5zb.js:44:12)\n    at Object.<anonymous> (/tmp/tmpkeurn5zb.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let min: number, max: number, delta: number;\n\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    v = max;\n    delta = max - min;\n    if (max != 0) {\n        s = delta / max;\n    } else {\n        s = 0;\n        h = -1;\n        return { h: h, s: s, v: v };\n    }\n    if (r == max) {\n        h = (g - b) / delta;\n    } else if (g == max) {\n        h = 2 + (b - r) / delta;\n    } else {\n        h = 4 + (r - g) / delta;\n    }\n    h *= 60;\n    if (h < 0) {\n        h += 360;\n    }\n    return { h: h, s: s, v: v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: NaN,\n  s: 0,\n  v: 255\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp2ixttdp1.js:35:12)\n    at Object.<anonymous> (/tmp/tmp2ixttdp1.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: NaN, s: 0, v: 255 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let r1: number, g1: number, b1: number;\n    let cmax: number, cmin: number, delta: number;\n    r1 = r / 255;\n    g1 = g / 255;\n    b1 = b / 255;\n    cmax = Math.max(r1, g1, b1);\n    cmin = Math.min(r1, g1, b1);\n    delta = cmax - cmin;\n    if (delta == 0)\n        h = 0;\n    else if (cmax == r1)\n        h = 60 * (((g1 - b1) / delta) % 6);\n    else if (cmax == g1)\n        h = 60 * (((b1 - r1) / delta) + 2);\n    else\n        h = 60 * (((r1 - g1) / delta) + 4);\n    if (delta == 0)\n        s = 0;\n    else\n        s = (delta / cmax);\n    v = cmax;\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpbh9chtvf.js:34:12)\n    at Object.<anonymous> (/tmp/tmpbh9chtvf.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    let h, s, v;\n    const min = Math.min(r, g, b);\n    const max = Math.max(r, g, b);\n    v = max;\n    const delta = max - min;\n    if (max === 0) {\n        s = 0;\n    } else {\n        s = 1 - min / max;\n    }\n    if (max === min) {\n        h = 0;\n    } else if (max === r) {\n        h = (g - b) / delta;\n    } else if (max === g) {\n        h = 2 + (b - r) / delta;\n    } else if (max === b) {\n        h = 4 + (r - g) / delta;\n    }\n    h = Math.min(h * 60, 360);\n    if (h < 0) {\n        h += 360;\n    }\n    s = s * 100;\n    s = Math.round(s);\n    v = v * 100;\n    v = Math.round(v);\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpj7louewp.js:46:12)\n    at Object.<anonymous> (/tmp/tmpj7louewp.js:50:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n  let h: number, s: number, v: number;\n  let r1: number, g1: number, b1: number;\n  let cmax: number, cmin: number, diff: number;\n\n  r1 = r / 255;\n  g1 = g / 255;\n  b1 = b / 255;\n\n  cmax = Math.max(r1, g1, b1);\n  cmin = Math.min(r1, g1, b1);\n  diff = cmax - cmin;\n\n  if (cmax === cmin) {\n    h = 0;\n  } else if (cmax === r1) {\n    h = 60 * ((g1 - b1) / diff);\n  } else if (cmax === g1) {\n    h = 60 * ((b1 - r1) / diff + 2);\n  } else if (cmax === b1) {\n    h = 60 * ((r1 - g1) / diff + 4);\n  }\n\n  if (h < 0) {\n    h = h + 360;\n  }\n\n  if (cmax === 0) {\n    s = 0;\n  } else {\n    s = (diff / cmax) * 100;\n  }\n\n  v = cmax * 100;\n\n  return {\n    h: Math.round(h),\n    s: Math.round(s),\n    v: Math.round(v)\n  };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpvxp306_g.js:43:12)\n    at Object.<anonymous> (/tmp/tmpvxp306_g.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let max: number = Math.max(r, g, b);\n    let min: number = Math.min(r, g, b);\n    let diff: number = max - min;\n    if (max == min) {\n        h = 0;\n    } else if (max == r) {\n        h = 60 * ((g - b) / diff);\n    } else if (max == g) {\n        h = 60 * ((b - r) / diff) + 120;\n    } else if (max == b) {\n        h = 60 * ((r - g) / diff) + 240;\n    }\n    if (h < 0) {\n        h += 360;\n    }\n    if (max == 0) {\n        s = 0;\n    } else {\n        s = 1 - (min / max);\n    }\n    v = max;\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 255\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp6u5ynx9y.js:38:12)\n    at Object.<anonymous> (/tmp/tmp6u5ynx9y.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 255 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    r /= 255;\n    g /= 255;\n    b /= 255;\n\n    let max = Math.max(r, g, b);\n    let min = Math.min(r, g, b);\n    let h, s, v = max;\n\n    let d = max - min;\n    s = max == 0 ? 0 : d / max;\n\n    if (max == min) {\n        h = 0; // achromatic\n    } else {\n        switch (max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n        h /= 6;\n    }\n\n    return [h, s, v];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp5_s3ebb9.js:33:12)\n    at Object.<anonymous> (/tmp/tmp5_s3ebb9.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0, 1 ],\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number;\n    let s: number;\n    let v: number;\n    let max: number = Math.max(r, g, b);\n    let min: number = Math.min(r, g, b);\n    let delta: number = max - min;\n    v = max;\n    if (max == 0) {\n        s = 0;\n    } else {\n        s = delta / max;\n    }\n    if (max == min) {\n        h = 0;\n    } else if (max == r) {\n        h = 60 * (((g - b) / delta) % 6);\n    } else if (max == g) {\n        h = 60 * (((b - r) / delta) + 2);\n    } else if (max == b) {\n        h = 60 * (((r - g) / delta) + 4);\n    }\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 255\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmptdrrlqsd.js:37:12)\n    at Object.<anonymous> (/tmp/tmptdrrlqsd.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 255 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let r1: number, g1: number, b1: number;\n    let cmax: number, cmin: number, delta: number;\n    r1 = r / 255;\n    g1 = g / 255;\n    b1 = b / 255;\n    cmax = Math.max(r1, g1, b1);\n    cmin = Math.min(r1, g1, b1);\n    delta = cmax - cmin;\n    if (delta == 0)\n        h = 0;\n    else if (cmax == r1)\n        h = 60 * (((g1 - b1) / delta) % 6);\n    else if (cmax == g1)\n        h = 60 * (((b1 - r1) / delta) + 2);\n    else\n        h = 60 * (((r1 - g1) / delta) + 4);\n    if (delta == 0)\n        s = 0;\n    else\n        s = (delta / cmax) * 100;\n    v = cmax * 100;\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpowz7qhsp.js:34:12)\n    at Object.<anonymous> (/tmp/tmpowz7qhsp.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    let h: number, s: number, v: number;\n    const min: number = Math.min(r, g, b);\n    const max: number = Math.max(r, g, b);\n    const delta: number = max - min;\n    v = max;\n    if (max === 0) {\n        s = 0;\n    } else {\n        s = 1 - min / max;\n    }\n    if (max === min) {\n        h = 0;\n    } else if (max === r) {\n        h = (60 * ((g - b) / delta) + 360) % 360;\n    } else if (max === g) {\n        h = (60 * ((b - r) / delta) + 120) % 360;\n    } else if (max === b) {\n        h = (60 * ((r - g) / delta) + 240) % 360;\n    }\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpnfh9zn5n.js:38:12)\n    at Object.<anonymous> (/tmp/tmpnfh9zn5n.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rprime = r / 255;\n    let gprime = g / 255;\n    let bprime = b / 255;\n    let cmax = Math.max(rprime, gprime, bprime);\n    let cmin = Math.min(rprime, gprime, bprime);\n    let delta = cmax - cmin;\n    let h = 0;\n    let s = 0;\n    let v = 0;\n    if (delta == 0) {\n        h = 0;\n    } else if (cmax == rprime) {\n        h = 60 * (((gprime - bprime) / delta) % 6);\n    } else if (cmax == gprime) {\n        h = 60 * (((bprime - rprime) / delta) + 2);\n    } else if (cmax == bprime) {\n        h = 60 * (((rprime - gprime) / delta) + 4);\n    }\n    if (cmax == 0) {\n        s = 0;\n    } else {\n        s = (delta / cmax) * 100;\n    }\n    v = cmax * 100;\n    return {\n        h: h,\n        s: s,\n        v: v\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpt1149g3b.js:40:12)\n    at Object.<anonymous> (/tmp/tmpt1149g3b.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r_prime = r / 255;\n    let g_prime = g / 255;\n    let b_prime = b / 255;\n    let c_max = Math.max(r_prime, g_prime, b_prime);\n    let c_min = Math.min(r_prime, g_prime, b_prime);\n    let delta = c_max - c_min;\n    let h = 0;\n    let s = 0;\n    let v = 0;\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else if (c_max == b_prime) {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n    v = c_max;\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpp9d47ktg.js:40:12)\n    at Object.<anonymous> (/tmp/tmpp9d47ktg.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r_prime = r / 255;\n    let g_prime = g / 255;\n    let b_prime = b / 255;\n\n    let c_max = Math.max(r_prime, g_prime, b_prime);\n    let c_min = Math.min(r_prime, g_prime, b_prime);\n    let delta = c_max - c_min;\n\n    let h = 0;\n    let s = 0;\n    let v = c_max;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else if (c_max == b_prime) {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp0hns9l33.js:39:12)\n    at Object.<anonymous> (/tmp/tmp0hns9l33.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    r /= 255;\n    g /= 255;\n    b /= 255;\n\n    let max = Math.max(r, g, b);\n    let min = Math.min(r, g, b);\n    let h = 0;\n    let s = 0;\n    let v = max;\n\n    let d = max - min;\n    s = max == 0 ? 0 : d / max;\n\n    if (max == min) {\n        h = 0; // achromatic\n    } else {\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n        }\n        h /= 6;\n    }\n\n    return [h, s, v];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp8jm1cb8c.js:35:12)\n    at Object.<anonymous> (/tmp/tmp8jm1cb8c.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0, 1 ],\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        }else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpkeurn5zb.js:44:12)\n    at Object.<anonymous> (/tmp/tmpkeurn5zb.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number = 0;\n    let s: number = 0;\n    let v: number = 0;\n    let min: number = Math.min(r, g, b);\n    let max: number = Math.max(r, g, b);\n    let delta: number = max - min;\n    v = max;\n    if (max != 0) {\n        s = delta / max;\n    } else {\n        s = 0;\n        h = -1;\n        return { h, s, v };\n    }\n    if (r == max) {\n        h = (g - b) / delta;\n    } else if (g == max) {\n        h = 2 + (b - r) / delta;\n    } else {\n        h = 4 + (r - g) / delta;\n    }\n    h *= 60;\n    if (h < 0) {\n        h += 360;\n    }\n    return { h, s, v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: NaN,\n  s: 0,\n  v: 255\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpq5r_25ei.js:36:12)\n    at Object.<anonymous> (/tmp/tmpq5r_25ei.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: NaN, s: 0, v: 255 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r_prime = r / 255;\n    let g_prime = g / 255;\n    let b_prime = b / 255;\n\n    let c_max = Math.max(r_prime, g_prime, b_prime);\n    let c_min = Math.min(r_prime, g_prime, b_prime);\n    let delta = c_max - c_min;\n\n    let h = 0;\n    let s = 0;\n    let v = 0;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else if (c_max == b_prime) {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n\n    v = c_max;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp8s5xijen.js:40:12)\n    at Object.<anonymous> (/tmp/tmp8s5xijen.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    let max = Math.max(r, g, b);\n    let min = Math.min(r, g, b);\n    let h, s, v = max;\n\n    let d = max - min;\n    s = max == 0 ? 0 : d / max;\n\n    if (max == min) {\n        h = 0; // achromatic\n    } else {\n        switch (max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n        h /= 6;\n    }\n\n    return [h, s, v];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpwrtyo4pq.js:33:12)\n    at Object.<anonymous> (/tmp/tmpwrtyo4pq.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0, 1 ],\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        }else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpkeurn5zb.js:44:12)\n    at Object.<anonymous> (/tmp/tmpkeurn5zb.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    var computedH = 0;\n    var computedS = 0;\n    var computedV = 0;\n\n    //remove spaces from input RGB values, convert to int\n    var r = parseInt(('' + r).replace(/\\s/g, ''), 10);\n    var g = parseInt(('' + g).replace(/\\s/g, ''), 10);\n    var b = parseInt(('' + b).replace(/\\s/g, ''), 10);\n\n    if (r == null || g == null || b == null ||\n        isNaN(r) || isNaN(g) || isNaN(b)) {\n        alert('Please enter numeric RGB values!');\n        return;\n    }\n    if (r < 0 || g < 0 || b < 0 || r > 255 || g > 255 || b > 255) {\n        alert('RGB values must be in the range 0 to 255.');\n        return;\n    }\n    r = r / 255;\n    g = g / 255;\n    b = b / 255;\n    var minRGB = Math.min(r, Math.min(g, b));\n    var maxRGB = Math.max(r, Math.max(g, b));\n\n    // Black-gray-white\n    if (minRGB == maxRGB) {\n        computedV = minRGB;\n        return [0, 0, computedV];\n    }\n\n    // Colors other than black-gray-white:\n    var d = (r == minRGB) ? g - b : ((b == minRGB) ? r - g : b - r);\n    var h = (r == minRGB) ? 3 : ((b == minRGB) ? 1 : 5);\n    computedH = 60 * (h - d / (maxRGB - minRGB));\n    computedS = (maxRGB - minRGB) / maxRGB;\n    computedV = maxRGB;\n    return [computedH, computedS, computedV];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp2gtbjaz8.js:40:12)\n    at Object.<anonymous> (/tmp/tmp2gtbjaz8.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0, 1 ],\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r_prime: number = r / 255;\n    let g_prime: number = g / 255;\n    let b_prime: number = b / 255;\n\n    let c_max: number = Math.max(r_prime, g_prime, b_prime);\n    let c_min: number = Math.min(r_prime, g_prime, b_prime);\n    let delta: number = c_max - c_min;\n\n    let h: number = 0;\n    let s: number = 0;\n    let v: number = c_max;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else if (c_max == b_prime) {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpylwvndhy.js:39:12)\n    at Object.<anonymous> (/tmp/tmpylwvndhy.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        }else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpkeurn5zb.js:44:12)\n    at Object.<anonymous> (/tmp/tmpkeurn5zb.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    let h, s, v;\n    let max = Math.max(r, g, b);\n    let min = Math.min(r, g, b);\n    let d = max - min;\n    v = max;\n    if (max == 0) {\n        s = 0;\n    } else {\n        s = d / max;\n    }\n    if (max == min) {\n        h = 0;\n    } else {\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n        }\n        h /= 6;\n    }\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmptzh2owxs.js:43:12)\n    at Object.<anonymous> (/tmp/tmptzh2owxs.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number = 0;\n    let s: number = 0;\n    let v: number = 0;\n    let min: number = Math.min(r, g, b);\n    let max: number = Math.max(r, g, b);\n    let delta: number = max - min;\n    v = max;\n    if (max != 0) {\n        s = delta / max;\n    } else {\n        s = 0;\n        h = -1;\n        return { h, s, v };\n    }\n    if (r == max) {\n        h = (g - b) / delta;\n    } else if (g == max) {\n        h = 2 + (b - r) / delta;\n    } else {\n        h = 4 + (r - g) / delta;\n    }\n    h *= 60;\n    if (h < 0) {\n        h += 360;\n    }\n    return { h, s, v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: NaN,\n  s: 0,\n  v: 255\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpq5r_25ei.js:36:12)\n    at Object.<anonymous> (/tmp/tmpq5r_25ei.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: NaN, s: 0, v: 255 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    }
  ]
}
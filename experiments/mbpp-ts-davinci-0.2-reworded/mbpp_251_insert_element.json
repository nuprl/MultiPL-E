{
  "name": "mbpp_251_insert_element",
  "language": "ts",
  "prompt": "//Write a function that takes in an array and an element and inserts the element before each element in the array, and returns the resulting array.\nfunction insert_element(list: string[], element: string): string[] {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_251_insert_element.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = insert_element;\n  assert.deepEqual(candidate([\"Red\", \"Green\", \"Black\"], \"c\"),[\"c\", \"Red\", \"c\", \"Green\", \"c\", \"Black\"]);\n  assert.deepEqual(candidate([\"python\", \"java\"], \"program\"),[\"program\", \"python\", \"program\", \"java\"]);\n  assert.deepEqual(candidate([\"happy\", \"sad\"], \"laugh\"),[\"laugh\", \"happy\", \"laugh\", \"sad\"]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    return list.map(x => element + x);\n}\n",
    "    let new_list: string[] = [];\n    for (let i = 0; i < list.length; i++) {\n        new_list.push(element);\n        new_list.push(list[i]);\n    }\n    return new_list;\n}\n\nconsole.log(insert_element(['a', 'b', 'c'], 'd'));\n",
    "    let new_list: string[] = [];\n    for (let i = 0; i < list.length; i++) {\n        new_list.push(element);\n        new_list.push(list[i]);\n    }\n    return new_list;\n}\n",
    "    let new_list: string[] = [];\n    for (let i = 0; i < list.length; i++) {\n        new_list.push(element);\n        new_list.push(list[i]);\n    }\n    return new_list;\n}\n",
    "    let new_list: string[] = [];\n    for (let i = 0; i < list.length; i++) {\n        new_list.push(element);\n        new_list.push(list[i]);\n    }\n    return new_list;\n}\n",
    "    let new_list: string[] = [];\n    for (let i = 0; i < list.length; i++) {\n        new_list.push(element);\n        new_list.push(list[i]);\n    }\n    return new_list;\n}\n",
    "    let new_list: string[] = [];\n    for (let i = 0; i < list.length; i++) {\n        new_list.push(element);\n        new_list.push(list[i]);\n    }\n    return new_list;\n}\n",
    "    let new_list = [];\n    for (let i = 0; i < list.length; i++) {\n        new_list.push(element);\n        new_list.push(list[i]);\n    }\n    return new_list;\n}\n",
    "    let new_list: string[] = [];\n    for (let i = 0; i < list.length; i++) {\n        new_list.push(element);\n        new_list.push(list[i]);\n    }\n    return new_list;\n}\n\nconsole.log(insert_element([\"a\", \"b\", \"c\"], \"d\"));\n",
    "    let new_list: string[] = [];\n    for (let i = 0; i < list.length; i++) {\n        new_list.push(element);\n        new_list.push(list[i]);\n    }\n    return new_list;\n}\n",
    "    let new_list: string[] = [];\n    for (let i = 0; i < list.length; i++) {\n        new_list.push(element);\n        new_list.push(list[i]);\n    }\n    return new_list;\n}\n",
    "    let new_list: string[] = [];\n    for (let i = 0; i < list.length; i++) {\n        new_list.push(element);\n        new_list.push(list[i]);\n    }\n    return new_list;\n}\nconsole.log(insert_element([\"a\", \"b\", \"c\"], \"x\"));\n",
    "    let new_list: string[] = [];\n    for (let i = 0; i < list.length; i++) {\n        new_list.push(element);\n        new_list.push(list[i]);\n    }\n    return new_list;\n}\n",
    "    let new_list: string[] = [];\n    for (let i = 0; i < list.length; i++) {\n        new_list.push(element);\n        new_list.push(list[i]);\n    }\n    return new_list;\n}\n",
    "    let new_list: string[] = [];\n    for (let i = 0; i < list.length; i++) {\n        new_list.push(element);\n        new_list.push(list[i]);\n    }\n    return new_list;\n}\nconsole.log(insert_element([\"a\", \"b\", \"c\"], \"d\"));\n",
    "    let new_list: string[] = [];\n    for (let i = 0; i < list.length; i++) {\n        new_list.push(element);\n        new_list.push(list[i]);\n    }\n    return new_list;\n}\n",
    "    let new_list: string[] = [];\n    for (let i = 0; i < list.length; i++) {\n        new_list.push(element);\n        new_list.push(list[i]);\n    }\n    return new_list;\n}\n",
    "    let new_list: string[] = [];\n    for (let i = 0; i < list.length; i++) {\n        new_list.push(element);\n        new_list.push(list[i]);\n    }\n    return new_list;\n}\n",
    "    let new_list: string[] = [];\n    for (let i = 0; i < list.length; i++) {\n        new_list.push(element);\n        new_list.push(list[i]);\n    }\n    return new_list;\n}\n\nconsole.log(insert_element([\"a\", \"b\", \"c\", \"d\"], \"z\"));\n",
    "    for (let i = 0; i < list.length; i++) {\n        list.splice(i, 0, element);\n        i++;\n    }\n    return list;\n}\n"
  ]
}
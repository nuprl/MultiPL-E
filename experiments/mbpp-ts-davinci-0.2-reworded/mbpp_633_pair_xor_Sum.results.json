{
  "name": "mbpp_633_pair_xor_Sum",
  "language": "ts",
  "prompt": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_633_pair_xor_Sum.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n  let sum = 0;\n  for (let i = 0; i < n; i++) {\n    for (let j = i + 1; j < n; j++) {\n      sum += arr[i] ^ arr[j];\n    }\n  }\n  return sum;\n}\nconsole.log(pair_xor_Sum([1, 2, 3], 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n  let sum = 0;\n  for (let i = 0; i < n; i++) {\n    for (let j = i + 1; j < n; j++) {\n      sum += arr[i] ^ arr[j];\n    }\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n  let sum = 0;\n  for (let i = 0; i < n; i++) {\n    for (let j = i + 1; j < n; j++) {\n      sum += (arr[i] ^ arr[j]);\n    }\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < n; i++) {\n        for (let j: number = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let res: number = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            res += arr[i] ^ arr[j];\n        }\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n  let sum = 0;\n  for (let i = 0; i < n; i++) {\n    for (let j = i + 1; j < n; j++) {\n      sum += arr[i] ^ arr[j];\n    }\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n  let sum = 0;\n  for (let i = 0; i < n; i++) {\n    for (let j = i + 1; j < n; j++) {\n      sum += arr[i] ^ arr[j];\n    }\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n  let sum = 0;\n  for (let i = 0; i < n; i++) {\n    for (let j = i + 1; j < n; j++) {\n      sum += arr[i] ^ arr[j];\n    }\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum: number = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123104,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum: number = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123104,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let res: number = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            res += arr[i] ^ arr[j];\n        }\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconsole.log(pair_xor_Sum([1, 2, 3, 4], 4));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123104,
      "stdout": "24\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < n; i++) {\n        for (let j: number = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123104,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let res = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            res += (arr[i] ^ arr[j]);\n        }\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123104,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let res = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            res += (arr[i] ^ arr[j]);\n        }\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123104,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let ans: number = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            ans += (arr[i] ^ arr[j]);\n        }\n    }\n    return ans;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123104,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let res = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            res += arr[i] ^ arr[j];\n        }\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123104,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nlet arr = [1, 2, 3, 4];\nlet n = arr.length;\nconsole.log(pair_xor_Sum(arr, n));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123104,
      "stdout": "24\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let res = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            res += (arr[i] ^ arr[j]);\n        }\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123104,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < n; i++) {\n        for (let j: number = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123104,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n  let res = 0;\n  for (let i = 0; i < n; i++) {\n    for (let j = i + 1; j < n; j++) {\n      res += arr[i] ^ arr[j];\n    }\n  }\n  return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123104,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n  let sum = 0;\n  for (let i = 0; i < n; i++) {\n    for (let j = i + 1; j < n; j++) {\n      sum += arr[i] ^ arr[j];\n    }\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let res: number = 0;\n    for (let i: number = 0; i < n; i++) {\n        for (let j: number = i + 1; j < n; j++) {\n            res += arr[i] ^ arr[j];\n        }\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123104,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < n; i++) {\n        for (let j: number = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nlet arr: number[] = [1, 2, 3, 4];\nlet n: number = arr.length;\nconsole.log(pair_xor_Sum(arr, n));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123104,
      "stdout": "24\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let result = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            result += (arr[i] ^ arr[j]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123104,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n  let res = 0;\n  for (let i = 0; i < n; i++) {\n    for (let j = i + 1; j < n; j++) {\n      res += arr[i] ^ arr[j];\n    }\n  }\n  return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123104,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n  let sum = 0;\n  for (let i = 0; i < n; i++) {\n    for (let j = i + 1; j < n; j++) {\n      sum += arr[i] ^ arr[j];\n    }\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum: number = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconsole.log(pair_xor_Sum([1, 2, 3, 4, 5], 5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123104,
      "stdout": "42\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let res = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            res += (arr[i] ^ arr[j]);\n        }\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123104,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n  let sum = 0;\n  for (let i = 0; i < n; i++) {\n    for (let j = i + 1; j < n; j++) {\n      sum += arr[i] ^ arr[j];\n    }\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum: number = 0;\n\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123104,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n  let sum = 0;\n  for (let i = 0; i < n; i++) {\n    for (let j = i + 1; j < n; j++) {\n      sum += arr[i] ^ arr[j];\n    }\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let res: number = 0;\n    for (let i: number = 0; i < n; i++) {\n        for (let j: number = i + 1; j < n; j++) {\n            res += (arr[i] ^ arr[j]);\n        }\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123104,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let res: number = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            res += arr[i] ^ arr[j];\n        }\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = 0; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123104,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely deep-equal\n\n47\n    at test (/tmp/tmpura5crgq.js:14:12)\n    at Object.<anonymous> (/tmp/tmpura5crgq.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected: 47,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconsole.log(pair_xor_Sum([1, 2, 3, 4], 4));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123104,
      "stdout": "24\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n  let sum = 0;\n  for (let i = 0; i < n; i++) {\n    for (let j = i + 1; j < n; j++) {\n      sum += arr[i] ^ arr[j];\n    }\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < n; i++) {\n        for (let j: number = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconsole.log(pair_xor_Sum([1, 2, 3, 4], 4));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123104,
      "stdout": "24\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n  let sum = 0;\n  for (let i = 0; i < n; i++) {\n    for (let j = i + 1; j < n; j++) {\n      sum += arr[i] ^ arr[j];\n    }\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n  let sum = 0;\n  for (let i = 0; i < n; i++) {\n    for (let j = i + 1; j < n; j++) {\n      sum += arr[i] ^ arr[j];\n    }\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n  let sum = 0;\n  for (let i = 0; i < n; i++) {\n    for (let j = i + 1; j < n; j++) {\n      sum += arr[i] ^ arr[j];\n    }\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum: number = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123104,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let res: number = 0;\n    for (let i: number = 0; i < n; i++) {\n        for (let j: number = i + 1; j < n; j++) {\n            res += (arr[i] ^ arr[j]);\n        }\n    }\n    return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123104,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < n; i++) {\n        for (let j: number = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123104,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum: number = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123104,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < n; i++) {\n        for (let j: number = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n  let sum = 0;\n  for (let i = 0; i < n; i++) {\n    for (let j = i + 1; j < n; j++) {\n      sum += arr[i] ^ arr[j];\n    }\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum: number = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123104,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr: number[], n: number): number {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_245_max_sum",
  "language": "ts",
  "prompt": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_245_max_sum.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_left = [];\n    let max_sum_right = [];\n    let max_sum_left_temp = 0;\n    let max_sum_right_temp = 0;\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_left_temp = Math.max(max_sum_left_temp + arr[i], arr[i]);\n        max_sum_left[i] = max_sum_left_temp;\n    }\n    for (let i = arr.length - 1; i >= 0; i--) {\n        max_sum_right_temp = Math.max(max_sum_right_temp + arr[i], arr[i]);\n        max_sum_right[i] = max_sum_right_temp;\n    }\n    for (let i = 0; i < arr.length; i++) {\n        max_sum = Math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510599,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp460r_762.js:24:12)\n    at Object.<anonymous> (/tmp/tmp460r_762.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_left = [];\n    let max_sum_right = [];\n    let max_sum_left_temp = 0;\n    let max_sum_right_temp = 0;\n\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_left_temp = Math.max(max_sum_left_temp + arr[i], arr[i]);\n        max_sum_left[i] = max_sum_left_temp;\n    }\n\n    for (let i = arr.length - 1; i >= 0; i--) {\n        max_sum_right_temp = Math.max(max_sum_right_temp + arr[i], arr[i]);\n        max_sum_right[i] = max_sum_right_temp;\n    }\n\n    for (let i = 0; i < arr.length; i++) {\n        max_sum = Math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    return max_sum;\n}\n\nconsole.log(max_sum([1, 15, 51, 45, 33, 100, 12, 18, 9]));\nconsole.log(max_sum([80, 60, 30, 40, 20, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510599,
      "stdout": "284\n240\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmppyfd4x19.js:26:12)\n    at Object.<anonymous> (/tmp/tmppyfd4x19.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_left = [];\n    let max_sum_right = [];\n\n    // max sum from left to right\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_left[i] = arr[i];\n        for (let j = 0; j < i; j++) {\n            if (arr[j] < arr[i]) {\n                max_sum_left[i] = Math.max(max_sum_left[i], max_sum_left[j] + arr[i]);\n            }\n        }\n    }\n\n    // max sum from right to left\n    for (let i = arr.length - 1; i >= 0; i--) {\n        max_sum_right[i] = arr[i];\n        for (let j = arr.length - 1; j > i; j--) {\n            if (arr[j] < arr[i]) {\n                max_sum_right[i] = Math.max(max_sum_right[i], max_sum_right[j] + arr[i]);\n            }\n        }\n    }\n\n    // max sum of bitonic subsequence\n    for (let i = 0; i < arr.length; i++) {\n        max_sum = Math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510599,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max_sum_arr: number[] = [];\n  let max_sum: number = 0;\n  for (let i = 0; i < arr.length; i++) {\n    max_sum_arr[i] = arr[i];\n    for (let j = 0; j < i; j++) {\n      if (arr[j] < arr[i]) {\n        max_sum_arr[i] = Math.max(max_sum_arr[i], max_sum_arr[j] + arr[i]);\n      }\n    }\n    max_sum = Math.max(max_sum, max_sum_arr[i]);\n  }\n  return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510599,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n167\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp041fwmmb.js:19:12)\n    at Object.<anonymous> (/tmp/tmp041fwmmb.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 167,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum_so_far = 0;\n    let max_sum_ending_here = 0;\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_ending_here = Math.max(max_sum_ending_here + arr[i], 0);\n        max_sum_so_far = Math.max(max_sum_so_far, max_sum_ending_here);\n    }\n    return max_sum_so_far;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510599,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp8yrdljpx.js:14:12)\n    at Object.<anonymous> (/tmp/tmp8yrdljpx.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_left = new Array(arr.length);\n    let max_sum_right = new Array(arr.length);\n    max_sum_left[0] = arr[0];\n    max_sum_right[arr.length - 1] = arr[arr.length - 1];\n    for (let i = 1; i < arr.length; i++) {\n        max_sum_left[i] = Math.max(max_sum_left[i - 1] + arr[i], arr[i]);\n    }\n    for (let i = arr.length - 2; i >= 0; i--) {\n        max_sum_right[i] = Math.max(max_sum_right[i + 1] + arr[i], arr[i]);\n    }\n    for (let i = 0; i < arr.length; i++) {\n        max_sum = Math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510599,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpicx6eev6.js:22:12)\n    at Object.<anonymous> (/tmp/tmpicx6eev6.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_left = new Array(arr.length).fill(0);\n    let max_sum_right = new Array(arr.length).fill(0);\n\n    max_sum_left[0] = arr[0];\n    for (let i = 1; i < arr.length; i++) {\n        max_sum_left[i] = Math.max(max_sum_left[i - 1] + arr[i], arr[i]);\n    }\n\n    max_sum_right[arr.length - 1] = arr[arr.length - 1];\n    for (let i = arr.length - 2; i >= 0; i--) {\n        max_sum_right[i] = Math.max(max_sum_right[i + 1] + arr[i], arr[i]);\n    }\n\n    for (let i = 0; i < arr.length; i++) {\n        max_sum = Math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510599,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpr4l3tc3s.js:22:12)\n    at Object.<anonymous> (/tmp/tmpr4l3tc3s.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum_arr: number[] = new Array(arr.length);\n    let max_sum_rev_arr: number[] = new Array(arr.length);\n    let max_sum: number = 0;\n    max_sum_arr[0] = arr[0];\n    max_sum_rev_arr[arr.length - 1] = arr[arr.length - 1];\n    for (let i = 1; i < arr.length; i++) {\n        max_sum_arr[i] = Math.max(max_sum_arr[i - 1] + arr[i], arr[i]);\n    }\n    for (let i = arr.length - 2; i >= 0; i--) {\n        max_sum_rev_arr[i] = Math.max(max_sum_rev_arr[i + 1] + arr[i], arr[i]);\n    }\n    for (let i = 0; i < arr.length; i++) {\n        max_sum = Math.max(max_sum, max_sum_arr[i] + max_sum_rev_arr[i] - arr[i]);\n    }\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510599,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpbyix1lvl.js:22:12)\n    at Object.<anonymous> (/tmp/tmpbyix1lvl.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let n = arr.length;\n    let inc = new Array(n);\n    let dec = new Array(n);\n    inc[0] = arr[0];\n    dec[n - 1] = arr[n - 1];\n    for (let i = 1; i < n; i++) {\n        inc[i] = Math.max(inc[i - 1], arr[i]);\n    }\n    for (let i = n - 2; i >= 0; i--) {\n        dec[i] = Math.max(dec[i + 1], arr[i]);\n    }\n    let max = 0;\n    for (let i = 0; i < n; i++) {\n        max = Math.max(max, inc[i] + dec[i] - arr[i]);\n    }\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510599,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n118\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp2fznooc8.js:23:12)\n    at Object.<anonymous> (/tmp/tmp2fznooc8.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 118,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_so_far = 0;\n    let max_sum_ending_here = 0;\n    let max_sum_ending_here_so_far = 0;\n    let max_sum_ending_here_so_far_index = 0;\n    let max_sum_ending_here_index = 0;\n    let max_sum_ending_here_index_so_far = 0;\n    let max_sum_ending_here_index_so_far_index = 0;\n    let max_sum_ending_here_index_so_far_index_index = 0;\n    let max_sum_ending_here_index_so_far_index_index_index = 0;\n    let max_sum_ending_here_index_so_far_index_index_index_index = 0;\n    let max_sum_ending_here_index_so_far_index_index_index_index_index = 0;\n    let max_sum_ending_here_index_so_far_index_index_index_index_index_index = 0;\n    let max_sum_ending_here_index_so_far_index_index_index_index_index_index_index = 0;\n    let max_sum_ending_here_index_so_far_index_index_index_index_index_index_index_index = 0;\n    let max_sum_ending_here_index_so_far_index_index_index_index_index_index_index_index_index = 0;\n    let max_sum_ending_here_index_so_far_index_index_index_index_index_index_index_index_index_index = 0;\n    let max_sum_ending_here_index_so_far_index_index_index_index_index_index_index_index_index_index_index = 0;\n    let max_sum_ending_here_index_so_far_index_index_index_index_index_index_index_index_index_index_index_index = 0;\n    let max_sum_ending_here_index_so_far_index_index_index_\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510599,
      "stdout": "../../../../tmp/tmpvc6ir6rb.ts(34,8): error TS1005: '}' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max_ending_here = 0;\n  let max_so_far = 0;\n  for (let i = 0; i < arr.length; i++) {\n    max_ending_here = Math.max(arr[i], max_ending_here + arr[i]);\n    max_so_far = Math.max(max_so_far, max_ending_here);\n  }\n  return max_so_far;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510599,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp1zx1azik.js:14:12)\n    at Object.<anonymous> (/tmp/tmp1zx1azik.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_left = new Array(arr.length);\n    let max_sum_right = new Array(arr.length);\n    let max_sum_left_right = new Array(arr.length);\n\n    max_sum_left[0] = arr[0];\n    max_sum_right[arr.length - 1] = arr[arr.length - 1];\n    max_sum_left_right[0] = arr[0];\n    max_sum_left_right[arr.length - 1] = arr[arr.length - 1];\n\n    for (let i = 1; i < arr.length; i++) {\n        max_sum_left[i] = Math.max(arr[i], max_sum_left[i - 1] + arr[i]);\n    }\n\n    for (let i = arr.length - 2; i >= 0; i--) {\n        max_sum_right[i] = Math.max(arr[i], max_sum_right[i + 1] + arr[i]);\n    }\n\n    for (let i = 1; i < arr.length - 1; i++) {\n        max_sum_left_right[i] = Math.max(max_sum_left[i - 1] + max_sum_right[i + 1], max_sum_left_right[i - 1]);\n    }\n\n    return max_sum_left_right[arr.length - 2];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510599,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n272\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp47b9yutx.js:25:12)\n    at Object.<anonymous> (/tmp/tmp47b9yutx.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 272,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max = 0;\n    let max_sum = 0;\n    let max_sum_arr = [];\n    let max_sum_arr_rev = [];\n    let max_sum_arr_rev_rev = [];\n    let max_sum_arr_rev_rev_rev = [];\n    let max_sum_arr_rev_rev_rev_rev = [];\n    let max_sum_arr_rev_rev_rev_rev_rev = [];\n    let max_sum_arr_rev_rev_rev_rev_rev_rev = [];\n    let max_sum_arr_rev_rev_rev_rev_rev_rev_rev = [];\n    let max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    let max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    let max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    let max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    let max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    let max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    let max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    let max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    let max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    let max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    let max_sum_arr_rev\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510599,
      "stdout": "../../../../tmp/tmpa4_eb83h.ts(35,8): error TS1005: '}' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_left = [];\n    let max_sum_right = [];\n    let max_sum_left_temp = 0;\n    let max_sum_right_temp = 0;\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_left_temp = Math.max(max_sum_left_temp + arr[i], arr[i]);\n        max_sum_left[i] = max_sum_left_temp;\n    }\n    for (let i = arr.length - 1; i >= 0; i--) {\n        max_sum_right_temp = Math.max(max_sum_right_temp + arr[i], arr[i]);\n        max_sum_right[i] = max_sum_right_temp;\n    }\n    for (let i = 0; i < arr.length; i++) {\n        max_sum = Math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510599,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp460r_762.js:24:12)\n    at Object.<anonymous> (/tmp/tmp460r_762.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max_sum = 0;\n  for (let i = 0; i < arr.length; i++) {\n    let sum = 0;\n    for (let j = i; j < arr.length; j++) {\n      sum += arr[j];\n      if (sum > max_sum) {\n        max_sum = sum;\n      }\n    }\n  }\n  return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510599,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmprc6o38ta.js:18:12)\n    at Object.<anonymous> (/tmp/tmprc6o38ta.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_start = 0;\n    let max_sum_end = 0;\n    let sum = 0;\n    let sum_start = 0;\n    let sum_end = 0;\n    let increasing = true;\n    for (let i = 0; i < arr.length; i++) {\n        if (increasing) {\n            if (arr[i] > arr[i + 1]) {\n                increasing = false;\n                sum_end = i;\n            }\n        } else {\n            if (arr[i] < arr[i + 1]) {\n                increasing = true;\n                sum = sum + arr[i];\n                if (sum > max_sum) {\n                    max_sum = sum;\n                    max_sum_start = sum_start;\n                    max_sum_end = sum_end;\n                }\n                sum_start = i;\n                sum_end = i;\n                sum = 0;\n            }\n        }\n        sum = sum + arr[i];\n    }\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510599,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n145\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp1inunvuz.js:38:12)\n    at Object.<anonymous> (/tmp/tmp1inunvuz.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 145,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let n = arr.length;\n    let max_sum = 0;\n    let max_sum_left = [];\n    let max_sum_right = [];\n    max_sum_left[0] = arr[0];\n    max_sum_right[n - 1] = arr[n - 1];\n    for (let i = 1; i < n; i++) {\n        max_sum_left[i] = Math.max(arr[i], max_sum_left[i - 1] + arr[i]);\n    }\n    for (let i = n - 2; i >= 0; i--) {\n        max_sum_right[i] = Math.max(arr[i], max_sum_right[i + 1] + arr[i]);\n    }\n    for (let i = 0; i < n; i++) {\n        max_sum = Math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510599,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp6owb788g.js:23:12)\n    at Object.<anonymous> (/tmp/tmp6owb788g.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_arr = [];\n    for (let i = 0; i < arr.length; i++) {\n        let sum = 0;\n        let sum_arr = [];\n        for (let j = i; j < arr.length; j++) {\n            if (arr[j] > arr[j - 1]) {\n                sum += arr[j];\n                sum_arr.push(arr[j]);\n            } else {\n                break;\n            }\n        }\n        for (let j = i - 1; j >= 0; j--) {\n            if (arr[j] > arr[j + 1]) {\n                sum += arr[j];\n                sum_arr.push(arr[j]);\n            } else {\n                break;\n            }\n        }\n        if (sum > max_sum) {\n            max_sum = sum;\n            max_sum_arr = sum_arr;\n        }\n    }\n    console.log(max_sum_arr);\n    return max_sum;\n}\n\nconsole.log(max_sum([1, 15, 51, 45, 33, 100, 12, 18, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510599,
      "stdout": "[ 100 ]\n100\n[ 100 ]\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n100\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpzh9ly77v.js:38:12)\n    at Object.<anonymous> (/tmp/tmpzh9ly77v.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 100,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let n = arr.length;\n    let inc = new Array(n).fill(0);\n    let dec = new Array(n).fill(0);\n    inc[0] = arr[0];\n    dec[n - 1] = arr[n - 1];\n    for (let i = 1; i < n; i++) {\n        inc[i] = Math.max(inc[i - 1] + arr[i], arr[i]);\n    }\n    for (let i = n - 2; i >= 0; i--) {\n        dec[i] = Math.max(dec[i + 1] + arr[i], arr[i]);\n    }\n    let max = -Infinity;\n    for (let i = 0; i < n; i++) {\n        max = Math.max(max, inc[i] + dec[i] - arr[i]);\n    }\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510599,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpyuwo8sej.js:23:12)\n    at Object.<anonymous> (/tmp/tmpyuwo8sej.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let n = arr.length;\n    let inc = new Array(n).fill(0);\n    let dec = new Array(n).fill(0);\n    inc[0] = arr[0];\n    dec[n - 1] = arr[n - 1];\n    for (let i = 1; i < n; i++) {\n        inc[i] = Math.max(inc[i - 1] + arr[i], arr[i]);\n    }\n    for (let i = n - 2; i >= 0; i--) {\n        dec[i] = Math.max(dec[i + 1] + arr[i], arr[i]);\n    }\n    let max = inc[0] + dec[0] - arr[0];\n    for (let i = 1; i < n; i++) {\n        max = Math.max(max, inc[i] + dec[i] - arr[i]);\n    }\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510599,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpmapiewb6.js:23:12)\n    at Object.<anonymous> (/tmp/tmpmapiewb6.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max_sum = 0;\n  let max_sum_ending_here = 0;\n  for (let i = 0; i < arr.length; i++) {\n    max_sum_ending_here = Math.max(max_sum_ending_here + arr[i], 0);\n    max_sum = Math.max(max_sum, max_sum_ending_here);\n  }\n  return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123916,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpn_ipratd.js:14:12)\n    at Object.<anonymous> (/tmp/tmpn_ipratd.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum_arr: number[] = [];\n    let max_sum: number = 0;\n    let max_sum_index: number = 0;\n    let max_sum_index_end: number = 0;\n    let max_sum_index_start: number = 0;\n    let max_sum_index_end_temp: number = 0;\n    let max_sum_index_start_temp: number = 0;\n    let max_sum_temp: number = 0;\n    let max_sum_temp_start: number = 0;\n    let max_sum_temp_end: number = 0;\n    let max_sum_temp_start_end: number = 0;\n    let max_sum_temp_end_start: number = 0;\n    let max_sum_temp_start_end_start: number = 0;\n    let max_sum_temp_end_start_end: number = 0;\n    let max_sum_temp_start_end_start_end: number = 0;\n    let max_sum_temp_end_start_end_start: number = 0;\n    let max_sum_temp_start_end_start_end_start: number = 0;\n    let max_sum_temp_end_start_end_start_end: number = 0;\n    let max_sum_temp_start_end_start_end_start_end: number = 0;\n    let max_sum_temp_end_start_end_start_end_start: number = 0;\n    let max_sum_temp_start_end_start_end_start_end_start: number = 0;\n    let max_sum_temp_end_start_end_start_end_start_end: number = 0;\n    let max_sum_temp_start_end_start_end_start_end_start_end: number = 0;\n    let max_sum_temp_end_start_end_start_end_start_end_start: number = 0;\n    let max_sum_temp_start_end_start_end_start_end_start_end_start: number = 0;\n    let max_sum_temp_end_start_end_\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123916,
      "stdout": "../../../../tmp/tmp2h1swtz9.ts(40,8): error TS1005: '}' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max_sum = 0;\n  for (let i = 0; i < arr.length; i++) {\n    let sum = 0;\n    for (let j = i; j < arr.length; j++) {\n      sum += arr[j];\n      if (sum > max_sum) {\n        max_sum = sum;\n      }\n    }\n  }\n  return max_sum;\n}\n\nconsole.log(max_sum([1, 15, 51, 45, 33, 100, 12, 18, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123916,
      "stdout": "284\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpqjjbmvi1.js:19:12)\n    at Object.<anonymous> (/tmp/tmpqjjbmvi1.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let n = arr.length;\n    let inc = new Array(n);\n    let dec = new Array(n);\n    inc[0] = arr[0];\n    dec[n - 1] = arr[n - 1];\n    for (let i = 1; i < n; i++) {\n        inc[i] = Math.max(inc[i - 1], arr[i]);\n    }\n    for (let i = n - 2; i >= 0; i--) {\n        dec[i] = Math.max(dec[i + 1], arr[i]);\n    }\n    let max = 0;\n    for (let i = 0; i < n; i++) {\n        max = Math.max(max, inc[i] + dec[i] - arr[i]);\n    }\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510599,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n118\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp2fznooc8.js:23:12)\n    at Object.<anonymous> (/tmp/tmp2fznooc8.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 118,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let maxSum = 0;\n  let maxSumSoFar = 0;\n  let maxSumEndingHere = 0;\n  for (let i = 0; i < arr.length; i++) {\n    maxSumEndingHere += arr[i];\n    if (maxSumEndingHere < 0) {\n      maxSumEndingHere = 0;\n    }\n    if (maxSumSoFar < maxSumEndingHere) {\n      maxSumSoFar = maxSumEndingHere;\n    }\n  }\n  maxSum = maxSumSoFar;\n  maxSumSoFar = 0;\n  maxSumEndingHere = 0;\n  for (let i = arr.length - 1; i >= 0; i--) {\n    maxSumEndingHere += arr[i];\n    if (maxSumEndingHere < 0) {\n      maxSumEndingHere = 0;\n    }\n    if (maxSumSoFar < maxSumEndingHere) {\n      maxSumSoFar = maxSumEndingHere;\n    }\n  }\n  maxSum += maxSumSoFar;\n  return maxSum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123916,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n568\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpsqhaimra.js:33:12)\n    at Object.<anonymous> (/tmp/tmpsqhaimra.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 568,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max_sum = 0;\n  let max_sum_so_far = 0;\n  let max_sum_ending_here = 0;\n  let max_sum_ending_here_so_far = 0;\n  let max_sum_ending_here_so_far_index = 0;\n  let max_sum_ending_here_index = 0;\n  let max_sum_ending_here_index_so_far = 0;\n  let max_sum_ending_here_index_so_far_index = 0;\n  let max_sum_ending_here_index_so_far_index_index = 0;\n  let max_sum_ending_here_index_so_far_index_index_index = 0;\n  let max_sum_ending_here_index_so_far_index_index_index_index = 0;\n  let max_sum_ending_here_index_so_far_index_index_index_index_index = 0;\n  let max_sum_ending_here_index_so_far_index_index_index_index_index_index = 0;\n  let max_sum_ending_here_index_so_far_index_index_index_index_index_index_index = 0;\n  let max_sum_ending_here_index_so_far_index_index_index_index_index_index_index_index = 0;\n  let max_sum_ending_here_index_so_far_index_index_index_index_index_index_index_index_index = 0;\n  let max_sum_ending_here_index_so_far_index_index_index_index_index_index_index_index_index_index = 0;\n  let max_sum_ending_here_index_so_far_index_index_index_index_index_index_index_index_index_index_index = 0;\n  let max_sum_ending_here_index_so_far_index_index_index_index_index_index_index_index_index_index_index_index = 0;\n  let max_sum_ending_here_index_so_far_index_index_index_\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123916,
      "stdout": "../../../../tmp/tmpoqr8pdxe.ts(34,8): error TS1005: '}' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum_inc = new Array(arr.length);\n    let max_sum_dec = new Array(arr.length);\n    max_sum_inc[0] = arr[0];\n    max_sum_dec[arr.length - 1] = arr[arr.length - 1];\n    for (let i = 1; i < arr.length; i++) {\n        max_sum_inc[i] = Math.max(max_sum_inc[i - 1] + arr[i], arr[i]);\n    }\n    for (let i = arr.length - 2; i >= 0; i--) {\n        max_sum_dec[i] = Math.max(max_sum_dec[i + 1] + arr[i], arr[i]);\n    }\n    let max_sum = max_sum_inc[0] + max_sum_dec[0] - arr[0];\n    for (let i = 1; i < arr.length; i++) {\n        max_sum = Math.max(max_sum, max_sum_inc[i] + max_sum_dec[i] - arr[i]);\n    }\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123916,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpjyy2szkg.js:22:12)\n    at Object.<anonymous> (/tmp/tmpjyy2szkg.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum_inc = new Array(arr.length);\n    let max_sum_dec = new Array(arr.length);\n    max_sum_inc[0] = arr[0];\n    max_sum_dec[arr.length - 1] = arr[arr.length - 1];\n    for (let i = 1; i < arr.length; i++) {\n        max_sum_inc[i] = Math.max(max_sum_inc[i - 1] + arr[i], arr[i]);\n    }\n    for (let i = arr.length - 2; i >= 0; i--) {\n        max_sum_dec[i] = Math.max(max_sum_dec[i + 1] + arr[i], arr[i]);\n    }\n    let max = max_sum_inc[0] + max_sum_dec[0] - arr[0];\n    for (let i = 1; i < arr.length; i++) {\n        max = Math.max(max, max_sum_inc[i] + max_sum_dec[i] - arr[i]);\n    }\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp7056ou0e.js:22:12)\n    at Object.<anonymous> (/tmp/tmp7056ou0e.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_so_far = 0;\n    let max_sum_ending_here = 0;\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_ending_here += arr[i];\n        if (max_sum_ending_here < 0) {\n            max_sum_ending_here = 0;\n        }\n        if (max_sum_so_far < max_sum_ending_here) {\n            max_sum_so_far = max_sum_ending_here;\n        }\n    }\n    return max_sum_so_far;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123916,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp2k1gjw35.js:20:12)\n    at Object.<anonymous> (/tmp/tmp2k1gjw35.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let n = arr.length;\n    let inc = new Array(n).fill(0);\n    let dec = new Array(n).fill(0);\n    inc[0] = arr[0];\n    dec[n - 1] = arr[n - 1];\n    for (let i = 1; i < n; i++) {\n        inc[i] = Math.max(inc[i - 1] + arr[i], arr[i]);\n    }\n    for (let i = n - 2; i >= 0; i--) {\n        dec[i] = Math.max(dec[i + 1] + arr[i], arr[i]);\n    }\n    let max = 0;\n    for (let i = 0; i < n; i++) {\n        max = Math.max(max, inc[i] + dec[i] - arr[i]);\n    }\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123916,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpb8fe2___.js:23:12)\n    at Object.<anonymous> (/tmp/tmpb8fe2___.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_left = [];\n    let max_sum_right = [];\n    let max_sum_left_temp = 0;\n    let max_sum_right_temp = 0;\n\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_left_temp += arr[i];\n        if (max_sum_left_temp < 0) {\n            max_sum_left_temp = 0;\n        }\n        max_sum_left[i] = max_sum_left_temp;\n    }\n\n    for (let i = arr.length - 1; i >= 0; i--) {\n        max_sum_right_temp += arr[i];\n        if (max_sum_right_temp < 0) {\n            max_sum_right_temp = 0;\n        }\n        max_sum_right[i] = max_sum_right_temp;\n    }\n\n    for (let i = 0; i < arr.length; i++) {\n        max_sum = Math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123916,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpg3qizpcp.js:30:12)\n    at Object.<anonymous> (/tmp/tmpg3qizpcp.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max = 0;\n  let max_sum = 0;\n  let max_sum_rev = 0;\n  let max_sum_arr = [];\n  let max_sum_rev_arr = [];\n  let max_sum_arr_rev = [];\n  let max_sum_rev_arr_rev = [];\n  let max_sum_arr_rev_rev = [];\n  let max_sum_rev_arr_rev_rev = [];\n  for (let i = 0; i < arr.length; i++) {\n    max_sum_arr.push(arr[i]);\n    max_sum_rev_arr.push(arr[i]);\n    max_sum_arr_rev.push(arr[i]);\n    max_sum_rev_arr_rev.push(arr[i]);\n    max_sum_arr_rev_rev.push(arr[i]);\n    max_sum_rev_arr_rev_rev.push(arr[i]);\n    for (let j = i + 1; j < arr.length; j++) {\n      if (arr[j] > arr[j - 1]) {\n        max_sum_arr.push(arr[j]);\n        max_sum_rev_arr.push(arr[j]);\n        max_sum_arr_rev.push(arr[j]);\n        max_sum_rev_arr_rev.push(arr[j]);\n        max_sum_arr_rev_rev.push(arr[j]);\n        max_sum_rev_arr_rev_rev.push(arr[j]);\n      } else {\n        break;\n      }\n    }\n    for (let k = i + 1; k < arr.length; k++) {\n      if (arr[k] < arr[k - 1]) {\n        max_sum_arr_rev.push(arr[k]);\n        max_sum_rev_arr_rev.push(arr[k]);\n        max_sum_arr_rev_rev.push(arr[k]);\n        max_sum_rev_arr_rev_rev.push(arr[k]);\n      } else {\n        break;\n      }\n    }\n    for (let l = i + 1;\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "../../../../tmp/tmpja1_bjmk.ts(42,9): error TS1005: ';' expected.\n../../../../tmp/tmpja1_bjmk.ts(53,8): error TS1005: '}' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_arr = [];\n    let max_sum_arr_index = 0;\n    let max_sum_arr_length = 0;\n    let max_sum_arr_length_index = 0;\n    let max_sum_arr_length_length = 0;\n    let max_sum_arr_length_length_index = 0;\n    let max_sum_arr_length_length_length = 0;\n    let max_sum_arr_length_length_length_index = 0;\n    let max_sum_arr_length_length_length_length = 0;\n    let max_sum_arr_length_length_length_length_index = 0;\n    let max_sum_arr_length_length_length_length_length = 0;\n    let max_sum_arr_length_length_length_length_length_index = 0;\n    let max_sum_arr_length_length_length_length_length_length = 0;\n    let max_sum_arr_length_length_length_length_length_length_index = 0;\n    let max_sum_arr_length_length_length_length_length_length_length = 0;\n    let max_sum_arr_length_length_length_length_length_length_length_index = 0;\n    let max_sum_arr_length_length_length_length_length_length_length_length = 0;\n    let max_sum_arr_length_length_length_length_length_length_length_length_index = 0;\n    let max_sum_arr_length_length_length_length_length_length_length_length_length = 0;\n    let max_sum_arr_length_length_length_length_length_length_length_length_length_index = 0;\n    let max_sum_arr_length_length_length_length_length_length_length_length_length_length = 0;\n    let max_sum_arr_length_length_length_length_length_length_length_length_length_length_index = 0;\n    let max_sum_arr_length_length_length_length_length_length\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123916,
      "stdout": "../../../../tmp/tmp792nk358.ts(38,8): error TS1005: '}' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_left = [];\n    let max_sum_right = [];\n\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_left[i] = arr[i];\n        max_sum_right[i] = arr[i];\n    }\n\n    for (let i = 1; i < arr.length; i++) {\n        for (let j = 0; j < i; j++) {\n            if (arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i]) {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for (let i = arr.length - 2; i >= 0; i--) {\n        for (let j = arr.length - 1; j > i; j--) {\n            if (arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i]) {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for (let i = 0; i < arr.length; i++) {\n        max_sum = Math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    return max_sum;\n}\n\nconsole.log(max_sum([1, 15, 51, 45, 33, 100, 12, 18, 9]));\nconsole.log(max_sum([80, 60, 30, 40, 20, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "194\n210\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let n = arr.length;\n    let inc = new Array(n);\n    let dec = new Array(n);\n    inc[0] = arr[0];\n    dec[n - 1] = arr[n - 1];\n    for (let i = 1; i < n; i++) {\n        inc[i] = Math.max(inc[i - 1], arr[i]);\n    }\n    for (let i = n - 2; i >= 0; i--) {\n        dec[i] = Math.max(dec[i + 1], arr[i]);\n    }\n    let max = 0;\n    for (let i = 0; i < n; i++) {\n        max = Math.max(max, inc[i] + dec[i] - arr[i]);\n    }\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510599,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n118\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp2fznooc8.js:23:12)\n    at Object.<anonymous> (/tmp/tmp2fznooc8.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 118,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max_sum = 0;\n  let max_sum_left = 0;\n  let max_sum_right = 0;\n  let max_sum_left_right = 0;\n  let max_sum_right_left = 0;\n  let max_sum_left_right_left = 0;\n  let max_sum_right_left_right = 0;\n\n  for (let i = 0; i < arr.length; i++) {\n    max_sum_left = Math.max(max_sum_left + arr[i], arr[i]);\n    max_sum_right = Math.max(max_sum_right + arr[arr.length - 1 - i], arr[arr.length - 1 - i]);\n    max_sum_left_right = Math.max(max_sum_left_right + arr[i], max_sum_left);\n    max_sum_right_left = Math.max(max_sum_right_left + arr[arr.length - 1 - i], max_sum_right);\n    max_sum_left_right_left = Math.max(max_sum_left_right_left + arr[i], max_sum_left_right);\n    max_sum_right_left_right = Math.max(max_sum_right_left_right + arr[arr.length - 1 - i], max_sum_right_left);\n    max_sum = Math.max(max_sum, max_sum_left, max_sum_right, max_sum_left_right, max_sum_right_left, max_sum_left_right_left, max_sum_right_left_right);\n  }\n\n  return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123916,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpamyopbay.js:24:12)\n    at Object.<anonymous> (/tmp/tmpamyopbay.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let sum = 0;\n    let max_sum_left = [];\n    let max_sum_right = [];\n    for (let i = 0; i < arr.length; i++) {\n        sum += arr[i];\n        if (sum < 0) {\n            sum = 0;\n        }\n        max_sum_left[i] = sum;\n    }\n    sum = 0;\n    for (let i = arr.length - 1; i >= 0; i--) {\n        sum += arr[i];\n        if (sum < 0) {\n            sum = 0;\n        }\n        max_sum_right[i] = sum;\n    }\n    for (let i = 0; i < arr.length; i++) {\n        max_sum = Math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123916,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpi8lrgdys.js:30:12)\n    at Object.<anonymous> (/tmp/tmpi8lrgdys.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let maxSum = 0;\n    let maxSumLeft = 0;\n    let maxSumRight = 0;\n    let maxSumLeftRight = 0;\n    let maxSumRightLeft = 0;\n    let maxSumLeftRightLeft = 0;\n    let maxSumRightLeftRight = 0;\n    let maxSumLeftRightLeftRight = 0;\n    let maxSumRightLeftRightLeft = 0;\n    let maxSumLeftRightLeftRightLeft = 0;\n    let maxSumRightLeftRightLeftRight = 0;\n    let maxSumLeftRightLeftRightLeftRight = 0;\n    let maxSumRightLeftRightLeftRightLeft = 0;\n    let maxSumLeftRightLeftRightLeftRightLeft = 0;\n    let maxSumRightLeftRightLeftRightLeftRight = 0;\n    let maxSumLeftRightLeftRightLeftRightLeftRight = 0;\n    let maxSumRightLeftRightLeftRightLeftRightLeft = 0;\n    let maxSumLeftRightLeftRightLeftRightLeftRightLeft = 0;\n    let maxSumRightLeftRightLeftRightLeftRightLeftRight = 0;\n    let maxSumLeftRightLeftRightLeftRightLeftRightLeftRight = 0;\n    let maxSumRightLeftRightLeftRightLeftRightLeftRightLeft = 0;\n    let maxSumLeftRightLeftRightLeftRightLeftRightLeftRightLeft = 0;\n    let maxSumRightLeftRightLeftRightLeftRightLeftRightLeftRight = 0;\n    let maxSumLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight = 0;\n    let maxSumRightLeftRightLeftRightLeftRightLeftRightLeftRightLeft = 0;\n    let maxSumLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeft = 0;\n    let maxSumRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight = 0;\n    let maxSumLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight = 0;\n    let maxSumRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeft = 0;\n    let maxSumLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeft = 0;\n    let maxSumRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight = 0;\n    let maxSumLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight = 0;\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123916,
      "stdout": "../../../../tmp/tmpby_fljkh.ts(46,8): error TS1005: '}' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let n = arr.length;\n    let inc = new Array(n);\n    let dec = new Array(n);\n    inc[0] = arr[0];\n    dec[n - 1] = arr[n - 1];\n    for (let i = 1; i < n; i++) {\n        inc[i] = Math.max(inc[i - 1] + arr[i], arr[i]);\n    }\n    for (let i = n - 2; i >= 0; i--) {\n        dec[i] = Math.max(dec[i + 1] + arr[i], arr[i]);\n    }\n    let max = inc[0] + dec[1];\n    for (let i = 1; i < n - 1; i++) {\n        max = Math.max(max, inc[i] + dec[i + 1]);\n    }\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123916,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpzl8o3nnj.js:23:12)\n    at Object.<anonymous> (/tmp/tmpzl8o3nnj.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max_sum = 0;\n  let max_sum_ending_here = 0;\n  for (let i = 0; i < arr.length; i++) {\n    max_sum_ending_here = Math.max(arr[i], max_sum_ending_here + arr[i]);\n    max_sum = Math.max(max_sum, max_sum_ending_here);\n  }\n  return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123916,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpmn12g1o5.js:14:12)\n    at Object.<anonymous> (/tmp/tmpmn12g1o5.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let dp1 = new Array(arr.length).fill(0);\n    let dp2 = new Array(arr.length).fill(0);\n    dp1[0] = arr[0];\n    dp2[arr.length - 1] = arr[arr.length - 1];\n    for (let i = 1; i < arr.length; i++) {\n        dp1[i] = Math.max(dp1[i - 1] + arr[i], arr[i]);\n    }\n    for (let i = arr.length - 2; i >= 0; i--) {\n        dp2[i] = Math.max(dp2[i + 1] + arr[i], arr[i]);\n    }\n    let max = 0;\n    for (let i = 0; i < arr.length; i++) {\n        max = Math.max(max, dp1[i] + dp2[i] - arr[i]);\n    }\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123916,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp91q9fmbd.js:22:12)\n    at Object.<anonymous> (/tmp/tmp91q9fmbd.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let n = arr.length;\n    let inc = new Array(n);\n    let dec = new Array(n);\n    inc[0] = arr[0];\n    dec[n - 1] = arr[n - 1];\n    for (let i = 1; i < n; i++) {\n        inc[i] = Math.max(inc[i - 1], arr[i]);\n    }\n    for (let i = n - 2; i >= 0; i--) {\n        dec[i] = Math.max(dec[i + 1], arr[i]);\n    }\n    let max = 0;\n    for (let i = 0; i < n; i++) {\n        max = Math.max(max, inc[i] + dec[i] - arr[i]);\n    }\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510599,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n118\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp2fznooc8.js:23:12)\n    at Object.<anonymous> (/tmp/tmp2fznooc8.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 118,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_left = [];\n    let max_sum_right = [];\n    let max_sum_left_temp = 0;\n    let max_sum_right_temp = 0;\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_left_temp = Math.max(max_sum_left_temp + arr[i], arr[i]);\n        max_sum_left[i] = max_sum_left_temp;\n    }\n    for (let i = arr.length - 1; i >= 0; i--) {\n        max_sum_right_temp = Math.max(max_sum_right_temp + arr[i], arr[i]);\n        max_sum_right[i] = max_sum_right_temp;\n    }\n    for (let i = 0; i < arr.length; i++) {\n        max_sum = Math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510599,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp460r_762.js:24:12)\n    at Object.<anonymous> (/tmp/tmp460r_762.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_left = [];\n    let max_sum_right = [];\n    let max_sum_left_temp = 0;\n    let max_sum_right_temp = 0;\n\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_left_temp = Math.max(max_sum_left_temp + arr[i], arr[i]);\n        max_sum_left[i] = max_sum_left_temp;\n    }\n\n    for (let i = arr.length - 1; i >= 0; i--) {\n        max_sum_right_temp = Math.max(max_sum_right_temp + arr[i], arr[i]);\n        max_sum_right[i] = max_sum_right_temp;\n    }\n\n    for (let i = 0; i < arr.length; i++) {\n        max_sum = Math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123916,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp5_gg1klu.js:24:12)\n    at Object.<anonymous> (/tmp/tmp5_gg1klu.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let n = arr.length;\n    let inc = new Array(n).fill(0);\n    let dec = new Array(n).fill(0);\n    inc[0] = arr[0];\n    dec[n - 1] = arr[n - 1];\n    for (let i = 1; i < n; i++) {\n        inc[i] = Math.max(inc[i - 1] + arr[i], arr[i]);\n    }\n    for (let i = n - 2; i >= 0; i--) {\n        dec[i] = Math.max(dec[i + 1] + arr[i], arr[i]);\n    }\n    let max = 0;\n    for (let i = 0; i < n; i++) {\n        max = Math.max(max, inc[i] + dec[i] - arr[i]);\n    }\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123916,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpb8fe2___.js:23:12)\n    at Object.<anonymous> (/tmp/tmpb8fe2___.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_left = [];\n    let max_sum_right = [];\n\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_left[i] = arr[i];\n        max_sum_right[i] = arr[i];\n    }\n\n    for (let i = 1; i < arr.length; i++) {\n        for (let j = 0; j < i; j++) {\n            if (arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i]) {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for (let i = arr.length - 2; i >= 0; i--) {\n        for (let j = arr.length - 1; j > i; j--) {\n            if (arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i]) {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for (let i = 0; i < arr.length; i++) {\n        max_sum = Math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123916,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max = 0;\n  let sum = 0;\n  for (let i = 0; i < arr.length; i++) {\n    sum += arr[i];\n    if (sum > max) {\n      max = sum;\n    }\n  }\n  return max;\n}\n\nconsole.log(max_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217,\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123916,
      "stdout": "../../../../tmp/tmprnj3tmnq.ts(15,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max_sum = 0;\n  let max_sum_so_far = 0;\n  let max_sum_so_far_reverse = 0;\n  let max_sum_reverse = 0;\n  for (let i = 0; i < arr.length; i++) {\n    max_sum_so_far += arr[i];\n    if (max_sum_so_far < 0) {\n      max_sum_so_far = 0;\n    }\n    if (max_sum_so_far > max_sum) {\n      max_sum = max_sum_so_far;\n    }\n  }\n  for (let i = arr.length - 1; i >= 0; i--) {\n    max_sum_so_far_reverse += arr[i];\n    if (max_sum_so_far_reverse < 0) {\n      max_sum_so_far_reverse = 0;\n    }\n    if (max_sum_so_far_reverse > max_sum_reverse) {\n      max_sum_reverse = max_sum_so_far_reverse;\n    }\n  }\n  return max_sum + max_sum_reverse;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123916,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n568\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmprox_71uc.js:30:12)\n    at Object.<anonymous> (/tmp/tmprox_71uc.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 568,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_left = new Array(arr.length).fill(0);\n    let max_sum_right = new Array(arr.length).fill(0);\n\n    // find max sum from left to right\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_left[i] = arr[i];\n        for (let j = 0; j < i; j++) {\n            if (arr[j] < arr[i]) {\n                max_sum_left[i] = Math.max(max_sum_left[i], max_sum_left[j] + arr[i]);\n            }\n        }\n    }\n\n    // find max sum from right to left\n    for (let i = arr.length - 1; i >= 0; i--) {\n        max_sum_right[i] = arr[i];\n        for (let j = arr.length - 1; j > i; j--) {\n            if (arr[j] < arr[i]) {\n                max_sum_right[i] = Math.max(max_sum_right[i], max_sum_right[j] + arr[i]);\n            }\n        }\n    }\n\n    // find max sum\n    for (let i = 0; i < arr.length; i++) {\n        max_sum = Math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_left = new Array(arr.length).fill(0);\n    let max_sum_right = new Array(arr.length).fill(0);\n\n    max_sum_left[0] = arr[0];\n    max_sum_right[arr.length - 1] = arr[arr.length - 1];\n\n    for (let i = 1; i < arr.length; i++) {\n        max_sum_left[i] = Math.max(max_sum_left[i - 1], arr[i]);\n    }\n\n    for (let i = arr.length - 2; i >= 0; i--) {\n        max_sum_right[i] = Math.max(max_sum_right[i + 1], arr[i]);\n    }\n\n    for (let i = 0; i < arr.length; i++) {\n        max_sum = Math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n118\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpr19k9g9b.js:22:12)\n    at Object.<anonymous> (/tmp/tmpr19k9g9b.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 118,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_left = [];\n    let max_sum_right = [];\n    let max_sum_left_temp = 0;\n    let max_sum_right_temp = 0;\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_left_temp = Math.max(max_sum_left_temp + arr[i], arr[i]);\n        max_sum_left[i] = max_sum_left_temp;\n    }\n    for (let i = arr.length - 1; i >= 0; i--) {\n        max_sum_right_temp = Math.max(max_sum_right_temp + arr[i], arr[i]);\n        max_sum_right[i] = max_sum_right_temp;\n    }\n    for (let i = 0; i < arr.length; i++) {\n        max_sum = Math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510599,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp460r_762.js:24:12)\n    at Object.<anonymous> (/tmp/tmp460r_762.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max_sum = 0;\n  let max_sum_left = [];\n  let max_sum_right = [];\n  let max_sum_left_temp = 0;\n  let max_sum_right_temp = 0;\n\n  for (let i = 0; i < arr.length; i++) {\n    max_sum_left_temp = Math.max(max_sum_left_temp + arr[i], arr[i]);\n    max_sum_left[i] = max_sum_left_temp;\n  }\n\n  for (let i = arr.length - 1; i >= 0; i--) {\n    max_sum_right_temp = Math.max(max_sum_right_temp + arr[i], arr[i]);\n    max_sum_right[i] = max_sum_right_temp;\n  }\n\n  for (let i = 0; i < arr.length; i++) {\n    max_sum = Math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n  }\n\n  return max_sum;\n}\n\nconsole.log(max_sum([1, 15, 51, 45, 33, 100, 12, 18, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123921,
      "stdout": "284\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmprsxvf77x.js:25:12)\n    at Object.<anonymous> (/tmp/tmprsxvf77x.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let n = arr.length;\n    let inc = new Array(n).fill(0);\n    let dec = new Array(n).fill(0);\n    inc[0] = arr[0];\n    dec[n - 1] = arr[n - 1];\n    for (let i = 1; i < n; i++) {\n        inc[i] = Math.max(inc[i - 1], arr[i]);\n    }\n    for (let i = n - 2; i >= 0; i--) {\n        dec[i] = Math.max(dec[i + 1], arr[i]);\n    }\n    let max = 0;\n    for (let i = 0; i < n; i++) {\n        max = Math.max(max, inc[i] + dec[i] - arr[i]);\n    }\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n118\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpv5ok5e1g.js:23:12)\n    at Object.<anonymous> (/tmp/tmpv5ok5e1g.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 118,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let n = arr.length;\n    let inc = new Array(n);\n    let dec = new Array(n);\n    inc[0] = arr[0];\n    dec[n - 1] = arr[n - 1];\n    for (let i = 1; i < n; i++) {\n        inc[i] = Math.max(arr[i], arr[i] + inc[i - 1]);\n    }\n    for (let i = n - 2; i >= 0; i--) {\n        dec[i] = Math.max(arr[i], arr[i] + dec[i + 1]);\n    }\n    let max = inc[0] + dec[1];\n    for (let i = 1; i < n - 1; i++) {\n        if (inc[i] + dec[i + 1] > max) {\n            max = inc[i] + dec[i + 1];\n        }\n    }\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp340sliuk.js:25:12)\n    at Object.<anonymous> (/tmp/tmp340sliuk.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let sum = 0;\n        for (let j = i; j < arr.length; j++) {\n            sum += arr[j];\n            if (sum > max_sum) {\n                max_sum = sum;\n            }\n        }\n    }\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpbsj4xgnx.js:18:12)\n    at Object.<anonymous> (/tmp/tmpbsj4xgnx.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_left = [];\n    let max_sum_right = [];\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_left[i] = arr[i];\n        max_sum_right[i] = arr[i];\n    }\n    for (let i = 1; i < arr.length; i++) {\n        for (let j = 0; j < i; j++) {\n            if (arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i]) {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n    for (let i = arr.length - 2; i >= 0; i--) {\n        for (let j = arr.length - 1; j > i; j--) {\n            if (arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i]) {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n    for (let i = 0; i < arr.length; i++) {\n        if (max_sum < max_sum_left[i] + max_sum_right[i] - arr[i]) {\n            max_sum = max_sum_left[i] + max_sum_right[i] - arr[i];\n        }\n    }\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum_arr: number[] = [];\n    let max_sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_arr[i] = arr[i];\n        for (let j = 0; j < i; j++) {\n            if (arr[j] < arr[i]) {\n                max_sum_arr[i] = Math.max(max_sum_arr[i], max_sum_arr[j] + arr[i]);\n            }\n        }\n        max_sum = Math.max(max_sum, max_sum_arr[i]);\n    }\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n167\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmplkybxg62.js:19:12)\n    at Object.<anonymous> (/tmp/tmplkybxg62.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 167,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum_ending_here = 0;\n    let max_sum_so_far = 0;\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_ending_here = Math.max(arr[i], max_sum_ending_here + arr[i]);\n        max_sum_so_far = Math.max(max_sum_so_far, max_sum_ending_here);\n    }\n    return max_sum_so_far;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpt44633fv.js:14:12)\n    at Object.<anonymous> (/tmp/tmpt44633fv.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max = 0;\n  for (let i = 0; i < arr.length; i++) {\n    let sum = 0;\n    for (let j = i; j < arr.length; j++) {\n      sum += arr[j];\n      if (sum > max) max = sum;\n    }\n  }\n  return max;\n}\n\nconsole.log(max_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123921,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmprwlxpwep.js:18:12)\n    at Object.<anonymous> (/tmp/tmprwlxpwep.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max_sum = 0;\n  let max_sum_left = [];\n  let max_sum_right = [];\n  let max_sum_left_temp = 0;\n  let max_sum_right_temp = 0;\n  for (let i = 0; i < arr.length; i++) {\n    max_sum_left_temp += arr[i];\n    max_sum_left[i] = max_sum_left_temp;\n    max_sum_right_temp += arr[arr.length - 1 - i];\n    max_sum_right[arr.length - 1 - i] = max_sum_right_temp;\n  }\n  for (let i = 0; i < arr.length; i++) {\n    max_sum = Math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n  }\n  return max_sum;\n}\n\nconsole.log(max_sum([1, 15, 51, 45, 33, 100, 12, 18, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123921,
      "stdout": "284\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmppfrws1ra.js:23:12)\n    at Object.<anonymous> (/tmp/tmppfrws1ra.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max_sum = 0;\n  let max_sum_inc = 0;\n  let max_sum_dec = 0;\n  let max_sum_inc_arr = [];\n  let max_sum_dec_arr = [];\n  for (let i = 0; i < arr.length; i++) {\n    max_sum_inc_arr[i] = arr[i];\n    max_sum_dec_arr[i] = arr[i];\n  }\n  for (let i = 1; i < arr.length; i++) {\n    for (let j = 0; j < i; j++) {\n      if (arr[i] > arr[j] && max_sum_inc_arr[i] < max_sum_inc_arr[j] + arr[i]) {\n        max_sum_inc_arr[i] = max_sum_inc_arr[j] + arr[i];\n      }\n    }\n  }\n  for (let i = arr.length - 2; i >= 0; i--) {\n    for (let j = arr.length - 1; j > i; j--) {\n      if (arr[i] > arr[j] && max_sum_dec_arr[i] < max_sum_dec_arr[j] + arr[i]) {\n        max_sum_dec_arr[i] = max_sum_dec_arr[j] + arr[i];\n      }\n    }\n  }\n  for (let i = 0; i < arr.length; i++) {\n    if (max_sum < max_sum_inc_arr[i] + max_sum_dec_arr[i] - arr[i]) {\n      max_sum = max_sum_inc_arr[i] + max_sum_dec_arr[i] - arr[i];\n    }\n  }\n  return max_sum;\n}\n\nconsole.log(max_sum([1, 15, 51, 45, 33, 100, 12, 18, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123921,
      "stdout": "194\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let n = arr.length;\n    let dp1 = new Array(n).fill(0);\n    let dp2 = new Array(n).fill(0);\n\n    dp1[0] = arr[0];\n    for (let i = 1; i < n; i++) {\n        dp1[i] = Math.max(dp1[i - 1] + arr[i], arr[i]);\n    }\n\n    dp2[n - 1] = arr[n - 1];\n    for (let i = n - 2; i >= 0; i--) {\n        dp2[i] = Math.max(dp2[i + 1] + arr[i], arr[i]);\n    }\n\n    let max = 0;\n    for (let i = 0; i < n; i++) {\n        max = Math.max(max, dp1[i] + dp2[i] - arr[i]);\n    }\n\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpb62yba7x.js:23:12)\n    at Object.<anonymous> (/tmp/tmpb62yba7x.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_ending_here = 0;\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_ending_here = Math.max(max_sum_ending_here + arr[i], arr[i]);\n        max_sum = Math.max(max_sum, max_sum_ending_here);\n    }\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpytwvwjxr.js:14:12)\n    at Object.<anonymous> (/tmp/tmpytwvwjxr.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max_sum = 0;\n  let max_sum_left = new Array(arr.length).fill(0);\n  let max_sum_right = new Array(arr.length).fill(0);\n\n  for (let i = 1; i < arr.length; i++) {\n    for (let j = 0; j < i; j++) {\n      if (arr[i] > arr[j]) {\n        max_sum_left[i] = Math.max(max_sum_left[i], max_sum_left[j] + arr[i]);\n      }\n    }\n  }\n\n  for (let i = arr.length - 2; i >= 0; i--) {\n    for (let j = arr.length - 1; j > i; j--) {\n      if (arr[i] > arr[j]) {\n        max_sum_right[i] = Math.max(max_sum_right[i], max_sum_right[j] + arr[i]);\n      }\n    }\n  }\n\n  for (let i = 0; i < arr.length; i++) {\n    max_sum = Math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n  }\n\n  return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n184\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp65yiuvjt.js:28:12)\n    at Object.<anonymous> (/tmp/tmp65yiuvjt.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 184,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max_sum = 0;\n  let sum = 0;\n  let max_sum_left = 0;\n  let max_sum_right = 0;\n  let sum_left = 0;\n  let sum_right = 0;\n  let max_left = 0;\n  let max_right = 0;\n  let max_left_index = 0;\n  let max_right_index = 0;\n  for (let i = 0; i < arr.length; i++) {\n    sum_left += arr[i];\n    if (sum_left > max_sum_left) {\n      max_sum_left = sum_left;\n      max_left = arr[i];\n      max_left_index = i;\n    }\n  }\n  for (let i = arr.length - 1; i >= 0; i--) {\n    sum_right += arr[i];\n    if (sum_right > max_sum_right) {\n      max_sum_right = sum_right;\n      max_right = arr[i];\n      max_right_index = i;\n    }\n  }\n  if (max_left_index < max_right_index) {\n    for (let i = 0; i < max_left_index; i++) {\n      sum += arr[i];\n    }\n    for (let i = max_right_index + 1; i < arr.length; i++) {\n      sum += arr[i];\n    }\n    max_sum = sum + max_sum_left + max_sum_right;\n  } else {\n    for (let i = 0; i < max_right_index; i++) {\n      sum += arr[i];\n    }\n    for (let i = max_left_index + 1; i < arr.length; i++) {\n      sum += arr[i];\n    }\n    max_sum = sum + max_sum_left + max_sum_right;\n  }\n  return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n568\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpqenf2djy.js:52:12)\n    at Object.<anonymous> (/tmp/tmpqenf2djy.js:56:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 568,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_left = [];\n    let max_sum_right = [];\n    let max_sum_left_temp = 0;\n    let max_sum_right_temp = 0;\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_left_temp = Math.max(max_sum_left_temp + arr[i], arr[i]);\n        max_sum_left[i] = max_sum_left_temp;\n    }\n    for (let i = arr.length - 1; i >= 0; i--) {\n        max_sum_right_temp = Math.max(max_sum_right_temp + arr[i], arr[i]);\n        max_sum_right[i] = max_sum_right_temp;\n    }\n    for (let i = 0; i < arr.length; i++) {\n        max_sum = Math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510599,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp460r_762.js:24:12)\n    at Object.<anonymous> (/tmp/tmp460r_762.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max_sum = 0;\n  let max_sum_inc = 0;\n  let max_sum_dec = 0;\n  let max_sum_inc_arr = [];\n  let max_sum_dec_arr = [];\n\n  for (let i = 0; i < arr.length; i++) {\n    max_sum_inc = Math.max(arr[i], max_sum_inc + arr[i]);\n    max_sum_inc_arr.push(max_sum_inc);\n  }\n\n  for (let i = arr.length - 1; i >= 0; i--) {\n    max_sum_dec = Math.max(arr[i], max_sum_dec + arr[i]);\n    max_sum_dec_arr.push(max_sum_dec);\n  }\n\n  for (let i = 0; i < arr.length; i++) {\n    max_sum = Math.max(max_sum, max_sum_inc_arr[i] + max_sum_dec_arr[arr.length - i - 2]);\n  }\n\n  return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp2auw091g.js:24:12)\n    at Object.<anonymous> (/tmp/tmp2auw091g.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_left = new Array(arr.length);\n    let max_sum_right = new Array(arr.length);\n\n    max_sum_left[0] = arr[0];\n    for (let i = 1; i < arr.length; i++) {\n        max_sum_left[i] = Math.max(max_sum_left[i - 1] + arr[i], arr[i]);\n    }\n\n    max_sum_right[arr.length - 1] = arr[arr.length - 1];\n    for (let i = arr.length - 2; i >= 0; i--) {\n        max_sum_right[i] = Math.max(max_sum_right[i + 1] + arr[i], arr[i]);\n    }\n\n    for (let i = 0; i < arr.length; i++) {\n        max_sum = Math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpxhpopgw6.js:22:12)\n    at Object.<anonymous> (/tmp/tmpxhpopgw6.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max_sum = 0;\n  let max_sum_ending_here = 0;\n  for (let i = 0; i < arr.length; i++) {\n    max_sum_ending_here = Math.max(arr[i], max_sum_ending_here + arr[i]);\n    max_sum = Math.max(max_sum, max_sum_ending_here);\n  }\n  return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123916,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpmn12g1o5.js:14:12)\n    at Object.<anonymous> (/tmp/tmpmn12g1o5.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max = 0;\n    let sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        sum += arr[i];\n        if (sum > max) {\n            max = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpjfjo24fj.js:19:12)\n    at Object.<anonymous> (/tmp/tmpjfjo24fj.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum: number = 0;\n    let max_sum_left: number[] = [];\n    let max_sum_right: number[] = [];\n\n    for (let i: number = 0; i < arr.length; i++) {\n        max_sum_left[i] = arr[i];\n        max_sum_right[i] = arr[i];\n    }\n\n    for (let i: number = 1; i < arr.length; i++) {\n        for (let j: number = 0; j < i; j++) {\n            if (arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i]) {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for (let i: number = arr.length - 2; i >= 0; i--) {\n        for (let j: number = arr.length - 1; j > i; j--) {\n            if (arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i]) {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for (let i: number = 0; i < arr.length; i++) {\n        max_sum = Math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    return max_sum;\n}\n\nconsole.log(max_sum([1, 15, 51, 45, 33, 100, 12, 18, 9]));\nconsole.log(max_sum([80, 60, 30, 40, 20, 10]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123921,
      "stdout": "194\n210\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let n = arr.length;\n    let inc = new Array(n);\n    let dec = new Array(n);\n    inc[0] = arr[0];\n    dec[n - 1] = arr[n - 1];\n    for (let i = 1; i < n; i++) {\n        inc[i] = Math.max(inc[i - 1], arr[i]);\n    }\n    for (let i = n - 2; i >= 0; i--) {\n        dec[i] = Math.max(dec[i + 1], arr[i]);\n    }\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        sum += Math.min(inc[i], dec[i]);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n314\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpf9g_p6o7.js:23:12)\n    at Object.<anonymous> (/tmp/tmpf9g_p6o7.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 314,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum: number = 0;\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = arr.length - 1;\n    while (i < j) {\n        if (arr[i] < arr[j]) {\n            sum += arr[i];\n            i++;\n        } else {\n            sum += arr[j];\n            j--;\n        }\n        if (sum > max_sum) {\n            max_sum = sum;\n        }\n    }\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n184\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpyjz5mdwr.js:25:12)\n    at Object.<anonymous> (/tmp/tmpyjz5mdwr.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 184,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let sum = 0;\n        for (let j = i; j < arr.length; j++) {\n            sum += arr[j];\n            if (sum > max_sum) {\n                max_sum = sum;\n            }\n        }\n    }\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpbsj4xgnx.js:18:12)\n    at Object.<anonymous> (/tmp/tmpbsj4xgnx.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max = 0;\n  let sum = 0;\n  for (let i = 0; i < arr.length; i++) {\n    sum += arr[i];\n    if (sum < 0) {\n      sum = 0;\n    }\n    if (sum > max) {\n      max = sum;\n    }\n  }\n  return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmptt6qf4jd.js:19:12)\n    at Object.<anonymous> (/tmp/tmptt6qf4jd.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let n = arr.length;\n    let inc = new Array(n);\n    let dec = new Array(n);\n    inc[0] = arr[0];\n    dec[n - 1] = arr[n - 1];\n    for (let i = 1; i < n; i++) {\n        inc[i] = arr[i];\n        for (let j = 0; j < i; j++) {\n            if (arr[j] < arr[i]) {\n                inc[i] = Math.max(inc[i], inc[j] + arr[i]);\n            }\n        }\n    }\n    for (let i = n - 2; i >= 0; i--) {\n        dec[i] = arr[i];\n        for (let j = n - 1; j > i; j--) {\n            if (arr[j] < arr[i]) {\n                dec[i] = Math.max(dec[i], dec[j] + arr[i]);\n            }\n        }\n    }\n    let max = inc[0] + dec[0] - arr[0];\n    for (let i = 1; i < n; i++) {\n        max = Math.max(max, inc[i] + dec[i] - arr[i]);\n    }\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  const n = arr.length;\n  const inc = new Array(n).fill(0);\n  const dec = new Array(n).fill(0);\n  inc[0] = arr[0];\n  dec[n - 1] = arr[n - 1];\n  for (let i = 1; i < n; i++) {\n    inc[i] = Math.max(inc[i - 1], arr[i]);\n  }\n  for (let i = n - 2; i >= 0; i--) {\n    dec[i] = Math.max(dec[i + 1], arr[i]);\n  }\n  let max = 0;\n  for (let i = 0; i < n; i++) {\n    max = Math.max(max, inc[i] + dec[i] - arr[i]);\n  }\n  return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123926,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n118\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmptj37zeyz.js:23:12)\n    at Object.<anonymous> (/tmp/tmptj37zeyz.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 118,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let sum = 0;\n        for (let j = i; j < arr.length; j++) {\n            sum += arr[j];\n            if (sum > max_sum) {\n                max_sum = sum;\n            }\n        }\n    }\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpbsj4xgnx.js:18:12)\n    at Object.<anonymous> (/tmp/tmpbsj4xgnx.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_end_here = 0;\n    let max_sum_start_here = 0;\n    let max_sum_start_here_reverse = 0;\n    let max_sum_end_here_reverse = 0;\n    let max_sum_reverse = 0;\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_end_here = Math.max(arr[i], max_sum_end_here + arr[i]);\n        max_sum = Math.max(max_sum, max_sum_end_here);\n        max_sum_start_here = Math.max(arr[i], max_sum_start_here + arr[i]);\n        max_sum_start_here_reverse = Math.max(arr[arr.length - 1 - i], max_sum_start_here_reverse + arr[arr.length - 1 - i]);\n        max_sum_end_here_reverse = Math.max(arr[arr.length - 1 - i], max_sum_end_here_reverse + arr[arr.length - 1 - i]);\n        max_sum_reverse = Math.max(max_sum_reverse, max_sum_end_here_reverse);\n    }\n    return Math.max(max_sum, max_sum_start_here + max_sum_reverse - max_sum_start_here_reverse);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123926,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp9_z5_y_3.js:22:12)\n    at Object.<anonymous> (/tmp/tmp9_z5_y_3.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max_sum = 0;\n  let max_sum_left = 0;\n  let max_sum_right = 0;\n  let max_sum_left_right = 0;\n  let max_sum_right_left = 0;\n\n  for (let i = 0; i < arr.length; i++) {\n    max_sum_left = Math.max(max_sum_left + arr[i], arr[i]);\n    max_sum_right = Math.max(max_sum_right + arr[arr.length - 1 - i], arr[arr.length - 1 - i]);\n    max_sum_left_right = Math.max(max_sum_left_right + arr[i], max_sum_right + arr[i]);\n    max_sum_right_left = Math.max(max_sum_right_left + arr[arr.length - 1 - i], max_sum_left + arr[arr.length - 1 - i]);\n    max_sum = Math.max(max_sum, max_sum_left, max_sum_right, max_sum_left_right, max_sum_right_left);\n  }\n  return max_sum;\n}\n\nconsole.log(max_sum([1, 15, 51, 45, 33, 100, 12, 18, 9]));\nconsole.log(max_sum([80, 60, 30, 40, 20, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123926,
      "stdout": "357\n380\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n357\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpddzka7q2.js:22:12)\n    at Object.<anonymous> (/tmp/tmpddzka7q2.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 357,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max = 0;\n    let sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        sum += arr[i];\n        if (sum > max) {\n            max = sum;\n        }\n    }\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123926,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpqcgpiivd.js:16:12)\n    at Object.<anonymous> (/tmp/tmpqcgpiivd.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max_sum = 0;\n  let max_sum_left = new Array(arr.length).fill(0);\n  let max_sum_right = new Array(arr.length).fill(0);\n\n  max_sum_left[0] = arr[0];\n  max_sum_right[arr.length - 1] = arr[arr.length - 1];\n\n  for (let i = 1; i < arr.length; i++) {\n    max_sum_left[i] = Math.max(max_sum_left[i - 1] + arr[i], arr[i]);\n  }\n\n  for (let i = arr.length - 2; i >= 0; i--) {\n    max_sum_right[i] = Math.max(max_sum_right[i + 1] + arr[i], arr[i]);\n  }\n\n  for (let i = 0; i < arr.length; i++) {\n    max_sum = Math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n  }\n\n  return max_sum;\n}\n\nconsole.log(max_sum([1, 15, 51, 45, 33, 100, 12, 18, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123926,
      "stdout": "284\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp64fujbok.js:23:12)\n    at Object.<anonymous> (/tmp/tmp64fujbok.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum_ending_here = 0;\n    let max_sum_so_far = 0;\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_ending_here = Math.max(max_sum_ending_here + arr[i], 0);\n        max_sum_so_far = Math.max(max_sum_so_far, max_sum_ending_here);\n    }\n    return max_sum_so_far;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123926,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp67jve_x6.js:14:12)\n    at Object.<anonymous> (/tmp/tmp67jve_x6.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_so_far = 0;\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_so_far = Math.max(arr[i], max_sum_so_far + arr[i]);\n        max_sum = Math.max(max_sum, max_sum_so_far);\n    }\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123927,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpj7d3fxo8.js:14:12)\n    at Object.<anonymous> (/tmp/tmpj7d3fxo8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_left = 0;\n    let max_sum_right = 0;\n    let max_sum_left_right = 0;\n    let max_sum_right_left = 0;\n    let max_sum_left_right_left = 0;\n    let max_sum_right_left_right = 0;\n    let max_sum_left_right_left_right = 0;\n    let max_sum_right_left_right_left = 0;\n    let max_sum_left_right_left_right_left = 0;\n    let max_sum_right_left_right_left_right = 0;\n    let max_sum_left_right_left_right_left_right = 0;\n    let max_sum_right_left_right_left_right_left = 0;\n    let max_sum_left_right_left_right_left_right_left = 0;\n    let max_sum_right_left_right_left_right_left_right = 0;\n    let max_sum_left_right_left_right_left_right_left_right = 0;\n    let max_sum_right_left_right_left_right_left_right_left = 0;\n    let max_sum_left_right_left_right_left_right_left_right_left = 0;\n    let max_sum_right_left_right_left_right_left_right_left_right = 0;\n    let max_sum_left_right_left_right_left_right_left_right_left_right = 0;\n    let max_sum_right_left_right_left_right_left_right_left_right_left = 0;\n    let max_sum_left_right_left_right_left_right_left_right_left_right_left = 0;\n    let max_sum_right_left_right_left_right_left_right_left_right_left_right = 0;\n    let max_sum_left_right_left_right_left_right_left_right_left_right_left_right = 0;\n    let max_sum_right\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123926,
      "stdout": "../../../../tmp/tmp61v6j621.ts(39,8): error TS1005: '}' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_left = [];\n    let max_sum_right = [];\n    let max_sum_left_temp = 0;\n    let max_sum_right_temp = 0;\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_left_temp += arr[i];\n        max_sum_left[i] = max_sum_left_temp;\n        max_sum_right_temp += arr[arr.length - 1 - i];\n        max_sum_right[arr.length - 1 - i] = max_sum_right_temp;\n    }\n    for (let i = 0; i < arr.length; i++) {\n        if (max_sum_left[i] + max_sum_right[i] > max_sum) {\n            max_sum = max_sum_left[i] + max_sum_right[i];\n        }\n    }\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123926,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n384\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp286_c3fu.js:24:12)\n    at Object.<anonymous> (/tmp/tmp286_c3fu.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 384,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_left = [];\n    let max_sum_right = [];\n    let max_sum_left_temp = 0;\n    let max_sum_right_temp = 0;\n\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_left_temp = Math.max(max_sum_left_temp + arr[i], arr[i]);\n        max_sum_left[i] = max_sum_left_temp;\n    }\n\n    for (let i = arr.length - 1; i >= 0; i--) {\n        max_sum_right_temp = Math.max(max_sum_right_temp + arr[i], arr[i]);\n        max_sum_right[i] = max_sum_right_temp;\n    }\n\n    for (let i = 0; i < arr.length; i++) {\n        max_sum = Math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    return max_sum;\n}\n\nconsole.log(max_sum([1, 15, 51, 45, 33, 100, 12, 18, 9]));\nconsole.log(max_sum([80, 60, 30, 40, 20, 10]));\nconsole.log(max_sum([1, 2, 3, 4, 5, 6]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123926,
      "stdout": "284\n240\n21\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmprefkgm4q.js:27:12)\n    at Object.<anonymous> (/tmp/tmprefkgm4q.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_so_far = 0;\n    let max_sum_ending_here = 0;\n    let max_sum_ending_here_so_far = 0;\n    let max_sum_ending_here_so_far_rev = 0;\n    let max_sum_ending_here_rev = 0;\n    let max_sum_so_far_rev = 0;\n    let max_sum_rev = 0;\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_ending_here += arr[i];\n        if (max_sum_ending_here < 0) {\n            max_sum_ending_here = 0;\n        }\n        if (max_sum_ending_here > max_sum_so_far) {\n            max_sum_so_far = max_sum_ending_here;\n        }\n        max_sum_ending_here_so_far += arr[i];\n        if (max_sum_ending_here_so_far < 0) {\n            max_sum_ending_here_so_far = 0;\n        }\n        if (max_sum_ending_here_so_far > max_sum_so_far) {\n            max_sum_so_far = max_sum_ending_here_so_far;\n        }\n    }\n    for (let i = arr.length - 1; i >= 0; i--) {\n        max_sum_ending_here_rev += arr[i];\n        if (max_sum_ending_here_rev < 0) {\n            max_sum_ending_here_rev = 0;\n        }\n        if (max_sum_ending_here_rev > max_sum_so_far_rev) {\n            max_sum_so_far_rev = max_sum_ending_here_rev;\n        }\n        max_sum_ending_here_so_far_rev += arr[i];\n        if (max_sum_ending_here_so_far_rev < 0) {\n            max_sum_ending_here_so_far_rev = 0;\n        }\n        if (\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123926,
      "stdout": "../../../../tmp/tmpmusq6cwn.ts(40,9): error TS1005: ')' expected.\n../../../../tmp/tmpmusq6cwn.ts(51,8): error TS1005: '}' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let n = arr.length;\n    let inc = new Array(n).fill(0);\n    let dec = new Array(n).fill(0);\n\n    inc[0] = arr[0];\n    dec[n - 1] = arr[n - 1];\n\n    for (let i = 1; i < n; i++) {\n        inc[i] = arr[i];\n        for (let j = 0; j < i; j++) {\n            if (arr[j] < arr[i]) {\n                inc[i] = Math.max(inc[i], inc[j] + arr[i]);\n            }\n        }\n    }\n\n    for (let i = n - 2; i >= 0; i--) {\n        dec[i] = arr[i];\n        for (let j = n - 1; j > i; j--) {\n            if (arr[j] < arr[i]) {\n                dec[i] = Math.max(dec[i], dec[j] + arr[i]);\n            }\n        }\n    }\n\n    let max = 0;\n    for (let i = 0; i < n; i++) {\n        max = Math.max(max, inc[i] + dec[i] - arr[i]);\n    }\n\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_so_far = 0;\n    let max_sum_ending_here = 0;\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_ending_here = max_sum_ending_here + arr[i];\n        if (max_sum_ending_here < 0) {\n            max_sum_ending_here = 0;\n        }\n        if (max_sum_so_far < max_sum_ending_here) {\n            max_sum_so_far = max_sum_ending_here;\n        }\n    }\n    return max_sum_so_far;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123927,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpubo2n9nz.js:20:12)\n    at Object.<anonymous> (/tmp/tmpubo2n9nz.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let n = arr.length;\n    let inc = new Array(n);\n    let dec = new Array(n);\n    inc[0] = arr[0];\n    dec[n - 1] = arr[n - 1];\n    for (let i = 1; i < n; i++) {\n        inc[i] = Math.max(inc[i - 1], arr[i]);\n    }\n    for (let i = n - 2; i >= 0; i--) {\n        dec[i] = Math.max(dec[i + 1], arr[i]);\n    }\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        sum += Math.min(inc[i], dec[i]);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n314\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpf9g_p6o7.js:23:12)\n    at Object.<anonymous> (/tmp/tmpf9g_p6o7.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 314,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let n = arr.length;\n    let max_sum_arr = new Array(n);\n    let max_sum_rev_arr = new Array(n);\n    max_sum_arr[0] = arr[0];\n    max_sum_rev_arr[n - 1] = arr[n - 1];\n    for (let i = 1; i < n; i++) {\n        max_sum_arr[i] = arr[i];\n        for (let j = 0; j < i; j++) {\n            if (arr[i] > arr[j] && max_sum_arr[i] < max_sum_arr[j] + arr[i]) {\n                max_sum_arr[i] = max_sum_arr[j] + arr[i];\n            }\n        }\n    }\n    for (let i = n - 2; i >= 0; i--) {\n        max_sum_rev_arr[i] = arr[i];\n        for (let j = n - 1; j > i; j--) {\n            if (arr[i] > arr[j] && max_sum_rev_arr[i] < max_sum_rev_arr[j] + arr[i]) {\n                max_sum_rev_arr[i] = max_sum_rev_arr[j] + arr[i];\n            }\n        }\n    }\n    let max_sum = max_sum_arr[0] + max_sum_rev_arr[0] - arr[0];\n    for (let i = 1; i < n; i++) {\n        if (max_sum < max_sum_arr[i] + max_sum_rev_arr[i] - arr[i]) {\n            max_sum = max_sum_arr[i] + max_sum_rev_arr[i] - arr[i];\n        }\n    }\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123927,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max_sum = 0;\n  let max_ending_here = 0;\n  for (let i = 0; i < arr.length; i++) {\n    max_ending_here = Math.max(arr[i], max_ending_here + arr[i]);\n    max_sum = Math.max(max_sum, max_ending_here);\n  }\n  return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123927,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpt_qcya9j.js:14:12)\n    at Object.<anonymous> (/tmp/tmpt_qcya9j.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_arr = [];\n    for (let i = 0; i < arr.length; i++) {\n        let sum = 0;\n        let sum_arr = [];\n        for (let j = i; j < arr.length; j++) {\n            sum += arr[j];\n            sum_arr.push(arr[j]);\n            if (sum > max_sum) {\n                max_sum = sum;\n                max_sum_arr = sum_arr;\n            }\n        }\n    }\n    console.log(max_sum_arr);\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123927,
      "stdout": "[\n    1, 15, 51, 45, 33,\n  100, 12, 18,  9\n]\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpgt_bgx_f.js:23:12)\n    at Object.<anonymous> (/tmp/tmpgt_bgx_f.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_left = [];\n    let max_sum_right = [];\n    let max_sum_left_so_far = 0;\n    let max_sum_right_so_far = 0;\n\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_left_so_far = Math.max(max_sum_left_so_far + arr[i], arr[i]);\n        max_sum_left[i] = max_sum_left_so_far;\n    }\n\n    for (let i = arr.length - 1; i >= 0; i--) {\n        max_sum_right_so_far = Math.max(max_sum_right_so_far + arr[i], arr[i]);\n        max_sum_right[i] = max_sum_right_so_far;\n    }\n\n    for (let i = 0; i < arr.length; i++) {\n        max_sum = Math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    return max_sum;\n}\n\nconsole.log(max_sum([1, 15, 51, 45, 33, 100, 12, 18, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123927,
      "stdout": "284\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp3z7d0bwq.js:25:12)\n    at Object.<anonymous> (/tmp/tmp3z7d0bwq.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_left = new Array(arr.length);\n    let max_sum_right = new Array(arr.length);\n\n    max_sum_left[0] = arr[0];\n    max_sum_right[arr.length - 1] = arr[arr.length - 1];\n\n    for (let i = 1; i < arr.length; i++) {\n        max_sum_left[i] = Math.max(max_sum_left[i - 1], arr[i]);\n    }\n\n    for (let i = arr.length - 2; i >= 0; i--) {\n        max_sum_right[i] = Math.max(max_sum_right[i + 1], arr[i]);\n    }\n\n    for (let i = 0; i < arr.length; i++) {\n        max_sum = Math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123927,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n118\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp_jvnp2vi.js:22:12)\n    at Object.<anonymous> (/tmp/tmp_jvnp2vi.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 118,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max_sum = 0;\n  let max_sum_ending_here = 0;\n  for (let i = 0; i < arr.length; i++) {\n    max_sum_ending_here = max_sum_ending_here + arr[i];\n    if (max_sum_ending_here < 0) {\n      max_sum_ending_here = 0;\n    }\n    if (max_sum < max_sum_ending_here) {\n      max_sum = max_sum_ending_here;\n    }\n  }\n  return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123927,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpj2x0amtv.js:19:12)\n    at Object.<anonymous> (/tmp/tmpj2x0amtv.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_ending_here = 0;\n    let max_sum_ending_here_left = 0;\n    let max_sum_ending_here_right = 0;\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_ending_here_left = Math.max(max_sum_ending_here_left + arr[i], 0);\n        max_sum_ending_here_right = Math.max(max_sum_ending_here_right + arr[arr.length - 1 - i], 0);\n        max_sum_ending_here = Math.max(max_sum_ending_here_left, max_sum_ending_here_right);\n        max_sum = Math.max(max_sum, max_sum_ending_here);\n    }\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123927,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp72myzepo.js:18:12)\n    at Object.<anonymous> (/tmp/tmp72myzepo.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let n = arr.length;\n    let inc = new Array(n).fill(0);\n    let dec = new Array(n).fill(0);\n    inc[0] = arr[0];\n    dec[n - 1] = arr[n - 1];\n    for (let i = 1; i < n; i++) {\n        inc[i] = arr[i];\n        for (let j = 0; j < i; j++) {\n            if (arr[i] > arr[j] && inc[i] < inc[j] + arr[i]) {\n                inc[i] = inc[j] + arr[i];\n            }\n        }\n    }\n    for (let i = n - 2; i >= 0; i--) {\n        dec[i] = arr[i];\n        for (let j = n - 1; j > i; j--) {\n            if (arr[i] > arr[j] && dec[i] < dec[j] + arr[i]) {\n                dec[i] = dec[j] + arr[i];\n            }\n        }\n    }\n    let max = inc[0] + dec[0] - arr[0];\n    for (let i = 1; i < n; i++) {\n        if (inc[i] + dec[i] - arr[i] > max) {\n            max = inc[i] + dec[i] - arr[i];\n        }\n    }\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123927,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum_ending_here = 0;\n    let max_sum_so_far = 0;\n\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_ending_here = Math.max(max_sum_ending_here + arr[i], 0);\n        max_sum_so_far = Math.max(max_sum_so_far, max_sum_ending_here);\n    }\n    return max_sum_so_far;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123927,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpn3lmqhxk.js:14:12)\n    at Object.<anonymous> (/tmp/tmpn3lmqhxk.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum_ending_here = 0;\n    let max_sum_so_far = 0;\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_ending_here = Math.max(arr[i], max_sum_ending_here + arr[i]);\n        max_sum_so_far = Math.max(max_sum_so_far, max_sum_ending_here);\n    }\n    return max_sum_so_far;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpt44633fv.js:14:12)\n    at Object.<anonymous> (/tmp/tmpt44633fv.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_left = [];\n    let max_sum_right = [];\n    let max_sum_left_temp = 0;\n    let max_sum_right_temp = 0;\n\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_left_temp = Math.max(max_sum_left_temp + arr[i], arr[i]);\n        max_sum_left[i] = max_sum_left_temp;\n    }\n\n    for (let i = arr.length - 1; i >= 0; i--) {\n        max_sum_right_temp = Math.max(max_sum_right_temp + arr[i], arr[i]);\n        max_sum_right[i] = max_sum_right_temp;\n    }\n\n    for (let i = 0; i < arr.length; i++) {\n        max_sum = Math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123916,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp5_gg1klu.js:24:12)\n    at Object.<anonymous> (/tmp/tmp5_gg1klu.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max_sum = 0;\n  let max_sum_so_far = 0;\n  for (let i = 0; i < arr.length; i++) {\n    max_sum_so_far = Math.max(max_sum_so_far + arr[i], arr[i]);\n    max_sum = Math.max(max_sum, max_sum_so_far);\n  }\n  return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp8z6avp5g.js:14:12)\n    at Object.<anonymous> (/tmp/tmp8z6avp5g.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let n = arr.length;\n    let inc = new Array(n).fill(0);\n    let dec = new Array(n).fill(0);\n    inc[0] = arr[0];\n    dec[n - 1] = arr[n - 1];\n    for (let i = 1; i < n; i++) {\n        inc[i] = Math.max(inc[i - 1] + arr[i], arr[i]);\n    }\n    for (let i = n - 2; i >= 0; i--) {\n        dec[i] = Math.max(dec[i + 1] + arr[i], arr[i]);\n    }\n    let max = 0;\n    for (let i = 0; i < n; i++) {\n        max = Math.max(max, inc[i] + dec[i] - arr[i]);\n    }\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123916,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpb8fe2___.js:23:12)\n    at Object.<anonymous> (/tmp/tmpb8fe2___.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum_inc = arr.slice();\n    let max_sum_dec = arr.slice();\n\n    for (let i = 1; i < arr.length; i++) {\n        for (let j = 0; j < i; j++) {\n            if (arr[i] > arr[j] && max_sum_inc[i] < max_sum_inc[j] + arr[i]) {\n                max_sum_inc[i] = max_sum_inc[j] + arr[i];\n            }\n        }\n    }\n\n    for (let i = arr.length - 2; i >= 0; i--) {\n        for (let j = arr.length - 1; j > i; j--) {\n            if (arr[i] > arr[j] && max_sum_dec[i] < max_sum_dec[j] + arr[i]) {\n                max_sum_dec[i] = max_sum_dec[j] + arr[i];\n            }\n        }\n    }\n\n    let max_sum = max_sum_inc[0] + max_sum_dec[0] - arr[0];\n    for (let i = 1; i < arr.length; i++) {\n        if (max_sum < max_sum_inc[i] + max_sum_dec[i] - arr[i]) {\n            max_sum = max_sum_inc[i] + max_sum_dec[i] - arr[i];\n        }\n    }\n\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123931,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max_sum = 0;\n  let max_sum_left = [];\n  let max_sum_right = [];\n  let sum = 0;\n  for (let i = 0; i < arr.length; i++) {\n    sum += arr[i];\n    max_sum_left[i] = sum;\n    sum = Math.max(sum, 0);\n  }\n  sum = 0;\n  for (let i = arr.length - 1; i >= 0; i--) {\n    sum += arr[i];\n    max_sum_right[i] = sum;\n    sum = Math.max(sum, 0);\n  }\n  for (let i = 0; i < arr.length; i++) {\n    max_sum = Math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n  }\n  return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp9f61ne6w.js:26:12)\n    at Object.<anonymous> (/tmp/tmp9f61ne6w.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max_sum = 0;\n  let max_sum_so_far = 0;\n  let max_sum_ending_here = 0;\n  let max_sum_ending_here_so_far = 0;\n  let max_sum_ending_here_so_far_index = 0;\n  let max_sum_ending_here_index = 0;\n  let max_sum_ending_here_index_so_far = 0;\n  let max_sum_ending_here_index_so_far_index = 0;\n  let max_sum_ending_here_index_so_far_index_index = 0;\n  let max_sum_ending_here_index_so_far_index_index_index = 0;\n  let max_sum_ending_here_index_so_far_index_index_index_index = 0;\n  let max_sum_ending_here_index_so_far_index_index_index_index_index = 0;\n  let max_sum_ending_here_index_so_far_index_index_index_index_index_index = 0;\n  let max_sum_ending_here_index_so_far_index_index_index_index_index_index_index = 0;\n  let max_sum_ending_here_index_so_far_index_index_index_index_index_index_index_index = 0;\n  let max_sum_ending_here_index_so_far_index_index_index_index_index_index_index_index_index = 0;\n  let max_sum_ending_here_index_so_far_index_index_index_index_index_index_index_index_index_index = 0;\n  let max_sum_ending_here_index_so_far_index_index_index_index_index_index_index_index_index_index_index = 0;\n  let max_sum_ending_here_index_so_far_index_index_index_index_index_index_index_index_index_index_index_index = 0;\n  let max_sum_ending_here_index_so_far_index_index_index_\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123916,
      "stdout": "../../../../tmp/tmpoqr8pdxe.ts(34,8): error TS1005: '}' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_left = new Array(arr.length);\n    let max_sum_right = new Array(arr.length);\n    max_sum_left[0] = arr[0];\n    max_sum_right[arr.length - 1] = arr[arr.length - 1];\n    for (let i = 1; i < arr.length; i++) {\n        max_sum_left[i] = Math.max(max_sum_left[i - 1], arr[i]);\n    }\n    for (let i = arr.length - 2; i >= 0; i--) {\n        max_sum_right[i] = Math.max(max_sum_right[i + 1], arr[i]);\n    }\n    for (let i = 0; i < arr.length; i++) {\n        max_sum = Math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n118\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpre_uuevb.js:22:12)\n    at Object.<anonymous> (/tmp/tmpre_uuevb.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 118,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let n = arr.length;\n    let max_sum = 0;\n    let max_sum_left = new Array(n);\n    let max_sum_right = new Array(n);\n    max_sum_left[0] = arr[0];\n    max_sum_right[n - 1] = arr[n - 1];\n    for (let i = 1; i < n; i++) {\n        max_sum_left[i] = Math.max(max_sum_left[i - 1], arr[i]);\n    }\n    for (let i = n - 2; i >= 0; i--) {\n        max_sum_right[i] = Math.max(max_sum_right[i + 1], arr[i]);\n    }\n    for (let i = 0; i < n; i++) {\n        max_sum += Math.min(max_sum_left[i], max_sum_right[i]) - arr[i];\n    }\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n30\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp3c9wxf6i.js:23:12)\n    at Object.<anonymous> (/tmp/tmp3c9wxf6i.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 30,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max = 0;\n  for (let i = 0; i < arr.length; i++) {\n    let sum = 0;\n    for (let j = i; j < arr.length; j++) {\n      sum += arr[j];\n      if (sum > max) {\n        max = sum;\n      }\n    }\n  }\n  return max;\n}\n\nconsole.log(max_sum([1, 15, -3, 2, -1, 6]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123932,
      "stdout": "20\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpkhwao3d_.js:19:12)\n    at Object.<anonymous> (/tmp/tmpkhwao3d_.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_end_here = 0;\n    let max_sum_start_here = 0;\n    let max_sum_start_here_reverse = 0;\n    let max_sum_end_here_reverse = 0;\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_end_here = Math.max(max_sum_end_here + arr[i], arr[i]);\n        max_sum = Math.max(max_sum, max_sum_end_here);\n    }\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_start_here = Math.max(max_sum_start_here + arr[i], arr[i]);\n        max_sum = Math.max(max_sum, max_sum_start_here);\n    }\n    for (let i = arr.length - 1; i >= 0; i--) {\n        max_sum_start_here_reverse = Math.max(max_sum_start_here_reverse + arr[i], arr[i]);\n        max_sum = Math.max(max_sum, max_sum_start_here_reverse);\n    }\n    for (let i = arr.length - 1; i >= 0; i--) {\n        max_sum_end_here_reverse = Math.max(max_sum_end_here_reverse + arr[i], arr[i]);\n        max_sum = Math.max(max_sum, max_sum_end_here_reverse);\n    }\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123932,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpxm0t_gkd.js:29:12)\n    at Object.<anonymous> (/tmp/tmpxm0t_gkd.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let n = arr.length;\n    let inc = new Array(n);\n    let dec = new Array(n);\n    inc[0] = arr[0];\n    dec[n - 1] = arr[n - 1];\n    for (let i = 1; i < n; i++) {\n        inc[i] = Math.max(inc[i - 1], arr[i]);\n    }\n    for (let i = n - 2; i >= 0; i--) {\n        dec[i] = Math.max(dec[i + 1], arr[i]);\n    }\n    let max = 0;\n    for (let i = 0; i < n; i++) {\n        max = Math.max(max, inc[i] + dec[i] - arr[i]);\n    }\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510599,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n118\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp2fznooc8.js:23:12)\n    at Object.<anonymous> (/tmp/tmp2fznooc8.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 118,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum_inc = new Array(arr.length);\n    let max_sum_dec = new Array(arr.length);\n\n    max_sum_inc[0] = arr[0];\n    max_sum_dec[arr.length - 1] = arr[arr.length - 1];\n\n    for (let i = 1; i < arr.length; i++) {\n        max_sum_inc[i] = Math.max(max_sum_inc[i - 1] + arr[i], arr[i]);\n    }\n\n    for (let i = arr.length - 2; i >= 0; i--) {\n        max_sum_dec[i] = Math.max(max_sum_dec[i + 1] + arr[i], arr[i]);\n    }\n\n    let max_sum = max_sum_inc[0] + max_sum_dec[0] - arr[0];\n\n    for (let i = 1; i < arr.length; i++) {\n        max_sum = Math.max(max_sum, max_sum_inc[i] + max_sum_dec[i] - arr[i]);\n    }\n\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp99a9tsms.js:22:12)\n    at Object.<anonymous> (/tmp/tmp99a9tsms.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max = 0;\n  let sum = 0;\n  for (let i = 0; i < arr.length; i++) {\n    sum += arr[i];\n    if (sum > max) {\n      max = sum;\n    }\n    if (sum < 0) {\n      sum = 0;\n    }\n  }\n  return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123932,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpbdz103wj.js:19:12)\n    at Object.<anonymous> (/tmp/tmpbdz103wj.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max_sum = 0;\n  for (let i = 0; i < arr.length; i++) {\n    let sum = 0;\n    for (let j = i; j < arr.length; j++) {\n      sum += arr[j];\n      if (sum > max_sum) {\n        max_sum = sum;\n      }\n    }\n  }\n  return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510599,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmprc6o38ta.js:18:12)\n    at Object.<anonymous> (/tmp/tmprc6o38ta.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    const n = arr.length;\n    let max_sum = 0;\n    for (let i = 0; i < n; i++) {\n        let sum = 0;\n        for (let j = i; j < n; j++) {\n            sum += arr[j];\n            if (sum > max_sum) {\n                max_sum = sum;\n            }\n        }\n    }\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123932,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpiff2yvu0.js:19:12)\n    at Object.<anonymous> (/tmp/tmpiff2yvu0.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max = 0;\n  let sum = 0;\n  for (let i = 0; i < arr.length; i++) {\n    sum += arr[i];\n    if (sum > max) {\n      max = sum;\n    }\n    if (sum < 0) {\n      sum = 0;\n    }\n  }\n  return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123932,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpbdz103wj.js:19:12)\n    at Object.<anonymous> (/tmp/tmpbdz103wj.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let n = arr.length;\n    let inc = new Array(n).fill(0);\n    let dec = new Array(n).fill(0);\n\n    inc[0] = arr[0];\n    dec[n - 1] = arr[n - 1];\n\n    for (let i = 1; i < n; i++) {\n        inc[i] = Math.max(inc[i - 1] + arr[i], arr[i]);\n    }\n\n    for (let i = n - 2; i >= 0; i--) {\n        dec[i] = Math.max(dec[i + 1] + arr[i], arr[i]);\n    }\n\n    let max = inc[0] + dec[0] - arr[0];\n    for (let i = 1; i < n; i++) {\n        max = Math.max(max, inc[i] + dec[i] - arr[i]);\n    }\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123932,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp77idvm_e.js:23:12)\n    at Object.<anonymous> (/tmp/tmp77idvm_e.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let maxSum = 0;\n    let maxSumEndingHere = 0;\n    for (let i = 0; i < arr.length; i++) {\n        maxSumEndingHere = Math.max(arr[i], maxSumEndingHere + arr[i]);\n        maxSum = Math.max(maxSum, maxSumEndingHere);\n    }\n    return maxSum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123932,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp77__yg8p.js:14:12)\n    at Object.<anonymous> (/tmp/tmp77__yg8p.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_left = [];\n    let max_sum_right = [];\n    let max_sum_left_temp = 0;\n    let max_sum_right_temp = 0;\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_left_temp = Math.max(max_sum_left_temp + arr[i], arr[i]);\n        max_sum_left.push(max_sum_left_temp);\n    }\n    for (let i = arr.length - 1; i >= 0; i--) {\n        max_sum_right_temp = Math.max(max_sum_right_temp + arr[i], arr[i]);\n        max_sum_right.unshift(max_sum_right_temp);\n    }\n    for (let i = 0; i < arr.length; i++) {\n        max_sum = Math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123932,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpbaesoqu4.js:24:12)\n    at Object.<anonymous> (/tmp/tmpbaesoqu4.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_left = [];\n    let max_sum_right = [];\n    let max_sum_left_temp = 0;\n    let max_sum_right_temp = 0;\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_left_temp = Math.max(max_sum_left_temp + arr[i], arr[i]);\n        max_sum_left[i] = max_sum_left_temp;\n    }\n    for (let i = arr.length - 1; i >= 0; i--) {\n        max_sum_right_temp = Math.max(max_sum_right_temp + arr[i], arr[i]);\n        max_sum_right[i] = max_sum_right_temp;\n    }\n    for (let i = 0; i < arr.length; i++) {\n        max_sum = Math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510599,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp460r_762.js:24:12)\n    at Object.<anonymous> (/tmp/tmp460r_762.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max_sum = 0;\n  let max_sum_left = 0;\n  let max_sum_right = 0;\n  let max_sum_left_right = 0;\n  let max_sum_right_left = 0;\n  let max_sum_left_right_left = 0;\n  let max_sum_right_left_right = 0;\n  let max_sum_left_right_left_right = 0;\n  let max_sum_right_left_right_left = 0;\n  let max_sum_left_right_left_right_left = 0;\n  let max_sum_right_left_right_left_right = 0;\n  let max_sum_left_right_left_right_left_right = 0;\n  let max_sum_right_left_right_left_right_left = 0;\n  let max_sum_left_right_left_right_left_right_left = 0;\n  let max_sum_right_left_right_left_right_left_right = 0;\n  let max_sum_left_right_left_right_left_right_left_right = 0;\n  let max_sum_right_left_right_left_right_left_right_left = 0;\n  let max_sum_left_right_left_right_left_right_left_right_left = 0;\n  let max_sum_right_left_right_left_right_left_right_left_right = 0;\n  let max_sum_left_right_left_right_left_right_left_right_left_right = 0;\n  let max_sum_right_left_right_left_right_left_right_left_right_left = 0;\n  let max_sum_left_right_left_right_left_right_left_right_left_right_left = 0;\n  let max_sum_right_left_right_left_right_left_right_left_right_left_right = 0;\n  let max_sum_left_right_left_right_left_right_left_right_left_right_left_right = 0;\n  let max_sum_right\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123932,
      "stdout": "../../../../tmp/tmpu411s0qv.ts(39,8): error TS1005: '}' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max = 0;\n  let sum = 0;\n  let i = 0;\n  let j = arr.length - 1;\n\n  while (i < j) {\n    if (arr[i] < arr[j]) {\n      sum += arr[i];\n      i++;\n    } else {\n      sum += arr[j];\n      j--;\n    }\n    max = Math.max(max, sum);\n  }\n\n  return max;\n}\n\nconsole.log(max_sum([1, 15, 51, 45, 33, 100, 12, 18, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123932,
      "stdout": "184\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n184\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp4fo4yhtx.js:24:12)\n    at Object.<anonymous> (/tmp/tmp4fo4yhtx.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 184,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_left = 0;\n    let max_sum_right = 0;\n    let max_sum_left_right = 0;\n    let max_sum_right_left = 0;\n    let max_sum_left_right_left = 0;\n    let max_sum_right_left_right = 0;\n    let max_sum_left_right_left_right = 0;\n    let max_sum_right_left_right_left = 0;\n    let max_sum_left_right_left_right_left = 0;\n    let max_sum_right_left_right_left_right = 0;\n    let max_sum_left_right_left_right_left_right = 0;\n    let max_sum_right_left_right_left_right_left = 0;\n    let max_sum_left_right_left_right_left_right_left = 0;\n    let max_sum_right_left_right_left_right_left_right = 0;\n    let max_sum_left_right_left_right_left_right_left_right = 0;\n    let max_sum_right_left_right_left_right_left_right_left = 0;\n    let max_sum_left_right_left_right_left_right_left_right_left = 0;\n    let max_sum_right_left_right_left_right_left_right_left_right = 0;\n    let max_sum_left_right_left_right_left_right_left_right_left_right = 0;\n    let max_sum_right_left_right_left_right_left_right_left_right_left = 0;\n    let max_sum_left_right_left_right_left_right_left_right_left_right_left = 0;\n    let max_sum_right_left_right_left_right_left_right_left_right_left_right = 0;\n    let max_sum_left_right_left_right_left_right_left_right_left_right_left_right = 0;\n    let max_sum_right\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123926,
      "stdout": "../../../../tmp/tmp61v6j621.ts(39,8): error TS1005: '}' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum_inc = new Array(arr.length);\n    let max_sum_dec = new Array(arr.length);\n    max_sum_inc[0] = arr[0];\n    max_sum_dec[arr.length - 1] = arr[arr.length - 1];\n    for (let i = 1; i < arr.length; i++) {\n        max_sum_inc[i] = Math.max(max_sum_inc[i - 1] + arr[i], arr[i]);\n    }\n    for (let i = arr.length - 2; i >= 0; i--) {\n        max_sum_dec[i] = Math.max(max_sum_dec[i + 1] + arr[i], arr[i]);\n    }\n    let max_sum = max_sum_inc[0] + max_sum_dec[0] - arr[0];\n    for (let i = 1; i < arr.length; i++) {\n        max_sum = Math.max(max_sum, max_sum_inc[i] + max_sum_dec[i] - arr[i]);\n    }\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123916,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpjyy2szkg.js:22:12)\n    at Object.<anonymous> (/tmp/tmpjyy2szkg.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max_sum = 0;\n  let max_sum_left = [];\n  let max_sum_right = [];\n\n  for (let i = 0; i < arr.length; i++) {\n    max_sum_left[i] = arr[i];\n    max_sum_right[i] = arr[i];\n  }\n\n  for (let i = 1; i < arr.length; i++) {\n    for (let j = 0; j < i; j++) {\n      if (arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i]) {\n        max_sum_left[i] = max_sum_left[j] + arr[i];\n      }\n    }\n  }\n\n  for (let i = arr.length - 2; i >= 0; i--) {\n    for (let j = arr.length - 1; j > i; j--) {\n      if (arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i]) {\n        max_sum_right[i] = max_sum_right[j] + arr[i];\n      }\n    }\n  }\n\n  for (let i = 0; i < arr.length; i++) {\n    max_sum = Math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n  }\n\n  return max_sum;\n}\n\nconsole.log(max_sum([1, 15, 51, 45, 33, 100, 12, 18, 9]));\nconsole.log(max_sum([80, 60, 30, 40, 20, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123932,
      "stdout": "194\n210\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let n = arr.length;\n    let inc = new Array(n);\n    let dec = new Array(n);\n    inc[0] = arr[0];\n    dec[n - 1] = arr[n - 1];\n    for (let i = 1; i < n; i++) {\n        inc[i] = Math.max(inc[i - 1], arr[i]);\n    }\n    for (let i = n - 2; i >= 0; i--) {\n        dec[i] = Math.max(dec[i + 1], arr[i]);\n    }\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        sum += Math.min(inc[i], dec[i]);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n314\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpf9g_p6o7.js:23:12)\n    at Object.<anonymous> (/tmp/tmpf9g_p6o7.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 314,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    for (let i = 0; i < arr.length; i++) {\n        max_ending_here = Math.max(arr[i], max_ending_here + arr[i]);\n        max_so_far = Math.max(max_so_far, max_ending_here);\n    }\n    return max_so_far;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123932,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpkeh4t33z.js:14:12)\n    at Object.<anonymous> (/tmp/tmpkeh4t33z.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let sum = 0;\n        for (let j = i; j < arr.length; j++) {\n            sum += arr[j];\n            if (sum > max_sum) {\n                max_sum = sum;\n            }\n        }\n    }\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpbsj4xgnx.js:18:12)\n    at Object.<anonymous> (/tmp/tmpbsj4xgnx.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_left = [];\n    let max_sum_right = [];\n    let max_sum_left_temp = 0;\n    let max_sum_right_temp = 0;\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_left_temp = Math.max(max_sum_left_temp + arr[i], arr[i]);\n        max_sum_left.push(max_sum_left_temp);\n    }\n    for (let i = arr.length - 1; i >= 0; i--) {\n        max_sum_right_temp = Math.max(max_sum_right_temp + arr[i], arr[i]);\n        max_sum_right.unshift(max_sum_right_temp);\n    }\n    for (let i = 0; i < arr.length; i++) {\n        max_sum = Math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123932,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpbaesoqu4.js:24:12)\n    at Object.<anonymous> (/tmp/tmpbaesoqu4.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_left = [];\n    let max_sum_right = [];\n    let max_sum_left_temp = 0;\n    let max_sum_right_temp = 0;\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_left_temp = Math.max(max_sum_left_temp + arr[i], arr[i]);\n        max_sum_left[i] = max_sum_left_temp;\n    }\n    for (let i = arr.length - 1; i >= 0; i--) {\n        max_sum_right_temp = Math.max(max_sum_right_temp + arr[i], arr[i]);\n        max_sum_right[i] = max_sum_right_temp;\n    }\n    for (let i = 0; i < arr.length; i++) {\n        max_sum = Math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510599,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp460r_762.js:24:12)\n    at Object.<anonymous> (/tmp/tmp460r_762.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_left = [];\n    let max_sum_right = [];\n\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_left[i] = arr[i];\n        max_sum_right[i] = arr[i];\n    }\n\n    for (let i = 1; i < arr.length; i++) {\n        for (let j = 0; j < i; j++) {\n            if (arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i]) {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for (let i = arr.length - 2; i >= 0; i--) {\n        for (let j = arr.length - 1; j > i; j--) {\n            if (arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i]) {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for (let i = 0; i < arr.length; i++) {\n        max_sum = Math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123916,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max_sum = 0;\n  let max_sum_left = [];\n  let max_sum_right = [];\n  let sum = 0;\n  for (let i = 0; i < arr.length; i++) {\n    sum += arr[i];\n    max_sum_left[i] = sum;\n  }\n  sum = 0;\n  for (let i = arr.length - 1; i >= 0; i--) {\n    sum += arr[i];\n    max_sum_right[i] = sum;\n  }\n  for (let i = 0; i < arr.length; i++) {\n    max_sum = Math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n  }\n  return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123932,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpv66ut7h8.js:24:12)\n    at Object.<anonymous> (/tmp/tmpv66ut7h8.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max_sum = 0;\n  for (let i = 0; i < arr.length; i++) {\n    let sum = 0;\n    for (let j = i; j < arr.length; j++) {\n      sum += arr[j];\n      if (sum > max_sum) {\n        max_sum = sum;\n      }\n    }\n  }\n  return max_sum;\n}\n\nconsole.log(max_sum([1, 2, 3, 4, 5, 4, 3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123932,
      "stdout": "25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp9ibria1i.js:19:12)\n    at Object.<anonymous> (/tmp/tmp9ibria1i.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let n = arr.length;\n    let inc = new Array(n);\n    let dec = new Array(n);\n    inc[0] = arr[0];\n    dec[n - 1] = arr[n - 1];\n    for (let i = 1; i < n; i++) {\n        inc[i] = Math.max(inc[i - 1], arr[i]);\n    }\n    for (let i = n - 2; i >= 0; i--) {\n        dec[i] = Math.max(dec[i + 1], arr[i]);\n    }\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        sum = Math.max(sum, inc[i] + dec[i] - arr[i]);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123932,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n118\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpd6d60okz.js:23:12)\n    at Object.<anonymous> (/tmp/tmpd6d60okz.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 118,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let sum = 0;\n        for (let j = i; j < arr.length; j++) {\n            sum += arr[j];\n            if (sum > max_sum) {\n                max_sum = sum;\n            }\n        }\n    }\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpbsj4xgnx.js:18:12)\n    at Object.<anonymous> (/tmp/tmpbsj4xgnx.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum_inc = new Array(arr.length);\n    let max_sum_dec = new Array(arr.length);\n    max_sum_inc[0] = arr[0];\n    max_sum_dec[arr.length - 1] = arr[arr.length - 1];\n    for (let i = 1; i < arr.length; i++) {\n        max_sum_inc[i] = Math.max(max_sum_inc[i - 1] + arr[i], arr[i]);\n    }\n    for (let i = arr.length - 2; i >= 0; i--) {\n        max_sum_dec[i] = Math.max(max_sum_dec[i + 1] + arr[i], arr[i]);\n    }\n    let max_sum = max_sum_inc[0] + max_sum_dec[0] - arr[0];\n    for (let i = 1; i < arr.length; i++) {\n        max_sum = Math.max(max_sum, max_sum_inc[i] + max_sum_dec[i] - arr[i]);\n    }\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123916,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpjyy2szkg.js:22:12)\n    at Object.<anonymous> (/tmp/tmpjyy2szkg.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum_ending_here = 0;\n    let max_sum_so_far = 0;\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_ending_here = Math.max(max_sum_ending_here + arr[i], 0);\n        max_sum_so_far = Math.max(max_sum_so_far, max_sum_ending_here);\n    }\n    return max_sum_so_far;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123926,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp67jve_x6.js:14:12)\n    at Object.<anonymous> (/tmp/tmp67jve_x6.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max_sum = 0;\n  let max_sum_so_far = 0;\n  let max_sum_ending_here = 0;\n  let max_sum_ending_here_so_far = 0;\n  let max_sum_ending_here_so_far_rev = 0;\n  let max_sum_ending_here_rev = 0;\n  let max_sum_so_far_rev = 0;\n  let max_sum_rev = 0;\n  for (let i = 0; i < arr.length; i++) {\n    max_sum_ending_here += arr[i];\n    if (max_sum_ending_here < 0) {\n      max_sum_ending_here = 0;\n    }\n    if (max_sum_ending_here > max_sum_so_far) {\n      max_sum_so_far = max_sum_ending_here;\n    }\n  }\n  for (let i = arr.length - 1; i >= 0; i--) {\n    max_sum_ending_here_rev += arr[i];\n    if (max_sum_ending_here_rev < 0) {\n      max_sum_ending_here_rev = 0;\n    }\n    if (max_sum_ending_here_rev > max_sum_so_far_rev) {\n      max_sum_so_far_rev = max_sum_ending_here_rev;\n    }\n  }\n  for (let i = 0; i < arr.length; i++) {\n    max_sum_ending_here_so_far += arr[i];\n    if (max_sum_ending_here_so_far < 0) {\n      max_sum_ending_here_so_far = 0;\n    }\n    if (max_sum_ending_here_so_far > max_sum_so_far) {\n      max_sum_so_far = max_sum_ending_here_so_far;\n    }\n  }\n  for (let i = arr.length - 1; i >= 0; i--) {\n    max_sum_ending_here_so_far_rev += arr[i];\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123932,
      "stdout": "../../../../tmp/tmp6boh4n_r.ts(52,8): error TS1005: '}' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_left = [];\n    let max_sum_right = [];\n    let max_sum_left_temp = 0;\n    let max_sum_right_temp = 0;\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_left_temp = Math.max(max_sum_left_temp + arr[i], arr[i]);\n        max_sum_left[i] = max_sum_left_temp;\n    }\n    for (let i = arr.length - 1; i >= 0; i--) {\n        max_sum_right_temp = Math.max(max_sum_right_temp + arr[i], arr[i]);\n        max_sum_right[i] = max_sum_right_temp;\n    }\n    for (let i = 0; i < arr.length; i++) {\n        max_sum = Math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510599,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp460r_762.js:24:12)\n    at Object.<anonymous> (/tmp/tmp460r_762.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let n = arr.length;\n    let inc = new Array(n).fill(0);\n    let dec = new Array(n).fill(0);\n    inc[0] = arr[0];\n    dec[n - 1] = arr[n - 1];\n    for (let i = 1; i < n; i++) {\n        inc[i] = Math.max(inc[i - 1] + arr[i], arr[i]);\n    }\n    for (let i = n - 2; i >= 0; i--) {\n        dec[i] = Math.max(dec[i + 1] + arr[i], arr[i]);\n    }\n    let max = 0;\n    for (let i = 0; i < n; i++) {\n        max = Math.max(max, inc[i] + dec[i] - arr[i]);\n    }\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123916,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpb8fe2___.js:23:12)\n    at Object.<anonymous> (/tmp/tmpb8fe2___.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max_sum = 0;\n  let max_sum_left = new Array(arr.length);\n  let max_sum_right = new Array(arr.length);\n\n  max_sum_left[0] = arr[0];\n  max_sum_right[arr.length - 1] = arr[arr.length - 1];\n\n  for (let i = 1; i < arr.length; i++) {\n    max_sum_left[i] = Math.max(max_sum_left[i - 1], arr[i]);\n  }\n\n  for (let i = arr.length - 2; i >= 0; i--) {\n    max_sum_right[i] = Math.max(max_sum_right[i + 1], arr[i]);\n  }\n\n  for (let i = 0; i < arr.length; i++) {\n    max_sum = Math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n  }\n\n  return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123932,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n118\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpv8mmoyvx.js:22:12)\n    at Object.<anonymous> (/tmp/tmpv8mmoyvx.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 118,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let sum = 0;\n        for (let j = i; j < arr.length; j++) {\n            sum += arr[j];\n            if (sum > max) {\n                max = sum;\n            }\n        }\n    }\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123932,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmphkl9qfai.js:18:12)\n    at Object.<anonymous> (/tmp/tmphkl9qfai.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let n = arr.length;\n    let inc = new Array(n).fill(0);\n    let dec = new Array(n).fill(0);\n    inc[0] = arr[0];\n    dec[n - 1] = arr[n - 1];\n    for (let i = 1; i < n; i++) {\n        inc[i] = Math.max(inc[i - 1] + arr[i], arr[i]);\n    }\n    for (let i = n - 2; i >= 0; i--) {\n        dec[i] = Math.max(dec[i + 1] + arr[i], arr[i]);\n    }\n    let max = 0;\n    for (let i = 0; i < n; i++) {\n        max = Math.max(max, inc[i] + dec[i] - arr[i]);\n    }\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123916,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpb8fe2___.js:23:12)\n    at Object.<anonymous> (/tmp/tmpb8fe2___.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_so_far = 0;\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_so_far = Math.max(arr[i], max_sum_so_far + arr[i]);\n        max_sum = Math.max(max_sum, max_sum_so_far);\n    }\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123927,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpj7d3fxo8.js:14:12)\n    at Object.<anonymous> (/tmp/tmpj7d3fxo8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max_sum = 0;\n  let max_sum_right = 0;\n  let max_sum_left = 0;\n  let max_sum_mid = 0;\n  let max_sum_mid_right = 0;\n  let max_sum_mid_left = 0;\n  let max_sum_mid_right_left = 0;\n  let max_sum_mid_left_right = 0;\n  let max_sum_mid_right_left_right = 0;\n  let max_sum_mid_left_right_left = 0;\n  let max_sum_mid_right_left_right_left = 0;\n  let max_sum_mid_left_right_left_right = 0;\n  let max_sum_mid_right_left_right_left_right = 0;\n  let max_sum_mid_left_right_left_right_left = 0;\n  let max_sum_mid_right_left_right_left_right_left = 0;\n  let max_sum_mid_left_right_left_right_left_right = 0;\n  let max_sum_mid_right_left_right_left_right_left_right = 0;\n  let max_sum_mid_left_right_left_right_left_right_left = 0;\n  let max_sum_mid_right_left_right_left_right_left_right_left = 0;\n  let max_sum_mid_left_right_left_right_left_right_left_right = 0;\n  let max_sum_mid_right_left_right_left_right_left_right_left_right = 0;\n  let max_sum_mid_left_right_left_right_left_right_left_right_left = 0;\n  let max_sum_mid_right_left_right_left_right_left_right_left_right_left = 0;\n  let max_sum_mid_left_right_left_right_left_right_left_right_left_right = 0;\n  let max_sum_mid_right_left_right_left_right_left_right_left_right_left_right\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123936,
      "stdout": "../../../../tmp/tmp2mkrvca9.ts(39,8): error TS1005: '}' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max_sum = 0;\n  let max_sum_left = [];\n  let max_sum_right = [];\n  let max_sum_left_temp = 0;\n  let max_sum_right_temp = 0;\n  max_sum_left[0] = arr[0];\n  max_sum_right[arr.length - 1] = arr[arr.length - 1];\n  for (let i = 1; i < arr.length; i++) {\n    max_sum_left_temp = Math.max(max_sum_left[i - 1] + arr[i], arr[i]);\n    max_sum_left[i] = max_sum_left_temp;\n  }\n  for (let i = arr.length - 2; i >= 0; i--) {\n    max_sum_right_temp = Math.max(max_sum_right[i + 1] + arr[i], arr[i]);\n    max_sum_right[i] = max_sum_right_temp;\n  }\n  for (let i = 0; i < arr.length; i++) {\n    max_sum = Math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n  }\n  return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123937,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpj6jtj1s4.js:26:12)\n    at Object.<anonymous> (/tmp/tmpj6jtj1s4.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let sum = 0;\n        for (let j = i; j < arr.length; j++) {\n            sum += arr[j];\n            if (sum > max) {\n                max = sum;\n            }\n        }\n    }\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123932,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmphkl9qfai.js:18:12)\n    at Object.<anonymous> (/tmp/tmphkl9qfai.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let n = arr.length;\n    let inc = new Array(n);\n    let dec = new Array(n);\n    inc[0] = arr[0];\n    dec[n - 1] = arr[n - 1];\n    for (let i = 1; i < n; i++) {\n        inc[i] = arr[i];\n        for (let j = 0; j < i; j++) {\n            if (arr[i] > arr[j] && inc[i] < inc[j] + arr[i]) {\n                inc[i] = inc[j] + arr[i];\n            }\n        }\n    }\n    for (let i = n - 2; i >= 0; i--) {\n        dec[i] = arr[i];\n        for (let j = n - 1; j > i; j--) {\n            if (arr[i] > arr[j] && dec[i] < dec[j] + arr[i]) {\n                dec[i] = dec[j] + arr[i];\n            }\n        }\n    }\n    let max = inc[0] + dec[0] - arr[0];\n    for (let i = 1; i < n; i++) {\n        if (inc[i] + dec[i] - arr[i] > max) {\n            max = inc[i] + dec[i] - arr[i];\n        }\n    }\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123936,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max_sum = 0;\n  let max_sum_so_far = 0;\n  let max_sum_ending_here = 0;\n  for (let i = 0; i < arr.length; i++) {\n    max_sum_ending_here = max_sum_ending_here + arr[i];\n    if (max_sum_ending_here < 0) {\n      max_sum_ending_here = 0;\n    }\n    if (max_sum_so_far < max_sum_ending_here) {\n      max_sum_so_far = max_sum_ending_here;\n    }\n  }\n  max_sum = max_sum_so_far;\n  return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123937,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpw61b_545.js:21:12)\n    at Object.<anonymous> (/tmp/tmpw61b_545.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let n = arr.length;\n    let inc = new Array(n);\n    let dec = new Array(n);\n    inc[0] = arr[0];\n    dec[n - 1] = arr[n - 1];\n    for (let i = 1; i < n; i++) {\n        inc[i] = Math.max(inc[i - 1], arr[i]);\n    }\n    for (let i = n - 2; i >= 0; i--) {\n        dec[i] = Math.max(dec[i + 1], arr[i]);\n    }\n    let max = 0;\n    for (let i = 0; i < n; i++) {\n        max = Math.max(max, inc[i] + dec[i] - arr[i]);\n    }\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510599,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n118\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp2fznooc8.js:23:12)\n    at Object.<anonymous> (/tmp/tmp2fznooc8.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 118,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max = 0;\n  for (let i = 0; i < arr.length; i++) {\n    let sum = 0;\n    for (let j = i; j < arr.length; j++) {\n      sum += arr[j];\n      if (sum > max) {\n        max = sum;\n      }\n    }\n  }\n  return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123937,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp65lhcbzv.js:18:12)\n    at Object.<anonymous> (/tmp/tmp65lhcbzv.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max_sum = 0;\n  let max_sum_left = 0;\n  let max_sum_right = 0;\n  let max_sum_left_right = 0;\n  let max_sum_right_left = 0;\n  let max_sum_left_right_left = 0;\n  let max_sum_right_left_right = 0;\n  let max_sum_left_right_left_right = 0;\n  let max_sum_right_left_right_left = 0;\n\n  for (let i = 0; i < arr.length; i++) {\n    max_sum_left = Math.max(max_sum_left + arr[i], arr[i]);\n    max_sum_right = Math.max(max_sum_right + arr[arr.length - 1 - i], arr[arr.length - 1 - i]);\n    max_sum_left_right = Math.max(max_sum_left_right + arr[i], arr[i]);\n    max_sum_right_left = Math.max(max_sum_right_left + arr[arr.length - 1 - i], arr[arr.length - 1 - i]);\n    max_sum_left_right_left = Math.max(max_sum_left_right_left + arr[i], arr[i]);\n    max_sum_right_left_right = Math.max(max_sum_right_left_right + arr[arr.length - 1 - i], arr[arr.length - 1 - i]);\n    max_sum_left_right_left_right = Math.max(max_sum_left_right_left_right + arr[i], arr[i]);\n    max_sum_right_left_right_left = Math.max(max_sum_right_left_right_left + arr[arr.length - 1 - i], arr[arr.length - 1 - i]);\n  }\n\n  max_sum = Math.max(max_sum_left, max_sum_right, max_sum_left_right, max_sum_right_left, max_sum_left_right_left, max_sum_right_left_right, max_sum_left_right_\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123936,
      "stdout": "../../../../tmp/tmpn14zzlox.ts(25,1): error TS1005: ',' expected.\n../../../../tmp/tmpn14zzlox.ts(25,9): error TS1005: ',' expected.\n../../../../tmp/tmpn14zzlox.ts(36,8): error TS1005: '}' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  const n = arr.length;\n  const inc = new Array(n);\n  const dec = new Array(n);\n  inc[0] = arr[0];\n  dec[n - 1] = arr[n - 1];\n  for (let i = 1; i < n; i++) {\n    inc[i] = Math.max(inc[i - 1], arr[i]);\n  }\n  for (let i = n - 2; i >= 0; i--) {\n    dec[i] = Math.max(dec[i + 1], arr[i]);\n  }\n  let max = 0;\n  for (let i = 0; i < n; i++) {\n    max = Math.max(max, inc[i] + dec[i] - arr[i]);\n  }\n  return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123937,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n118\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpd4jn_p3j.js:23:12)\n    at Object.<anonymous> (/tmp/tmpd4jn_p3j.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 118,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_ending_here = 0;\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_ending_here = Math.max(max_sum_ending_here + arr[i], 0);\n        max_sum = Math.max(max_sum, max_sum_ending_here);\n    }\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123937,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpjcyabour.js:14:12)\n    at Object.<anonymous> (/tmp/tmpjcyabour.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_left = 0;\n    let max_sum_right = 0;\n    let max_sum_left_right = 0;\n    let max_sum_right_left = 0;\n    let max_sum_left_right_left = 0;\n    let max_sum_right_left_right = 0;\n    let max_sum_left_right_left_right = 0;\n    let max_sum_right_left_right_left = 0;\n    let max_sum_left_right_left_right_left = 0;\n    let max_sum_right_left_right_left_right = 0;\n    let max_sum_left_right_left_right_left_right = 0;\n    let max_sum_right_left_right_left_right_left = 0;\n    let max_sum_left_right_left_right_left_right_left = 0;\n    let max_sum_right_left_right_left_right_left_right = 0;\n    let max_sum_left_right_left_right_left_right_left_right = 0;\n    let max_sum_right_left_right_left_right_left_right_left = 0;\n    let max_sum_left_right_left_right_left_right_left_right_left = 0;\n    let max_sum_right_left_right_left_right_left_right_left_right = 0;\n    let max_sum_left_right_left_right_left_right_left_right_left_right = 0;\n    let max_sum_right_left_right_left_right_left_right_left_right_left = 0;\n    let max_sum_left_right_left_right_left_right_left_right_left_right_left = 0;\n    let max_sum_right_left_right_left_right_left_right_left_right_left_right = 0;\n    let max_sum_left_right_left_right_left_right_left_right_left_right_left_right = 0;\n    let max_sum_right\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123926,
      "stdout": "../../../../tmp/tmp61v6j621.ts(39,8): error TS1005: '}' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_left = [];\n    let max_sum_right = [];\n    let max_sum_left_temp = 0;\n    let max_sum_right_temp = 0;\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_left_temp = Math.max(max_sum_left_temp + arr[i], arr[i]);\n        max_sum_left[i] = max_sum_left_temp;\n    }\n    for (let i = arr.length - 1; i >= 0; i--) {\n        max_sum_right_temp = Math.max(max_sum_right_temp + arr[i], arr[i]);\n        max_sum_right[i] = max_sum_right_temp;\n    }\n    for (let i = 0; i < arr.length; i++) {\n        max_sum = Math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510599,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp460r_762.js:24:12)\n    at Object.<anonymous> (/tmp/tmp460r_762.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let n = arr.length;\n    let inc = new Array(n);\n    let dec = new Array(n);\n    inc[0] = arr[0];\n    dec[n - 1] = arr[n - 1];\n    for (let i = 1; i < n; i++) {\n        inc[i] = Math.max(inc[i - 1], arr[i]);\n    }\n    for (let i = n - 2; i >= 0; i--) {\n        dec[i] = Math.max(dec[i + 1], arr[i]);\n    }\n    let max = 0;\n    for (let i = 0; i < n; i++) {\n        max = Math.max(max, inc[i] + dec[i] - arr[i]);\n    }\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510599,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n118\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp2fznooc8.js:23:12)\n    at Object.<anonymous> (/tmp/tmp2fznooc8.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 118,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum_inc = new Array(arr.length);\n    let max_sum_dec = new Array(arr.length);\n\n    max_sum_inc[0] = arr[0];\n    max_sum_dec[arr.length - 1] = arr[arr.length - 1];\n\n    for (let i = 1; i < arr.length; i++) {\n        max_sum_inc[i] = Math.max(max_sum_inc[i - 1] + arr[i], arr[i]);\n    }\n\n    for (let i = arr.length - 2; i >= 0; i--) {\n        max_sum_dec[i] = Math.max(max_sum_dec[i + 1] + arr[i], arr[i]);\n    }\n\n    let max = max_sum_inc[0] + max_sum_dec[0] - arr[0];\n    for (let i = 1; i < arr.length; i++) {\n        max = Math.max(max, max_sum_inc[i] + max_sum_dec[i] - arr[i]);\n    }\n\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123937,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpksf4kuny.js:22:12)\n    at Object.<anonymous> (/tmp/tmpksf4kuny.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max_sum = 0;\n  for (let i = 0; i < arr.length; i++) {\n    let curr_sum = 0;\n    for (let j = i; j < arr.length; j++) {\n      curr_sum += arr[j];\n      if (curr_sum > max_sum) {\n        max_sum = curr_sum;\n      }\n    }\n  }\n  return max_sum;\n}\n\nconsole.log(max_sum([1, 15, 51, 45, 33, 100, 12, 18, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123937,
      "stdout": "284\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp699mm0xa.js:19:12)\n    at Object.<anonymous> (/tmp/tmp699mm0xa.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_left = [];\n    let max_sum_right = [];\n\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_left[i] = arr[i];\n        max_sum_right[i] = arr[i];\n    }\n\n    for (let i = 1; i < arr.length; i++) {\n        for (let j = 0; j < i; j++) {\n            if (arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i]) {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for (let i = arr.length - 2; i >= 0; i--) {\n        for (let j = arr.length - 1; j > i; j--) {\n            if (arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i]) {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for (let i = 0; i < arr.length; i++) {\n        max_sum = Math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123916,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_so_far = 0;\n    let max_sum_ending_here = 0;\n\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_ending_here += arr[i];\n        if (max_sum_ending_here < 0) {\n            max_sum_ending_here = 0;\n        }\n        if (max_sum_so_far < max_sum_ending_here) {\n            max_sum_so_far = max_sum_ending_here;\n        }\n    }\n    return max_sum_so_far;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123937,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp6_tkckx8.js:20:12)\n    at Object.<anonymous> (/tmp/tmp6_tkckx8.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max_sum = 0;\n  for (let i = 0; i < arr.length; i++) {\n    let sum = 0;\n    for (let j = i; j < arr.length; j++) {\n      sum += arr[j];\n      if (sum > max_sum) {\n        max_sum = sum;\n      }\n    }\n  }\n  return max_sum;\n}\n\nconsole.log(max_sum([1, 15, 51, 45, 33, 100, 12, 18, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123916,
      "stdout": "284\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpqjjbmvi1.js:19:12)\n    at Object.<anonymous> (/tmp/tmpqjjbmvi1.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_so_far = 0;\n    let max_sum_ending_here = 0;\n    let max_sum_ending_here_so_far = 0;\n    let max_sum_ending_here_so_far_index = 0;\n    let max_sum_ending_here_index = 0;\n    let max_sum_ending_here_index_so_far = 0;\n    let max_sum_ending_here_index_so_far_index = 0;\n    let max_sum_ending_here_index_so_far_index_index = 0;\n    let max_sum_ending_here_index_so_far_index_index_index = 0;\n    let max_sum_ending_here_index_so_far_index_index_index_index = 0;\n    let max_sum_ending_here_index_so_far_index_index_index_index_index = 0;\n    let max_sum_ending_here_index_so_far_index_index_index_index_index_index = 0;\n    let max_sum_ending_here_index_so_far_index_index_index_index_index_index_index = 0;\n    let max_sum_ending_here_index_so_far_index_index_index_index_index_index_index_index = 0;\n    let max_sum_ending_here_index_so_far_index_index_index_index_index_index_index_index_index = 0;\n    let max_sum_ending_here_index_so_far_index_index_index_index_index_index_index_index_index_index = 0;\n    let max_sum_ending_here_index_so_far_index_index_index_index_index_index_index_index_index_index_index = 0;\n    let max_sum_ending_here_index_so_far_index_index_index_index_index_index_index_index_index_index_index_index = 0;\n    let max_sum_ending_here_index_so_far_index_index_index_\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510599,
      "stdout": "../../../../tmp/tmpvc6ir6rb.ts(34,8): error TS1005: '}' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let n = arr.length;\n    let inc = new Array(n);\n    let dec = new Array(n);\n    inc[0] = arr[0];\n    dec[n - 1] = arr[n - 1];\n    for (let i = 1; i < n; i++) {\n        inc[i] = Math.max(inc[i - 1], arr[i]);\n    }\n    for (let i = n - 2; i >= 0; i--) {\n        dec[i] = Math.max(dec[i + 1], arr[i]);\n    }\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        sum += Math.max(inc[i], dec[i]);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123937,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n900\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp62kxfk10.js:23:12)\n    at Object.<anonymous> (/tmp/tmp62kxfk10.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 900,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max_sum = 0;\n  let max_sum_left = [];\n  let max_sum_right = [];\n  let max_sum_left_right = [];\n\n  // find max sum left\n  for (let i = 0; i < arr.length; i++) {\n    max_sum_left[i] = arr[i];\n    for (let j = 0; j < i; j++) {\n      if (arr[j] < arr[i]) {\n        max_sum_left[i] = Math.max(max_sum_left[i], max_sum_left[j] + arr[i]);\n      }\n    }\n  }\n\n  // find max sum right\n  for (let i = arr.length - 1; i >= 0; i--) {\n    max_sum_right[i] = arr[i];\n    for (let j = arr.length - 1; j > i; j--) {\n      if (arr[j] < arr[i]) {\n        max_sum_right[i] = Math.max(max_sum_right[i], max_sum_right[j] + arr[i]);\n      }\n    }\n  }\n\n  // find max sum left + right\n  for (let i = 0; i < arr.length; i++) {\n    max_sum_left_right[i] = max_sum_left[i] + max_sum_right[i] - arr[i];\n  }\n\n  // find max sum\n  for (let i = 0; i < arr.length; i++) {\n    max_sum = Math.max(max_sum, max_sum_left_right[i]);\n  }\n\n  return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123937,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max_sum = 0;\n  let max_sum_ending_here = 0;\n  let max_sum_ending_here_reverse = 0;\n  let max_sum_ending_here_reverse_temp = 0;\n  let max_sum_ending_here_temp = 0;\n  let max_sum_ending_here_reverse_temp_reverse = 0;\n  let max_sum_ending_here_temp_reverse = 0;\n  for (let i = 0; i < arr.length; i++) {\n    max_sum_ending_here_temp = max_sum_ending_here + arr[i];\n    max_sum_ending_here_temp_reverse =\n      max_sum_ending_here_reverse + arr[arr.length - 1 - i];\n    max_sum_ending_here =\n      max_sum_ending_here_temp > arr[i]\n        ? max_sum_ending_here_temp\n        : arr[i];\n    max_sum_ending_here_reverse =\n      max_sum_ending_here_temp_reverse > arr[arr.length - 1 - i]\n        ? max_sum_ending_here_temp_reverse\n        : arr[arr.length - 1 - i];\n    max_sum_ending_here_reverse_temp =\n      max_sum_ending_here_reverse + arr[i];\n    max_sum_ending_here_reverse_temp_reverse =\n      max_sum_ending_here + arr[arr.length - 1 - i];\n    max_sum_ending_here_reverse =\n      max_sum_ending_here_reverse_temp > arr[i]\n        ? max_sum_ending_here_reverse_temp\n        : arr[i];\n    max_sum_ending_here =\n      max_sum_ending_here_reverse_temp_reverse > arr[arr.length - 1 - i]\n        ? max_sum_ending_here_reverse_temp_reverse\n        : arr[arr.length - 1 - i];\n    max_sum =\n      max_sum_ending_here > max_sum_ending_here_reverse\n        ? max_sum_ending_here\n        : max\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123937,
      "stdout": "../../../../tmp/tmprzvo1n9p.ts(49,8): error TS1005: '}' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let n = arr.length;\n    let inc = new Array(n);\n    let dec = new Array(n);\n    inc[0] = arr[0];\n    dec[n - 1] = arr[n - 1];\n    for (let i = 1; i < n; i++) {\n        inc[i] = Math.max(inc[i - 1], arr[i]);\n    }\n    for (let i = n - 2; i >= 0; i--) {\n        dec[i] = Math.max(dec[i + 1], arr[i]);\n    }\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        sum += Math.max(inc[i], dec[i]);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123937,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n900\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp62kxfk10.js:23:12)\n    at Object.<anonymous> (/tmp/tmp62kxfk10.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 900,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max_sum = 0;\n  let current_sum = 0;\n  for (let i = 0; i < arr.length; i++) {\n    current_sum += arr[i];\n    if (current_sum < 0) {\n      current_sum = 0;\n    }\n    if (current_sum > max_sum) {\n      max_sum = current_sum;\n    }\n  }\n  return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123937,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpl70wryae.js:19:12)\n    at Object.<anonymous> (/tmp/tmpl70wryae.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_left = [];\n    let max_sum_right = [];\n    let sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        sum += arr[i];\n        max_sum_left[i] = sum;\n        sum = Math.max(sum, 0);\n    }\n    sum = 0;\n    for (let i = arr.length - 1; i >= 0; i--) {\n        sum += arr[i];\n        max_sum_right[i] = sum;\n        sum = Math.max(sum, 0);\n    }\n    for (let i = 0; i < arr.length; i++) {\n        max_sum = Math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123937,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpogbsewhk.js:26:12)\n    at Object.<anonymous> (/tmp/tmpogbsewhk.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max_sum = 0;\n  let max_sum_left = 0;\n  let max_sum_right = 0;\n  let max_sum_left_right = 0;\n  let max_sum_right_left = 0;\n  let max_sum_left_right_left = 0;\n  let max_sum_right_left_right = 0;\n  let max_sum_left_right_left_right = 0;\n  let max_sum_right_left_right_left = 0;\n  let max_sum_left_right_left_right_left = 0;\n  let max_sum_right_left_right_left_right = 0;\n  let max_sum_left_right_left_right_left_right = 0;\n  let max_sum_right_left_right_left_right_left = 0;\n  let max_sum_left_right_left_right_left_right_left = 0;\n  let max_sum_right_left_right_left_right_left_right = 0;\n  let max_sum_left_right_left_right_left_right_left_right = 0;\n  let max_sum_right_left_right_left_right_left_right_left = 0;\n  let max_sum_left_right_left_right_left_right_left_right_left = 0;\n  let max_sum_right_left_right_left_right_left_right_left_right = 0;\n  let max_sum_left_right_left_right_left_right_left_right_left_right = 0;\n  let max_sum_right_left_right_left_right_left_right_left_right_left = 0;\n  let max_sum_left_right_left_right_left_right_left_right_left_right_left = 0;\n  let max_sum_right_left_right_left_right_left_right_left_right_left_right = 0;\n  let max_sum_left_right_left_right_left_right_left_right_left_right_left_right = 0;\n  let max_sum_right\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123932,
      "stdout": "../../../../tmp/tmpu411s0qv.ts(39,8): error TS1005: '}' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_ending_here = 0;\n    let max_sum_ending_here_reverse = 0;\n    let max_sum_ending_here_reverse_temp = 0;\n    let max_sum_ending_here_temp = 0;\n    let max_sum_ending_here_reverse_temp_reverse = 0;\n    let max_sum_ending_here_temp_reverse = 0;\n    let max_sum_ending_here_reverse_temp_reverse_temp = 0;\n    let max_sum_ending_here_temp_reverse_temp = 0;\n    let max_sum_ending_here_reverse_temp_reverse_temp_reverse = 0;\n    let max_sum_ending_here_temp_reverse_temp_reverse = 0;\n    let max_sum_ending_here_reverse_temp_reverse_temp_reverse_temp = 0;\n    let max_sum_ending_here_temp_reverse_temp_reverse_temp = 0;\n    let max_sum_ending_here_reverse_temp_reverse_temp_reverse_temp_reverse = 0;\n    let max_sum_ending_here_temp_reverse_temp_reverse_temp_reverse = 0;\n    let max_sum_ending_here_reverse_temp_reverse_temp_reverse_temp_reverse_temp = 0;\n    let max_sum_ending_here_temp_reverse_temp_reverse_temp_reverse_temp = 0;\n    let max_sum_ending_here_reverse_temp_reverse_temp_reverse_temp_reverse_temp_reverse = 0;\n    let max_sum_ending_here_temp_reverse_temp_reverse_temp_reverse_temp_reverse = 0;\n    let max_sum_ending_here_reverse_temp_reverse_temp_reverse_temp_reverse_temp_reverse_temp = 0;\n    let max_sum_ending_here_temp_reverse_temp_reverse_temp_reverse_temp_reverse_temp = 0;\n    let max_sum_ending_here_reverse_temp_reverse_temp_reverse_temp_reverse_temp_reverse_temp_reverse = 0;\n    let max_sum_ending\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123937,
      "stdout": "../../../../tmp/tmppzqcsx5o.ts(37,8): error TS1005: '}' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max_sum = 0;\n  let max_sum_so_far = 0;\n  let max_sum_so_far_reverse = 0;\n  let max_sum_reverse = 0;\n  for (let i = 0; i < arr.length; i++) {\n    max_sum_so_far += arr[i];\n    if (max_sum_so_far < 0) {\n      max_sum_so_far = 0;\n    }\n    if (max_sum_so_far > max_sum) {\n      max_sum = max_sum_so_far;\n    }\n  }\n  for (let i = arr.length - 1; i >= 0; i--) {\n    max_sum_so_far_reverse += arr[i];\n    if (max_sum_so_far_reverse < 0) {\n      max_sum_so_far_reverse = 0;\n    }\n    if (max_sum_so_far_reverse > max_sum_reverse) {\n      max_sum_reverse = max_sum_so_far_reverse;\n    }\n  }\n  return max_sum + max_sum_reverse;\n}\n\nconsole.log(max_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112,\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123937,
      "stdout": "../../../../tmp/tmpkj9ilg0k.ts(29,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max = 0;\n  for (let i = 0; i < arr.length; i++) {\n    let sum = 0;\n    for (let j = i; j < arr.length; j++) {\n      sum += arr[j];\n      if (sum > max) {\n        max = sum;\n      }\n    }\n  }\n  return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123937,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp65lhcbzv.js:18:12)\n    at Object.<anonymous> (/tmp/tmp65lhcbzv.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max_sum = 0;\n  let max_sum_left = [];\n  let max_sum_right = [];\n  let max_sum_left_temp = 0;\n  let max_sum_right_temp = 0;\n  for (let i = 0; i < arr.length; i++) {\n    max_sum_left_temp = Math.max(max_sum_left_temp + arr[i], arr[i]);\n    max_sum_left[i] = max_sum_left_temp;\n  }\n  for (let i = arr.length - 1; i >= 0; i--) {\n    max_sum_right_temp = Math.max(max_sum_right_temp + arr[i], arr[i]);\n    max_sum_right[i] = max_sum_right_temp;\n  }\n  for (let i = 0; i < arr.length; i++) {\n    max_sum = Math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n  }\n  return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123937,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpq_26gnox.js:24:12)\n    at Object.<anonymous> (/tmp/tmpq_26gnox.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max = 0;\n    let max_sum = 0;\n    let max_sum_arr = [];\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_arr[i] = arr[i];\n        for (let j = 0; j < i; j++) {\n            if (arr[i] > arr[j] && max_sum_arr[i] < max_sum_arr[j] + arr[i]) {\n                max_sum_arr[i] = max_sum_arr[j] + arr[i];\n            }\n        }\n        if (max_sum < max_sum_arr[i]) {\n            max_sum = max_sum_arr[i];\n        }\n    }\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123937,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n167\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpkqycw491.js:22:12)\n    at Object.<anonymous> (/tmp/tmpkqycw491.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 167,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum_inc = new Array(arr.length);\n    let max_sum_dec = new Array(arr.length);\n\n    max_sum_inc[0] = arr[0];\n    max_sum_dec[arr.length - 1] = arr[arr.length - 1];\n\n    for (let i = 1; i < arr.length; i++) {\n        max_sum_inc[i] = Math.max(max_sum_inc[i - 1] + arr[i], arr[i]);\n    }\n\n    for (let i = arr.length - 2; i >= 0; i--) {\n        max_sum_dec[i] = Math.max(max_sum_dec[i + 1] + arr[i], arr[i]);\n    }\n\n    let max_sum = max_sum_inc[0] + max_sum_dec[0] - arr[0];\n    for (let i = 1; i < arr.length; i++) {\n        max_sum = Math.max(max_sum, max_sum_inc[i] + max_sum_dec[i] - arr[i]);\n    }\n\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123937,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpg05g4fc9.js:22:12)\n    at Object.<anonymous> (/tmp/tmpg05g4fc9.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let n = arr.length;\n    let max_sum = 0;\n    let lis = new Array(n);\n    let lds = new Array(n);\n    for (let i = 0; i < n; i++) {\n        lis[i] = arr[i];\n        lds[i] = arr[i];\n    }\n    for (let i = 1; i < n; i++) {\n        for (let j = 0; j < i; j++) {\n            if (arr[i] > arr[j] && lis[i] < lis[j] + arr[i]) {\n                lis[i] = lis[j] + arr[i];\n            }\n        }\n    }\n    for (let i = n - 2; i >= 0; i--) {\n        for (let j = n - 1; j > i; j--) {\n            if (arr[i] > arr[j] && lds[i] < lds[j] + arr[i]) {\n                lds[i] = lds[j] + arr[i];\n            }\n        }\n    }\n    for (let i = 0; i < n; i++) {\n        max_sum = Math.max(max_sum, lis[i] + lds[i] - arr[i]);\n    }\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123937,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let maxSum = 0;\n  let maxSumEndingHere = 0;\n  let maxSumEndingHere2 = 0;\n  let maxSumEndingHere3 = 0;\n  let maxSumEndingHere4 = 0;\n  let maxSumEndingHere5 = 0;\n  let maxSumEndingHere6 = 0;\n  let maxSumEndingHere7 = 0;\n  let maxSumEndingHere8 = 0;\n  let maxSumEndingHere9 = 0;\n  let maxSumEndingHere10 = 0;\n  let maxSumEndingHere11 = 0;\n  let maxSumEndingHere12 = 0;\n  let maxSumEndingHere13 = 0;\n  let maxSumEndingHere14 = 0;\n  let maxSumEndingHere15 = 0;\n  let maxSumEndingHere16 = 0;\n  let maxSumEndingHere17 = 0;\n  let maxSumEndingHere18 = 0;\n  let maxSumEndingHere19 = 0;\n  let maxSumEndingHere20 = 0;\n  let maxSumEndingHere21 = 0;\n  let maxSumEndingHere22 = 0;\n  let maxSumEndingHere23 = 0;\n  let maxSumEndingHere24 = 0;\n  let maxSumEndingHere25 = 0;\n  let maxSumEndingHere26 = 0;\n  let maxSumEndingHere27 = 0;\n  let maxSumEndingHere28 = 0;\n  let maxSumEndingHere29 = 0;\n  let maxSumEndingHere30 = 0;\n  let maxSumEndingHere31 = 0;\n  let maxSumEndingHere32 = 0;\n  let maxSumEndingHere33 = 0;\n  let maxSumEndingHere34 = 0;\n  let maxSumEndingHere35 = 0;\n  let maxSumEndingHere36 = 0;\n  let maxSumEndingHere37 = 0;\n  let maxSumEndingHere38 = 0;\n  let maxSumEndingHere39 = 0;\n  let maxSumEndingHere40 = 0;\n  let maxSumEndingHere41 = 0;\n  let maxSumEndingHere42 = 0;\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123937,
      "stdout": "../../../../tmp/tmp_zl7ppuz.ts(58,8): error TS1005: '}' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let n = arr.length;\n    let inc = new Array(n);\n    let dec = new Array(n);\n    inc[0] = arr[0];\n    dec[n - 1] = arr[n - 1];\n    for (let i = 1; i < n; i++) {\n        inc[i] = Math.max(inc[i - 1], arr[i]);\n    }\n    for (let i = n - 2; i >= 0; i--) {\n        dec[i] = Math.max(dec[i + 1], arr[i]);\n    }\n    let max = 0;\n    for (let i = 0; i < n; i++) {\n        max = Math.max(max, inc[i] + dec[i] - arr[i]);\n    }\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510599,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n118\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp2fznooc8.js:23:12)\n    at Object.<anonymous> (/tmp/tmp2fznooc8.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 118,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let maxSum = 0;\n    let maxSumEndingHere = 0;\n    let maxSumEndingHereLeft = 0;\n    let maxSumEndingHereRight = 0;\n    let maxSumEndingHereLeftRight = 0;\n    let maxSumEndingHereRightLeft = 0;\n    let maxSumEndingHereLeftRightLeft = 0;\n    let maxSumEndingHereRightLeftRight = 0;\n    let maxSumEndingHereLeftRightLeftRight = 0;\n    let maxSumEndingHereRightLeftRightLeft = 0;\n    let maxSumEndingHereLeftRightLeftRightLeft = 0;\n    let maxSumEndingHereRightLeftRightLeftRight = 0;\n    let maxSumEndingHereLeftRightLeftRightLeftRight = 0;\n    let maxSumEndingHereRightLeftRightLeftRightLeft = 0;\n    let maxSumEndingHereLeftRightLeftRightLeftRightLeft = 0;\n    let maxSumEndingHereRightLeftRightLeftRightLeftRight = 0;\n    let maxSumEndingHereLeftRightLeftRightLeftRightLeftRight = 0;\n    let maxSumEndingHereRightLeftRightLeftRightLeftRightLeft = 0;\n    let maxSumEndingHereLeftRightLeftRightLeftRightLeftRightLeft = 0;\n    let maxSumEndingHereRightLeftRightLeftRightLeftRightLeftRight = 0;\n    let maxSumEndingHereLeftRightLeftRightLeftRightLeftRightLeftRight = 0;\n    let maxSumEndingHereRightLeftRightLeftRightLeftRightLeftRightLeft = 0;\n    let maxSumEndingHereLeftRightLeftRightLeftRightLeftRightLeftRightLeft = 0;\n    let maxSumEndingHereRightLeftRightLeftRightLeftRightLeftRightLeftRight = 0;\n    let maxSumEndingHereLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight = 0;\n    let maxSumEndingHereRightLeftRightLeftRightLeftRightLeftRightLeftRightLeft = 0;\n    let maxSumEndingHereLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeft = 0;\n    let maxSumEndingHereRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight = 0;\n    let maxSumEndingHereLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight = 0;\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123940,
      "stdout": "../../../../tmp/tmppc603s54.ts(43,8): error TS1005: '}' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let maxSum = 0;\n  for (let i = 0; i < arr.length; i++) {\n    let sum = 0;\n    for (let j = i; j < arr.length; j++) {\n      sum += arr[j];\n      if (sum > maxSum) {\n        maxSum = sum;\n      }\n    }\n  }\n  return maxSum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123940,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpze6xuxmi.js:18:12)\n    at Object.<anonymous> (/tmp/tmpze6xuxmi.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max = 0;\n  let sum = 0;\n  let i = 0;\n  let j = arr.length - 1;\n  while (i < j) {\n    if (arr[i] < arr[j]) {\n      sum += arr[i];\n      i++;\n    } else {\n      sum += arr[j];\n      j--;\n    }\n    if (sum > max) {\n      max = sum;\n    }\n  }\n  return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123941,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n184\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpl35d4qu1.js:25:12)\n    at Object.<anonymous> (/tmp/tmpl35d4qu1.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 184,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let n = arr.length;\n    let max_sum = 0;\n    let max_sum_arr = new Array(n).fill(0);\n    for (let i = 0; i < n; i++) {\n        max_sum_arr[i] = arr[i];\n    }\n    for (let i = 1; i < n; i++) {\n        for (let j = 0; j < i; j++) {\n            if (arr[i] > arr[j] && max_sum_arr[i] < max_sum_arr[j] + arr[i]) {\n                max_sum_arr[i] = max_sum_arr[j] + arr[i];\n            }\n        }\n    }\n    let max_sum_rev = new Array(n).fill(0);\n    for (let i = 0; i < n; i++) {\n        max_sum_rev[i] = arr[i];\n    }\n    for (let i = n - 2; i >= 0; i--) {\n        for (let j = n - 1; j > i; j--) {\n            if (arr[i] > arr[j] && max_sum_rev[i] < max_sum_rev[j] + arr[i]) {\n                max_sum_rev[i] = max_sum_rev[j] + arr[i];\n            }\n        }\n    }\n    for (let i = 0; i < n; i++) {\n        if (max_sum < max_sum_arr[i] + max_sum_rev[i] - arr[i]) {\n            max_sum = max_sum_arr[i] + max_sum_rev[i] - arr[i];\n        }\n    }\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123941,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max = 0;\n  for (let i = 0; i < arr.length; i++) {\n    let sum = 0;\n    for (let j = i; j < arr.length; j++) {\n      sum += arr[j];\n      if (sum > max) {\n        max = sum;\n      }\n    }\n  }\n  return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123937,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp65lhcbzv.js:18:12)\n    at Object.<anonymous> (/tmp/tmp65lhcbzv.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max_sum = 0;\n  let max_sum_left = 0;\n  let max_sum_right = 0;\n  let max_sum_left_right = 0;\n  let max_sum_right_left = 0;\n  let max_sum_left_right_left = 0;\n  let max_sum_right_left_right = 0;\n  let max_sum_left_right_left_right = 0;\n  let max_sum_right_left_right_left = 0;\n  let max_sum_left_right_left_right_left = 0;\n  let max_sum_right_left_right_left_right = 0;\n  let max_sum_left_right_left_right_left_right = 0;\n  let max_sum_right_left_right_left_right_left = 0;\n  let max_sum_left_right_left_right_left_right_left = 0;\n  let max_sum_right_left_right_left_right_left_right = 0;\n  let max_sum_left_right_left_right_left_right_left_right = 0;\n  let max_sum_right_left_right_left_right_left_right_left = 0;\n  let max_sum_left_right_left_right_left_right_left_right_left = 0;\n  let max_sum_right_left_right_left_right_left_right_left_right = 0;\n  let max_sum_left_right_left_right_left_right_left_right_left_right = 0;\n  let max_sum_right_left_right_left_right_left_right_left_right_left = 0;\n  let max_sum_left_right_left_right_left_right_left_right_left_right_left = 0;\n  let max_sum_right_left_right_left_right_left_right_left_right_left_right = 0;\n  let max_sum_left_right_left_right_left_right_left_right_left_right_left_right = 0;\n  let max_sum_right\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123932,
      "stdout": "../../../../tmp/tmpu411s0qv.ts(39,8): error TS1005: '}' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max_sum = 0;\n  let max_sum_left = new Array(arr.length);\n  let max_sum_right = new Array(arr.length);\n\n  max_sum_left[0] = arr[0];\n  max_sum_right[arr.length - 1] = arr[arr.length - 1];\n\n  for (let i = 1; i < arr.length; i++) {\n    max_sum_left[i] = Math.max(arr[i], max_sum_left[i - 1] + arr[i]);\n  }\n\n  for (let i = arr.length - 2; i >= 0; i--) {\n    max_sum_right[i] = Math.max(arr[i], max_sum_right[i + 1] + arr[i]);\n  }\n\n  for (let i = 0; i < arr.length; i++) {\n    max_sum = Math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n  }\n\n  return max_sum;\n}\n\nconsole.log(max_sum([1, 15, 51, 45, 33, 100, 12, 18, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123941,
      "stdout": "284\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp2u9eqa0e.js:23:12)\n    at Object.<anonymous> (/tmp/tmp2u9eqa0e.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum_inc = new Array(arr.length);\n    let max_sum_dec = new Array(arr.length);\n    let max_sum = 0;\n\n    max_sum_inc[0] = arr[0];\n    max_sum_dec[arr.length - 1] = arr[arr.length - 1];\n\n    for (let i = 1; i < arr.length; i++) {\n        max_sum_inc[i] = Math.max(max_sum_inc[i - 1] + arr[i], arr[i]);\n    }\n\n    for (let i = arr.length - 2; i >= 0; i--) {\n        max_sum_dec[i] = Math.max(max_sum_dec[i + 1] + arr[i], arr[i]);\n    }\n\n    for (let i = 0; i < arr.length; i++) {\n        max_sum = Math.max(max_sum, max_sum_inc[i] + max_sum_dec[i] - arr[i]);\n    }\n\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123941,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpc6x74_8h.js:22:12)\n    at Object.<anonymous> (/tmp/tmpc6x74_8h.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum_inc = new Array(arr.length);\n    let max_sum_dec = new Array(arr.length);\n\n    max_sum_inc[0] = arr[0];\n    max_sum_dec[arr.length - 1] = arr[arr.length - 1];\n\n    for (let i = 1; i < arr.length; i++) {\n        max_sum_inc[i] = Math.max(max_sum_inc[i - 1] + arr[i], arr[i]);\n    }\n\n    for (let i = arr.length - 2; i >= 0; i--) {\n        max_sum_dec[i] = Math.max(max_sum_dec[i + 1] + arr[i], arr[i]);\n    }\n\n    let max_sum = max_sum_inc[0] + max_sum_dec[0] - arr[0];\n\n    for (let i = 1; i < arr.length; i++) {\n        if (max_sum_inc[i] + max_sum_dec[i] - arr[i] > max_sum) {\n            max_sum = max_sum_inc[i] + max_sum_dec[i] - arr[i];\n        }\n    }\n\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123941,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpr0dymyjo.js:24:12)\n    at Object.<anonymous> (/tmp/tmpr0dymyjo.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_left = new Array(arr.length);\n    let max_sum_right = new Array(arr.length);\n\n    max_sum_left[0] = arr[0];\n    for (let i = 1; i < arr.length; i++) {\n        max_sum_left[i] = Math.max(max_sum_left[i - 1], arr[i]);\n    }\n\n    max_sum_right[arr.length - 1] = arr[arr.length - 1];\n    for (let i = arr.length - 2; i >= 0; i--) {\n        max_sum_right[i] = Math.max(max_sum_right[i + 1], arr[i]);\n    }\n\n    for (let i = 0; i < arr.length; i++) {\n        max_sum = Math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123941,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n118\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpui0to6jt.js:22:12)\n    at Object.<anonymous> (/tmp/tmpui0to6jt.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 118,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_inc = 0;\n    let max_sum_dec = 0;\n    let max_sum_inc_arr = [];\n    let max_sum_dec_arr = [];\n    let max_sum_arr = [];\n    let max_sum_inc_arr_len = 0;\n    let max_sum_dec_arr_len = 0;\n    let max_sum_arr_len = 0;\n\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_inc_arr[i] = arr[i];\n        max_sum_dec_arr[i] = arr[i];\n        max_sum_arr[i] = arr[i];\n    }\n\n    for (let i = 1; i < arr.length; i++) {\n        for (let j = 0; j < i; j++) {\n            if (arr[i] > arr[j] && max_sum_inc_arr[i] < max_sum_inc_arr[j] + arr[i]) {\n                max_sum_inc_arr[i] = max_sum_inc_arr[j] + arr[i];\n            }\n        }\n    }\n\n    for (let i = arr.length - 2; i >= 0; i--) {\n        for (let j = arr.length - 1; j > i; j--) {\n            if (arr[i] > arr[j] && max_sum_dec_arr[i] < max_sum_dec_arr[j] + arr[i]) {\n                max_sum_dec_arr[i] = max_sum_dec_arr[j] + arr[i];\n            }\n        }\n    }\n\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_arr[i] = max_sum_inc_arr[i] + max_sum_dec_arr[i] - arr[i];\n    }\n\n    max_sum_inc = max_sum_inc_arr[0];\n    max_sum_dec = max_sum_dec_arr[0];\n    max_sum = max_\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123940,
      "stdout": "../../../../tmp/tmpk54ny_29.ts(53,8): error TS1005: '}' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let n = arr.length;\n    let inc = new Array(n);\n    let dec = new Array(n);\n    inc[0] = arr[0];\n    dec[n - 1] = arr[n - 1];\n    for (let i = 1; i < n; i++) {\n        inc[i] = Math.max(inc[i - 1], arr[i]);\n    }\n    for (let i = n - 2; i >= 0; i--) {\n        dec[i] = Math.max(dec[i + 1], arr[i]);\n    }\n    let max = 0;\n    for (let i = 0; i < n; i++) {\n        max = Math.max(max, inc[i] + dec[i] - arr[i]);\n    }\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510599,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n118\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp2fznooc8.js:23:12)\n    at Object.<anonymous> (/tmp/tmp2fznooc8.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 118,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    let max_sum_inc = 0;\n    let max_sum_dec = 0;\n    let max_sum_inc_arr = [];\n    let max_sum_dec_arr = [];\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_inc_arr[i] = arr[i];\n        max_sum_dec_arr[i] = arr[i];\n    }\n    for (let i = 1; i < arr.length; i++) {\n        for (let j = 0; j < i; j++) {\n            if (arr[i] > arr[j] && max_sum_inc_arr[i] < max_sum_inc_arr[j] + arr[i]) {\n                max_sum_inc_arr[i] = max_sum_inc_arr[j] + arr[i];\n            }\n        }\n    }\n    for (let i = arr.length - 2; i >= 0; i--) {\n        for (let j = arr.length - 1; j > i; j--) {\n            if (arr[i] > arr[j] && max_sum_dec_arr[i] < max_sum_dec_arr[j] + arr[i]) {\n                max_sum_dec_arr[i] = max_sum_dec_arr[j] + arr[i];\n            }\n        }\n    }\n    for (let i = 0; i < arr.length; i++) {\n        max_sum = Math.max(max_sum, max_sum_inc_arr[i] + max_sum_dec_arr[i] - arr[i]);\n    }\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123941,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let n = arr.length;\n    let inc = new Array(n).fill(0);\n    let dec = new Array(n).fill(0);\n    inc[0] = arr[0];\n    dec[n - 1] = arr[n - 1];\n    for (let i = 1; i < n; i++) {\n        inc[i] = Math.max(inc[i - 1] + arr[i], arr[i]);\n    }\n    for (let i = n - 2; i >= 0; i--) {\n        dec[i] = Math.max(dec[i + 1] + arr[i], arr[i]);\n    }\n    let max = inc[0] + dec[0] - arr[0];\n    for (let i = 1; i < n; i++) {\n        max = Math.max(max, inc[i] + dec[i] - arr[i]);\n    }\n    return max;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510599,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpmapiewb6.js:23:12)\n    at Object.<anonymous> (/tmp/tmpmapiewb6.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum_inc = new Array(arr.length);\n    let max_sum_dec = new Array(arr.length);\n    max_sum_inc[0] = arr[0];\n    max_sum_dec[arr.length - 1] = arr[arr.length - 1];\n    for (let i = 1; i < arr.length; i++) {\n        max_sum_inc[i] = Math.max(max_sum_inc[i - 1] + arr[i], arr[i]);\n    }\n    for (let i = arr.length - 2; i >= 0; i--) {\n        max_sum_dec[i] = Math.max(max_sum_dec[i + 1] + arr[i], arr[i]);\n    }\n    let max_sum = max_sum_inc[0] + max_sum_dec[0] - arr[0];\n    for (let i = 1; i < arr.length; i++) {\n        if (max_sum_inc[i] + max_sum_dec[i] - arr[i] > max_sum) {\n            max_sum = max_sum_inc[i] + max_sum_dec[i] - arr[i];\n        }\n    }\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123941,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp3kec30v5.js:24:12)\n    at Object.<anonymous> (/tmp/tmp3kec30v5.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let maxSum = 0;\n  let maxSumLeft = [];\n  let maxSumRight = [];\n  let maxSumLeftRight = [];\n  let maxSumRightLeft = [];\n  let maxSumRightLeftRight = [];\n  let maxSumLeftRightLeft = [];\n  let maxSumRightLeftRightLeft = [];\n  let maxSumLeftRightLeftRight = [];\n\n  for (let i = 0; i < arr.length; i++) {\n    maxSumLeft[i] = arr[i];\n    maxSumRight[i] = arr[i];\n    maxSumLeftRight[i] = arr[i];\n    maxSumRightLeft[i] = arr[i];\n    maxSumRightLeftRight[i] = arr[i];\n    maxSumLeftRightLeft[i] = arr[i];\n    maxSumRightLeftRightLeft[i] = arr[i];\n    maxSumLeftRightLeftRight[i] = arr[i];\n  }\n\n  for (let i = 1; i < arr.length; i++) {\n    for (let j = 0; j < i; j++) {\n      if (arr[i] > arr[j] && maxSumLeft[i] < maxSumLeft[j] + arr[i]) {\n        maxSumLeft[i] = maxSumLeft[j] + arr[i];\n      }\n    }\n  }\n\n  for (let i = arr.length - 2; i >= 0; i--) {\n    for (let j = arr.length - 1; j > i; j--) {\n      if (arr[i] > arr[j] && maxSumRight[i] < maxSumRight[j] + arr[i]) {\n        maxSumRight[i] = maxSumRight[j] + arr[i];\n      }\n    }\n  }\n\n  for (let i = 1; i < arr.length; i++) {\n    for (let j = 0; j < i; j++) {\n      if (arr[i] > arr[j] && maxSumLeftRight[i] < maxSumLeftRight[j] + arr[i]) {\n        maxSumLeftRight[i] = maxSumLeftRight[j] + arr[i];\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123941,
      "stdout": "../../../../tmp/tmpq04yuwgv.ts(55,8): error TS1005: '}' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n    let max_sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let sum = 0;\n        let j = i;\n        while (j < arr.length && arr[j] > arr[j + 1]) {\n            sum += arr[j];\n            j++;\n        }\n        while (j < arr.length && arr[j] < arr[j + 1]) {\n            sum += arr[j];\n            j++;\n        }\n        max_sum = Math.max(max_sum, sum);\n    }\n    return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123941,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n129\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmphy5ckmxb.js:22:12)\n    at Object.<anonymous> (/tmp/tmphy5ckmxb.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 129,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max_sum = 0;\n  let max_sum_start = 0;\n  let max_sum_end = 0;\n  let cur_sum = 0;\n  let cur_sum_start = 0;\n  let cur_sum_end = 0;\n\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] > arr[i + 1]) {\n      cur_sum_end = i;\n      cur_sum = arr.slice(cur_sum_start, cur_sum_end + 1).reduce((a, b) => a + b, 0);\n      if (cur_sum > max_sum) {\n        max_sum = cur_sum;\n        max_sum_start = cur_sum_start;\n        max_sum_end = cur_sum_end;\n      }\n      cur_sum_start = i + 1;\n    }\n  }\n  return max_sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123941,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n133\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpu_f1swj4.js:26:12)\n    at Object.<anonymous> (/tmp/tmpu_f1swj4.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 133,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max = 0;\n  for (let i = 0; i < arr.length; i++) {\n    let sum = arr[i];\n    let max_inc = arr[i];\n    let max_dec = arr[i];\n    for (let j = i + 1; j < arr.length; j++) {\n      if (arr[j] > max_inc) {\n        max_inc = arr[j];\n        sum += arr[j];\n      } else if (arr[j] < max_dec) {\n        max_dec = arr[j];\n        sum += arr[j];\n      }\n    }\n    if (sum > max) {\n      max = sum;\n    }\n  }\n  return max;\n}\n\nconsole.log(max_sum([1, 15, 51, 45, 33, 100, 12, 18, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123941,
      "stdout": "250\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n250\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmplmip56ql.js:28:12)\n    at Object.<anonymous> (/tmp/tmplmip56ql.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 250,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n  let max_sum = 0;\n  let max_sum_ending_here = 0;\n  let max_sum_ending_here_backward = 0;\n  let max_sum_ending_here_forward = 0;\n  let max_sum_ending_here_backward_temp = 0;\n  let max_sum_ending_here_forward_temp = 0;\n  let max_sum_ending_here_temp = 0;\n  let max_sum_ending_here_backward_temp_2 = 0;\n  let max_sum_ending_here_forward_temp_2 = 0;\n  let max_sum_ending_here_temp_2 = 0;\n  let max_sum_ending_here_backward_temp_3 = 0;\n  let max_sum_ending_here_forward_temp_3 = 0;\n  let max_sum_ending_here_temp_3 = 0;\n  let max_sum_ending_here_backward_temp_4 = 0;\n  let max_sum_ending_here_forward_temp_4 = 0;\n  let max_sum_ending_here_temp_4 = 0;\n  let max_sum_ending_here_backward_temp_5 = 0;\n  let max_sum_ending_here_forward_temp_5 = 0;\n  let max_sum_ending_here_temp_5 = 0;\n  let max_sum_ending_here_backward_temp_6 = 0;\n  let max_sum_ending_here_forward_temp_6 = 0;\n  let max_sum_ending_here_temp_6 = 0;\n  let max_sum_ending_here_backward_temp_7 = 0;\n  let max_sum_ending_here_forward_temp_7 = 0;\n  let max_sum_ending_here_temp_7 = 0;\n  let max_sum_ending_here_backward_temp_8 = 0;\n  let max_sum_ending_here_forward_temp_8 = 0;\n  let max_sum_ending_here_temp_8 = 0;\n  let max_sum_ending_here_backward_temp_9\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123941,
      "stdout": "../../../../tmp/tmprwibzl0a.ts(43,8): error TS1005: '}' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    }
  ]
}
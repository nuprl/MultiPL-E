{
  "name": "mbpp_109_odd_Equivalent",
  "language": "ts",
  "prompt": "//Write a tsthon function to find the number of numbers with an odd value when rotating a binary string the given number of times.\nfunction odd_Equivalent(s: string, n: number): number {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_109_odd_Equivalent.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = odd_Equivalent;\n  assert.deepEqual(candidate(\"011001\", 6),3);\n  assert.deepEqual(candidate(\"11011\", 5),4);\n  assert.deepEqual(candidate(\"1010\", 4),2);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent('1010', 2));\nconsole.log(odd_Equivalent('1010', 3));\nconsole.log(odd_Equivalent('1010', 4));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent('1010', 2));\nconsole.log(odd_Equivalent('1010', 3));\nconsole.log(odd_Equivalent('1010', 4));\nconsole.log(odd_Equivalent('1010', 5));\n",
    "    let count = 0;\n    for (let i = 0; i < n; i++) {\n        let num = parseInt(s, 2);\n        num = num >> 1;\n        num = num | (num << 1);\n        num = num & parseInt(\"11\" + \"0\".repeat(s.length - 2), 2);\n        s = num.toString(2);\n        count += s.split(\"1\").length - 1;\n    }\n    return count;\n}\n\nconsole.log(odd_Equivalent(\"0101010101\", 2));\nconsole.log(odd_Equivalent(\"0101010101\", 3));\nconsole.log(odd_Equivalent(\"0101010101\", 4));\nconsole.log(odd_Equivalent(\"0101010101\", 5));\nconsole.log(odd_Equivalent(\"0101010101\", 6));\nconsole.log(odd_Equivalent(\"0101010101\", 7));\nconsole.log(odd_Equivalent(\"0101010101\", 8));\nconsole.log(odd_Equivalent(\"0101010101\", 9));\nconsole.log(odd_Equivalent(\"0101010101\", 10));\nconsole.log(odd_Equivalent(\"0101010101\", 11));\nconsole.log(odd_Equivalent(\"0101010101\", 12));\nconsole.log(odd_Equivalent(\"0101010101\", 13));\nconsole.log(odd_Equivalent(\"0101010101\", 14));\nconsole.log(odd_Equivalent(\"0101010101\", 15));\nconsole.log(odd_Equivalent(\"0101010101\", 16));\nconsole.log(odd_Equivalent(\"0101010101\", 17));\nconsole.log(odd_Equivalent(\"0101010101\", 18));\nconsole.log(odd_Equivalent(\"0101010101\", 19));\nconsole.log(odd_Equivalent(\"0101010101\", 20));\nconsole.log(odd_Equivalent(\"0101010101\", 21));\nconsole.log(odd_Equivalent(\"0101010101\", 22));\nconsole.log(odd_Equivalent(\"0101010101\", 23));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < n; i++) {\n        let num = parseInt(s, 2);\n        num = num << 1;\n        s = num.toString(2);\n        if (s.length > n) {\n            s = s.substring(1);\n        }\n        let odd = 0;\n        for (let j = 0; j < s.length; j++) {\n            if (s[j] == '1') {\n                odd++;\n            }\n        }\n        if (odd % 2 == 1) {\n            count++;\n        }\n    }\n    return count;\n}\n",
    "  let count = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i] === \"1\") {\n      count++;\n    }\n  }\n  return count * n;\n}\n\nconsole.log(odd_Equivalent(\"101\", 2));\nconsole.log(odd_Equivalent(\"101\", 3));\nconsole.log(odd_Equivalent(\"101\", 4));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "  let count = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i] === \"1\") {\n      count++;\n    }\n  }\n  return count * n;\n}\n\nconsole.log(odd_Equivalent(\"101\", 2));\nconsole.log(odd_Equivalent(\"101\", 3));\nconsole.log(odd_Equivalent(\"101\", 4));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] == '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < n; i++) {\n        let newString = s.substring(i) + s.substring(0, i);\n        if (parseInt(newString, 2) % 2 === 1) {\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent('1010', 2));\nconsole.log(odd_Equivalent('1010', 3));\nconsole.log(odd_Equivalent('1010', 4));\nconsole.log(odd_Equivalent('1010', 5));\nconsole.log(odd_Equivalent('1010', 6));\nconsole.log(odd_Equivalent('1010', 7));\nconsole.log(odd_Equivalent('1010', 8));\nconsole.log(odd_Equivalent('1010', 9));\nconsole.log(odd_Equivalent('1010', 10));\nconsole.log(odd_Equivalent('1010', 11));\nconsole.log(odd_Equivalent('1010', 12));\nconsole.log(odd_Equivalent('1010', 13));\nconsole.log(odd_Equivalent('1010', 14));\nconsole.log(odd_Equivalent('1010', 15));\nconsole.log(odd_Equivalent('1010', 16));\nconsole.log(odd_Equivalent('1010', 17));\nconsole.log(odd_Equivalent('1010', 18));\nconsole.log(odd_Equivalent('1010', 19));\nconsole.log(odd_Equivalent('1010', 20));\nconsole.log(odd_Equivalent('1010', 21));\nconsole.log(odd_Equivalent('1010', 22));\nconsole.log(odd_Equivalent('1010', 23));\nconsole.log(odd_Equivalent('1010', 24));\nconsole.log(odd_Equivalent('1010', 25));\nconsole.log(odd_Equivalent('1010', 26));\nconsole.log(odd_Equivalent('1010', 27));\nconsole.log(odd_Equivalent('1010', 28));\nconsole.log(odd_Equivalent('1010', 29));\nconsole.log(odd_Equivalent('1010', 30));\nconsole.log(odd_Equivalent('1010', 31));\nconsole.log",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let odd = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] == '1') {\n            odd++;\n        }\n    }\n    return odd * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === \"1\") {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent(\"1010\", 2));\nconsole.log(odd_Equivalent(\"1010\", 3));\nconsole.log(odd_Equivalent(\"1010\", 4));\nconsole.log(odd_Equivalent(\"1010\", 5));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent('1010', 2));\nconsole.log(odd_Equivalent('1010', 4));\nconsole.log(odd_Equivalent('1010', 6));\nconsole.log(odd_Equivalent('1010', 8));\n",
    "    let oddCount = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            oddCount++;\n        }\n    }\n    return oddCount * n;\n}\n\nconsole.log(odd_Equivalent('101', 2));\nconsole.log(odd_Equivalent('101', 1));\nconsole.log(odd_Equivalent('101', 3));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] == '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    let arr = s.split('');\n    for (let i = 0; i < n; i++) {\n        let temp = arr.pop();\n        arr.unshift(temp);\n        let str = arr.join('');\n        if (parseInt(str, 2) % 2 !== 0) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(odd_Equivalent('101', 2));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent('10101', 2));\n",
    "  let count = 0;\n  for (let i = 0; i < n; i++) {\n    let binary = s.split(\"\");\n    let first = binary.shift();\n    binary.push(first);\n    let number = parseInt(binary.join(\"\"), 2);\n    if (number % 2 !== 0) {\n      count++;\n    }\n  }\n  return count;\n}\n\nconsole.log(odd_Equivalent(\"101\", 2));\nconsole.log(odd_Equivalent(\"101\", 3));\nconsole.log(odd_Equivalent(\"101\", 4));\nconsole.log(odd_Equivalent(\"101\", 5));\n",
    "    let count = 0;\n    for (let i = 0; i < n; i++) {\n        let binary = s.split('');\n        let first = binary.shift();\n        binary.push(first);\n        let num = parseInt(binary.join(''), 2);\n        if (num % 2 !== 0) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(odd_Equivalent('101', 2));\nconsole.log(odd_Equivalent('101', 3));\nconsole.log(odd_Equivalent('101', 4));\nconsole.log(odd_Equivalent('101', 5));\nconsole.log(odd_Equivalent('101', 6));\nconsole.log(odd_Equivalent('101', 7));\nconsole.log(odd_Equivalent('101', 8));\nconsole.log(odd_Equivalent('101', 9));\nconsole.log(odd_Equivalent('101', 10));\nconsole.log(odd_Equivalent('101', 11));\nconsole.log(odd_Equivalent('101', 12));\nconsole.log(odd_Equivalent('101', 13));\nconsole.log(odd_Equivalent('101', 14));\nconsole.log(odd_Equivalent('101', 15));\nconsole.log(odd_Equivalent('101', 16));\nconsole.log(odd_Equivalent('101', 17));\nconsole.log(odd_Equivalent('101', 18));\nconsole.log(odd_Equivalent('101', 19));\nconsole.log(odd_Equivalent('101', 20));\nconsole.log(odd_Equivalent('101', 21));\nconsole.log(odd_Equivalent('101', 22));\nconsole.log(odd_Equivalent('101', 23));\nconsole.log(odd_Equivalent('101', 24));\nconsole.log(odd_Equivalent('101', 25));\nconsole.log(odd_Equivalent('101', 26));\nconsole.log(odd_Equivalent('101', 27));\nconsole.log(odd_Equivalent('101', 28));\nconsole.log(odd_Equivalent('101', 29));\nconsole.log(odd_Equivalent('101', 30));\nconsole.log(odd_Equivalent",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent('101', 2));\nconsole.log(odd_Equivalent('101', 1));\nconsole.log(odd_Equivalent('101', 3));\nconsole.log(odd_Equivalent('101', 4));\nconsole.log(odd_Equivalent('101', 5));\nconsole.log(odd_Equivalent('101', 6));\nconsole.log(odd_Equivalent('101', 7));\nconsole.log(odd_Equivalent('101', 8));\nconsole.log(odd_Equivalent('101', 9));\nconsole.log(odd_Equivalent('101', 10));\nconsole.log(odd_Equivalent('101', 11));\nconsole.log(odd_Equivalent('101', 12));\nconsole.log(odd_Equivalent('101', 13));\nconsole.log(odd_Equivalent('101', 14));\nconsole.log(odd_Equivalent('101', 15));\nconsole.log(odd_Equivalent('101', 16));\nconsole.log(odd_Equivalent('101', 17));\nconsole.log(odd_Equivalent('101', 18));\nconsole.log(odd_Equivalent('101', 19));\nconsole.log(odd_Equivalent('101', 20));\nconsole.log(odd_Equivalent('101', 21));\nconsole.log(odd_Equivalent('101', 22));\nconsole.log(odd_Equivalent('101', 23));\nconsole.log(odd_Equivalent('101', 24));\nconsole.log(odd_Equivalent('101', 25));\nconsole.log(odd_Equivalent('101', 26));\nconsole.log(odd_Equivalent('101', 27));\nconsole.log(odd_Equivalent('101', 28));\nconsole.log(odd_Equivalent('101', 29));\nconsole.log(odd_Equivalent('101', 30));\nconsole.log(odd_Equivalent('101', 31));\nconsole.log(odd_Equivalent('101', 32));\nconsole.log(odd",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] == '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent('1010', 2));\nconsole.log(odd_Equivalent('1010', 3));\nconsole.log(odd_Equivalent('1010', 4));\nconsole.log(odd_Equivalent('1010', 5));\nconsole.log(odd_Equivalent('1010', 6));\nconsole.log(odd_Equivalent('1010', 7));\nconsole.log(odd_Equivalent('1010', 8));\nconsole.log(odd_Equivalent('1010', 9));\nconsole.log(odd_Equivalent('1010', 10));\nconsole.log(odd_Equivalent('1010', 11));\nconsole.log(odd_Equivalent('1010', 12));\nconsole.log(odd_Equivalent('1010', 13));\nconsole.log(odd_Equivalent('1010', 14));\nconsole.log(odd_Equivalent('1010', 15));\nconsole.log(odd_Equivalent('1010', 16));\nconsole.log(odd_Equivalent('1010', 17));\nconsole.log(odd_Equivalent('1010', 18));\nconsole.log(odd_Equivalent('1010', 19));\nconsole.log(odd_Equivalent('1010', 20));\nconsole.log(odd_Equivalent('1010', 21));\nconsole.log(odd_Equivalent('1010', 22));\nconsole.log(odd_Equivalent('1010', 23));\nconsole.log(odd_Equivalent('1010', 24));\nconsole.log(odd_Equivalent('1010', 25));\nconsole.log(odd_Equivalent('1010', 26));\nconsole.log(odd_Equivalent('1010', 27));\nconsole.log(odd_Equivalent('1010', 28));\nconsole.log(odd_Equivalent('1010', 29));\nconsole.log(odd_Equivalent('1010', 30));\nconsole.log(odd_Equivalent('1010', 31));\nconsole.log",
    "    let odd = 0;\n    let even = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] == '1') {\n            if (i % 2 == 0) {\n                odd++;\n            } else {\n                even++;\n            }\n        }\n    }\n    return odd * Math.floor(n / s.length) + Math.min(odd, n % s.length);\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    if (n % 2 === 0) {\n        return count;\n    } else {\n        return s.length - count;\n    }\n}\n\nconsole.log(odd_Equivalent('10101', 2));\nconsole.log(odd_Equivalent('10101', 3));\nconsole.log(odd_Equivalent('10101', 4));\nconsole.log(odd_Equivalent('10101', 5));\nconsole.log(odd_Equivalent('10101', 6));\nconsole.log(odd_Equivalent('10101', 7));\nconsole.log(odd_Equivalent('10101', 8));\nconsole.log(odd_Equivalent('10101', 9));\nconsole.log(odd_Equivalent('10101', 10));\nconsole.log(odd_Equivalent('10101', 11));\nconsole.log(odd_Equivalent('10101', 12));\nconsole.log(odd_Equivalent('10101', 13));\nconsole.log(odd_Equivalent('10101', 14));\nconsole.log(odd_Equivalent('10101', 15));\nconsole.log(odd_Equivalent('10101', 16));\nconsole.log(odd_Equivalent('10101', 17));\nconsole.log(odd_Equivalent('10101', 18));\nconsole.log(odd_Equivalent('10101', 19));\nconsole.log(odd_Equivalent('10101', 20));\nconsole.log(odd_Equivalent('10101', 21));\nconsole.log(odd_Equivalent('10101', 22));\nconsole.log(odd_Equivalent('10101', 23));\nconsole.log(odd_Equivalent('10101', 24));\nconsole.log(odd_Equivalent('10101', 25));\nconsole.log(odd_Equivalent('10101', 26));\nconsole.log(odd_Equivalent('10101', 27));\nconsole.log(odd_Equivalent('10101', 28));\nconsole.log(odd_Equivalent('10101', 29));\nconsole.log(odd_Equ",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return Math.floor(count * n / 2);\n}\n\nconsole.log(odd_Equivalent('1010', 2));\nconsole.log(odd_Equivalent('1010', 3));\nconsole.log(odd_Equivalent('1010', 4));\nconsole.log(odd_Equivalent('1010', 5));\nconsole.log(odd_Equivalent('1010', 6));\nconsole.log(odd_Equivalent('1010', 7));\nconsole.log(odd_Equivalent('1010', 8));\nconsole.log(odd_Equivalent('1010', 9));\nconsole.log(odd_Equivalent('1010', 10));\nconsole.log(odd_Equivalent('1010', 11));\nconsole.log(odd_Equivalent('1010', 12));\nconsole.log(odd_Equivalent('1010', 13));\nconsole.log(odd_Equivalent('1010', 14));\nconsole.log(odd_Equivalent('1010', 15));\nconsole.log(odd_Equivalent('1010', 16));\nconsole.log(odd_Equivalent('1010', 17));\nconsole.log(odd_Equivalent('1010', 18));\nconsole.log(odd_Equivalent('1010', 19));\nconsole.log(odd_Equivalent('1010', 20));\nconsole.log(odd_Equivalent('1010', 21));\nconsole.log(odd_Equivalent('1010', 22));\nconsole.log(odd_Equivalent('1010', 23));\nconsole.log(odd_Equivalent('1010', 24));\nconsole.log(odd_Equivalent('1010', 25));\nconsole.log(odd_Equivalent('1010', 26));\nconsole.log(odd_Equivalent('1010', 27));\nconsole.log(odd_Equivalent('1010', 28));\nconsole.log(odd_Equivalent('1010', 29));\nconsole.log(odd_Equivalent('1010', 30));\nconsole.log(odd_Equivalent('1010',",
    "    let count = 0;\n    for (let i = 0; i < n; i++) {\n        let num = parseInt(s, 2);\n        num = num >> 1;\n        s = num.toString(2);\n        if (s.length < n) {\n            s = '0' + s;\n        }\n        let odd = 0;\n        for (let j = 0; j < s.length; j++) {\n            if (s[j] == '1') {\n                odd++;\n            }\n        }\n        if (odd % 2 == 1) {\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    let arr = s.split('');\n    for (let i = 0; i < n; i++) {\n        let temp = arr.shift();\n        arr.push(temp);\n        let str = arr.join('');\n        let num = parseInt(str, 2);\n        if (num % 2 !== 0) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(odd_Equivalent('101', 2));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent('1010', 2));\n",
    "    let count = 0;\n    let arr = s.split('');\n    for (let i = 0; i < n; i++) {\n        let temp = arr.pop();\n        arr.unshift(temp);\n        let str = arr.join('');\n        let num = parseInt(str, 2);\n        if (num % 2 != 0) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(odd_Equivalent('1011', 2));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return Math.floor(count * n / 2);\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] == '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent('1010', 2));\nconsole.log(odd_Equivalent('1010', 3));\nconsole.log(odd_Equivalent('1010', 4));\nconsole.log(odd_Equivalent('1010', 5));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent('1010', 2));\nconsole.log(odd_Equivalent('1010', 4));\nconsole.log(odd_Equivalent('1010', 6));\n",
    "    let count = 0;\n    for (let i = 0; i < n; i++) {\n        let temp = s.split('');\n        let last = temp.pop();\n        temp.unshift(last);\n        let num = parseInt(temp.join(''), 2);\n        if (num % 2 != 0) {\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] == '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] == '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent('1010', 2));\nconsole.log(odd_Equivalent('1010', 4));\nconsole.log(odd_Equivalent('1010', 6));\nconsole.log(odd_Equivalent('1010', 8));\nconsole.log(odd_Equivalent('1010', 10));\n",
    "    let count = 0;\n    for (let i = 0; i < n; i++) {\n        let temp = s.split('');\n        let last = temp.pop();\n        temp.unshift(last);\n        s = temp.join('');\n        if (s.split('').filter(x => x == '1').length % 2 != 0) {\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent('1010', 2));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] == '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent('1010', 2));\nconsole.log(odd_Equivalent('1010', 3));\nconsole.log(odd_Equivalent('1010', 4));\n",
    "    let count = 0;\n    for (let i = 0; i < n; i++) {\n        let str = s.split('');\n        let last = str.pop();\n        str.unshift(last);\n        let num = parseInt(str.join(''), 2);\n        if (num % 2 === 1) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(odd_Equivalent('101', 2));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] == '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] == '1') {\n            if (i + n < s.length) {\n                if (s[i + n] == '1') {\n                    count++;\n                }\n            }\n            else {\n                if (s[i + n - s.length] == '1') {\n                    count++;\n                }\n            }\n        }\n    }\n    return count;\n}\nconsole.log(odd_Equivalent('1010101', 2));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent('1010', 2));\nconsole.log(odd_Equivalent('1010', 3));\nconsole.log(odd_Equivalent('1010', 4));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < n; i++) {\n        let binary = s.split('');\n        let last = binary.pop();\n        binary.unshift(last);\n        let num = parseInt(binary.join(''), 2);\n        if (num % 2 != 0) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(odd_Equivalent('101', 1));\nconsole.log(odd_Equivalent('101', 2));\nconsole.log(odd_Equivalent('101', 3));\nconsole.log(odd_Equivalent('101', 4));\nconsole.log(odd_Equivalent('101', 5));\nconsole.log(odd_Equivalent('101', 6));\nconsole.log(odd_Equivalent('101', 7));\nconsole.log(odd_Equivalent('101', 8));\nconsole.log(odd_Equivalent('101', 9));\nconsole.log(odd_Equivalent('101', 10));\nconsole.log(odd_Equivalent('101', 11));\nconsole.log(odd_Equivalent('101', 12));\nconsole.log(odd_Equivalent('101', 13));\nconsole.log(odd_Equivalent('101', 14));\nconsole.log(odd_Equivalent('101', 15));\nconsole.log(odd_Equivalent('101', 16));\nconsole.log(odd_Equivalent('101', 17));\nconsole.log(odd_Equivalent('101', 18));\nconsole.log(odd_Equivalent('101', 19));\nconsole.log(odd_Equivalent('101', 20));\nconsole.log(odd_Equivalent('101', 21));\nconsole.log(odd_Equivalent('101', 22));\nconsole.log(odd_Equivalent('101', 23));\nconsole.log(odd_Equivalent('101', 24));\nconsole.log(odd_Equivalent('101', 25));\nconsole.log(odd_Equivalent('101', 26));\nconsole.log(odd_Equivalent('101', 27));\nconsole.log(odd_Equivalent('101', 28));\nconsole.log(odd_Equivalent('101', 29));\nconsole.log(odd_Equivalent",
    "    let count = 0;\n    for (let i = 0; i < n; i++) {\n        let str = s.split('');\n        let first = str.shift();\n        str.push(first);\n        let num = parseInt(str.join(''), 2);\n        if (num % 2 !== 0) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(odd_Equivalent('1010', 4));\nconsole.log(odd_Equivalent('1010', 3));\nconsole.log(odd_Equivalent('1010', 2));\nconsole.log(odd_Equivalent('1010', 1));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] == '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "  let count = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i] === \"1\") {\n      count++;\n    }\n  }\n  return count * n;\n}\nconsole.log(odd_Equivalent(\"101\", 2));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] == '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent(\"1010\", 2));\nconsole.log(odd_Equivalent(\"1010\", 3));\nconsole.log(odd_Equivalent(\"1010\", 4));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] == '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "  let count = 0;\n  for (let i = 0; i < n; i++) {\n    let binary = s.split(\"\");\n    let first = binary.shift();\n    binary.push(first);\n    let newBinary = binary.join(\"\");\n    let num = parseInt(newBinary, 2);\n    if (num % 2 !== 0) {\n      count++;\n    }\n  }\n  return count;\n}\n\nconsole.log(odd_Equivalent(\"101\", 2));\nconsole.log(odd_Equivalent(\"101\", 3));\nconsole.log(odd_Equivalent(\"101\", 4));\nconsole.log(odd_Equivalent(\"101\", 5));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent('1010', 2));\nconsole.log(odd_Equivalent('1010', 4));\nconsole.log(odd_Equivalent('1010', 6));\nconsole.log(odd_Equivalent('1010', 8));\nconsole.log(odd_Equivalent('1010', 10));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent('10101', 2));\n",
    "    let count = 0;\n    let arr = s.split('');\n    for (let i = 0; i < n; i++) {\n        let temp = arr.pop();\n        arr.unshift(temp);\n        let str = arr.join('');\n        let num = parseInt(str, 2);\n        if (num % 2 != 0) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(odd_Equivalent('101', 2));\n",
    "  let count = 0;\n  for (let i = 0; i < n; i++) {\n    let num = parseInt(s, 2);\n    num = num << 1;\n    s = num.toString(2);\n    if (s.length > n) {\n      s = s.slice(1);\n    }\n    let sum = 0;\n    for (let j = 0; j < s.length; j++) {\n      sum += parseInt(s[j]);\n    }\n    if (sum % 2 !== 0) {\n      count++;\n    }\n  }\n  return count;\n}\n\nconsole.log(odd_Equivalent(\"1010\", 4));\nconsole.log(odd_Equivalent(\"1011\", 4));\nconsole.log(odd_Equivalent(\"1111\", 4));\nconsole.log(odd_Equivalent(\"0101\", 4));\nconsole.log(odd_Equivalent(\"0110\", 4));\nconsole.log(odd_Equivalent(\"0111\", 4));\nconsole.log(odd_Equivalent(\"0000\", 4));\nconsole.log(odd_Equivalent(\"0001\", 4));\nconsole.log(odd_Equivalent(\"0010\", 4));\nconsole.log(odd_Equivalent(\"0011\", 4));\nconsole.log(odd_Equivalent(\"1100\", 4));\nconsole.log(odd_Equivalent(\"1101\", 4));\nconsole.log(odd_Equivalent(\"1110\", 4));\nconsole.log(odd_Equivalent(\"1111\", 4));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return Math.floor(count * n / 2);\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] == \"1\") {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] == '1') {\n            count++;\n        }\n    }\n    return (count * n) % 2;\n}\n",
    "  let count = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i] === \"1\") {\n      count++;\n    }\n  }\n  return count * n;\n}\n\nconsole.log(odd_Equivalent(\"101\", 2));\nconsole.log(odd_Equivalent(\"101\", 3));\nconsole.log(odd_Equivalent(\"101\", 4));\nconsole.log(odd_Equivalent(\"101\", 5));\n",
    "    let count = 0;\n    for (let i = 0; i < n; i++) {\n        if (parseInt(s, 2) % 2 !== 0) {\n            count++;\n        }\n        s = s.substring(1) + s.substring(0, 1);\n    }\n    return count;\n}\n\nconsole.log(odd_Equivalent(\"101\", 2));\nconsole.log(odd_Equivalent(\"101\", 3));\nconsole.log(odd_Equivalent(\"101\", 4));\nconsole.log(odd_Equivalent(\"101\", 5));\nconsole.log(odd_Equivalent(\"101\", 6));\nconsole.log(odd_Equivalent(\"101\", 7));\nconsole.log(odd_Equivalent(\"101\", 8));\nconsole.log(odd_Equivalent(\"101\", 9));\nconsole.log(odd_Equivalent(\"101\", 10));\nconsole.log(odd_Equivalent(\"101\", 11));\nconsole.log(odd_Equivalent(\"101\", 12));\nconsole.log(odd_Equivalent(\"101\", 13));\nconsole.log(odd_Equivalent(\"101\", 14));\nconsole.log(odd_Equivalent(\"101\", 15));\nconsole.log(odd_Equivalent(\"101\", 16));\nconsole.log(odd_Equivalent(\"101\", 17));\nconsole.log(odd_Equivalent(\"101\", 18));\nconsole.log(odd_Equivalent(\"101\", 19));\nconsole.log(odd_Equivalent(\"101\", 20));\nconsole.log(odd_Equivalent(\"101\", 21));\nconsole.log(odd_Equivalent(\"101\", 22));\nconsole.log(odd_Equivalent(\"101\", 23));\nconsole.log(odd_Equivalent(\"101\", 24));\nconsole.log(odd_Equivalent(\"101\", 25));\nconsole.log(odd_Equivalent(\"101\", 26));\nconsole.log(odd_Equivalent(\"101\", 27));\nconsole.log(odd_Equivalent(\"101\", 28));\nconsole.log(odd_Equivalent(\"101\", 29));\nconsole.log(odd_Equivalent(\"101\", 30));\nconsole.log(odd_Equivalent(\"101\", 31));\nconsole.log(odd_Equivalent(\"101\",",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < n; i++) {\n        let binary = s.split('');\n        let first = binary.shift();\n        binary.push(first);\n        let num = parseInt(binary.join(''), 2);\n        if (num % 2 !== 0) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(odd_Equivalent('101', 2));\nconsole.log(odd_Equivalent('101', 3));\nconsole.log(odd_Equivalent('101', 4));\nconsole.log(odd_Equivalent('101', 5));\nconsole.log(odd_Equivalent('101', 6));\nconsole.log(odd_Equivalent('101', 7));\nconsole.log(odd_Equivalent('101', 8));\nconsole.log(odd_Equivalent('101', 9));\nconsole.log(odd_Equivalent('101', 10));\nconsole.log(odd_Equivalent('101', 11));\nconsole.log(odd_Equivalent('101', 12));\nconsole.log(odd_Equivalent('101', 13));\nconsole.log(odd_Equivalent('101', 14));\nconsole.log(odd_Equivalent('101', 15));\nconsole.log(odd_Equivalent('101', 16));\nconsole.log(odd_Equivalent('101', 17));\nconsole.log(odd_Equivalent('101', 18));\nconsole.log(odd_Equivalent('101', 19));\nconsole.log(odd_Equivalent('101', 20));\nconsole.log(odd_Equivalent('101', 21));\nconsole.log(odd_Equivalent('101', 22));\nconsole.log(odd_Equivalent('101', 23));\nconsole.log(odd_Equivalent('101', 24));\nconsole.log(odd_Equivalent('101', 25));\nconsole.log(odd_Equivalent('101', 26));\nconsole.log(odd_Equivalent('101', 27));\nconsole.log(odd_Equivalent('101', 28));\nconsole.log(odd_Equivalent('101', 29));\nconsole.log(odd_Equivalent('101', 30));\nconsole.log(odd_Equivalent",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent('1010', 2));\nconsole.log(odd_Equivalent('1010', 3));\nconsole.log(odd_Equivalent('1010', 4));\nconsole.log(odd_Equivalent('1010', 5));\nconsole.log(odd_Equivalent('1010', 6));\nconsole.log(odd_Equivalent('1010', 7));\nconsole.log(odd_Equivalent('1010', 8));\nconsole.log(odd_Equivalent('1010', 9));\nconsole.log(odd_Equivalent('1010', 10));\nconsole.log(odd_Equivalent('1010', 11));\nconsole.log(odd_Equivalent('1010', 12));\nconsole.log(odd_Equivalent('1010', 13));\nconsole.log(odd_Equivalent('1010', 14));\nconsole.log(odd_Equivalent('1010', 15));\nconsole.log(odd_Equivalent('1010', 16));\nconsole.log(odd_Equivalent('1010', 17));\nconsole.log(odd_Equivalent('1010', 18));\nconsole.log(odd_Equivalent('1010', 19));\nconsole.log(odd_Equivalent('1010', 20));\nconsole.log(odd_Equivalent('1010', 21));\nconsole.log(odd_Equivalent('1010', 22));\nconsole.log(odd_Equivalent('1010', 23));\nconsole.log(odd_Equivalent('1010', 24));\nconsole.log(odd_Equivalent('1010', 25));\nconsole.log(odd_Equivalent('1010', 26));\nconsole.log(odd_Equivalent('1010', 27));\nconsole.log(odd_Equivalent('1010', 28));\nconsole.log(odd_Equivalent('1010', 29));\nconsole.log(odd_Equivalent('1010', 30));\nconsole.log(odd_Equivalent('1010', 31));\nconsole.log",
    "  let count = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i] === \"1\") {\n      count++;\n    }\n  }\n  return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    if (n % 2 === 0) {\n        return count;\n    } else {\n        return s.length - count;\n    }\n}\n\nconsole.log(odd_Equivalent('1010101', 1));\nconsole.log(odd_Equivalent('1010101', 2));\nconsole.log(odd_Equivalent('1010101', 3));\nconsole.log(odd_Equivalent('1010101', 4));\nconsole.log(odd_Equivalent('1010101', 5));\nconsole.log(odd_Equivalent('1010101', 6));\nconsole.log(odd_Equivalent('1010101', 7));\nconsole.log(odd_Equivalent('1010101', 8));\nconsole.log(odd_Equivalent('1010101', 9));\nconsole.log(odd_Equivalent('1010101', 10));\nconsole.log(odd_Equivalent('1010101', 11));\nconsole.log(odd_Equivalent('1010101', 12));\nconsole.log(odd_Equivalent('1010101', 13));\nconsole.log(odd_Equivalent('1010101', 14));\nconsole.log(odd_Equivalent('1010101', 15));\nconsole.log(odd_Equivalent('1010101', 16));\nconsole.log(odd_Equivalent('1010101', 17));\nconsole.log(odd_Equivalent('1010101', 18));\nconsole.log(odd_Equivalent('1010101', 19));\nconsole.log(odd_Equivalent('1010101', 20));\nconsole.log(odd_Equivalent('1010101', 21));\nconsole.log(odd_Equivalent('1010101', 22));\nconsole.log(odd_Equivalent('1010101', 23));\nconsole.log(odd_Equivalent('1010101', 24));\nconsole.log(odd_Equivalent('1010101', 25));\nconsole.log(odd_Equivalent('1010101', 26));\nconsole.log(odd_Equivalent('10101",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent('1010', 2));\nconsole.log(odd_Equivalent('1010', 4));\nconsole.log(odd_Equivalent('1010', 6));\n",
    "  let count = 0;\n  for (let i = 0; i < n; i++) {\n    let binary = s.split(\"\");\n    let first = binary.shift();\n    binary.push(first);\n    let newBinary = binary.join(\"\");\n    let decimal = parseInt(newBinary, 2);\n    if (decimal % 2 !== 0) {\n      count++;\n    }\n  }\n  return count;\n}\n\nconsole.log(odd_Equivalent(\"101\", 1));\nconsole.log(odd_Equivalent(\"101\", 2));\nconsole.log(odd_Equivalent(\"101\", 3));\nconsole.log(odd_Equivalent(\"101\", 4));\nconsole.log(odd_Equivalent(\"101\", 5));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let oddCount = 0;\n    let evenCount = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] == '1') {\n            if (i % 2 == 0) {\n                oddCount++;\n            } else {\n                evenCount++;\n            }\n        }\n    }\n    return (n % 2 == 0) ? oddCount : evenCount;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === \"1\") {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent(\"1010\", 2));\nconsole.log(odd_Equivalent(\"1010\", 3));\nconsole.log(odd_Equivalent(\"1010\", 4));\nconsole.log(odd_Equivalent(\"1010\", 5));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent('1010', 2));\nconsole.log(odd_Equivalent('1010', 3));\nconsole.log(odd_Equivalent('1010', 4));\nconsole.log(odd_Equivalent('1010', 5));\nconsole.log(odd_Equivalent('1010', 6));\nconsole.log(odd_Equivalent('1010', 7));\nconsole.log(odd_Equivalent('1010', 8));\nconsole.log(odd_Equivalent('1010', 9));\nconsole.log(odd_Equivalent('1010', 10));\nconsole.log(odd_Equivalent('1010', 11));\nconsole.log(odd_Equivalent('1010', 12));\nconsole.log(odd_Equivalent('1010', 13));\nconsole.log(odd_Equivalent('1010', 14));\nconsole.log(odd_Equivalent('1010', 15));\nconsole.log(odd_Equivalent('1010', 16));\nconsole.log(odd_Equivalent('1010', 17));\nconsole.log(odd_Equivalent('1010', 18));\nconsole.log(odd_Equivalent('1010', 19));\nconsole.log(odd_Equivalent('1010', 20));\nconsole.log(odd_Equivalent('1010', 21));\nconsole.log(odd_Equivalent('1010', 22));\nconsole.log(odd_Equivalent('1010', 23));\nconsole.log(odd_Equivalent('1010', 24));\nconsole.log(odd_Equivalent('1010', 25));\nconsole.log(odd_Equivalent('1010', 26));\nconsole.log(odd_Equivalent('1010', 27));\nconsole.log(odd_Equivalent('1010', 28));\nconsole.log(odd_Equivalent('1010', 29));\nconsole.log(odd_Equivalent('1010', 30));\nconsole.log(odd_Equivalent('1010', 31));\nconsole.log",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "  let count = 0;\n  for (let i = 0; i < n; i++) {\n    let num = parseInt(s, 2);\n    num = num << 1;\n    s = num.toString(2);\n    if (s.length > n) {\n      s = s.slice(1);\n    }\n    if (s[s.length - 1] === \"1\") {\n      count++;\n    }\n  }\n  return count;\n}\n\nconsole.log(odd_Equivalent(\"101\", 2));\nconsole.log(odd_Equivalent(\"101\", 3));\nconsole.log(odd_Equivalent(\"101\", 4));\nconsole.log(odd_Equivalent(\"101\", 5));\nconsole.log(odd_Equivalent(\"101\", 6));\nconsole.log(odd_Equivalent(\"101\", 7));\nconsole.log(odd_Equivalent(\"101\", 8));\nconsole.log(odd_Equivalent(\"101\", 9));\nconsole.log(odd_Equivalent(\"101\", 10));\nconsole.log(odd_Equivalent(\"101\", 11));\nconsole.log(odd_Equivalent(\"101\", 12));\nconsole.log(odd_Equivalent(\"101\", 13));\nconsole.log(odd_Equivalent(\"101\", 14));\nconsole.log(odd_Equivalent(\"101\", 15));\nconsole.log(odd_Equivalent(\"101\", 16));\nconsole.log(odd_Equivalent(\"101\", 17));\nconsole.log(odd_Equivalent(\"101\", 18));\nconsole.log(odd_Equivalent(\"101\", 19));\nconsole.log(odd_Equivalent(\"101\", 20));\nconsole.log(odd_Equivalent(\"101\", 21));\nconsole.log(odd_Equivalent(\"101\", 22));\nconsole.log(odd_Equivalent(\"101\", 23));\nconsole.log(odd_Equivalent(\"101\", 24));\nconsole.log(odd_Equivalent(\"101\", 25));\nconsole.log(odd_Equivalent(\"101\", 26));\nconsole.log(odd_Equivalent(\"101\", 27));\nconsole.log(odd_Equivalent(\"101\", 28));\nconsole.log(odd_Equivalent(\"101\", 29));\nconsole.log(odd_",
    "  let count = 0;\n  for (let i = 0; i < n; i++) {\n    let bin = s.split(\"\");\n    let first = bin.shift();\n    bin.push(first);\n    let num = parseInt(bin.join(\"\"), 2);\n    if (num % 2 !== 0) {\n      count++;\n    }\n  }\n  return count;\n}\n\nconsole.log(odd_Equivalent(\"101\", 2));\nconsole.log(odd_Equivalent(\"101\", 3));\nconsole.log(odd_Equivalent(\"101\", 4));\nconsole.log(odd_Equivalent(\"101\", 5));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return Math.floor(count * n / 2);\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return Math.floor(count * n / 2);\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent('1010', 2));\nconsole.log(odd_Equivalent('1010', 3));\nconsole.log(odd_Equivalent('1010', 4));\nconsole.log(odd_Equivalent('1010', 5));\n",
    "    let oddCount = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            oddCount++;\n        }\n    }\n    return oddCount * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < n; i++) {\n        let temp = s.split('');\n        let last = temp.pop();\n        temp.unshift(last);\n        let num = parseInt(temp.join(''), 2);\n        if (num % 2 !== 0) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(odd_Equivalent('101', 2));",
    "  let count = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i] === \"1\") count++;\n  }\n  return count * n;\n}\n",
    "  let count = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i] === \"1\") {\n      count++;\n    }\n  }\n  return count * n;\n}\n\nconsole.log(odd_Equivalent(\"101\", 2));\nconsole.log(odd_Equivalent(\"101\", 3));\nconsole.log(odd_Equivalent(\"101\", 4));\nconsole.log(odd_Equivalent(\"101\", 5));\nconsole.log(odd_Equivalent(\"101\", 6));\nconsole.log(odd_Equivalent(\"101\", 7));\nconsole.log(odd_Equivalent(\"101\", 8));\nconsole.log(odd_Equivalent(\"101\", 9));\nconsole.log(odd_Equivalent(\"101\", 10));\nconsole.log(odd_Equivalent(\"101\", 11));\nconsole.log(odd_Equivalent(\"101\", 12));\nconsole.log(odd_Equivalent(\"101\", 13));\nconsole.log(odd_Equivalent(\"101\", 14));\nconsole.log(odd_Equivalent(\"101\", 15));\nconsole.log(odd_Equivalent(\"101\", 16));\nconsole.log(odd_Equivalent(\"101\", 17));\nconsole.log(odd_Equivalent(\"101\", 18));\nconsole.log(odd_Equivalent(\"101\", 19));\nconsole.log(odd_Equivalent(\"101\", 20));\nconsole.log(odd_Equivalent(\"101\", 21));\nconsole.log(odd_Equivalent(\"101\", 22));\nconsole.log(odd_Equivalent(\"101\", 23));\nconsole.log(odd_Equivalent(\"101\", 24));\nconsole.log(odd_Equivalent(\"101\", 25));\nconsole.log(odd_Equivalent(\"101\", 26));\nconsole.log(odd_Equivalent(\"101\", 27));\nconsole.log(odd_Equivalent(\"101\", 28));\nconsole.log(odd_Equivalent(\"101\", 29));\nconsole.log(odd_Equivalent(\"101\", 30));\nconsole.log(odd_Equivalent(\"101\", 31));\nconsole.log(odd_Equivalent(\"101\", 32));\nconsole.log(odd_Equivalent(\"101\", 33));\nconsole.log(odd",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent('1010', 2));\nconsole.log(odd_Equivalent('1010', 3));\nconsole.log(odd_Equivalent('1010', 4));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent('1010', 2));\nconsole.log(odd_Equivalent('1010', 4));\nconsole.log(odd_Equivalent('1010', 6));\nconsole.log(odd_Equivalent('1010', 8));\nconsole.log(odd_Equivalent('1010', 10));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent('1010', 2));\nconsole.log(odd_Equivalent('1010', 4));\nconsole.log(odd_Equivalent('1010', 6));\n",
    "    let count = 0;\n    for (let i = 0; i < n; i++) {\n        let num = parseInt(s, 2);\n        num = num << 1;\n        s = num.toString(2);\n        if (s.length > n) {\n            s = s.substring(1);\n        }\n        let odd = 0;\n        for (let j = 0; j < s.length; j++) {\n            if (s[j] == '1') {\n                odd++;\n            }\n        }\n        if (odd % 2 != 0) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(odd_Equivalent('101', 2));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent('1010', 2));\nconsole.log(odd_Equivalent('1010', 4));\nconsole.log(odd_Equivalent('1010', 6));\nconsole.log(odd_Equivalent('1010', 8));\nconsole.log(odd_Equivalent('1010', 10));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent('1010', 2));\nconsole.log(odd_Equivalent('1010', 3));\nconsole.log(odd_Equivalent('1010', 4));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent('101', 2));\nconsole.log(odd_Equivalent('101', 3));\nconsole.log(odd_Equivalent('101', 4));\nconsole.log(odd_Equivalent('101', 5));\nconsole.log(odd_Equivalent('101', 6));\nconsole.log(odd_Equivalent('101', 7));\nconsole.log(odd_Equivalent('101', 8));\nconsole.log(odd_Equivalent('101', 9));\nconsole.log(odd_Equivalent('101', 10));\nconsole.log(odd_Equivalent('101', 11));\nconsole.log(odd_Equivalent('101', 12));\nconsole.log(odd_Equivalent('101', 13));\nconsole.log(odd_Equivalent('101', 14));\nconsole.log(odd_Equivalent('101', 15));\nconsole.log(odd_Equivalent('101', 16));\nconsole.log(odd_Equivalent('101', 17));\nconsole.log(odd_Equivalent('101', 18));\nconsole.log(odd_Equivalent('101', 19));\nconsole.log(odd_Equivalent('101', 20));\nconsole.log(odd_Equivalent('101', 21));\nconsole.log(odd_Equivalent('101', 22));\nconsole.log(odd_Equivalent('101', 23));\nconsole.log(odd_Equivalent('101', 24));\nconsole.log(odd_Equivalent('101', 25));\nconsole.log(odd_Equivalent('101', 26));\nconsole.log(odd_Equivalent('101', 27));\nconsole.log(odd_Equivalent('101', 28));\nconsole.log(odd_Equivalent('101', 29));\nconsole.log(odd_Equivalent('101', 30));\nconsole.log(odd_Equivalent('101', 31));\nconsole.log(odd_Equivalent('101', 32));\nconsole.log(odd_Equivalent('101', 33));\nconsole.log(odd",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] == '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent('1010', 2));\nconsole.log(odd_Equivalent('1010', 3));\nconsole.log(odd_Equivalent('1010', 4));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] == '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent('1010', 2));\nconsole.log(odd_Equivalent('1010', 3));\nconsole.log(odd_Equivalent('1010', 4));\nconsole.log(odd_Equivalent('1010', 5));\nconsole.log(odd_Equivalent('1010', 6));\nconsole.log(odd_Equivalent('1010', 7));\nconsole.log(odd_Equivalent('1010', 8));\nconsole.log(odd_Equivalent('1010', 9));\nconsole.log(odd_Equivalent('1010', 10));\nconsole.log(odd_Equivalent('1010', 11));\nconsole.log(odd_Equivalent('1010', 12));\nconsole.log(odd_Equivalent('1010', 13));\nconsole.log(odd_Equivalent('1010', 14));\nconsole.log(odd_Equivalent('1010', 15));\nconsole.log(odd_Equivalent('1010', 16));\nconsole.log(odd_Equivalent('1010', 17));\nconsole.log(odd_Equivalent('1010', 18));\nconsole.log(odd_Equivalent('1010', 19));\nconsole.log(odd_Equivalent('1010', 20));\nconsole.log(odd_Equivalent('1010', 21));\nconsole.log(odd_Equivalent('1010', 22));\nconsole.log(odd_Equivalent('1010', 23));\nconsole.log(odd_Equivalent('1010', 24));\nconsole.log(odd_Equivalent('1010', 25));\nconsole.log(odd_Equivalent('1010', 26));\nconsole.log(odd_Equivalent('1010', 27));\nconsole.log(odd_Equivalent('1010', 28));\nconsole.log(odd_Equivalent('1010', 29));\nconsole.log(odd_Equivalent('1010', 30));\nconsole.log(odd_Equivalent('1010', 31));\nconsole.log",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent('10101', 2));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] == '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent('1010', 2));\nconsole.log(odd_Equivalent('1010', 3));\nconsole.log(odd_Equivalent('1010', 4));\n",
    "    let count = 0;\n    for (let i = 0; i < n; i++) {\n        let num = parseInt(s, 2);\n        num = num >> 1;\n        num = num | (num << 1);\n        s = num.toString(2);\n        count += s.split('').filter(x => x == '1').length;\n    }\n    return count;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] == '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] == '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent('1010', 2));\nconsole.log(odd_Equivalent('1010', 4));\nconsole.log(odd_Equivalent('1010', 6));\n",
    "    let count = 0;\n    for (let i = 0; i < n; i++) {\n        let binary = s.split('');\n        let last = binary.pop();\n        binary.unshift(last);\n        s = binary.join('');\n        let num = parseInt(s, 2);\n        if (num % 2 != 0) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(odd_Equivalent('101', 2));\nconsole.log(odd_Equivalent('101', 3));\nconsole.log(odd_Equivalent('101', 4));\nconsole.log(odd_Equivalent('101', 5));\nconsole.log(odd_Equivalent('101', 6));\nconsole.log(odd_Equivalent('101', 7));\nconsole.log(odd_Equivalent('101', 8));\nconsole.log(odd_Equivalent('101', 9));\nconsole.log(odd_Equivalent('101', 10));\nconsole.log(odd_Equivalent('101', 11));\nconsole.log(odd_Equivalent('101', 12));\nconsole.log(odd_Equivalent('101', 13));\nconsole.log(odd_Equivalent('101', 14));\nconsole.log(odd_Equivalent('101', 15));\nconsole.log(odd_Equivalent('101', 16));\nconsole.log(odd_Equivalent('101', 17));\nconsole.log(odd_Equivalent('101', 18));\nconsole.log(odd_Equivalent('101', 19));\nconsole.log(odd_Equivalent('101', 20));\nconsole.log(odd_Equivalent('101', 21));\nconsole.log(odd_Equivalent('101', 22));\nconsole.log(odd_Equivalent('101', 23));\nconsole.log(odd_Equivalent('101', 24));\nconsole.log(odd_Equivalent('101', 25));\nconsole.log(odd_Equivalent('101', 26));\nconsole.log(odd_Equivalent('101', 27));\nconsole.log(odd_Equivalent('101', 28));\nconsole.log(odd_Equivalent('101', 29));\nconsole.log(odd_Equivalent('101', 30));\nconsole.",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent('1010', 2));\nconsole.log(odd_Equivalent('1010', 3));\nconsole.log(odd_Equivalent('1010', 4));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === \"1\") {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent(\"1010\", 2));\nconsole.log(odd_Equivalent(\"1010\", 3));\nconsole.log(odd_Equivalent(\"1010\", 4));\n",
    "    let count = 0;\n    for (let i = 0; i < n; i++) {\n        let binary = s.split('');\n        let first = binary.shift();\n        binary.push(first);\n        let num = parseInt(binary.join(''), 2);\n        if (num % 2 != 0) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(odd_Equivalent('101', 2));\nconsole.log(odd_Equivalent('101', 3));\nconsole.log(odd_Equivalent('101', 4));\nconsole.log(odd_Equivalent('101', 5));\nconsole.log(odd_Equivalent('101', 6));\nconsole.log(odd_Equivalent('101', 7));\nconsole.log(odd_Equivalent('101', 8));\nconsole.log(odd_Equivalent('101', 9));\nconsole.log(odd_Equivalent('101', 10));\nconsole.log(odd_Equivalent('101', 11));\nconsole.log(odd_Equivalent('101', 12));\nconsole.log(odd_Equivalent('101', 13));\nconsole.log(odd_Equivalent('101', 14));\nconsole.log(odd_Equivalent('101', 15));\nconsole.log(odd_Equivalent('101', 16));\nconsole.log(odd_Equivalent('101', 17));\nconsole.log(odd_Equivalent('101', 18));\nconsole.log(odd_Equivalent('101', 19));\nconsole.log(odd_Equivalent('101', 20));\nconsole.log(odd_Equivalent('101', 21));\nconsole.log(odd_Equivalent('101', 22));\nconsole.log(odd_Equivalent('101', 23));\nconsole.log(odd_Equivalent('101', 24));\nconsole.log(odd_Equivalent('101', 25));\nconsole.log(odd_Equivalent('101', 26));\nconsole.log(odd_Equivalent('101', 27));\nconsole.log(odd_Equivalent('101', 28));\nconsole.log(odd_Equivalent('101', 29));\nconsole.log(odd_Equivalent('101', 30));\nconsole.log(odd_Equivalent('",
    "    let count = 0;\n    let arr = s.split('');\n    for (let i = 0; i < n; i++) {\n        let last = arr.pop();\n        arr.unshift(last);\n        let str = arr.join('');\n        if (parseInt(str, 2) % 2 !== 0) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(odd_Equivalent('1010', 2));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent('1010', 2));\nconsole.log(odd_Equivalent('1010', 3));\nconsole.log(odd_Equivalent('1010', 4));\nconsole.log(odd_Equivalent('1010', 5));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] == '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] == '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < n; i++) {\n        let num = parseInt(s, 2);\n        num = num >> 1;\n        num = num | (num << 1);\n        s = num.toString(2);\n        if (s.length < n) {\n            s = '0' + s;\n        }\n        if (s.length > n) {\n            s = s.slice(1);\n        }\n        if (s[s.length - 1] === '1') {\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    let arr = s.split('');\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] == '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\nconsole.log(odd_Equivalent(\"1010\", 2));\n",
    "    let count = 0;\n    for (let i = 0; i < n; i++) {\n        let temp = \"\";\n        for (let j = 0; j < s.length; j++) {\n            if (s[j] === \"1\") {\n                temp += \"0\";\n            } else {\n                temp += \"1\";\n            }\n        }\n        s = temp;\n        let num = parseInt(s, 2);\n        if (num % 2 !== 0) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(odd_Equivalent(\"101\", 2));\nconsole.log(odd_Equivalent(\"101\", 3));\nconsole.log(odd_Equivalent(\"101\", 4));\nconsole.log(odd_Equivalent(\"101\", 5));\nconsole.log(odd_Equivalent(\"101\", 6));\nconsole.log(odd_Equivalent(\"101\", 7));\nconsole.log(odd_Equivalent(\"101\", 8));\nconsole.log(odd_Equivalent(\"101\", 9));\nconsole.log(odd_Equivalent(\"101\", 10));\nconsole.log(odd_Equivalent(\"101\", 11));\nconsole.log(odd_Equivalent(\"101\", 12));\nconsole.log(odd_Equivalent(\"101\", 13));\nconsole.log(odd_Equivalent(\"101\", 14));\nconsole.log(odd_Equivalent(\"101\", 15));\nconsole.log(odd_Equivalent(\"101\", 16));\nconsole.log(odd_Equivalent(\"101\", 17));\nconsole.log(odd_Equivalent(\"101\", 18));\nconsole.log(odd_Equivalent(\"101\", 19));\nconsole.log(odd_Equivalent(\"101\", 20));\nconsole.log(odd_Equivalent(\"101\", 21));\nconsole.log(odd_Equivalent(\"101\", 22));\nconsole.log(odd_Equivalent(\"101\", 23));\nconsole.log(odd_Equivalent(\"101\", 24));\nconsole.log(odd_Equivalent(\"101\", 25));\nconsole.log(odd_Equivalent(\"101\", 26));\nconsole.log(odd_Equivalent(\"101\", 27));\nconsole.log(odd_Equivalent(\"101\", 28));",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] == '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent('101', 1));\nconsole.log(odd_Equivalent('101', 2));\nconsole.log(odd_Equivalent('101', 3));\nconsole.log(odd_Equivalent('101', 4));\nconsole.log(odd_Equivalent('101', 5));\nconsole.log(odd_Equivalent('101', 6));\nconsole.log(odd_Equivalent('101', 7));\nconsole.log(odd_Equivalent('101', 8));\nconsole.log(odd_Equivalent('101', 9));\nconsole.log(odd_Equivalent('101', 10));\nconsole.log(odd_Equivalent('101', 11));\nconsole.log(odd_Equivalent('101', 12));\nconsole.log(odd_Equivalent('101', 13));\nconsole.log(odd_Equivalent('101', 14));\nconsole.log(odd_Equivalent('101', 15));\nconsole.log(odd_Equivalent('101', 16));\nconsole.log(odd_Equivalent('101', 17));\nconsole.log(odd_Equivalent('101', 18));\nconsole.log(odd_Equivalent('101', 19));\nconsole.log(odd_Equivalent('101', 20));\nconsole.log(odd_Equivalent('101', 21));\nconsole.log(odd_Equivalent('101', 22));\nconsole.log(odd_Equivalent('101', 23));\nconsole.log(odd_Equivalent('101', 24));\nconsole.log(odd_Equivalent('101', 25));\nconsole.log(odd_Equivalent('101', 26));\nconsole.log(odd_Equivalent('101', 27));\nconsole.log(odd_Equivalent('101', 28));\nconsole.log(odd_Equivalent('101', 29));\nconsole.log(odd_Equivalent('101', 30));\nconsole.log(odd_Equivalent('101', 31));\nconsole.log(odd_Equivalent('101', 32));\nconsole.log(odd",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] == '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent('1010', 2));\nconsole.log(odd_Equivalent('1010', 3));\nconsole.log(odd_Equivalent('1010', 4));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] == '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return Math.floor(count * n / 2);\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] == '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "  let count = 0;\n  for (let i = 0; i < n; i++) {\n    let binary = s.split(\"\");\n    let first = binary.shift();\n    binary.push(first);\n    let num = parseInt(binary.join(\"\"), 2);\n    if (num % 2 !== 0) {\n      count++;\n    }\n  }\n  return count;\n}\n\nconsole.log(odd_Equivalent(\"101\", 2));\nconsole.log(odd_Equivalent(\"101\", 1));\nconsole.log(odd_Equivalent(\"101\", 3));\nconsole.log(odd_Equivalent(\"101\", 4));\nconsole.log(odd_Equivalent(\"101\", 5));\nconsole.log(odd_Equivalent(\"101\", 6));\nconsole.log(odd_Equivalent(\"101\", 7));\nconsole.log(odd_Equivalent(\"101\", 8));\nconsole.log(odd_Equivalent(\"101\", 9));\nconsole.log(odd_Equivalent(\"101\", 10));\nconsole.log(odd_Equivalent(\"101\", 11));\nconsole.log(odd_Equivalent(\"101\", 12));\nconsole.log(odd_Equivalent(\"101\", 13));\nconsole.log(odd_Equivalent(\"101\", 14));\nconsole.log(odd_Equivalent(\"101\", 15));\nconsole.log(odd_Equivalent(\"101\", 16));\nconsole.log(odd_Equivalent(\"101\", 17));\nconsole.log(odd_Equivalent(\"101\", 18));\nconsole.log(odd_Equivalent(\"101\", 19));\nconsole.log(odd_Equivalent(\"101\", 20));\nconsole.log(odd_Equivalent(\"101\", 21));\nconsole.log(odd_Equivalent(\"101\", 22));\nconsole.log(odd_Equivalent(\"101\", 23));\nconsole.log(odd_Equivalent(\"101\", 24));\nconsole.log(odd_Equivalent(\"101\", 25));\nconsole.log(odd_Equivalent(\"101\", 26));\nconsole.log(odd_Equivalent(\"101\", 27));\nconsole.log(odd_Equivalent(\"101\", 28));\nconsole.log(odd_Equivalent(\"101\", 29));\nconsole.log(odd_Equivalent(\"101",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent('1010', 2));\nconsole.log(odd_Equivalent('1010', 3));\nconsole.log(odd_Equivalent('1010', 4));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] == '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === \"1\") {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent(\"101\", 2));\nconsole.log(odd_Equivalent(\"101\", 3));\nconsole.log(odd_Equivalent(\"101\", 4));\nconsole.log(odd_Equivalent(\"101\", 5));\nconsole.log(odd_Equivalent(\"101\", 6));\nconsole.log(odd_Equivalent(\"101\", 7));\nconsole.log(odd_Equivalent(\"101\", 8));\nconsole.log(odd_Equivalent(\"101\", 9));\nconsole.log(odd_Equivalent(\"101\", 10));\nconsole.log(odd_Equivalent(\"101\", 11));\nconsole.log(odd_Equivalent(\"101\", 12));\nconsole.log(odd_Equivalent(\"101\", 13));\nconsole.log(odd_Equivalent(\"101\", 14));\nconsole.log(odd_Equivalent(\"101\", 15));\nconsole.log(odd_Equivalent(\"101\", 16));\nconsole.log(odd_Equivalent(\"101\", 17));\nconsole.log(odd_Equivalent(\"101\", 18));\nconsole.log(odd_Equivalent(\"101\", 19));\nconsole.log(odd_Equivalent(\"101\", 20));\nconsole.log(odd_Equivalent(\"101\", 21));\nconsole.log(odd_Equivalent(\"101\", 22));\nconsole.log(odd_Equivalent(\"101\", 23));\nconsole.log(odd_Equivalent(\"101\", 24));\nconsole.log(odd_Equivalent(\"101\", 25));\nconsole.log(odd_Equivalent(\"101\", 26));\nconsole.log(odd_Equivalent(\"101\", 27));\nconsole.log(odd_Equivalent(\"101\", 28));\nconsole.log(odd_Equivalent(\"101\", 29));\nconsole.log(odd_Equivalent(\"101\", 30));\nconsole.log(odd_Equivalent(\"101\", 31));\nconsole.log(odd_Equivalent(\"101\", 32));\nconsole.log(odd_Equivalent(\"101\", 33));\nconsole.log(odd",
    "  let count = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i] === \"1\") {\n      count++;\n    }\n  }\n  return count * n;\n}\n\nconsole.log(odd_Equivalent(\"1010\", 2));\nconsole.log(odd_Equivalent(\"1010\", 3));\nconsole.log(odd_Equivalent(\"1010\", 4));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] == '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < n; i++) {\n        if (parseInt(s, 2) % 2 === 1) {\n            count++;\n        }\n        s = s.slice(1) + s.slice(0, 1);\n    }\n    return count;\n}\n\nconsole.log(odd_Equivalent(\"101\", 2));\nconsole.log(odd_Equivalent(\"101\", 3));\nconsole.log(odd_Equivalent(\"101\", 4));\nconsole.log(odd_Equivalent(\"101\", 5));\nconsole.log(odd_Equivalent(\"101\", 6));\nconsole.log(odd_Equivalent(\"101\", 7));\nconsole.log(odd_Equivalent(\"101\", 8));\nconsole.log(odd_Equivalent(\"101\", 9));\nconsole.log(odd_Equivalent(\"101\", 10));\nconsole.log(odd_Equivalent(\"101\", 11));\nconsole.log(odd_Equivalent(\"101\", 12));\nconsole.log(odd_Equivalent(\"101\", 13));\nconsole.log(odd_Equivalent(\"101\", 14));\nconsole.log(odd_Equivalent(\"101\", 15));\nconsole.log(odd_Equivalent(\"101\", 16));\nconsole.log(odd_Equivalent(\"101\", 17));\nconsole.log(odd_Equivalent(\"101\", 18));\nconsole.log(odd_Equivalent(\"101\", 19));\nconsole.log(odd_Equivalent(\"101\", 20));\nconsole.log(odd_Equivalent(\"101\", 21));\nconsole.log(odd_Equivalent(\"101\", 22));\nconsole.log(odd_Equivalent(\"101\", 23));\nconsole.log(odd_Equivalent(\"101\", 24));\nconsole.log(odd_Equivalent(\"101\", 25));\nconsole.log(odd_Equivalent(\"101\", 26));\nconsole.log(odd_Equivalent(\"101\", 27));\nconsole.log(odd_Equivalent(\"101\", 28));\nconsole.log(odd_Equivalent(\"101\", 29));\nconsole.log(odd_Equivalent(\"101\", 30));\nconsole.log(odd_Equivalent(\"101\", 31));\nconsole.log(odd_Equivalent(\"101\", 32));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent('1010', 2));\nconsole.log(odd_Equivalent('1010', 4));\nconsole.log(odd_Equivalent('1010', 6));\n",
    "    let count = 0;\n    for (let i = 0; i < n; i++) {\n        let temp = s.split('');\n        let first = temp.shift();\n        temp.push(first);\n        s = temp.join('');\n        if (parseInt(s, 2) % 2 !== 0) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(odd_Equivalent('1010', 4));\nconsole.log(odd_Equivalent('1010', 2));",
    "  let count = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i] === \"1\") {\n      count++;\n    }\n  }\n  return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent('1010', 2));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === \"1\") {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent(\"1010\", 2));\nconsole.log(odd_Equivalent(\"1010\", 4));\nconsole.log(odd_Equivalent(\"1010\", 6));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] == '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let oddCount = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            oddCount++;\n        }\n    }\n    return oddCount * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent('1010', 2));\nconsole.log(odd_Equivalent('1010', 4));\nconsole.log(odd_Equivalent('1010', 6));\n",
    "    let count = 0;\n    for (let i = 0; i < n; i++) {\n        let num = parseInt(s, 2);\n        num = num >> 1;\n        num = num | (num << 1);\n        s = num.toString(2);\n        count += s.split(\"1\").length - 1;\n    }\n    return count;\n}\nconsole.log(odd_Equivalent(\"10101\", 2));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent('1010', 2));\nconsole.log(odd_Equivalent('1010', 4));\nconsole.log(odd_Equivalent('1010', 6));\nconsole.log(odd_Equivalent('1010', 8));\nconsole.log(odd_Equivalent('1010', 10));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent('1010', 2));\nconsole.log(odd_Equivalent('1010', 3));\nconsole.log(odd_Equivalent('1010', 4));\nconsole.log(odd_Equivalent('1010', 5));\nconsole.log(odd_Equivalent('1010', 6));\nconsole.log(odd_Equivalent('1010', 7));\nconsole.log(odd_Equivalent('1010', 8));\nconsole.log(odd_Equivalent('1010', 9));\nconsole.log(odd_Equivalent('1010', 10));\nconsole.log(odd_Equivalent('1010', 11));\nconsole.log(odd_Equivalent('1010', 12));\nconsole.log(odd_Equivalent('1010', 13));\nconsole.log(odd_Equivalent('1010', 14));\nconsole.log(odd_Equivalent('1010', 15));\nconsole.log(odd_Equivalent('1010', 16));\nconsole.log(odd_Equivalent('1010', 17));\nconsole.log(odd_Equivalent('1010', 18));\nconsole.log(odd_Equivalent('1010', 19));\nconsole.log(odd_Equivalent('1010', 20));\nconsole.log(odd_Equivalent('1010', 21));\nconsole.log(odd_Equivalent('1010', 22));\nconsole.log(odd_Equivalent('1010', 23));\nconsole.log(odd_Equivalent('1010', 24));\nconsole.log(odd_Equivalent('1010', 25));\nconsole.log(odd_Equivalent('1010', 26));\nconsole.log(odd_Equivalent('1010', 27));\nconsole.log(odd_Equivalent('1010', 28));\nconsole.log(odd_Equivalent('1010', 29));\nconsole.log(odd_Equivalent('1010', 30));\nconsole.log(odd_Equivalent('1010', 31));\nconsole.log",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] == '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < n; i++) {\n        if (s[i] === \"1\") {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(odd_Equivalent(\"101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent('1010', 2));\nconsole.log(odd_Equivalent('1010', 4));\nconsole.log(odd_Equivalent('1010', 6));\n",
    "  let count = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i] === \"1\") {\n      count++;\n    }\n  }\n  return count * n;\n}\n\nconsole.log(odd_Equivalent(\"101\", 2));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === \"1\") {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < n; i++) {\n        let num = parseInt(s, 2);\n        num = num << 1;\n        s = num.toString(2);\n        if (s.length > n) {\n            s = s.substring(1);\n        }\n        if (s.length < n) {\n            s = \"0\" + s;\n        }\n        let odd = 0;\n        for (let j = 0; j < n; j++) {\n            if (s[j] == \"1\") {\n                odd++;\n            }\n        }\n        if (odd % 2 == 1) {\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent('1010', 2));\nconsole.log(odd_Equivalent('1010', 3));\nconsole.log(odd_Equivalent('1010', 4));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === \"1\") {\n            count++;\n        }\n    }\n    if (n % 2 === 0) {\n        return count;\n    } else {\n        return s.length - count;\n    }\n}\n\nconsole.log(odd_Equivalent(\"101010101\", 1));\nconsole.log(odd_Equivalent(\"101010101\", 2));\nconsole.log(odd_Equivalent(\"101010101\", 3));\nconsole.log(odd_Equivalent(\"101010101\", 4));\nconsole.log(odd_Equivalent(\"101010101\", 5));\nconsole.log(odd_Equivalent(\"101010101\", 6));\nconsole.log(odd_Equivalent(\"101010101\", 7));\nconsole.log(odd_Equivalent(\"101010101\", 8));\nconsole.log(odd_Equivalent(\"101010101\", 9));\nconsole.log(odd_Equivalent(\"101010101\", 10));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] == '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] == '1') {\n            if ((i + n) % 2 == 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(odd_Equivalent('10101', 2));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === \"1\") {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent(\"1010\", 2));\nconsole.log(odd_Equivalent(\"1010\", 3));\nconsole.log(odd_Equivalent(\"1010\", 4));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === \"1\") {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent(\"1010\", 2));\nconsole.log(odd_Equivalent(\"1010\", 3));\nconsole.log(odd_Equivalent(\"1010\", 4));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent('101', 2));\nconsole.log(odd_Equivalent('101', 3));\nconsole.log(odd_Equivalent('101', 4));\nconsole.log(odd_Equivalent('101', 5));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent('1010', 2));\nconsole.log(odd_Equivalent('1010', 4));\nconsole.log(odd_Equivalent('1010', 6));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    if (n % 2 === 0) {\n        return count * (n / 2) + (s.length - count) * (n / 2);\n    } else {\n        return count * (Math.floor(n / 2) + 1) + (s.length - count) * (Math.floor(n / 2));\n    }\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return Math.floor(count * n / 2);\n}\n",
    "    let count = 0;\n    for (let i = 0; i < n; i++) {\n        let str = s.split('');\n        let last = str.pop();\n        str.unshift(last);\n        s = str.join('');\n        if (s.split('').filter(x => x == '1').length % 2 == 1) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(odd_Equivalent('101', 2));\nconsole.log(odd_Equivalent('101', 3));\nconsole.log(odd_Equivalent('101', 4));\nconsole.log(odd_Equivalent('101', 5));\nconsole.log(odd_Equivalent('101', 6));\nconsole.log(odd_Equivalent('101', 7));\nconsole.log(odd_Equivalent('101', 8));\nconsole.log(odd_Equivalent('101', 9));\nconsole.log(odd_Equivalent('101', 10));\nconsole.log(odd_Equivalent('101', 11));\nconsole.log(odd_Equivalent('101', 12));\nconsole.log(odd_Equivalent('101', 13));\nconsole.log(odd_Equivalent('101', 14));\nconsole.log(odd_Equivalent('101', 15));\nconsole.log(odd_Equivalent('101', 16));\nconsole.log(odd_Equivalent('101', 17));\nconsole.log(odd_Equivalent('101', 18));\nconsole.log(odd_Equivalent('101', 19));\nconsole.log(odd_Equivalent('101', 20));\nconsole.log(odd_Equivalent('101', 21));\nconsole.log(odd_Equivalent('101', 22));\nconsole.log(odd_Equivalent('101', 23));\nconsole.log(odd_Equivalent('101', 24));\nconsole.log(odd_Equivalent('101', 25));\nconsole.log(odd_Equivalent('101', 26));\nconsole.log(odd_Equivalent('101', 27));\nconsole.log(odd_Equivalent('101', 28));\nconsole.log(odd_Equivalent('101', 29));\nconsole.log(odd_Equivalent('101', 30));",
    "    let count = 0;\n    for (let i = 0; i < n; i++) {\n        let temp = s;\n        temp = temp.substring(1) + temp[0];\n        if (temp.split(\"1\").length % 2 === 0) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(odd_Equivalent(\"101\", 2));\nconsole.log(odd_Equivalent(\"101\", 3));\nconsole.log(odd_Equivalent(\"101\", 4));\nconsole.log(odd_Equivalent(\"101\", 5));\nconsole.log(odd_Equivalent(\"101\", 6));\nconsole.log(odd_Equivalent(\"101\", 7));\nconsole.log(odd_Equivalent(\"101\", 8));\nconsole.log(odd_Equivalent(\"101\", 9));\nconsole.log(odd_Equivalent(\"101\", 10));\nconsole.log(odd_Equivalent(\"101\", 11));\nconsole.log(odd_Equivalent(\"101\", 12));\nconsole.log(odd_Equivalent(\"101\", 13));\nconsole.log(odd_Equivalent(\"101\", 14));\nconsole.log(odd_Equivalent(\"101\", 15));\nconsole.log(odd_Equivalent(\"101\", 16));\nconsole.log(odd_Equivalent(\"101\", 17));\nconsole.log(odd_Equivalent(\"101\", 18));\nconsole.log(odd_Equivalent(\"101\", 19));\nconsole.log(odd_Equivalent(\"101\", 20));\nconsole.log(odd_Equivalent(\"101\", 21));\nconsole.log(odd_Equivalent(\"101\", 22));\nconsole.log(odd_Equivalent(\"101\", 23));\nconsole.log(odd_Equivalent(\"101\", 24));\nconsole.log(odd_Equivalent(\"101\", 25));\nconsole.log(odd_Equivalent(\"101\", 26));\nconsole.log(odd_Equivalent(\"101\", 27));\nconsole.log(odd_Equivalent(\"101\", 28));\nconsole.log(odd_Equivalent(\"101\", 29));\nconsole.log(odd_Equivalent(\"101\", 30));\nconsole.log(odd_Equivalent(\"101\", 31));\nconsole.log(odd_Equivalent(\"101",
    "    let count = 0;\n    for (let i = 0; i < n; i++) {\n        let num = parseInt(s, 2);\n        num = num << 1;\n        s = num.toString(2);\n        if (s.length > n) {\n            s = s.slice(1);\n        }\n        if (s[s.length - 1] == \"1\") {\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent('1010', 4));\nconsole.log(odd_Equivalent('1010', 2));\nconsole.log(odd_Equivalent('1010', 3));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count += 1;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "  let count = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i] === \"1\") {\n      count++;\n    }\n  }\n  return Math.floor(count * n / 2);\n}\n\nconsole.log(odd_Equivalent(\"10101\", 2));\nconsole.log(odd_Equivalent(\"10101\", 3));\nconsole.log(odd_Equivalent(\"10101\", 4));\nconsole.log(odd_Equivalent(\"10101\", 5));\nconsole.log(odd_Equivalent(\"10101\", 6));\nconsole.log(odd_Equivalent(\"10101\", 7));\nconsole.log(odd_Equivalent(\"10101\", 8));\nconsole.log(odd_Equivalent(\"10101\", 9));\nconsole.log(odd_Equivalent(\"10101\", 10));\nconsole.log(odd_Equivalent(\"10101\", 11));\nconsole.log(odd_Equivalent(\"10101\", 12));\nconsole.log(odd_Equivalent(\"10101\", 13));\nconsole.log(odd_Equivalent(\"10101\", 14));\nconsole.log(odd_Equivalent(\"10101\", 15));\nconsole.log(odd_Equivalent(\"10101\", 16));\nconsole.log(odd_Equivalent(\"10101\", 17));\nconsole.log(odd_Equivalent(\"10101\", 18));\nconsole.log(odd_Equivalent(\"10101\", 19));\nconsole.log(odd_Equivalent(\"10101\", 20));\nconsole.log(odd_Equivalent(\"10101\", 21));\nconsole.log(odd_Equivalent(\"10101\", 22));\nconsole.log(odd_Equivalent(\"10101\", 23));\nconsole.log(odd_Equivalent(\"10101\", 24));\nconsole.log(odd_Equivalent(\"10101\", 25));\nconsole.log(odd_Equivalent(\"10101\", 26));\nconsole.log(odd_Equivalent(\"10101\", 27));\nconsole.log(odd_Equivalent(\"10101\", 28));\nconsole.log(odd_Equivalent(\"10101\", 29));\nconsole.log(odd_Equivalent(\"10101\", 30));\nconsole.log(odd_Equivalent(\"10101\",",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent('1010', 2));\nconsole.log(odd_Equivalent('1010', 4));\nconsole.log(odd_Equivalent('1010', 6));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent('1010', 2));\nconsole.log(odd_Equivalent('1010', 1));\nconsole.log(odd_Equivalent('1010', 3));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n\nconsole.log(odd_Equivalent('1010', 2));\nconsole.log(odd_Equivalent('1010', 3));\nconsole.log(odd_Equivalent('1010', 4));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < n; i++) {\n        s = s.substring(1) + s.substring(0, 1);\n        if (s.charAt(0) == '1') {\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] == \"1\") {\n            count++;\n        }\n    }\n    return count * n;\n}\n",
    "    let count = 0;\n    let odd = 0;\n    let even = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '1') {\n            count++;\n        }\n    }\n    if (count % 2 === 0) {\n        even = count;\n    } else {\n        odd = count;\n    }\n    return odd * n + even * (n - 1);\n}\n",
    "    let count = 0;\n    for (let i = 0; i < n; i++) {\n        let num = parseInt(s, 2);\n        num = num << 1;\n        s = num.toString(2);\n        if (s.length > n) {\n            s = s.substring(1, s.length);\n        }\n        if (s.length < n) {\n            s = s.padStart(n, '0');\n        }\n        let odd = 0;\n        for (let j = 0; j < s.length; j++) {\n            if (s[j] == '1') {\n                odd++;\n            }\n        }\n        if (odd % 2 != 0) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(odd_Equivalent(\"011101\", 3));\nconsole.log(odd_Equivalent(\"101\", 2));\nconsole.log(odd_Equivalent(\"1111\", 4));\n",
    "    let count = 0;\n    for (let i = 0; i < n; i++) {\n        let num = parseInt(s, 2);\n        num = num << 1;\n        s = num.toString(2);\n        if (s.length > n) {\n            s = s.slice(1);\n        }\n        let odd = 0;\n        for (let j = 0; j < s.length; j++) {\n            if (s[j] == '1') {\n                odd++;\n            }\n        }\n        if (odd % 2 != 0) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(odd_Equivalent('101', 4));\nconsole.log(odd_Equivalent('1010', 4));\nconsole.log(odd_Equivalent('10101', 4));\nconsole.log(odd_Equivalent('1010101', 4));\nconsole.log(odd_Equivalent('101010101', 4));\n"
  ]
}
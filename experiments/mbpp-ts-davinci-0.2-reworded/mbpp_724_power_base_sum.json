{
  "name": "mbpp_724_power_base_sum",
  "language": "ts",
  "prompt": "//Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum(base: number, power: number): number {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_724_power_base_sum.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = power_base_sum;\n  assert.deepEqual(candidate(2, 100),115);\n  assert.deepEqual(candidate(8, 10),37);\n  assert.deepEqual(candidate(8, 15),62);\n  assert.deepEqual(candidate(3, 3),9);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "  let sum = 0;\n  let power_base = base ** power;\n  while (power_base > 0) {\n    sum += power_base % 10;\n    power_base = Math.floor(power_base / 10);\n  }\n  return sum;\n}\n",
    "    let sum: number = 0;\n    let result: number = Math.pow(base, power);\n    let result_string: string = result.toString();\n    for (let i = 0; i < result_string.length; i++) {\n        sum += parseInt(result_string[i]);\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    let base_to_power: number = Math.pow(base, power);\n    let base_to_power_string: string = base_to_power.toString();\n    for (let i: number = 0; i < base_to_power_string.length; i++) {\n        sum += parseInt(base_to_power_string.charAt(i));\n    }\n    return sum;\n}\n\nconsole.log(power_base_sum(2, 1000));\n",
    "    let result = base ** power;\n    let sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n\nconsole.log(power_base_sum(2, 1000));\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    return sum_of_digits(result);\n}\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    return sum_of_digits(result);\n}\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    return result.toString().split('').map(Number).reduce((a, b) => a + b);\n}\n\nconsole.log(power_base_sum(2, 15));\nconsole.log(power_base_sum(3, 4));\nconsole.log(power_base_sum(10, 3));",
    "    let result: number = 1;\n    for (let i = 0; i < power; i++) {\n        result *= base;\n    }\n    let sum: number = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    let sum: number = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result = Math.pow(base, power);\n    let sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    let sum: number = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result = base ** power;\n    let sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result = Math.pow(base, power);\n    let sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result = base ** power;\n    let sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    let power_base: number = Math.pow(base, power);\n    let power_base_string: string = power_base.toString();\n    for (let i: number = 0; i < power_base_string.length; i++) {\n        sum += parseInt(power_base_string[i]);\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    let base_to_power: number = Math.pow(base, power);\n    let base_to_power_string: string = base_to_power.toString();\n    for (let i: number = 0; i < base_to_power_string.length; i++) {\n        sum += parseInt(base_to_power_string[i]);\n    }\n    return sum;\n}\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    let sum: number = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    let power_base: number = Math.pow(base, power);\n    let power_base_str: string = power_base.toString();\n    for (let i: number = 0; i < power_base_str.length; i++) {\n        sum += parseInt(power_base_str[i]);\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    let power_base: number = Math.pow(base, power);\n    let power_base_string: string = power_base.toString();\n    for (let i: number = 0; i < power_base_string.length; i++) {\n        sum += parseInt(power_base_string[i]);\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    let result: number = Math.pow(base, power);\n    let result_string: string = result.toString();\n    for (let i: number = 0; i < result_string.length; i++) {\n        sum += parseInt(result_string[i]);\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    let result: number = Math.pow(base, power);\n    let result_string: string = result.toString();\n    for (let i: number = 0; i < result_string.length; i++) {\n        sum += parseInt(result_string[i]);\n    }\n    return sum;\n}\n",
    "    let result = Math.pow(base, power);\n    let sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    let result: number = Math.pow(base, power);\n    let result_string: string = result.toString();\n    for (let i: number = 0; i < result_string.length; i++) {\n        sum += parseInt(result_string[i]);\n    }\n    return sum;\n}\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    let sum: number = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result: number = Math.pow(base, power);\n    let sum: number = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    let sum: number = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result = Math.pow(base, power);\n    let sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    let result: number = Math.pow(base, power);\n    let resultString: string = result.toString();\n    for (let i: number = 0; i < resultString.length; i++) {\n        sum += parseInt(resultString[i]);\n    }\n    return sum;\n}\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    let sum: number = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result = Math.pow(base, power);\n    let sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result: number = base;\n    for (let i: number = 1; i < power; i++) {\n        result *= base;\n    }\n    let sum: number = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    return sum_of_digits(result);\n}\n",
    "    let result = Math.pow(base, power);\n    let sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    let sum: number = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    let power_base: number = Math.pow(base, power);\n    let power_base_string: string = power_base.toString();\n    for (let i: number = 0; i < power_base_string.length; i++) {\n        sum += parseInt(power_base_string[i]);\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    let base_power: number = Math.pow(base, power);\n    let base_power_string: string = base_power.toString();\n    for (let i: number = 0; i < base_power_string.length; i++) {\n        sum += parseInt(base_power_string.charAt(i));\n    }\n    return sum;\n}\n",
    "    let result = Math.pow(base, power);\n    let sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result = 1;\n    for (let i = 0; i < power; i++) {\n        result *= base;\n    }\n    return result.toString().split('').reduce((a, b) => parseInt(a) + parseInt(b));\n}\n\nconsole.log(power_base_sum(2, 1000));\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    let sum: number = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result = base ** power;\n    let sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    let power_base = Math.pow(base, power);\n    let power_base_string = power_base.toString();\n    for (let i = 0; i < power_base_string.length; i++) {\n        sum += parseInt(power_base_string[i]);\n    }\n    return sum;\n}\n\nconsole.log(power_base_sum(2, 1000));",
    "    let result: number = 1;\n    for (let i: number = 1; i <= power; i++) {\n        result *= base;\n    }\n    return sum_of_digits(result);\n}\n",
    "    let sum: number = 0;\n    let power_base: number = Math.pow(base, power);\n    let power_base_string: string = power_base.toString();\n    for (let i: number = 0; i < power_base_string.length; i++) {\n        sum += parseInt(power_base_string[i]);\n    }\n    return sum;\n}\n",
    "  let result: number = 1;\n  for (let i: number = 0; i < power; i++) {\n    result *= base;\n  }\n  return sum_of_digits(result);\n}\n\nconsole.log(power_base_sum(2, 1000));\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    return sum_of_digits(result);\n}\n\nconsole.log(power_base_sum(2, 1000));\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    let sum: number = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    let result: number = Math.pow(base, power);\n    let result_str: string = result.toString();\n    for (let i: number = 0; i < result_str.length; i++) {\n        sum += parseInt(result_str[i]);\n    }\n    return sum;\n}\n",
    "    let result = Math.pow(base, power);\n    let sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result = Math.pow(base, power);\n    let sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\nconsole.log(power_base_sum(2, 1000));\n",
    "    let sum: number = 0;\n    let base_to_power: number = Math.pow(base, power);\n    let base_to_power_string: string = base_to_power.toString();\n    for (let i: number = 0; i < base_to_power_string.length; i++) {\n        sum += parseInt(base_to_power_string[i]);\n    }\n    return sum;\n}\nconsole.log(power_base_sum(2, 1000));\n",
    "    let result = Math.pow(base, power);\n    let sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result: number = 1;\n    for (let i = 0; i < power; i++) {\n        result *= base;\n    }\n    let sum: number = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result: number = 1;\n    for (let i: number = 1; i <= power; i++) {\n        result *= base;\n    }\n    let sum: number = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    let power_base: number = Math.pow(base, power);\n    let power_base_string: string = power_base.toString();\n    for (let i: number = 0; i < power_base_string.length; i++) {\n        sum += parseInt(power_base_string[i]);\n    }\n    return sum;\n}\n\nconsole.log(power_base_sum(2, 1000));\n",
    "    let result = Math.pow(base, power);\n    let sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n\nconsole.log(power_base_sum(2, 15));\nconsole.log(power_base_sum(2, 10));\n",
    "    let sum: number = 0;\n    let result: number = Math.pow(base, power);\n    let result_string: string = result.toString();\n    for (let i: number = 0; i < result_string.length; i++) {\n        sum += parseInt(result_string[i]);\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    let result: number = Math.pow(base, power);\n    let result_string: string = result.toString();\n    for (let i: number = 0; i < result_string.length; i++) {\n        sum += parseInt(result_string[i]);\n    }\n    return sum;\n}\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    return result;\n}\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    let sum: number = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result = base ** power;\n    let sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    let sum: number = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "  let result = Math.pow(base, power);\n  let sum = 0;\n  while (result > 0) {\n    sum += result % 10;\n    result = Math.floor(result / 10);\n  }\n  return sum;\n}\n\nconsole.log(power_base_sum(2, 1000));\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    return sum_digits(result);\n}\n",
    "    let result = Math.pow(base, power);\n    let sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    let sum: number = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result: number = base ** power;\n    let sum: number = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    let power_base: number = Math.pow(base, power);\n    let power_base_string: string = power_base.toString();\n    for (let i: number = 0; i < power_base_string.length; i++) {\n        sum += Number(power_base_string[i]);\n    }\n    return sum;\n}\n",
    "    let result: number = base ** power;\n    let sum: number = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result = Math.pow(base, power);\n    let sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result = base ** power;\n    let sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result = base ** power;\n    let sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    return sum_of_digits(result);\n}\n",
    "    let result = base ** power;\n    let sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    let power_base: number = Math.pow(base, power);\n    let power_base_string: string = power_base.toString();\n    for (let i: number = 0; i < power_base_string.length; i++) {\n        sum += parseInt(power_base_string[i]);\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    let result: number = Math.pow(base, power);\n    let result_string: string = result.toString();\n    for (let i = 0; i < result_string.length; i++) {\n        sum += parseInt(result_string[i]);\n    }\n    return sum;\n}\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    return result;\n}\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    return sum_of_digits(result);\n}\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    return sum_of_digits(result);\n}\n\nconsole.log(power_base_sum(2, 1000));\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    let sum: number = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n\nconsole.log(power_base_sum(2, 1000));\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    let sum: number = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result = Math.pow(base, power);\n    let sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result = base ** power;\n    let sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    let base_str = base.toString();\n    let base_arr = base_str.split('');\n    let base_arr_num = base_arr.map(Number);\n    let base_sum = base_arr_num.reduce((a, b) => a + b, 0);\n    let base_sum_str = base_sum.toString();\n    let base_sum_arr = base_sum_str.split('');\n    let base_sum_arr_num = base_sum_arr.map(Number);\n    let base_sum_arr_num_sum = base_sum_arr_num.reduce((a, b) => a + b, 0);\n    for (let i = 0; i < power - 1; i++) {\n        sum = base_sum_arr_num_sum;\n        base_sum_arr_num_sum = base_sum_arr_num_sum * base_sum_arr_num_sum;\n        base_sum_arr_num_sum = base_sum_arr_num_sum.toString();\n        base_sum_arr_num_sum = base_sum_arr_num_sum.split('');\n        base_sum_arr_num_sum = base_sum_arr_num_sum.map(Number);\n        base_sum_arr_num_sum = base_sum_arr_num_sum.reduce((a, b) => a + b, 0);\n    }\n    return base_sum_arr_num_sum;\n}\n",
    "    let result = base ** power;\n    let sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    let number: number = Math.pow(base, power);\n    let number_string: string = number.toString();\n    for (let i: number = 0; i < number_string.length; i++) {\n        sum += parseInt(number_string[i]);\n    }\n    return sum;\n}\n\nconsole.log(power_base_sum(2, 1000));",
    "    let sum = 0;\n    let result = Math.pow(base, power);\n    let result_string = result.toString();\n    for (let i = 0; i < result_string.length; i++) {\n        sum += Number(result_string[i]);\n    }\n    return sum;\n}\n",
    "    let result = Math.pow(base, power);\n    let sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    let sum: number = 0;\n    let result_string: string = result.toString();\n    for (let i: number = 0; i < result_string.length; i++) {\n        sum += parseInt(result_string[i]);\n    }\n    return sum;\n}\n",
    "    let result = base ** power;\n    let sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result: number = 1;\n    for (let i = 0; i < power; i++) {\n        result *= base;\n    }\n    return sum_of_digits(result);\n}\n",
    "    let sum: number = 0;\n    let base_to_power: number = Math.pow(base, power);\n    let base_to_power_string: string = base_to_power.toString();\n    for (let i: number = 0; i < base_to_power_string.length; i++) {\n        sum += parseInt(base_to_power_string[i]);\n    }\n    return sum;\n}\n",
    "    let result: number = 1;\n    for (let i = 1; i <= power; i++) {\n        result *= base;\n    }\n    return sum_of_digits(result);\n}\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    let sum: number = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    return sum_of_digits(result);\n}\n",
    "    let sum: number = 0;\n    let base_to_power: number = Math.pow(base, power);\n    let base_to_power_string: string = base_to_power.toString();\n    for (let i: number = 0; i < base_to_power_string.length; i++) {\n        sum += parseInt(base_to_power_string[i]);\n    }\n    return sum;\n}\n\nconsole.log(power_base_sum(2, 15));\n",
    "    let result: number = Math.pow(base, power);\n    let sum: number = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    return sum_of_digits(result);\n}\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    let sum: number = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    let power_base = base ** power;\n    let power_base_string = power_base.toString();\n    for (let i = 0; i < power_base_string.length; i++) {\n        sum += parseInt(power_base_string[i]);\n    }\n    return sum;\n}\nconsole.log(power_base_sum(2, 1000));\n",
    "    let result = Math.pow(base, power);\n    let sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n\nconsole.log(power_base_sum(2, 1000));",
    "    let result = base ** power;\n    let sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result = base ** power;\n    let sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    let sum: number = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    let power_base: number = Math.pow(base, power);\n    let power_base_string: string = power_base.toString();\n    for (let i: number = 0; i < power_base_string.length; i++) {\n        sum += parseInt(power_base_string.charAt(i));\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    let power_base = Math.pow(base, power);\n    let power_base_string = power_base.toString();\n    for (let i = 0; i < power_base_string.length; i++) {\n        sum += Number(power_base_string[i]);\n    }\n    return sum;\n}\n",
    "    let result = base ** power;\n    let sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result = 1;\n    for (let i = 0; i < power; i++) {\n        result *= base;\n    }\n    return sum_of_digits(result);\n}\n\nconsole.log(power_base_sum(2, 1000));\n",
    "    let result: number = base ** power;\n    let sum: number = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result: number = base;\n    for (let i: number = 1; i < power; i++) {\n        result *= base;\n    }\n    let sum: number = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result: number = base;\n    for (let i: number = 1; i < power; i++) {\n        result *= base;\n    }\n    return sum_of_digits(result);\n}\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    let sum: number = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result = 1;\n    for (let i = 0; i < power; i++) {\n        result *= base;\n    }\n    let sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    let power_base: number = Math.pow(base, power);\n    while (power_base > 0) {\n        sum += power_base % 10;\n        power_base = Math.floor(power_base / 10);\n    }\n    return sum;\n}\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    return sum_of_digits(result);\n}\n\nconsole.log(power_base_sum(2, 1000));\n",
    "    let result = Math.pow(base, power);\n    let sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    let sum: number = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    let sum: number = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    let power_base = Math.pow(base, power);\n    let power_base_string = power_base.toString();\n    for (let i = 0; i < power_base_string.length; i++) {\n        sum += parseInt(power_base_string[i]);\n    }\n    return sum;\n}\n",
    "    let result = Math.pow(base, power);\n    let sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    return sum_of_digits(result);\n}\n",
    "    let sum: number = 0;\n    let power_base: number = Math.pow(base, power);\n    let power_base_string: string = power_base.toString();\n    for (let i: number = 0; i < power_base_string.length; i++) {\n        sum += parseInt(power_base_string[i]);\n    }\n    return sum;\n}\n\nconsole.log(power_base_sum(2, 15));\nconsole.log(power_base_sum(2, 1000));\nconsole.log(power_base_sum(2, 1000000));\n",
    "    let sum: number = 0;\n    let result: number = Math.pow(base, power);\n    let result_string: string = result.toString();\n    for (let i: number = 0; i < result_string.length; i++) {\n        sum += parseInt(result_string[i]);\n    }\n    return sum;\n}\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    let sum: number = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    let sum: number = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    let power_base: number = Math.pow(base, power);\n    let power_base_string: string = power_base.toString();\n    for (let i: number = 0; i < power_base_string.length; i++) {\n        sum += parseInt(power_base_string[i]);\n    }\n    return sum;\n}\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    let sum: number = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    return sum_digits(result);\n}\n",
    "    let result = 1;\n    for (let i = 0; i < power; i++) {\n        result *= base;\n    }\n    let sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result: number = base ** power;\n    let sum: number = 0;\n    let result_string: string = result.toString();\n    for (let i: number = 0; i < result_string.length; i++) {\n        sum += parseInt(result_string.charAt(i));\n    }\n    return sum;\n}\n",
    "    let result: number = Math.pow(base, power);\n    let sum: number = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    let result: number = Math.pow(base, power);\n    let result_string: string = result.toString();\n    for (let i: number = 0; i < result_string.length; i++) {\n        sum += parseInt(result_string[i]);\n    }\n    return sum;\n}\n",
    "    let result: number = 1;\n    for (let i = 0; i < power; i++) {\n        result *= base;\n    }\n    let sum: number = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    let power_base: number = Math.pow(base, power);\n    let power_base_str: string = power_base.toString();\n    for (let i: number = 0; i < power_base_str.length; i++) {\n        sum += parseInt(power_base_str[i]);\n    }\n    return sum;\n}\n",
    "    let result = base ** power;\n    let sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n\nconsole.log(power_base_sum(2, 1000));\n",
    "    let sum: number = 0;\n    let power_base: number = Math.pow(base, power);\n    let power_base_str: string = power_base.toString();\n    for (let i: number = 0; i < power_base_str.length; i++) {\n        sum += parseInt(power_base_str[i]);\n    }\n    return sum;\n}\n",
    "    let result = Math.pow(base, power);\n    let sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result = Math.pow(base, power);\n    let sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    let sum: number = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    let sum: number = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    let result: number = Math.pow(base, power);\n    let result_string: string = result.toString();\n    for (let i: number = 0; i < result_string.length; i++) {\n        sum += parseInt(result_string[i]);\n    }\n    return sum;\n}\n",
    "    let result = base ** power;\n    let sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\nconsole.log(power_base_sum(2, 1000));\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    return sum_of_digits(result);\n}\n\nconsole.log(power_base_sum(2, 1000));\n",
    "    let result = 1;\n    for (let i = 0; i < power; i++) {\n        result *= base;\n    }\n    let sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    let power_base: number = Math.pow(base, power);\n    let power_base_string: string = power_base.toString();\n    for (let i: number = 0; i < power_base_string.length; i++) {\n        sum += parseInt(power_base_string[i]);\n    }\n    return sum;\n}\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    let sum: number = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    return sum_of_digits(result);\n}\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    let sum: number = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n\nconsole.log(power_base_sum(2, 1000));\n",
    "    let sum = 0;\n    let power_base = base ** power;\n    while (power_base > 0) {\n        sum += power_base % 10;\n        power_base = Math.floor(power_base / 10);\n    }\n    return sum;\n}\n",
    "    let result = Math.pow(base, power);\n    let sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result = Math.pow(base, power);\n    let sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    let base_to_power = Math.pow(base, power);\n    let base_to_power_str = base_to_power.toString();\n    for (let i = 0; i < base_to_power_str.length; i++) {\n        sum += parseInt(base_to_power_str[i]);\n    }\n    return sum;\n}\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    let sum: number = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result = base ** power;\n    let sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    let sum: number = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "  let sum = 0;\n  let power_base = base ** power;\n  let power_base_string = power_base.toString();\n  for (let i = 0; i < power_base_string.length; i++) {\n    sum += Number(power_base_string[i]);\n  }\n  return sum;\n}\n\nconsole.log(power_base_sum(2, 15));\n",
    "    let result = base ** power;\n    let sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n\nconsole.log(power_base_sum(2, 100));\n",
    "    let result = base ** power;\n    let sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result: number = 1;\n    let sum: number = 0;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    let result_string: string = result.toString();\n    for (let i: number = 0; i < result_string.length; i++) {\n        sum += parseInt(result_string[i]);\n    }\n    return sum;\n}\n\nconsole.log(power_base_sum(2, 10));\n",
    "    let result = 1;\n    for (let i = 0; i < power; i++) {\n        result *= base;\n    }\n    let sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result = 1;\n    for (let i = 0; i < power; i++) {\n        result *= base;\n    }\n    return sum_of_digits(result);\n}\n",
    "    let result = 1;\n    for (let i = 0; i < power; i++) {\n        result *= base;\n    }\n    return sum_of_digits(result);\n}\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    let sum: number = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result = Math.pow(base, power);\n    let sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result = 1;\n    for (let i = 0; i < power; i++) {\n        result *= base;\n    }\n    return result.toString().split('').reduce((acc, curr) => acc + parseInt(curr), 0);\n}\n",
    "    let sum: number = 0;\n    let base_power: number = Math.pow(base, power);\n    let base_power_string: string = base_power.toString();\n    for (let i: number = 0; i < base_power_string.length; i++) {\n        sum += parseInt(base_power_string[i]);\n    }\n    return sum;\n}\n\nconsole.log(power_base_sum(2, 1000));",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    let sum: number = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    let base_power = Math.pow(base, power);\n    let base_power_string = base_power.toString();\n    for (let i = 0; i < base_power_string.length; i++) {\n        sum += Number(base_power_string[i]);\n    }\n    return sum;\n}\n\nconsole.log(power_base_sum(2, 1000));",
    "    let result = base ** power;\n    let sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    let sum: number = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    let sum: number = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n\nconsole.log(power_base_sum(2, 1000));\n",
    "    let result = 1;\n    for (let i = 0; i < power; i++) {\n        result *= base;\n    }\n    return result.toString().split('').reduce((a, b) => parseInt(a) + parseInt(b));\n}\n",
    "    let sum: number = 0;\n    let base_power: number = Math.pow(base, power);\n    let base_power_str: string = base_power.toString();\n    for (let i: number = 0; i < base_power_str.length; i++) {\n        sum += parseInt(base_power_str[i]);\n    }\n    return sum;\n}\n\nconsole.log(power_base_sum(2, 1000));",
    "    let sum: number = 0;\n    let power_base: number = Math.pow(base, power);\n    let power_base_string: string = power_base.toString();\n    for (let i: number = 0; i < power_base_string.length; i++) {\n        sum += parseInt(power_base_string[i]);\n    }\n    return sum;\n}\n\nconsole.log(power_base_sum(2, 15));\n",
    "    let result: number = 1;\n    for (let i = 0; i < power; i++) {\n        result *= base;\n    }\n    return result;\n}\n",
    "    let sum: number = 0;\n    let power_base: number = Math.pow(base, power);\n    let power_base_string: string = power_base.toString();\n    for (let i: number = 0; i < power_base_string.length; i++) {\n        sum += parseInt(power_base_string[i]);\n    }\n    return sum;\n}\n",
    "    let result = Math.pow(base, power);\n    let sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    let num: number = Math.pow(base, power);\n    while (num > 0) {\n        sum += num % 10;\n        num = Math.floor(num / 10);\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    let base_power = Math.pow(base, power);\n    let base_power_str = base_power.toString();\n    for (let i = 0; i < base_power_str.length; i++) {\n        sum += parseInt(base_power_str[i]);\n    }\n    return sum;\n}\n\nconsole.log(power_base_sum(2, 1000));",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    let sum: number = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    return sum_of_digits(result);\n}\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    let sum: number = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    let result: number = Math.pow(base, power);\n    let result_string: string = result.toString();\n    for (let i: number = 0; i < result_string.length; i++) {\n        sum += parseInt(result_string[i]);\n    }\n    return sum;\n}\n",
    "    let result = Math.pow(base, power);\n    let sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    let power_base = Math.pow(base, power);\n    let power_base_string = power_base.toString();\n    for (let i = 0; i < power_base_string.length; i++) {\n        sum += parseInt(power_base_string[i]);\n    }\n    return sum;\n}\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    let sum: number = 0;\n    for (let i: number = 0; i < result.toString().length; i++) {\n        sum += parseInt(result.toString()[i]);\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    let power_base: number = Math.pow(base, power);\n    let power_base_string: string = power_base.toString();\n    for (let i: number = 0; i < power_base_string.length; i++) {\n        sum += parseInt(power_base_string[i]);\n    }\n    return sum;\n}\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    return sum_of_digits(result);\n}\n",
    "    let result = Math.pow(base, power);\n    let sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result = base ** power;\n    let sum = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result: number = 0;\n    let power_result: number = Math.pow(base, power);\n    let power_result_string: string = power_result.toString();\n    for (let i: number = 0; i < power_result_string.length; i++) {\n        result += parseInt(power_result_string.charAt(i));\n    }\n    return result;\n}\n\nconsole.log(power_base_sum(2, 1000));",
    "  let sum = 0;\n  let result = Math.pow(base, power);\n  let str = result.toString();\n  for (let i = 0; i < str.length; i++) {\n    sum += Number(str[i]);\n  }\n  return sum;\n}\n",
    "    let sum: number = 0;\n    let power_base: number = Math.pow(base, power);\n    let power_base_str: string = power_base.toString();\n    for (let i: number = 0; i < power_base_str.length; i++) {\n        sum += Number(power_base_str[i]);\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    let power_base: number = Math.pow(base, power);\n    let power_base_str: string = power_base.toString();\n    for (let i: number = 0; i < power_base_str.length; i++) {\n        sum += parseInt(power_base_str[i]);\n    }\n    return sum;\n}\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    return sum_of_digits(result);\n}\n",
    "    let sum: number = 0;\n    let base_power: number = Math.pow(base, power);\n    while (base_power > 0) {\n        sum += base_power % 10;\n        base_power = Math.floor(base_power / 10);\n    }\n    return sum;\n}\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    let sum: number = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    let sum: number = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let result: number = 1;\n    for (let i: number = 0; i < power; i++) {\n        result *= base;\n    }\n    let sum: number = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    let result: number = Math.pow(base, power);\n    let result_string: string = result.toString();\n    for (let i: number = 0; i < result_string.length; i++) {\n        sum += parseInt(result_string[i]);\n    }\n    return sum;\n}\n",
    "    let result: number = Math.pow(base, power);\n    let sum: number = 0;\n    while (result > 0) {\n        sum += result % 10;\n        result = Math.floor(result / 10);\n    }\n    return sum;\n}\n"
  ]
}
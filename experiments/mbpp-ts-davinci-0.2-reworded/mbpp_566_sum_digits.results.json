{
  "name": "mbpp_566_sum_digits",
  "language": "ts",
  "prompt": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_566_sum_digits.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum: number = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    return n.toString().split('').map(Number).reduce((a, b) => a + b, 0);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum: number = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n  let sum = 0;\n  while (n > 0) {\n    sum += n % 10;\n    n = Math.floor(n / 10);\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n  let sum = 0;\n  while (n > 0) {\n    sum += n % 10;\n    n = Math.floor(n / 10);\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    if (n < 10) {\n        return n;\n    }\n    return n % 10 + sum_digits(Math.floor(n / 10));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1666123827,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n  let sum = 0;\n  while (n > 0) {\n    sum += n % 10;\n    n = Math.floor(n / 10);\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    let str = n.toString();\n    for (let i = 0; i < str.length; i++) {\n        sum += parseInt(str.charAt(i));\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1666123827,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum: number = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    return n.toString().split('').reduce((a, b) => parseInt(a) + parseInt(b), 0);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1666123827,
      "stdout": "../../../../tmp/tmpxx7yygkr.ts(3,61): error TS2345: Argument of type 'number' is not assignable to parameter of type 'string'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    let str = n.toString();\n    for (let i = 0; i < str.length; i++) {\n        sum += parseInt(str.charAt(i));\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1666123827,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum: number = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n  let sum = 0;\n  while (n > 0) {\n    sum += n % 10;\n    n = Math.floor(n / 10);\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    if (n < 10) {\n        return n;\n    }\n    return n % 10 + sum_digits(Math.floor(n / 10));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1666123827,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum: number = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    if (n < 10) {\n        return n;\n    }\n    return n % 10 + sum_digits(Math.floor(n / 10));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1666123827,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum: number = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum: number = 0;\n    let num: number = n;\n    while (num > 0) {\n        sum += num % 10;\n        num = Math.floor(num / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1666123827,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    if (n < 10) {\n        return n;\n    }\n    return n % 10 + sum_digits(Math.floor(n / 10));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1666123827,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n  let sum = 0;\n  while (n > 0) {\n    sum += n % 10;\n    n = Math.floor(n / 10);\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    let str = n.toString();\n    for (let i = 0; i < str.length; i++) {\n        sum += parseInt(str.charAt(i));\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1666123827,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum: number = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\nconsole.log(sum_digits(1234));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1666123827,
      "stdout": "10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n  let sum = 0;\n  while (n > 0) {\n    sum += n % 10;\n    n = Math.floor(n / 10);\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum: number = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    if (n < 10) {\n        return n;\n    } else {\n        return n % 10 + sum_digits(Math.floor(n / 10));\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1666123827,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    if (n < 10) {\n        return n;\n    }\n    return n % 10 + sum_digits(Math.floor(n / 10));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1666123827,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum: number = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    let num = n;\n    while (num > 0) {\n        sum += num % 10;\n        num = Math.floor(num / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1666123827,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n  let sum = 0;\n  while (n > 0) {\n    sum += n % 10;\n    n = Math.floor(n / 10);\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n  let sum = 0;\n  while (n > 0) {\n    sum += n % 10;\n    n = Math.floor(n / 10);\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum: number = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits(n: number): number {\n    let sum: number = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_digits;\n  assert.deepEqual(candidate(345),12);\n  assert.deepEqual(candidate(12),3);\n  assert.deepEqual(candidate(97),16);\n}\n\ntest();",
      "timestamp": 1665510614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
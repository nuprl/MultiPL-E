{
  "name": "mbpp_422_find_Average_Of_Cube",
  "language": "ts",
  "prompt": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_422_find_Average_Of_Cube.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(\"Average of cubes of first n natural numbers: \" + find_Average_Of_Cube(4));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "Average of cubes of first n natural numbers: 25\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(\"Average of cubes of first n natural numbers: \" + find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "Average of cubes of first n natural numbers: 12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(\"Average of cubes of first n natural numbers is: \" + find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "Average of cubes of first n natural numbers is: 12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(\"Average of cubes of first n natural numbers: \" + find_Average_Of_Cube(4));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "Average of cubes of first n natural numbers: 25\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(\"Average of cubes of first n natural numbers is: \" + find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "Average of cubes of first n natural numbers is: 12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(\"Average of cubes of first n natural numbers is: \" + find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "Average of cubes of first n natural numbers is: 45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(\"Average of cubes of first n natural numbers is: \" + find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "Average of cubes of first n natural numbers is: 12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n  var sum = 0;\n  for (var i = 1; i <= n; i++) {\n    sum = sum + i * i * i;\n  }\n  return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(4));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122835,
      "stdout": "25\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(\"Average of cubes of first n natural numbers is: \" + find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122835,
      "stdout": "Average of cubes of first n natural numbers is: 45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nvar result = find_Average_Of_Cube(3);\nconsole.log(\"Average of cubes of first 3 natural numbers is: \" + result);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "Average of cubes of first 3 natural numbers is: 12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i ** 3;\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nvar result = find_Average_Of_Cube(3);\nconsole.log(\"Average of cubes of first 3 natural numbers is: \" + result);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "Average of cubes of first 3 natural numbers is: 12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(\"Average of cubes of first 5 natural numbers is: \" + find_Average_Of_Cube(5));\nconsole.log(\"Average of cubes of first 10 natural numbers is: \" + find_Average_Of_Cube(10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "Average of cubes of first 5 natural numbers is: 45\nAverage of cubes of first 10 natural numbers is: 302.5\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(\"Average of cubes of first n natural numbers is: \" + find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "Average of cubes of first n natural numbers is: 12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nvar result = find_Average_Of_Cube(3);\nconsole.log(\"Average of cubes of first 3 natural numbers is: \" + result);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "Average of cubes of first 3 natural numbers is: 12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(\"Average of cubes of first n natural numbers is: \" + find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122835,
      "stdout": "Average of cubes of first n natural numbers is: 45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(\"Average of cubes of first n natural numbers is: \" + find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "Average of cubes of first n natural numbers is: 45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(\"Average of cubes of first n natural numbers is: \" + find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "Average of cubes of first n natural numbers is: 45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\nconsole.log(find_Average_Of_Cube(4));\nconsole.log(find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "12\n25\n45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(\"Average of cubes of first 5 natural numbers is: \" + find_Average_Of_Cube(5));\nconsole.log(\"Average of cubes of first 10 natural numbers is: \" + find_Average_Of_Cube(10));\nconsole.log(\"Average of cubes of first 15 natural numbers is: \" + find_Average_Of_Cube(15));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "Average of cubes of first 5 natural numbers is: 45\nAverage of cubes of first 10 natural numbers is: 302.5\nAverage of cubes of first 15 natural numbers is: 960\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(4));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122835,
      "stdout": "25\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(\"Average of cubes of first n natural numbers: \" + find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "Average of cubes of first n natural numbers: 45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nvar result = find_Average_Of_Cube(3);\nconsole.log(\"Average of cubes of first 3 natural numbers is: \", result);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "Average of cubes of first 3 natural numbers is:  12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(\"Average of cubes of first n natural numbers: \" + find_Average_Of_Cube(4));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122838,
      "stdout": "Average of cubes of first n natural numbers: 25\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(\"Average of cubes of first n natural numbers is: \" + find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "Average of cubes of first n natural numbers is: 12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(\"Average of cubes of first n natural numbers is: \" + find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "Average of cubes of first n natural numbers is: 12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n  var sum = 0;\n  for (var i = 1; i <= n; i++) {\n    sum = sum + i * i * i;\n  }\n  return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122839,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(\"Average of cubes of first n natural numbers is : \" + find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122839,
      "stdout": "Average of cubes of first n natural numbers is : 45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nvar result = find_Average_Of_Cube(3);\nconsole.log(\"Average of cubes of first 3 natural numbers is: \" + result);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "Average of cubes of first 3 natural numbers is: 12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nvar avg = find_Average_Of_Cube(5);\nconsole.log(\"Average of cubes of first 5 natural numbers is: \" + avg);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122839,
      "stdout": "Average of cubes of first 5 natural numbers is: 45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(\"Average of cubes of first n natural numbers is: \" + find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "Average of cubes of first n natural numbers is: 12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(\"Average of cubes of first n natural numbers: \" + find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "Average of cubes of first n natural numbers: 12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + i * i * i;\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122839,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nvar result = find_Average_Of_Cube(3);\nconsole.log(\"Average of cubes of first 3 natural numbers is: \", result);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122839,
      "stdout": "Average of cubes of first 3 natural numbers is:  12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(\"Average of cubes of first n natural numbers is: \" + find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "Average of cubes of first n natural numbers is: 12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122839,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122839,
      "stdout": "45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(\"Average of cubes of first n natural numbers: \" + find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "Average of cubes of first n natural numbers: 12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(\"Average of cubes of first n natural numbers is: \" + find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "Average of cubes of first n natural numbers is: 12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122839,
      "stdout": "45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(\"Average of cubes of first n natural numbers is: \" + find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122839,
      "stdout": "Average of cubes of first n natural numbers is: 12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(\"Average of cubes of first n natural numbers: \" + find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122839,
      "stdout": "Average of cubes of first n natural numbers: 12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(\"Average of cubes of first n natural numbers is: \" + find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "Average of cubes of first n natural numbers is: 12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(\"Average of cubes of first n natural numbers: \" + find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122839,
      "stdout": "Average of cubes of first n natural numbers: 12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(\"Average of cubes of first n natural numbers: \" + find_Average_Of_Cube(4));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122838,
      "stdout": "Average of cubes of first n natural numbers: 25\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(\"Average of cubes of first n natural numbers is \" + find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122839,
      "stdout": "Average of cubes of first n natural numbers is 12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(\"Average of cubes of first n natural numbers: \" + find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "Average of cubes of first n natural numbers: 12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(\"Average of cubes of first n natural numbers is: \" + find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122839,
      "stdout": "Average of cubes of first n natural numbers is: 45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(\"Average of cubes of first n natural numbers is: \" + find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122835,
      "stdout": "Average of cubes of first n natural numbers is: 45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(\"Average of cubes of first 5 natural numbers is: \" + find_Average_Of_Cube(5));\nconsole.log(\"Average of cubes of first 10 natural numbers is: \" + find_Average_Of_Cube(10));\nconsole.log(\"Average of cubes of first 15 natural numbers is: \" + find_Average_Of_Cube(15));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "Average of cubes of first 5 natural numbers is: 45\nAverage of cubes of first 10 natural numbers is: 302.5\nAverage of cubes of first 15 natural numbers is: 960\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(\"Average of cubes of first n natural numbers is: \" + find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "Average of cubes of first n natural numbers is: 12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(\"Average of cubes of first n natural numbers is: \" + find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "Average of cubes of first n natural numbers is: 12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nvar result = find_Average_Of_Cube(3);\nconsole.log(\"The average of cubes of first 3 natural numbers is: \", result);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122839,
      "stdout": "The average of cubes of first 3 natural numbers is:  12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(4));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122839,
      "stdout": "25\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nvar avg: number = find_Average_Of_Cube(3);\nconsole.log(\"Average of cubes of first 3 natural numbers is: \" + avg);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122839,
      "stdout": "Average of cubes of first 3 natural numbers is: 12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122839,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510069,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_595_min_Swaps",
  "language": "ts",
  "prompt": "//Write a tsthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_595_min_Swaps.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps('1101', '0111'));\n",
    "    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps('10011', '11001'));\n",
    "    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\n",
    "    let count = 0;\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nconsole.log(min_Swaps(\"111011110011111011111100011111\", \"010110011111111001110111111111\"));\n",
    "    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps('1101', '0111'));\nconsole.log(min_Swaps('1100', '1001'));\nconsole.log(min_Swaps('110011', '010111'));\nconsole.log(min_Swaps('10011001', '01100110'));\n",
    "    let count = 0;\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\n\nconsole.log(min_Swaps('111000111', '011000111'));",
    "    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps(\"10011\", \"10101\"));\nconsole.log(min_Swaps(\"1100\", \"1001\"));\nconsole.log(min_Swaps(\"11\", \"11\"));\nconsole.log(min_Swaps(\"000\", \"111\"));\n",
    "    let count = 0;\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\n\nconsole.log(min_Swaps('1101', '0111'));\n",
    "    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps('1101', '0111'));\n",
    "    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps('1101', '0111'));\nconsole.log(min_Swaps('1100', '1001'));\nconsole.log(min_Swaps('110011', '010111'));\nconsole.log(min_Swaps('10011001', '01100110'));\n",
    "    let count = 0;\n    let arr1 = str1.split('');\n    let arr2 = str2.split('');\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(min_Swaps('10011', '10101'));\nconsole.log(min_Swaps('10101', '11100'));\nconsole.log(min_Swaps('100', '111'));\nconsole.log(min_Swaps('10101', '10101'));\n",
    "    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps('10011', '10101'));\nconsole.log(min_Swaps('11000', '01100'));\nconsole.log(min_Swaps('1110010101', '0101101110'));\n",
    "    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps('1100', '1001'));\nconsole.log(min_Swaps('110011', '010111'));\nconsole.log(min_Swaps('11001', '01111'));\nconsole.log(min_Swaps('10011001', '01100101'));\n",
    "    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps(\"10011\", \"01100\"));\nconsole.log(min_Swaps(\"1100\", \"1001\"));\nconsole.log(min_Swaps(\"11\", \"11\"));\nconsole.log(min_Swaps(\"000\", \"111\"));\n",
    "    let count = 0;\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nconsole.log(min_Swaps(\"111011110011111011111100011111\", \"101010101010101010101010101010\"));\n",
    "    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps(\"1101\", \"0111\"));\n",
    "    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps(\"10011\", \"01100\"));\nconsole.log(min_Swaps(\"1100\", \"1001\"));\nconsole.log(min_Swaps(\"11\", \"11\"));\nconsole.log(min_Swaps(\"000\", \"111\"));\n",
    "    let count = 0;\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nconsole.log(min_Swaps('1101', '0111'));\n",
    "    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps('1101', '0101'));\n",
    "    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\n\nconsole.log(min_Swaps(\"1101\", \"0101\"));\n"
  ]
}
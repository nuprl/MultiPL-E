{
  "name": "mbpp_737_check_str",
  "language": "ts",
  "prompt": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_737_check_str.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"hi\"));\nconsole.log(check_str(\"orange\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "false\ntrue\nfalse\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"grapes\"));\nconsole.log(check_str(\"pineapple\"));\nconsole.log(check_str(\"peach\"));\nconsole.log(check_str(\"avocado\"));\nconsole.log(check_str(\"apricot\"));\nconsole.log(check_str(\"guava\"));\nconsole.log(check_str(\"papaya\"));\nconsole.log(check_str(\"plum\"));\nconsole.log(check_str(\"pear\"));\nconsole.log(check_str(\"cherry\"));\nconsole.log(check_str(\"kiwi\"));\nconsole.log(check_str(\"watermelon\"));\nconsole.log(check_str(\"strawberry\"));\nconsole.log(check_str(\"blueberry\"));\nconsole.log(check_str(\"blackberry\"));\nconsole.log(check_str(\"raspberry\"));\nconsole.log(check_str(\"cranberry\"));\nconsole.log(check_str(\"cantaloupe\"));\nconsole.log(check_str(\"honeydew\"));\nconsole.log(check_str(\"grapefruit\"));\nconsole.log(check_str(\"lemon\"));\nconsole.log(check_str(\"lime\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"clementine\"));\nconsole.log(check_str(\"tangerine\"));\nconsole.log(check_str(\"nectarine\"));\nconsole.log(check_str(\"date\"));\nconsole.log(check_str(\"fig\"));\nconsole.log(check_str(\"pomegranate\"));\nconsole.log(check_str(\"persimmon\"));\nconsole.log(check_str(\"quince\"));\nconsole.log(check_str(\"olive\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "../../../../tmp/tmpr2ew9p4z.ts(43,29): error TS1002: Unterminated string literal.\n../../../../tmp/tmpr2ew9p4z.ts(44,1): error TS1005: ',' expected.\n../../../../tmp/tmpr2ew9p4z.ts(44,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"aabc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"aabc\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"Hello\"));\nconsole.log(check_str(\"Apple\"));\nconsole.log(check_str(\"Orange\"));\nconsole.log(check_str(\"Banana\"));\nconsole.log(check_str(\"Mango\"));\nconsole.log(check_str(\"Grapes\"));\nconsole.log(check_str(\"Peach\"));\nconsole.log(check_str(\"Pineapple\"));\nconsole.log(check_str(\"Papaya\"));\nconsole.log(check_str(\"Watermelon\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "false\ntrue\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"elephant\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "false\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiouAEIOU]/;\n    if (string.match(pattern)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nconsole.log(check_str(\"United States\"));\nconsole.log(check_str(\"egypt\"));\nconsole.log(check_str(\"globe\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "true\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"grapes\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "false\ntrue\ntrue\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"grapes\"));\nconsole.log(check_str(\"pear\"));\nconsole.log(check_str(\"kiwi\"));\nconsole.log(check_str(\"pineapple\"));\nconsole.log(check_str(\"guava\"));\nconsole.log(check_str(\"watermelon\"));\nconsole.log(check_str(\"strawberry\"));\nconsole.log(check_str(\"papaya\"));\nconsole.log(check_str(\"coconut\"));\nconsole.log(check_str(\"cherry\"));\nconsole.log(check_str(\"peach\"));\nconsole.log(check_str(\"plum\"));\nconsole.log(check_str(\"lemon\"));\nconsole.log(check_str(\"grapefruit\"));\nconsole.log(check_str(\"apricot\"));\nconsole.log(check_str(\"avocado\"));\nconsole.log(check_str(\"fig\"));\nconsole.log(check_str(\"date\"));\nconsole.log(check_str(\"pomegranate\"));\nconsole.log(check_str(\"pomelo\"));\nconsole.log(check_str(\"olive\"));\nconsole.log(check_str(\"lychee\"));\nconsole.log(check_str(\"jackfruit\"));\nconsole.log(check_str(\"durian\"));\nconsole.log(check_str(\"dragonfruit\"));\nconsole.log(check_str(\"custardapple\"));\nconsole.log(check_str(\"cashew\"));\nconsole.log(check_str(\"blueberry\"));\nconsole.log(check_str(\"blackberry\"));\nconsole.log(check_str(\"raspberry\"));\nconsole.\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "../../../../tmp/tmp1a729bbz.ts(45,9): error TS1003: Identifier expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"United States\"));\nconsole.log(check_str(\"egypt\"));\nconsole.log(check_str(\"india\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "true\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    var regexp = /^[aeiou]/i;\n    if (regexp.test(string)) {\n        console.log(string + \" starts with a vowel\");\n        return true;\n    } else {\n        console.log(string + \" does not start with a vowel\");\n        return false;\n    }\n}\ncheck_str(\"United States\");\ncheck_str(\"australia\");\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "United States starts with a vowel\naustralia starts with a vowel\nannie starts with a vowel\ndawood does not start with a vowel\nElse starts with a vowel\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"world\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "false\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    var regexp = /^[aeiou]/i;\n    if (regexp.test(string)) {\n        console.log(string + \" is starting with a vowel\");\n        return true;\n    } else {\n        console.log(string + \" is not starting with a vowel\");\n        return false;\n    }\n}\ncheck_str(\"United States\");\ncheck_str(\"australia\");\ncheck_str(\"Qatar\");\ncheck_str(\"Oman\");\ncheck_str(\"india\");\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "United States is starting with a vowel\naustralia is starting with a vowel\nQatar is not starting with a vowel\nOman is starting with a vowel\nindia is starting with a vowel\nannie is starting with a vowel\ndawood is not starting with a vowel\nElse is starting with a vowel\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"world\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "false\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\nconsole.log(check_str(\"korea\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123446,
      "stdout": "true\ntrue\ntrue\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let regexp: RegExp = /^[aeiou]/i;\n    if (regexp.test(string)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123446,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123446,
      "stdout": "false\ntrue\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let regex: RegExp = /^[aeiou]/i;\n    if (regex.test(string)) {\n        return true;\n    }\n    return false;\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123446,
      "stdout": "false\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"Hello\"));\nconsole.log(check_str(\"World\"));\nconsole.log(check_str(\"Apple\"));\nconsole.log(check_str(\"Orange\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123446,
      "stdout": "false\nfalse\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nconsole.log(check_str(\"Hello\"));\nconsole.log(check_str(\"Apple\"));\nconsole.log(check_str(\"Orange\"));\nconsole.log(check_str(\"Mango\"));\nconsole.log(check_str(\"Banana\"));\nconsole.log(check_str(\"Grapes\"));\nconsole.log(check_str(\"Peach\"));\nconsole.log(check_str(\"Pineapple\"));\nconsole.log(check_str(\"Watermelon\"));\nconsole.log(check_str(\"Kiwi\"));\nconsole.log(check_str(\"Strawberry\"));\nconsole.log(check_str(\"Blueberry\"));\nconsole.log(check_str(\"Blackberry\"));\nconsole.log(check_str(\"Cherry\"));\nconsole.log(check_str(\"Coconut\"));\nconsole.log(check_str(\"Papaya\"));\nconsole.log(check_str(\"Pear\"));\nconsole.log(check_str(\"Plum\"));\nconsole.log(check_str(\"Pomegranate\"));\nconsole.log(check_str(\"Raspberry\"));\nconsole.log(check_str(\"Cantaloupe\"));\nconsole.log(check_str(\"Clementine\"));\nconsole.log(check_str(\"Grapefruit\"));\nconsole.log(check_str(\"Honeydew\"));\nconsole.log(check_str(\"Lemon\"));\nconsole.log(check_str(\"Lime\"));\nconsole.log(check_str(\"Lychee\"));\nconsole.log(check_str(\"Mandarin\"));\nconsole.log(check_str(\"Nectarine\"));\nconsole.log(check_str(\"Orange\"));\nconsole.log(check_str(\"Passion Fruit\"));\nconsole.log(check_str(\"Peach\"));\nconsole.log(check_str(\"Pear\"));\nconsole.log(check_str(\"Persimmon\"));\nconsole.log(check_str\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123446,
      "stdout": "../../../../tmp/tmp0hg0hp7l.ts(47,1): error TS1005: ',' expected.\n../../../../tmp/tmp0hg0hp7l.ts(47,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"mango\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123446,
      "stdout": "false\ntrue\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    return patt.test(string);\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123446,
      "stdout": "false\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"Hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"world\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123446,
      "stdout": "false\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    var regexp = /^[aeiou]/i;\n    if (regexp.test(string)) {\n        console.log(string + \" starts with a vowel\");\n        return true;\n    } else {\n        console.log(string + \" does not start with a vowel\");\n        return false;\n    }\n}\ncheck_str(\"United States\");\ncheck_str(\"australia\");\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "United States starts with a vowel\naustralia starts with a vowel\nannie starts with a vowel\ndawood does not start with a vowel\nElse starts with a vowel\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n  let patt = /^[aeiou]/i;\n  let result = patt.test(string);\n  return result;\n}\n\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123446,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\nconsole.log(check_str(\"korea\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123446,
      "stdout": "true\ntrue\ntrue\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    return false;\n}\n\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"hi\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123446,
      "stdout": "false\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n  let patt = /^[aeiou]/i;\n  let result = patt.test(string);\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123446,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123446,
      "stdout": "../../../../tmp/tmprmbidl9v.ts(48,29): error TS1002: Unterminated string literal.\n../../../../tmp/tmprmbidl9v.ts(49,1): error TS1005: ',' expected.\n../../../../tmp/tmprmbidl9v.ts(49,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"grapes\"));\nconsole.log(check_str(\"pineapple\"));\nconsole.log(check_str(\"pear\"));\nconsole.log(check_str(\"peach\"));\nconsole.log(check_str(\"papaya\"));\nconsole.log(check_str(\"guava\"));\nconsole.log(check_str(\"plum\"));\nconsole.log(check_str(\"pomegranate\"));\nconsole.log(check_str(\"litchi\"));\nconsole.log(check_str(\"watermelon\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"grapes\"));\nconsole.log(check_str(\"pineapple\"));\nconsole.log(check_str(\"pear\"));\nconsole.log(check_str(\"peach\"));\nconsole.log(check_str(\"papaya\"));\nconsole.log(check_str(\"guava\"));\nconsole.log(check_str(\"plum\"));\nconsole.log(check_str(\"pomegranate\"));\nconsole.log(check_str(\"litchi\"));\nconsole.log(check_str(\"watermelon\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"grapes\"));\nconsole.log(check_str(\"pineapple\"));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123446,
      "stdout": "../../../../tmp/tmpj7n757y6.ts(47,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n  let patt = new RegExp(/^[aeiou]/i);\n  let result = patt.test(string);\n  return result;\n}\n\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"Germany\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123446,
      "stdout": "true\ntrue\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"grapes\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123446,
      "stdout": "false\ntrue\ntrue\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    return false;\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123446,
      "stdout": "false\ntrue\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123446,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123446,
      "stdout": "../../../../tmp/tmpo358uspg.ts(39,31): error TS1002: Unterminated string literal.\n../../../../tmp/tmpo358uspg.ts(40,1): error TS1005: ',' expected.\n../../../../tmp/tmpo358uspg.ts(40,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\nconsole.log(check_str(\"korea\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123446,
      "stdout": "true\ntrue\ntrue\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"abcdef\"));\nconsole.log(check_str(\"edcba\"));\nconsole.log(check_str(\"Abcdef\"));\nconsole.log(check_str(\"Ebcdef\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123446,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"mango\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123446,
      "stdout": "false\ntrue\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let regexp = /^[aeiou]/i;\n    if (regexp.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"aabc\"));\nconsole.log(check_str(\"a\"));\nconsole.log(check_str(\"A\"));\nconsole.log(check_str(\"\"));\nconsole.log(check_str(\"b\"));\nconsole.log(check_str(\"bcd\"));\nconsole.log(check_str(\"bcd\"));\nconsole.log(check_str(\"bcd\"));\nconsole.log(check_str(\"bcd\"));\nconsole.log(check_str(\"bcd\"));\nconsole.log(check_str(\"bcd\"));\nconsole.log(check_str(\"bcd\"));\nconsole.log(check_str(\"bcd\"));\nconsole.log(check_str(\"bcd\"));\nconsole.log(check_str(\"bcd\"));\nconsole.log(check_str(\"bcd\"));\nconsole.log(check_str(\"bcd\"));\nconsole.log(check_str(\"bcd\"));\nconsole.log(check_str(\"bcd\"));\nconsole.log(check_str(\"bcd\"));\nconsole.log(check_str(\"bcd\"));\nconsole.log(check_str(\"bcd\"));\nconsole.log(check_str(\"bcd\"));\nconsole.log(check_str(\"bcd\"));\nconsole.log(check_str(\"bcd\"));\nconsole.log(check_str(\"bcd\"));\nconsole.log(check_str(\"bcd\"));\nconsole.log(check_str(\"bcd\"));\nconsole.log(check_str(\"bcd\"));\nconsole.log(check_str(\"bcd\"));\nconsole.log(check_str(\"bcd\"));\nconsole.log(check_str(\"bcd\"));\nconsole.log(check_str(\"bcd\"));\nconsole.log(check_str(\"bcd\"));\nconsole.log(check_str(\"bcd\")\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123448,
      "stdout": "../../../../tmp/tmp0hl63u7o.ts(47,1): error TS1005: ',' expected.\n../../../../tmp/tmp0hl63u7o.ts(47,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123448,
      "stdout": "false\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"Iphone\"));\nconsole.log(check_str(\"universe\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123449,
      "stdout": "false\ntrue\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"papaya\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"grapes\"));\nconsole.log(check_str(\"pineapple\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123449,
      "stdout": "false\ntrue\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let regexp = /^[aeiou]/i;\n    if (regexp.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"invalid\"));\nconsole.log(check_str(\"valid\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123449,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123449,
      "stdout": "false\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt1 = /^[aeiou]/i;\n    let result = patt1.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"aabc\"));\nconsole.log(check_str(\"abcde\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"Eabcd\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123449,
      "stdout": "true\ntrue\ntrue\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"elephant\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "false\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n  let patt = /^[aeiou]/i;\n  let result = patt.test(string);\n  return result;\n}\n\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"is this a string?\"));\nconsole.log(check_str(\"a string\"));\nconsole.log(check_str(\"string\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123449,
      "stdout": "false\ntrue\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    return patt.test(string);\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123449,
      "stdout": "false\ntrue\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"Udemy\"));\nconsole.log(check_str(\"eLearning\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123449,
      "stdout": "false\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    var patt = /^[aeiou]/i;\n    var result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123449,
      "stdout": "false\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"grapes\"));\nconsole.log(check_str(\"pineapple\"));\nconsole.log(check_str(\"peach\"));\nconsole.log(check_str(\"strawberry\"));\nconsole.log(check_str(\"kiwi\"));\nconsole.log(check_str(\"watermelon\"));\nconsole.log(check_str(\"avocado\"));\nconsole.log(check_str(\"guava\"));\nconsole.log(check_str(\"papaya\"));\nconsole.log(check_str(\"coconut\"));\nconsole.log(check_str(\"cherry\"));\nconsole.log(check_str(\"apricot\"));\nconsole.log(check_str(\"plum\"));\nconsole.log(check_str(\"pear\"));\nconsole.log(check_str(\"lemon\"));\nconsole.log(check_str(\"lime\"));\nconsole.log(check_str(\"grapefruit\"));\nconsole.log(check_str(\"blueberry\"));\nconsole.log(check_str(\"raspberry\"));\nconsole.log(check_str(\"blackberry\"));\nconsole.log(check_str(\"cranberry\"));\nconsole.log(check_str(\"mulberry\"));\nconsole.log(check_str(\"fig\"));\nconsole.log(check_str(\"date\"));\nconsole.log(check_str(\"olive\"));\nconsole.log(check_str(\"pomegranate\"));\nconsole.log(check_str(\"nectarine\"));\nconsole.log(check_str(\"quince\"));\nconsole.log(check_str(\"lychee\"));\nconsole.log(check_str(\"jackfruit\"));\nconsole.log(check_str(\"durian\"));\nconsole.log(check_str(\"papaya\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123449,
      "stdout": "true\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\nfalse\nfalse\nfalse\nfalse\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n  let patt = new RegExp(/^[aeiou]/i);\n  return patt.test(string);\n}\n\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"grapes\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"pineapple\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123449,
      "stdout": "true\ntrue\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let regexp = /^[aeiou]/i;\n    if (regexp.test(string)) {\n        console.log(`The given string ${string} starts with a vowel`);\n        return true;\n    } else {\n        console.log(`The given string ${string} does not start with a vowel`);\n        return false;\n    }\n}\n\ncheck_str(\"apple\");\ncheck_str(\"hello\");\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123449,
      "stdout": "The given string apple starts with a vowel\nThe given string hello does not start with a vowel\nThe given string annie starts with a vowel\nThe given string dawood does not start with a vowel\nThe given string Else starts with a vowel\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    var patt1 = /^[aeiou]/i;\n    var result = patt1.test(string);\n    return result;\n}\nconsole.log(check_str(\"hello\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123449,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = new RegExp(/^[aeiou]/i);\n    return patt.test(string);\n}\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"grapes\"));\nconsole.log(check_str(\"pineapple\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123449,
      "stdout": "true\ntrue\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n  let pattern = /^[aeiou]/i;\n  if (string.match(pattern)) {\n    return true;\n  } else {\n    return false;\n  }\n}\nconsole.log(check_str(\"United States\"));\nconsole.log(check_str(\"egypt\"));\nconsole.log(check_str(\"germany\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123449,
      "stdout": "true\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let regexp = /^[aeiou]/i;\n    if (regexp.test(string)) {\n        console.log(`The given string ${string} starts with a vowel`);\n        return true;\n    } else {\n        console.log(`The given string ${string} does not start with a vowel`);\n        return false;\n    }\n}\n\ncheck_str(\"apple\");\ncheck_str(\"orange\");\ncheck_str(\"mango\");\ncheck_str(\"banana\");\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123449,
      "stdout": "The given string apple starts with a vowel\nThe given string orange starts with a vowel\nThe given string mango does not start with a vowel\nThe given string banana does not start with a vowel\nThe given string annie starts with a vowel\nThe given string dawood does not start with a vowel\nThe given string Else starts with a vowel\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt1 = /^[aeiou]/i;\n    let result = patt1.test(string);\n    return result;\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123449,
      "stdout": "false\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n  let patt = /^[aeiou]/i;\n  let result = patt.test(string);\n  return result;\n}\n\nconsole.log(check_str(\"Hello\"));\nconsole.log(check_str(\"World\"));\nconsole.log(check_str(\"Apple\"));\nconsole.log(check_str(\"Orange\"));\nconsole.log(check_str(\"Banana\"));\nconsole.log(check_str(\"Mango\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123449,
      "stdout": "false\nfalse\ntrue\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"a\"));\nconsole.log(check_str(\"b\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123449,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let regexp = /^[aeiou]/i;\n    if (regexp.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"elephant\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123449,
      "stdout": "false\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiouAEIOU]/;\n    if (pattern.test(string)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nconsole.log(check_str(\"United States\"));\nconsole.log(check_str(\"egypt\"));\nconsole.log(check_str(\"globe\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123449,
      "stdout": "true\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"grapes\"));\nconsole.log(check_str(\"pineapple\"));\nconsole.log(check_str(\"strawberry\"));\nconsole.log(check_str(\"watermelon\"));\nconsole.log(check_str(\"peach\"));\nconsole.log(check_str(\"pear\"));\nconsole.log(check_str(\"cherry\"));\nconsole.log(check_str(\"plum\"));\nconsole.log(check_str(\"apricot\"));\nconsole.log(check_str(\"coconut\"));\nconsole.log(check_str(\"avocado\"));\nconsole.log(check_str(\"guava\"));\nconsole.log(check_str(\"kiwi\"));\nconsole.log(check_str(\"lemon\"));\nconsole.log(check_str(\"lime\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"papaya\"));\nconsole.log(check_str(\"peach\"));\nconsole.log(check_str(\"pear\"));\nconsole.log(check_str(\"pineapple\"));\nconsole.log(check_str(\"plum\"));\nconsole.log(check_str(\"pomegranate\"));\nconsole.log(check_str(\"raspberry\"));\nconsole.log(check_str(\"strawberry\"));\nconsole.log(check_str(\"watermelon\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123451,
      "stdout": "true\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\nfalse\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"Udemy\"));\nconsole.log(check_str(\"eLearning\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123449,
      "stdout": "false\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"mango\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123451,
      "stdout": "true\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let regexp = /^[aeiou]/i;\n    if (regexp.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"hi\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123451,
      "stdout": "false\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123451,
      "stdout": "false\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"grapes\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123452,
      "stdout": "true\ntrue\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let regexp = /^[aeiou]/i;\n    if (regexp.test(string)) {\n        console.log(`The given string ${string} starts with a vowel`);\n        return true;\n    } else {\n        console.log(`The given string ${string} does not start with a vowel`);\n        return false;\n    }\n}\ncheck_str(\"India\");\ncheck_str(\"united states\");\ncheck_str(\"australia\");\ncheck_str(\"uk\");\ncheck_str(\"banana\");\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123452,
      "stdout": "The given string India starts with a vowel\nThe given string united states starts with a vowel\nThe given string australia starts with a vowel\nThe given string uk starts with a vowel\nThe given string banana does not start with a vowel\nThe given string annie starts with a vowel\nThe given string dawood does not start with a vowel\nThe given string Else starts with a vowel\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"banana\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123452,
      "stdout": "false\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"hello\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123452,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"Hello\"));\nconsole.log(check_str(\"World\"));\nconsole.log(check_str(\"United States\"));\nconsole.log(check_str(\"India\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123452,
      "stdout": "false\nfalse\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"pineapple\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123452,
      "stdout": "false\ntrue\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    var patt = /^[aeiou]/i;\n    var result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"world\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123452,
      "stdout": "false\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"United States\"));\nconsole.log(check_str(\"egypt\"));\nconsole.log(check_str(\"india\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "true\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiouAEIOU]/;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"United States\"));\nconsole.log(check_str(\"eUnited States\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123452,
      "stdout": "true\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern: RegExp = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nconsole.log(check_str(\"Hello\"));\nconsole.log(check_str(\"World\"));\nconsole.log(check_str(\"Apple\"));\nconsole.log(check_str(\"Orange\"));\nconsole.log(check_str(\"Banana\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123452,
      "stdout": "false\nfalse\ntrue\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    return patt.test(string);\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"A\"));\nconsole.log(check_str(\"E\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123452,
      "stdout": "false\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nconsole.log(check_str(\"Hello\"));\nconsole.log(check_str(\"World\"));\nconsole.log(check_str(\"Apple\"));\nconsole.log(check_str(\"Orange\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123452,
      "stdout": "false\nfalse\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"world\"));\nconsole.log(check_str(\"Umbrella\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123452,
      "stdout": "false\ntrue\nfalse\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"aabc\"));\nconsole.log(check_str(\"abcde\"));\nconsole.log(check_str(\"abcdef\"));\nconsole.log(check_str(\"abcdefg\"));\nconsole.log(check_str(\"abcdefgh\"));\nconsole.log(check_str(\"abcdefghi\"));\nconsole.log(check_str(\"abcdefghij\"));\nconsole.log(check_str(\"abcdefghijk\"));\nconsole.log(check_str(\"abcdefghijkl\"));\nconsole.log(check_str(\"abcdefghijklm\"));\nconsole.log(check_str(\"abcdefghijklmn\"));\nconsole.log(check_str(\"abcdefghijklmno\"));\nconsole.log(check_str(\"abcdefghijklmnop\"));\nconsole.log(check_str(\"abcdefghijklmnopq\"));\nconsole.log(check_str(\"abcdefghijklmnopqr\"));\nconsole.log(check_str(\"abcdefghijklmnopqrs\"));\nconsole.log(check_str(\"abcdefghijklmnopqrst\"));\nconsole.log(check_str(\"abcdefghijklmnopqrstu\"));\nconsole.log(check_str(\"abcdefghijklmnopqrstuv\"));\nconsole.log(check_str(\"abcdefghijklmnopqrstuvw\"));\nconsole.log(check_str(\"abcdefghijklmnopqrstuvwx\"));\nconsole.log(check_str(\"abcdefghijklmnopqrstuvwxy\"));\nconsole.log(check_str(\"abcdefghijklmnopqrstuvwxyz\"));\nconsole.log(check_str(\"abcdefghijklmnopqrstuvwxyz1\"));\nconsole.log(check_str(\"abcdefghijklmnopqrstuvw\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123452,
      "stdout": "../../../../tmp/tmp2jan26ey.ts(33,47): error TS1002: Unterminated string literal.\n../../../../tmp/tmp2jan26ey.ts(34,1): error TS1005: ',' expected.\n../../../../tmp/tmp2jan26ey.ts(34,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    return patt.test(string);\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123446,
      "stdout": "false\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiouAEIOU]/;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"grapes\"));\nconsole.log(check_str(\"pineapple\"));\nconsole.log(check_str(\"guava\"));\nconsole.log(check_str(\"peach\"));\nconsole.log(check_str(\"pear\"));\nconsole.log(check_str(\"plum\"));\nconsole.log(check_str(\"pomegranate\"));\nconsole.log(check_str(\"cherry\"));\nconsole.log(check_str(\"strawberry\"));\nconsole.log(check_str(\"watermelon\"));\nconsole.log(check_str(\"coconut\"));\nconsole.log(check_str(\"apricot\"));\nconsole.log(check_str(\"avocado\"));\nconsole.log(check_str(\"blueberry\"));\nconsole.log(check_str(\"blackberry\"));\nconsole.log(check_str(\"cantaloupe\"));\nconsole.log(check_str(\"clementine\"));\nconsole.log(check_str(\"cranberry\"));\nconsole.log(check_str(\"fig\"));\nconsole.log(check_str(\"grapefruit\"));\nconsole.log(check_str(\"honeydew\"));\nconsole.log(check_str(\"jackfruit\"));\nconsole.log(check_str(\"kiwi\"));\nconsole.log(check_str(\"lemon\"));\nconsole.log(check_str(\"lime\"));\nconsole.log(check_str(\"lychee\"));\nconsole.log(check_str(\"mangosteen\"));\nconsole.log(check_str(\"nectarine\"));\nconsole.log(check_str(\"olive\"));\nconsole.log(check_str\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123452,
      "stdout": "../../../../tmp/tmpww175ix7.ts(46,1): error TS1005: ',' expected.\n../../../../tmp/tmpww175ix7.ts(46,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"Inception\"));\nconsole.log(check_str(\"awesome\"));\nconsole.log(check_str(\"Hello\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123452,
      "stdout": "true\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"grapes\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123452,
      "stdout": "false\ntrue\nfalse\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let regexp: RegExp = /^[aeiou]/i;\n    if (regexp.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123452,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"mango\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123446,
      "stdout": "false\ntrue\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"a string\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123452,
      "stdout": "false\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123446,
      "stdout": "../../../../tmp/tmpo358uspg.ts(39,31): error TS1002: Unterminated string literal.\n../../../../tmp/tmpo358uspg.ts(40,1): error TS1005: ',' expected.\n../../../../tmp/tmpo358uspg.ts(40,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"United States\"));\nconsole.log(check_str(\"egypt\"));\nconsole.log(check_str(\"germany\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123452,
      "stdout": "true\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"grapes\"));\nconsole.log(check_str(\"pineapple\"));\nconsole.log(check_str(\"peach\"));\nconsole.log(check_str(\"apricot\"));\nconsole.log(check_str(\"avocado\"));\nconsole.log(check_str(\"guava\"));\nconsole.log(check_str(\"papaya\"));\nconsole.log(check_str(\"pomegranate\"));\nconsole.log(check_str(\"watermelon\"));\nconsole.log(check_str(\"strawberry\"));\nconsole.log(check_str(\"blueberry\"));\nconsole.log(check_str(\"blackberry\"));\nconsole.log(check_str(\"cherry\"));\nconsole.log(check_str(\"cranberry\"));\nconsole.log(check_str(\"raspberry\"));\nconsole.log(check_str(\"plum\"));\nconsole.log(check_str(\"pear\"));\nconsole.log(check_str(\"fig\"));\nconsole.log(check_str(\"date\"));\nconsole.log(check_str(\"apricot\"));\nconsole.log(check_str(\"olive\"));\nconsole.log(check_str(\"coconut\"));\nconsole.log(check_str(\"walnut\"));\nconsole.log(check_str(\"almond\"));\nconsole.log(check_str(\"pecan\"));\nconsole.log(check_str(\"cashew\"));\nconsole.log(check_str(\"pistachio\"));\nconsole.log(check_str(\"macadamia\"));\nconsole.log(check_str(\"hazelnut\"));\nconsole.log(check_str(\"chestnut\"));\nconsole.log(check_str(\"pine nut\"));\nconsole.log(check_str(\"brazil nut\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123453,
      "stdout": "../../../../tmp/tmpzygww6bl.ts(43,34): error TS1002: Unterminated string literal.\n../../../../tmp/tmpzygww6bl.ts(44,1): error TS1005: ',' expected.\n../../../../tmp/tmpzygww6bl.ts(44,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\")\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123454,
      "stdout": "../../../../tmp/tmpa7unzq5s.ts(42,1): error TS1005: ',' expected.\n../../../../tmp/tmpa7unzq5s.ts(42,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n  let pattern = /^[aeiou]/i;\n  if (pattern.test(string)) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nconsole.log(check_str(\"United States\"));\nconsole.log(check_str(\"egypt\"));\nconsole.log(check_str(\"germany\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123454,
      "stdout": "true\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n  let patt = new RegExp(\"^[aeiou]\");\n  return patt.test(string);\n}\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"pear\"));\nconsole.log(check_str(\"banana\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123454,
      "stdout": "true\ntrue\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp16h9627p.js:15:12)\n    at Object.<anonymous> (/tmp/tmp16h9627p.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"elephant\"));\nconsole.log(check_str(\"Iphone\"));\nconsole.log(check_str(\"eagle\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123454,
      "stdout": "false\ntrue\ntrue\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"a is a string\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123455,
      "stdout": "false\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123446,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\nconsole.log(check_str(\"karnataka\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123455,
      "stdout": "true\ntrue\ntrue\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"Hello\"));\nconsole.log(check_str(\"World\"));\nconsole.log(check_str(\"Apple\"));\nconsole.log(check_str(\"Orange\"));\nconsole.log(check_str(\"Banana\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123454,
      "stdout": "false\nfalse\ntrue\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nconsole.log(check_str(\"United States\"));\nconsole.log(check_str(\"egypt\"));\nconsole.log(check_str(\"globe\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123455,
      "stdout": "true\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"United States\"));\nconsole.log(check_str(\"egypt\"));\nconsole.log(check_str(\"india\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "true\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    return patt.test(string);\n}\n\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"world\"));\nconsole.log(check_str(\"orange\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123454,
      "stdout": "false\ntrue\nfalse\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"mango\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123455,
      "stdout": "true\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"abcdef\"));\nconsole.log(check_str(\"abcdEf\"));\nconsole.log(check_str(\"a\"));\nconsole.log(check_str(\"ab\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcdE\"));\nconsole.log(check_str(\"abcdEF\"));\nconsole.log(check_str(\"abcdEFG\"));\nconsole.log(check_str(\"abcdEFGH\"));\nconsole.log(check_str(\"abcdEFGHI\"));\nconsole.log(check_str(\"abcdEFGHIJ\"));\nconsole.log(check_str(\"abcdEFGHIJK\"));\nconsole.log(check_str(\"abcdEFGHIJKL\"));\nconsole.log(check_str(\"abcdEFGHIJKLM\"));\nconsole.log(check_str(\"abcdEFGHIJKLMN\"));\nconsole.log(check_str(\"abcdEFGHIJKLMNO\"));\nconsole.log(check_str(\"abcdEFGHIJKLMNOP\"));\nconsole.log(check_str(\"abcdEFGHIJKLMNOPQ\"));\nconsole.log(check_str(\"abcdEFGHIJKLMNOPQR\"));\nconsole.log(check_str(\"abcdEFGHIJKLMNOPQRS\"));\nconsole.log(check_str(\"abcdEFGHIJKLMNOPQRST\"));\nconsole.log(check_str(\"abcdEFGHIJKLMNOPQRSTU\"));\nconsole.log(check_str(\"abcdEFGHIJKLMNOPQRSTUV\"));\nconsole.log(check_str(\"abcdEFGHIJKLMNOPQRSTUVW\"));\nconsole.log(check_str(\"abcdEFGHIJKLMNOPQRSTUVWX\"));\nconsole.log(check_str(\"abcd\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123454,
      "stdout": "../../../../tmp/tmpy0ucu78y.ts(34,28): error TS1002: Unterminated string literal.\n../../../../tmp/tmpy0ucu78y.ts(35,1): error TS1005: ',' expected.\n../../../../tmp/tmpy0ucu78y.ts(35,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123454,
      "stdout": "../../../../tmp/tmp6zeqkh8c.ts(46,24): error TS1002: Unterminated string literal.\n../../../../tmp/tmp6zeqkh8c.ts(47,1): error TS1005: ',' expected.\n../../../../tmp/tmp6zeqkh8c.ts(47,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let regexp: RegExp = /^[aeiou]/i;\n    if (regexp.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"United States\"));\nconsole.log(check_str(\"egypt\"));\nconsole.log(check_str(\"germany\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123455,
      "stdout": "true\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let regexp = /^[aeiou]/i;\n    if (regexp.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123455,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let regexp = /^[aeiou]/i;\n    if (regexp.test(string)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(check_str(\"invalid\"));\nconsole.log(check_str(\"valid\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123455,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let regexp = /^[aeiou]/i;\n    if (regexp.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"United States\"));\nconsole.log(check_str(\"egypt\"));\nconsole.log(check_str(\"globe\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123454,
      "stdout": "true\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    return false;\n}\n\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"a string\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123455,
      "stdout": "false\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"grapes\"));\nconsole.log(check_str(\"mango\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123455,
      "stdout": "true\ntrue\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123446,
      "stdout": "false\ntrue\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"United States\"));\nconsole.log(check_str(\"egypt\"));\nconsole.log(check_str(\"germany\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123452,
      "stdout": "true\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"aabc\"));\nconsole.log(check_str(\"abcdef\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\")\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123454,
      "stdout": "../../../../tmp/tmph92s_zoz.ts(46,1): error TS1005: ',' expected.\n../../../../tmp/tmph92s_zoz.ts(46,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"Hello\"));\nconsole.log(check_str(\"Apple\"));\nconsole.log(check_str(\"Orange\"));\nconsole.log(check_str(\"Banana\"));\nconsole.log(check_str(\"Mango\"));\nconsole.log(check_str(\"Grapes\"));\nconsole.log(check_str(\"Pineapple\"));\nconsole.log(check_str(\"Peach\"));\nconsole.log(check_str(\"Papaya\"));\nconsole.log(check_str(\"Watermelon\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123455,
      "stdout": "false\ntrue\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"abcdef\"));\nconsole.log(check_str(\"abcdefghijklmnopqrstuvwxyz\"));\nconsole.log(check_str(\"abcdefghijklmnopqrstuvwxyz\"));\nconsole.log(check_str(\"abcdefghijklmnopqrstuvwxyz\"));\nconsole.log(check_str(\"abcdefghijklmnopqrstuvwxyz\"));\nconsole.log(check_str(\"abcdefghijklmnopqrstuvwxyz\"));\nconsole.log(check_str(\"abcdefghijklmnopqrstuvwxyz\"));\nconsole.log(check_str(\"abcdefghijklmnopqrstuvwxyz\"));\nconsole.log(check_str(\"abcdefghijklmnopqrstuvwxyz\"));\nconsole.log(check_str(\"abcdefghijklmnopqrstuvwxyz\"));\nconsole.log(check_str(\"abcdefghijklmnopqrstuvwxyz\"));\nconsole.log(check_str(\"abcdefghijklmnopqrstuvwxyz\"));\nconsole.log(check_str(\"abcdefghijklmnopqrstuvwxyz\"));\nconsole.log(check_str(\"abcdefghijklmnopqrstuvwxyz\"));\nconsole.log(check_str(\"abcdefghijklmnopqrstuvwxyz\"));\nconsole.log(check_str(\"abcdefghijklmnopqrstuvwxyz\"));\nconsole.log(check_str(\"abcdefghijklmnopqrstuvwxyz\"));\nconsole.log(check_str(\"abcdefghijklmnopqrstuvwxyz\"));\nconsole.log(check_str(\"abcdefghijklmnopqrstuvwxyz\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123455,
      "stdout": "true\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"aabc\"));\nconsole.log(check_str(\"abcdef\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"ab\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123455,
      "stdout": "../../../../tmp/tmpa3i0lx34.ts(46,26): error TS1002: Unterminated string literal.\n../../../../tmp/tmpa3i0lx34.ts(47,1): error TS1005: ',' expected.\n../../../../tmp/tmpa3i0lx34.ts(47,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"pear\"));\nconsole.log(check_str(\"grapes\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"watermelon\"));\nconsole.log(check_str(\"pineapple\"));\nconsole.log(check_str(\"strawberry\"));\nconsole.log(check_str(\"blueberry\"));\nconsole.log(check_str(\"blackberry\"));\nconsole.log(check_str(\"cherry\"));\nconsole.log(check_str(\"cranberry\"));\nconsole.log(check_str(\"raspberry\"));\nconsole.log(check_str(\"apricot\"));\nconsole.log(check_str(\"peach\"));\nconsole.log(check_str(\"plum\"));\nconsole.log(check_str(\"nectarine\"));\nconsole.log(check_str(\"pomegranate\"));\nconsole.log(check_str(\"grapefruit\"));\nconsole.log(check_str(\"lemon\"));\nconsole.log(check_str(\"lime\"));\nconsole.log(check_str(\"coconut\"));\nconsole.log(check_str(\"avocado\"));\nconsole.log(check_str(\"cantaloupe\"));\nconsole.log(check_str(\"honeydew\"));\nconsole.log(check_str(\"watermelon\"));\nconsole.log(check_str(\"kiwi\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"papaya\"));\nconsole.log(check_str(\"pineapple\"));\nconsole.log(check_str(\"guava\"));\nconsole.log(check_str(\"passion fruit\"));\nconsole.log(check_str(\"star fruit\"));\nconsole.log(check_str(\"ly\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123456,
      "stdout": "../../../../tmp/tmp9wsbiw5i.ts(43,26): error TS1002: Unterminated string literal.\n../../../../tmp/tmp9wsbiw5i.ts(44,1): error TS1005: ',' expected.\n../../../../tmp/tmp9wsbiw5i.ts(44,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let regexp = /^[aeiou]/i;\n    if (regexp.test(string)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(check_str(\"United States\"));\nconsole.log(check_str(\"egypt\"));\nconsole.log(check_str(\"globe\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123456,
      "stdout": "true\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"mango\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123446,
      "stdout": "false\ntrue\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"Hello\"));\nconsole.log(check_str(\"Apple\"));\nconsole.log(check_str(\"Orange\"));\nconsole.log(check_str(\"Banana\"));\nconsole.log(check_str(\"Grapes\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123457,
      "stdout": "false\ntrue\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123456,
      "stdout": "../../../../tmp/tmp1_2q5obj.ts(50,1): error TS1005: ',' expected.\n../../../../tmp/tmp1_2q5obj.ts(50,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\nconsole.log(check_str(\"korea\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123446,
      "stdout": "true\ntrue\ntrue\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"world\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123457,
      "stdout": "false\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123457,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"pear\"));\nconsole.log(check_str(\"grapes\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"banana\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123457,
      "stdout": "false\ntrue\ntrue\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"mango\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123446,
      "stdout": "false\ntrue\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"a\"));\nconsole.log(check_str(\"b\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123457,
      "stdout": "false\ntrue\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    var regexp = /^[aeiou]/i;\n    if (regexp.test(string)) {\n        console.log(string + \" starts with a vowel\");\n        return true;\n    } else {\n        console.log(string + \" starts with a consonant\");\n        return false;\n    }\n}\ncheck_str(\"inheritance\");\ncheck_str(\"hello\");\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123457,
      "stdout": "inheritance starts with a vowel\nhello starts with a consonant\nannie starts with a vowel\ndawood starts with a consonant\nElse starts with a vowel\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = new RegExp(\"^[aeiou]\");\n    return patt.test(string);\n}\n\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"grapes\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"pineapple\"));\nconsole.log(check_str(\"peach\"));\nconsole.log(check_str(\"strawberry\"));\nconsole.log(check_str(\"watermelon\"));\nconsole.log(check_str(\"melon\"));\nconsole.log(check_str(\"papaya\"));\nconsole.log(check_str(\"kiwi\"));\nconsole.log(check_str(\"guava\"));\nconsole.log(check_str(\"pear\"));\nconsole.log(check_str(\"plum\"));\nconsole.log(check_str(\"cherry\"));\nconsole.log(check_str(\"coconut\"));\nconsole.log(check_str(\"apricot\"));\nconsole.log(check_str(\"avocado\"));\nconsole.log(check_str(\"blueberry\"));\nconsole.log(check_str(\"blackberry\"));\nconsole.log(check_str(\"cranberry\"));\nconsole.log(check_str(\"raspberry\"));\nconsole.log(check_str(\"strawberry\"));\nconsole.log(check_str(\"grapefruit\"));\nconsole.log(check_str(\"lemon\"));\nconsole.log(check_str(\"lime\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"pomegranate\"));\nconsole.log(check_str(\"tangerine\"));\nconsole.log(check_str(\"watermelon\"));\nconsole.log(check_str(\"cantaloupe\"));\nconsole.log(check_str(\"honeydew\"));\nconsole.log(check_str(\"jackfruit\"));\nconsole.log(check_str(\"lychee\"));\nconsole.log(check_str(\"mango\"));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123457,
      "stdout": "true\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpli7zqxiy.js:48:12)\n    at Object.<anonymous> (/tmp/tmpli7zqxiy.js:50:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"pineapple\"));\nconsole.log(check_str(\"grapes\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"kiwi\"));\nconsole.log(check_str(\"guava\"));\nconsole.log(check_str(\"pear\"));\nconsole.log(check_str(\"peach\"));\nconsole.log(check_str(\"plum\"));\nconsole.log(check_str(\"pomegranate\"));\nconsole.log(check_str(\"cherry\"));\nconsole.log(check_str(\"apricot\"));\nconsole.log(check_str(\"avocado\"));\nconsole.log(check_str(\"coconut\"));\nconsole.log(check_str(\"fig\"));\nconsole.log(check_str(\"grapefruit\"));\nconsole.log(check_str(\"lemon\"));\nconsole.log(check_str(\"lime\"));\nconsole.log(check_str(\"lychee\"));\nconsole.log(check_str(\"melon\"));\nconsole.log(check_str(\"olive\"));\nconsole.log(check_str(\"papaya\"));\nconsole.log(check_str(\"pear\"));\nconsole.log(check_str(\"persimmon\"));\nconsole.log(check_str(\"quince\"));\nconsole.log(check_str(\"raspberry\"));\nconsole.log(check_str(\"strawberry\"));\nconsole.log(check_str(\"tangerine\"));\nconsole.log(check_str(\"watermelon\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123457,
      "stdout": "false\ntrue\nfalse\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"a is a string\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123457,
      "stdout": "false\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiouAEIOU]/;\n    if (pattern.test(string)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123457,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"pear\"));\nconsole.log(check_str(\"grapes\"));\nconsole.log(check_str(\"banana\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123458,
      "stdout": "false\ntrue\ntrue\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"Hello\"));\nconsole.log(check_str(\"World\"));\nconsole.log(check_str(\"Apple\"));\nconsole.log(check_str(\"Orange\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123446,
      "stdout": "false\nfalse\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n  let patt = new RegExp(/^[aeiou]/i);\n  let result = patt.test(string);\n  return result;\n}\n\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123458,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = new RegExp(/^[aeiou]/i);\n    return patt.test(string);\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"kiwi\"));\nconsole.log(check_str(\"grapes\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"pineapple\"));\nconsole.log(check_str(\"pear\"));\nconsole.log(check_str(\"guava\"));\nconsole.log(check_str(\"strawberry\"));\nconsole.log(check_str(\"watermelon\"));\nconsole.log(check_str(\"papaya\"));\nconsole.log(check_str(\"peach\"));\nconsole.log(check_str(\"plum\"));\nconsole.log(check_str(\"cherry\"));\nconsole.log(check_str(\"coconut\"));\nconsole.log(check_str(\"apricot\"));\nconsole.log(check_str(\"avocado\"));\nconsole.log(check_str(\"blackberry\"));\nconsole.log(check_str(\"blueberry\"));\nconsole.log(check_str(\"cantaloupe\"));\nconsole.log(check_str(\"cranberry\"));\nconsole.log(check_str(\"grapefruit\"));\nconsole.log(check_str(\"honeydew\"));\nconsole.log(check_str(\"jackfruit\"));\nconsole.log(check_str(\"lemon\"));\nconsole.log(check_str(\"lime\"));\nconsole.log(check_str(\"lychee\"));\nconsole.log(check_str(\"nectarine\"));\nconsole.log(check_str(\"olive\"));\nconsole.log(check_str(\"pomegranate\"));\nconsole.log(check_str(\"raspberry\"));\nconsole.log(check_str(\"tangerine\"));\nconsole.log(check_str(\"watermelon\"));\nconsole.log(check_str(\"zucchini\")\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123457,
      "stdout": "../../../../tmp/tmp83nofjfs.ts(42,1): error TS1005: ',' expected.\n../../../../tmp/tmp83nofjfs.ts(42,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"world\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"grapes\"));\nconsole.log(check_str(\"pineapple\"));\nconsole.log(check_str(\"strawberry\"));\nconsole.log(check_str(\"blueberry\"));\nconsole.log(check_str(\"watermelon\"));\nconsole.log(check_str(\"guava\"));\nconsole.log(check_str(\"peach\"));\nconsole.log(check_str(\"papaya\"));\nconsole.log(check_str(\"cherry\"));\nconsole.log(check_str(\"plum\"));\nconsole.log(check_str(\"pear\"));\nconsole.log(check_str(\"apricot\"));\nconsole.log(check_str(\"avocado\"));\nconsole.log(check_str(\"coconut\"));\nconsole.log(check_str(\"lemon\"));\nconsole.log(check_str(\"lime\"));\nconsole.log(check_str(\"kiwi\"));\nconsole.log(check_str(\"jackfruit\"));\nconsole.log(check_str(\"pomegranate\"));\nconsole.log(check_str(\"grapefruit\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"grapes\"));\nconsole.log(check_str(\"pineapple\"));\nconsole.log(check_str(\"strawberry\"));\nconsole.log(check_str(\"blueberry\"));\nconsole.log(check_str(\"watermelon\"));\nconsole.log(check_str(\"guava\"));\nconsole.log(check_str(\"peach\"));\nconsole.log\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123458,
      "stdout": "false\ntrue\nfalse\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"grapes\"));\nconsole.log(check_str(\"pineapple\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123457,
      "stdout": "true\ntrue\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"grapes\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"pineapple\"));\nconsole.log(check_str(\"peach\"));\nconsole.log(check_str(\"plum\"));\nconsole.log(check_str(\"pear\"));\nconsole.log(check_str(\"papaya\"));\nconsole.log(check_str(\"pomegranate\"));\nconsole.log(check_str(\"papaya\"));\nconsole.log(check_str(\"pomegranate\"));\nconsole.log(check_str(\"papaya\"));\nconsole.log(check_str(\"pomegranate\"));\nconsole.log(check_str(\"papaya\"));\nconsole.log(check_str(\"pomegranate\"));\nconsole.log(check_str(\"papaya\"));\nconsole.log(check_str(\"pomegranate\"));\nconsole.log(check_str(\"papaya\"));\nconsole.log(check_str(\"pomegranate\"));\nconsole.log(check_str(\"papaya\"));\nconsole.log(check_str(\"pomegranate\"));\nconsole.log(check_str(\"papaya\"));\nconsole.log(check_str(\"pomegranate\"));\nconsole.log(check_str(\"papaya\"));\nconsole.log(check_str(\"pomegranate\"));\nconsole.log(check_str(\"papaya\"));\nconsole.log(check_str(\"pomegranate\"));\nconsole.log(check_str(\"papaya\"));\nconsole.log(check_str(\"pomegranate\"));\nconsole.log(check_str(\"papaya\"));\nconsole.log(check_str(\"pomegranate\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123457,
      "stdout": "false\ntrue\nfalse\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let regexp: RegExp = /^[aeiou]/i;\n    if (regexp.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"Iphone\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123458,
      "stdout": "false\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"United States\"));\nconsole.log(check_str(\"egypt\"));\nconsole.log(check_str(\"germany\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123458,
      "stdout": "true\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123457,
      "stdout": "../../../../tmp/tmpvoftk14r.ts(42,40): error TS1002: Unterminated string literal.\n../../../../tmp/tmpvoftk14r.ts(43,1): error TS1005: ',' expected.\n../../../../tmp/tmpvoftk14r.ts(43,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"grapes\"));\nconsole.log(check_str(\"pineapple\"));\nconsole.log(check_str(\"strawberry\"));\nconsole.log(check_str(\"watermelon\"));\nconsole.log(check_str(\"blueberry\"));\nconsole.log(check_str(\"blackberry\"));\nconsole.log(check_str(\"peach\"));\nconsole.log(check_str(\"pear\"));\nconsole.log(check_str(\"plum\"));\nconsole.log(check_str(\"cherry\"));\nconsole.log(check_str(\"coconut\"));\nconsole.log(check_str(\"papaya\"));\nconsole.log(check_str(\"avocado\"));\nconsole.log(check_str(\"guava\"));\nconsole.log(check_str(\"kiwi\"));\nconsole.log(check_str(\"lemon\"));\nconsole.log(check_str(\"lime\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"pomegranate\"));\nconsole.log(check_str(\"raspberry\"));\nconsole.log(check_str(\"strawberry\"));\nconsole.log(check_str(\"watermelon\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"grapes\"));\nconsole.log(check_str(\"pineapple\"));\nconsole.log(check_str(\"blueberry\"));\nconsole.log(check_str(\"blackberry\"));\nconsole.log(check_str(\"peach\"));\nconsole.log(check_str(\"pear\"));\nconsole.log(check_str(\"plum\"));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123457,
      "stdout": "../../../../tmp/tmpyggay_cl.ts(45,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"United States\"));\nconsole.log(check_str(\"egypt\"));\nconsole.log(check_str(\"Germany\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123459,
      "stdout": "true\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"united\"));\nconsole.log(check_str(\"india\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"England\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123459,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n  let patt = /^[aeiou]/i;\n  let result = patt.test(string);\n  return result;\n}\n\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123459,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let regexp = /^[aeiou]/i;\n    if (regexp.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"Apple\"));\nconsole.log(check_str(\"hello\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123459,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n  let pattern = /^[aeiou]/i;\n  if (pattern.test(string)) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"a string\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123459,
      "stdout": "false\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nlet str = \"apple\";\nconsole.log(check_str(str));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123459,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = new RegExp(/^[aeiou]/i);\n    return patt.test(string);\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123459,
      "stdout": "false\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"ahello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"Ello\"));\nconsole.log(check_str(\"Ello\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123460,
      "stdout": "true\nfalse\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(check_str(\"Hello\"));\nconsole.log(check_str(\"World\"));\nconsole.log(check_str(\"Apple\"));\nconsole.log(check_str(\"Orange\"));\nconsole.log(check_str(\"Banana\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123460,
      "stdout": "false\nfalse\ntrue\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123460,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiouAEIOU]/;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"United States\"));\nconsole.log(check_str(\"eUnited States\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123452,
      "stdout": "true\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"aabc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"aabc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"aabc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"aabc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"aabc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"aabc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"aabc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"aabc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"aabc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"aabc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"aabc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"aabc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"aabc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"aabc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"aabc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"aabc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"aabc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"aabc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"aabc\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123460,
      "stdout": "true\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"world\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123457,
      "stdout": "false\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"Hello\"));\nconsole.log(check_str(\"World\"));\nconsole.log(check_str(\"Apple\"));\nconsole.log(check_str(\"Orange\"));\nconsole.log(check_str(\"Banana\"));\nconsole.log(check_str(\"Grapes\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123460,
      "stdout": "false\nfalse\ntrue\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"mango\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123460,
      "stdout": "false\ntrue\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"grapes\"));\nconsole.log(check_str(\"pineapple\"));\nconsole.log(check_str(\"peach\"));\nconsole.log(check_str(\"papaya\"));\nconsole.log(check_str(\"kiwi\"));\nconsole.log(check_str(\"watermelon\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123460,
      "stdout": "true\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123446,
      "stdout": "../../../../tmp/tmpo358uspg.ts(39,31): error TS1002: Unterminated string literal.\n../../../../tmp/tmpo358uspg.ts(40,1): error TS1005: ',' expected.\n../../../../tmp/tmpo358uspg.ts(40,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"grapes\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"pineapple\"));\nconsole.log(check_str(\"watermelon\"));\nconsole.log(check_str(\"papaya\"));\nconsole.log(check_str(\"peach\"));\nconsole.log(check_str(\"pear\"));\nconsole.log(check_str(\"plum\"));\nconsole.log(check_str(\"jackfruit\"));\nconsole.log(check_str(\"guava\"));\nconsole.log(check_str(\"strawberry\"));\nconsole.log(check_str(\"blueberry\"));\nconsole.log(check_str(\"blackberry\"));\nconsole.log(check_str(\"raspberry\"));\nconsole.log(check_str(\"cranberry\"));\nconsole.log(check_str(\"cherry\"));\nconsole.log(check_str(\"grapefruit\"));\nconsole.log(check_str(\"lemon\"));\nconsole.log(check_str(\"lime\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"pomegranate\"));\nconsole.log(check_str(\"tangerine\"));\nconsole.log(check_str(\"watermelon\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"apricot\"));\nconsole.log(check_str(\"avocado\"));\nconsole.log(check_str(\"blackcurrant\"));\nconsole.log(check_str(\"blackberry\"));\nconsole.log(check_str(\"blueberry\"));\nconsole.log(check_str(\"boysenberry\"));\nconsole.log(check_str(\"cantaloupe\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123460,
      "stdout": "false\ntrue\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\nfalse\nfalse\nfalse\ntrue\ntrue\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"a string\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123460,
      "stdout": "false\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123446,
      "stdout": "false\ntrue\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"grapes\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123460,
      "stdout": "true\ntrue\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(check_str(\"Hello\"));\nconsole.log(check_str(\"World\"));\nconsole.log(check_str(\"Apple\"));\nconsole.log(check_str(\"Orange\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123460,
      "stdout": "false\nfalse\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"grapes\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123452,
      "stdout": "true\ntrue\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"United States\"));\nconsole.log(check_str(\"egypt\"));\nconsole.log(check_str(\"germany\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123458,
      "stdout": "true\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"United States\"));\nconsole.log(check_str(\"egypt\"));\nconsole.log(check_str(\"germany\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123458,
      "stdout": "true\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_125_find_length",
  "language": "ts",
  "prompt": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_125_find_length.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let zero_count = 0;\n    let one_count = 0;\n    let max_diff = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(zero_count - one_count));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('10010001'));\nconsole.log(find_length('0110000'));\nconsole.log(find_length('100101'));\nconsole.log(find_length('0001'));\n",
    "    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length(\"11000111\"));\nconsole.log(find_length(\"1111\"));\nconsole.log(find_length(\"000011110000\"));\n",
    "    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('1000101010101'));\nconsole.log(find_length('110101010101'));\nconsole.log(find_length('1101010101010101'));\nconsole.log(find_length('110101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101",
    "    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, count_zero - count_one);\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('1000101'));\nconsole.log(find_length('10101'));\nconsole.log(find_length('0111000100010'));\n",
    "    let max_diff: number = 0;\n    let count_0: number = 0;\n    let count_1: number = 0;\n    for (let i: number = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i: number = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"1001101\"));\nconsole.log(find_length(\"011101\"));\nconsole.log(find_length(\"010101\"));\nconsole.log(find_length(\"1111\"));\nconsole.log(find_length(\"0000\"));\n",
    "    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        let diff = count_zero - count_one;\n        if (diff < 0) {\n            diff = -diff;\n        }\n        if (diff > max_diff) {\n            max_diff = diff;\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"10011010001\"));\nconsole.log(find_length(\"00110\"));\nconsole.log(find_length(\"01010101\"));\n",
    "    let zero_count = 0;\n    let one_count = 0;\n    let max_length = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count += 1;\n        } else {\n            one_count += 1;\n        }\n        if (zero_count == one_count) {\n            max_length = Math.max(max_length, 2 * zero_count);\n        } else if (zero_count > one_count) {\n            zero_count = 0;\n            one_count = 0;\n        }\n    }\n    zero_count = 0;\n    one_count = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            zero_count += 1;\n        } else {\n            one_count += 1;\n        }\n        if (zero_count == one_count) {\n            max_length = Math.max(max_length, 2 * zero_count);\n        } else if (zero_count < one_count) {\n            zero_count = 0;\n            one_count = 0;\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length('100010101'));\nconsole.log(find_length('0111000100010'));\n",
    "    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length(\"10010101\"));\nconsole.log(find_length(\"11110001\"));\n",
    "    let zeros = 0;\n    let ones = 0;\n    let max_diff = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zeros++;\n        } else {\n            ones++;\n        }\n        if (zeros == ones) {\n            max_diff = Math.max(max_diff, ones * 2);\n        }\n    }\n    zeros = 0;\n    ones = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            zeros++;\n        } else {\n            ones++;\n        }\n        if (zeros == ones) {\n            max_diff = Math.max(max_diff, zeros * 2);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('1001101'));\nconsole.log(find_length('011101'));\nconsole.log(find_length('0111011101'));\n",
    "    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_0 - count_1));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"1000101\"));\nconsole.log(find_length(\"111000111\"));\nconsole.log(find_length
    "    let zeros: number = 0;\n    let ones: number = 0;\n    let max_diff: number = 0;\n    for (let i: number = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zeros += 1;\n        } else {\n            ones += 1;\n        }\n        max_diff = Math.max(max_diff, Math.abs(zeros - ones));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('10010001'));\nconsole.log(find_length('0110000'));\nconsole.log(find_length('100101'));\nconsole.log(find_length('100101'));\nconsole.log(find_length('100101'));\n",
    "    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n\n    count_0 = 0;\n    count_1 = 0;\n\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n\n    return max_diff;\n}\n\nconsole.log(find_length('1101010101'));\nconsole.log(find_length('1111010001'));",
    "    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, count_zero - count_one);\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('1000101'));\nconsole.log(find_length('10101'));\n",
    "    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    let i = 0;\n    let j = 0;\n    while (j < string.length) {\n        if (string[j] == '0') {\n            count_0 += 1;\n        } else {\n            count_1 += 1;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_0 - count_1));\n        if (count_0 == count_1) {\n            i = j + 1;\n            count_0 = 0;\n            count_1 = 0;\n        }\n        j += 1;\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"1001101\"));\nconsole.log(find_length(\"0101010101\"));\nconsole.log(find_length(\"1111\"));\n",
    "    let zero_count = 0;\n    let one_count = 0;\n    let max_length = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_length = Math.max(max_length, zero_count * 2);\n        } else if (zero_count > one_count) {\n            zero_count = 0;\n            one_count = 0;\n        }\n    }\n    zero_count = 0;\n    one_count = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_length = Math.max(max_length, zero_count * 2);\n        } else if (zero_count < one_count) {\n            zero_count = 0;\n            one_count = 0;\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length('1001101'));\nconsole.log(find_length('011101'));\nconsole.log(find_length('01110101'));\nconsole.log(find_length('0111010101'));\nconsole.log(find_length('011101010101'));\nconsole.log(find_length('01110101010101'));\nconsole.log(find_length('0111010101010101'));\nconsole.log(find_length('011101010101010101'));\nconsole.log(find_length('01110101010101010101'));\nconsole.log(find_length('0111010101010101010101'));\nconsole.log(find_length('011101010101010101010101'));\nconsole.log(find_length('011101010101",
    "    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length(\"1001101\"));\nconsole.log(find_length(\"0111000100010\"));\n",
    "    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length('0011000111'));\nconsole.log(find_length('0101010101'));\n",
    "  let maxLength = 0;\n  let count = 0;\n  let count1 = 0;\n  let count0 = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] == \"1\") {\n      count1++;\n    } else {\n      count0++;\n    }\n    if (count1 == count0) {\n      count = count1 + count0;\n      if (count > maxLength) {\n        maxLength = count;\n      }\n    }\n  }\n  return maxLength;\n}\nconsole.log(find_length(\"10010001\"));\n",
    "    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, count_zero - count_one);\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"10010001\"));\nconsole.log(find_length(\"0110000\"));\n",
    "    let max_length: number = 0;\n    let count_0: number = 0;\n    let count_1: number = 0;\n\n    for (let i: number = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n\n    count_0 = 0;\n    count_1 = 0;\n\n    for (let i: number = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n\n    return max_length;\n}\n\nconsole.log(find_length(\"110111\"));\nconsole.log(find_length(\"1111\"));\nconsole.log(find_length(\"0111000100010\"));\n"
  ]
}
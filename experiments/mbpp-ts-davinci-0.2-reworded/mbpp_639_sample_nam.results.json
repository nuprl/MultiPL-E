{
  "name": "mbpp_639_sample_nam",
  "language": "ts",
  "prompt": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_639_sample_nam.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0).toUpperCase() == sample_names[i].charAt(0)) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Raj\", \"Raju\", \"Rajesh\", \"Rajeshwari\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510117,
      "stdout": "23\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i][0] == sample_names[i][0].toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Alex\", \"Jacob\", \"Mark\", \"Max\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510117,
      "stdout": "16\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toLowerCase()) {\n            sample_names.splice(i, 1);\n            i--;\n        }\n        else {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Abc\", \"Xyz\", \"abc\", \"xyz\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510117,
      "stdout": "6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Raj\", \"Raju\", \"Rajesh\", \"rajesh\", \"raju\", \"raj\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "13\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Nancy\", \"Jinichi\", \"Fujibayashi\", \"Momochi\", \"Ishikawa\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510117,
      "stdout": "38\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Karan\", \"Johar\", \"Hrithik\"]));\nconsole.log(sample_nam([\"Karan\", \"Johar\", \"Hrithik\", \"karan\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510117,
      "stdout": "17\n17\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Abhishek\", \"Kumar\", \"Sharma\", \"abhishek\", \"sharma\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510117,
      "stdout": "19\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Sara\", \"Jenny\", \"Alex\"]));\nconsole.log(sample_nam([\"Angela\", \"Ben\", \"Charlie\", \"Daniel\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510117,
      "stdout": "13\n22\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Kiran\", \"Kumar\", \"krishna\", \"kiran\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510117,
      "stdout": "10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Karan\", \"Arjun\", \"Raju\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510117,
      "stdout": "14\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n  let sum: number = 0;\n  for (let i: number = 0; i < sample_names.length; i++) {\n    if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n      sum += sample_names[i].length;\n    }\n  }\n  return sum;\n}\nconsole.log(sample_nam([\"Koushik\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510117,
      "stdout": "22\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Raj\", \"Rajesh\", \"Raju\", \"rajesh\", \"raju\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "13\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Alex\", \"Jacob\", \"Mark\", \"Max\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510117,
      "stdout": "16\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Alex\", \"Michael\", \"Harry\", \"Dave\", \"Michael\", \"Victor\", \"Harry\", \"Alex\", \"Mary\", \"Mary\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "50\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toLowerCase()) {\n            sample_names.splice(i, 1);\n            i--;\n        }\n    }\n    for (let i: number = 0; i < sample_names.length; i++) {\n        sum += sample_names[i].length;\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Abc\", \"Xyz\", \"Pqr\", \"abc\", \"def\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510117,
      "stdout": "9\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510117,
      "stdout": "../../../../tmp/tmp_25v730z.ts(12,781): error TS1002: Unterminated string literal.\n../../../../tmp/tmp_25v730z.ts(13,1): error TS1005: ',' expected.\n../../../../tmp/tmp_25v730z.ts(13,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Koushik\", \"Vinay\", \"Koushik\", \"Harsha\", \"Balakrishna\", \"Koushik\", \"koushik\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510117,
      "stdout": "43\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Raj\", \"Raju\", \"rajesh\", \"Rajesh\", \"Rajeshwari\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510117,
      "stdout": "23\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Alex\", \"Jacob\", \"Mark\", \"Max\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510117,
      "stdout": "16\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Alex\", \"Michael\", \"Hephaestus\", \"Neptune\", \"Hades\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510117,
      "stdout": "33\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Koushik\", \"Sai\", \"Kiran\", \"sai\", \"siva\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122769,
      "stdout": "15\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122769,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n  let sum = 0;\n  for (let i = 0; i < sample_names.length; i++) {\n    if (sample_names[i][0] === sample_names[i][0].toUpperCase()) {\n      sum += sample_names[i].length;\n    }\n  }\n  return sum;\n}\n\nconsole.log(sample_nam([\"John\", \"James\", \"james\", \"john\", \"jim\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122769,
      "stdout": "9\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"John\", \"Doe\", \"john\", \"doe\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122769,
      "stdout": "7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i][0] == sample_names[i][0].toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"John\", \"Abraham\", \"john\", \"james\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122769,
      "stdout": "11\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"John\", \"Mary\", \"Sam\", \"james\", \"sara\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122769,
      "stdout": "11\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Raj\", \"Rajesh\", \"Raju\", \"raju\", \"rajesh\", \"raj\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122769,
      "stdout": "13\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122769,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum = sum + sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122769,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Naman\", \"Sachin\", \"Shubham\", \"Saurabh\", \"Saurav\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122769,
      "stdout": "31\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Raju\", \"Rajesh\", \"Raj\", \"Raju\", \"Rajesh\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122769,
      "stdout": "23\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Abhishek\", \"Raj\", \"Rajesh\", \"Raju\", \"Rajeshwari\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122769,
      "stdout": "31\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Sai\", \"Krishna\", \"Teja\", \"sai\", \"krishna\", \"teja\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122769,
      "stdout": "14\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Raj\", \"Raju\", \"Rajesh\", \"Rajeshwar\", \"Rajeshwari\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122769,
      "stdout": "32\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Sai\", \"Krishna\", \"kiran\", \"kumar\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122769,
      "stdout": "10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"A\", \"B\", \"C\", \"D\", \"E\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122769,
      "stdout": "5\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Alex\", \"Jacob\", \"Mark\", \"Max\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122769,
      "stdout": "16\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Karan\", \"Mittal\", \"Aakash\", \"karan\", \"mittal\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122769,
      "stdout": "17\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"John\", \"Doe\", \"john\", \"doe\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122769,
      "stdout": "7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Karan\", \"Johri\", \"Lala\"]));\nconsole.log(sample_nam([\"Umang\", \"Vipul\", \"Rahul\"]));\nconsole.log(sample_nam([\"Karan\", \"Lala\", \"Bala\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122769,
      "stdout": "14\n15\n13\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Alex\", \"Jacob\", \"Mark\", \"Max\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122769,
      "stdout": "16\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i][0] == sample_names[i][0].toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Krishna\", \"Hare\", \"Murari\", \"Hare\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122769,
      "stdout": "21\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nlet sample_names: string[] = [\"John\", \"Sam\", \"Alex\", \"Jill\"];\nconsole.log(sample_nam(sample_names));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122769,
      "stdout": "15\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122769,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122771,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"John\", \"Doe\", \"Sam\", \"Amanda\", \"Chris\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122771,
      "stdout": "21\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Bhavani\", \"Sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\",\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122772,
      "stdout": "../../../../tmp/tmpt2045mbm.ts(12,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) < 97) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Abc\", \"Xyz\", \"Pqr\", \"abc\", \"xyz\", \"pqr\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122772,
      "stdout": "9\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Alex\", \"Michael\", \"Hermann\", \"Zelda\", \"Sarah\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122772,
      "stdout": "28\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) < 97) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Abc\", \"Xyz\", \"Pqr\", \"Mno\"]));\nconsole.log(sample_nam([\"Abc\", \"Xyz\", \"Pqr\", \"mno\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122772,
      "stdout": "12\n9\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122772,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Abhishek\", \"Raj\", \"Rajesh\", \"Raju\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122772,
      "stdout": "21\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koush\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122772,
      "stdout": "../../../../tmp/tmp05sevnn_.ts(11,779): error TS1002: Unterminated string literal.\n../../../../tmp/tmp05sevnn_.ts(12,1): error TS1005: ',' expected.\n../../../../tmp/tmp05sevnn_.ts(12,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toLowerCase()) {\n            sample_names.splice(i, 1);\n        }\n        else {\n            sum = sum + sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122772,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n6\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmp0qvqmw0c.js:17:12)\n    at Object.<anonymous> (/tmp/tmp0qvqmw0c.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum_length: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum_length += sample_names[i].length;\n        }\n    }\n    return sum_length;\n}\n\nconsole.log(sample_nam([\"Raj\", \"Rajesh\", \"Raju\", \"rajesh\", \"raju\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122772,
      "stdout": "13\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"s\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122772,
      "stdout": "../../../../tmp/tmp4frknexc.ts(11,748): error TS1002: Unterminated string literal.\n../../../../tmp/tmp4frknexc.ts(12,1): error TS1005: ',' expected.\n../../../../tmp/tmp4frknexc.ts(12,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122769,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Abc\", \"Xyz\", \"Pqr\", \"Mno\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122772,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"John\", \"Doe\", \"Sam\", \"Amanda\", \"Chris\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122772,
      "stdout": "21\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Raj\", \"Rajesh\", \"Raju\", \"raju\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122772,
      "stdout": "13\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"John\", \"Doe\", \"john\", \"doe\"]));\nconsole.log(sample_nam([\"John\", \"Doe\", \"john\", \"doe\", \"john\", \"doe\"]));\nconsole.log(sample_nam([\"John\", \"Doe\", \"john\", \"doe\", \"john\", \"doe\", \"john\", \"doe\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122772,
      "stdout": "7\n7\n7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Raj\", \"Raju\", \"Rajesh\", \"rajesh\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122772,
      "stdout": "13\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Karan\", \"Jodha\", \"Krishna\", \"Arjun\", \"Malika\"]));\nconsole.log(sample_nam([\"Karan\", \"Jodha\", \"krishna\", \"Arjun\", \"Malika\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122772,
      "stdout": "28\n21\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toLowerCase()) {\n            sample_names.splice(i, 1);\n            i--;\n        }\n        else {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Abc\", \"Xyz\", \"abc\", \"xyz\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122772,
      "stdout": "6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122772,
      "stdout": "../../../../tmp/tmpdpnio7r0.ts(12,781): error TS1002: Unterminated string literal.\n../../../../tmp/tmpdpnio7r0.ts(13,1): error TS1005: ',' expected.\n../../../../tmp/tmpdpnio7r0.ts(13,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122769,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Koushik\", \"Sai\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"Sai\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122772,
      "stdout": "../../../../tmp/tmpk9fw794f.ts(12,747): error TS1002: Unterminated string literal.\n../../../../tmp/tmpk9fw794f.ts(13,1): error TS1005: ',' expected.\n../../../../tmp/tmpk9fw794f.ts(13,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\",\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122772,
      "stdout": "../../../../tmp/tmpgu9uv0ea.ts(12,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122769,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i][0] == sample_names[i][0].toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"K\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122772,
      "stdout": "../../../../tmp/tmpfjxpjv18.ts(11,797): error TS1002: Unterminated string literal.\n../../../../tmp/tmpfjxpjv18.ts(12,1): error TS1005: ',' expected.\n../../../../tmp/tmpfjxpjv18.ts(12,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n  let sum: number = 0;\n  for (let i: number = 0; i < sample_names.length; i++) {\n    if (sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90) {\n      sum += sample_names[i].length;\n    }\n  }\n  return sum;\n}\n\nconsole.log(sample_nam([\"John\", \"Jacob\", \"Jingle\", \"Heimer\", \"Schmidt\"]));\nconsole.log(sample_nam([\"John\", \"Jacob\", \"Jingle\", \"Heimer\", \"Schmidt\", \"john\", \"jacob\", \"jingle\", \"heimer\", \"schmidt\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122774,
      "stdout": "28\n28\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toLowerCase()) {\n            sample_names.splice(i, 1);\n            i--;\n        }\n        else {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Abhishek\", \"abhishek\", \"Abhi\", \"abhi\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122774,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i][0] == sample_names[i][0].toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"John\", \"James\", \"jack\", \"jill\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122774,
      "stdout": "9\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Krishna\", \"Hare\", \"Murari\", \"Hare\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122774,
      "stdout": "21\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Alex\", \"Jacob\", \"Mark\", \"Max\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122769,
      "stdout": "16\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Arya\", \"Samson\", \"Dora\", \"Tim\", \"Ollivander\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122774,
      "stdout": "27\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toLowerCase()) {\n            sample_names.splice(i, 1);\n            i--;\n        }\n        else {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Abc\", \"Xyz\", \"abc\", \"xyz\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122772,
      "stdout": "6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Aakash\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\", \"Ajay\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122775,
      "stdout": "../../../../tmp/tmpjnatl_3_.ts(11,848): error TS1002: Unterminated string literal.\n../../../../tmp/tmpjnatl_3_.ts(12,1): error TS1005: ',' expected.\n../../../../tmp/tmpjnatl_3_.ts(12,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Abc\", \"Xyz\", \"Nmo\"]));\nconsole.log(sample_nam([\"Abc\", \"Xyz\", \"Nmo\", \"abc\", \"xyz\", \"nmo\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122775,
      "stdout": "9\n9\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Krishna\", \"Hare\", \"Murari\"]));\nconsole.log(sample_nam([\"Krishna\", \"Hare\", \"Murari\", \"krishna\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122775,
      "stdout": "17\n17\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Koushik\", \"Soumya\", \"soumya\", \"soumya\", \"soumya\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122775,
      "stdout": "13\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Krishna\", \"Hare\", \"Murari\"]));\nconsole.log(sample_nam([\"Krishna\", \"Hare\", \"Murari\", \"krishna\"]));\nconsole.log(sample_nam([\"Krishna\", \"Hare\", \"Murari\", \"krishna\", \"Krishna\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122775,
      "stdout": "17\n17\n24\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122769,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Abc\", \"Xyz\", \"Nmo\"]));\nconsole.log(sample_nam([\"Abc\", \"Xyz\", \"nmo\"]));\nconsole.log(sample_nam([\"Abc\", \"xyz\", \"Nmo\"]));\nconsole.log(sample_nam([\"abc\", \"Xyz\", \"Nmo\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122775,
      "stdout": "9\n6\n6\n6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) < 97) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Abc\", \"Xyz\", \"Nmo\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122775,
      "stdout": "9\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n  let sum: number = 0;\n  for (let i: number = 0; i < sample_names.length; i++) {\n    if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n      sum += sample_names[i].length;\n    }\n  }\n  return sum;\n}\n\nconsole.log(sample_nam([\"Koushik\", \"Sourav\", \"sourav\", \"koushik\", \"Koushik\", \"Sourav\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122775,
      "stdout": "26\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) !== sample_names[i].charAt(0).toLowerCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Raj\", \"Raju\", \"Rajesh\", \"rajesh\", \"raju\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122775,
      "stdout": "13\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122769,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n  let sum: number = 0;\n  for (let i: number = 0; i < sample_names.length; i++) {\n    if (sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90) {\n      sum += sample_names[i].length;\n    }\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"John\", \"Doe\", \"Sam\", \"Amanda\", \"Chris\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122771,
      "stdout": "21\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Raj\", \"Raju\", \"Rajesh\", \"rajesh\", \"Rajesh\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122775,
      "stdout": "19\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Raj\", \"Raju\", \"Rajesh\", \"rajesh\", \"raju\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122775,
      "stdout": "13\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122771,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"s\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122775,
      "stdout": "../../../../tmp/tmpb32cvlc0.ts(11,755): error TS1002: Unterminated string literal.\n../../../../tmp/tmpb32cvlc0.ts(12,1): error TS1005: ',' expected.\n../../../../tmp/tmpb32cvlc0.ts(12,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toLowerCase()) {\n            sample_names.splice(i, 1);\n            i--;\n        }\n        else {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Abc\", \"Xyz\", \"Pqr\", \"abc\", \"xyz\", \"pqr\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122775,
      "stdout": "9\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Bhavana\", \"Bhavya\", \"Bhavana\", \"Bhavya\", \"Bhavana\", \"Bhavya\", \"Bhavana\", \"Bhavya\", \"Bhavana\", \"Bhavya\", \"Bhavana\", \"Bhavya\", \"Bhavana\", \"Bhavya\", \"Bhavana\", \"Bhavya\", \"Bhavana\", \"Bhavya\", \"Bhavana\", \"Bhavya\", \"Bhavana\", \"Bhavya\", \"Bhavana\", \"Bhavya\", \"Bhavana\", \"Bhavya\", \"Bhavana\", \"Bhavya\", \"Bhavana\", \"Bhavya\", \"Bhavana\", \"Bhavya\", \"Bhavana\", \"Bhavya\", \"Bhavana\", \"Bhavya\", \"Bhavana\", \"Bhavya\", \"Bhavana\", \"Bhavya\", \"Bhavana\", \"Bhavya\", \"Bhavana\", \"Bhavya\", \"Bhavana\", \"Bhavya\", \"Bhavana\", \"Bhavya\", \"Bhavana\", \"Bhavya\", \"Bhavana\", \"Bhavya\", \"Bhavana\", \"Bhavya\", \"Bhavana\", \"Bhavya\", \"Bhavana\", \"Bhavya\", \"Bhavana\", \"Bhavya\", \"Bhavana\", \"Bhavya\", \"Bhavana\", \"Bhavya\", \"Bhavana\", \"Bhavya\", \"Bhavana\", \"Bhavya\", \"Bhavana\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122775,
      "stdout": "../../../../tmp/tmpr1k6efhr.ts(12,747): error TS1002: Unterminated string literal.\n../../../../tmp/tmpr1k6efhr.ts(13,1): error TS1005: ',' expected.\n../../../../tmp/tmpr1k6efhr.ts(13,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i][0] == sample_names[i][0].toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n  let sum: number = 0;\n  for (let i: number = 0; i < sample_names.length; i++) {\n    if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n      sum += sample_names[i].length;\n    }\n  }\n  return sum;\n}\nconsole.log(sample_nam([\"Alex\", \"Michael\", \"Hephaestus\", \"Neptune\", \"Zeus\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122775,
      "stdout": "32\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nlet sample_names: string[] = [\"John\", \"Sam\", \"Doe\", \"Peter\", \"Jane\"];\nconsole.log(sample_nam(sample_names));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122775,
      "stdout": "19\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Karan\", \"Mittal\", \"Aakash\"]));\nconsole.log(sample_nam([\"Karan\", \"mittal\", \"Aakash\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122777,
      "stdout": "17\n11\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122772,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Raj\", \"Raju\", \"Rajesh\", \"rajesh\", \"raju\", \"raj\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "13\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Abc\", \"Xyz\", \"Nmo\"]));\nconsole.log(sample_nam([\"Abc\", \"Xyz\", \"nmo\"]));\nconsole.log(sample_nam([\"abc\", \"Xyz\", \"nmo\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122777,
      "stdout": "9\n6\n3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) < 97) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Abc\", \"Xyz\", \"Pqr\", \"def\", \"ghi\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122777,
      "stdout": "9\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nlet sample_names: string[] = [\"John\", \"Sam\", \"Alfred\", \"Samuel\", \"Al\", \"Alfred\"];\nconsole.log(sample_nam(sample_names));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122777,
      "stdout": "27\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toLowerCase()) {\n            sample_names.splice(i, 1);\n            i--;\n        }\n        else {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Abc\", \"Xyz\", \"abc\", \"Pqr\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122777,
      "stdout": "9\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122771,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"s\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122777,
      "stdout": "../../../../tmp/tmpno_cai3h.ts(11,748): error TS1002: Unterminated string literal.\n../../../../tmp/tmpno_cai3h.ts(12,1): error TS1005: ',' expected.\n../../../../tmp/tmpno_cai3h.ts(12,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum = sum + sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122769,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Raj\", \"Raju\", \"Rajesh\", \"rajesh\", \"raju\", \"Rajesh\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122777,
      "stdout": "19\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nlet sample_names: string[] = [\"David\", \"Jhon\", \"Cena\", \"Mark\", \"Mike\", \"Tyson\"];\nconsole.log(sample_nam(sample_names));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122778,
      "stdout": "26\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nlet sample_names: string[] = [\"Bhavana\", \"bhavana\", \"Bhavana\", \"Bhavana\", \"Bhavana\"];\nconsole.log(sample_nam(sample_names));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122777,
      "stdout": "28\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Harsh\", \"Beria\", \"harsh\", \"sanjay\", \"vinod\", \"HARSH\", \"kumar\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122777,
      "stdout": "15\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122769,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Vijay\", \"Kumar\", \"Reddy\"]));\nconsole.log(sample_nam([\"Vijay\", \"kumar\", \"Reddy\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122778,
      "stdout": "15\n10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Abc\", \"Xyz\", \"Pqr\", \"abc\", \"xyz\", \"pqr\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122777,
      "stdout": "9\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122778,
      "stdout": "24\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Alex\", \"Jacob\", \"Mark\", \"Max\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510117,
      "stdout": "16\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Raj\", \"Rajesh\", \"Raju\", \"rajesh\", \"raju\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122778,
      "stdout": "13\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam(['Abc', 'Xyz', 'Nopqr', 'Stuvwxyz']));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122777,
      "stdout": "19\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Krishna\", \"Hare\", \"Murari\"]));\nconsole.log(sample_nam([\"Krishna\", \"Hare\", \"Murari\", \"krishna\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122778,
      "stdout": "17\n17\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toLowerCase()) {\n            sample_names.splice(i, 1);\n            i--;\n        } else {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Abc\", \"Xyz\", \"abc\", \"xyz\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122778,
      "stdout": "6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Aakash\", \"Ajay\", \"Kumar\", \"Aakash\", \"Ajay\", \"Kumar\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122778,
      "stdout": "30\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toLowerCase()) {\n            sample_names.splice(i, 1);\n            i--;\n        } else {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122778,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"John\", \"Smith\", \"Alex\", \"Micheal\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122778,
      "stdout": "20\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Kiran\", \"Kumar\", \"kiran\", \"kumar\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122778,
      "stdout": "10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toLowerCase()) {\n            sample_names.splice(i, 1);\n            i--;\n        }\n        else {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Abc\", \"Xyz\", \"abc\", \"xyz\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122778,
      "stdout": "6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122772,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Alex\", \"Jacob\", \"Mark\", \"Max\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122778,
      "stdout": "16\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Raj\", \"Kumar\", \"Raju\", \"Rajesh\", \"kumar\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122779,
      "stdout": "18\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"John\", \"Doe\", \"john\", \"doe\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122780,
      "stdout": "7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Jhon\", \"Doe\", \"Sam\", \"Smith\", \"Karen\", \"Jane\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122780,
      "stdout": "24\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Alex\", \"Jacob\", \"Mark\", \"Max\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122780,
      "stdout": "16\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Alex\", \"Jacob\", \"Mark\", \"Max\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122780,
      "stdout": "16\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"mike\", \"james\", \"john\", \"jake\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122780,
      "stdout": "0\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toLowerCase()) {\n            sample_names.splice(i, 1);\n            i--;\n        }\n    }\n    for (let i: number = 0; i < sample_names.length; i++) {\n        sum += sample_names[i].length;\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Abhishek\", \"abhishek\", \"abhi\", \"Abhi\", \"abh\", \"Abh\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122780,
      "stdout": "15\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toLowerCase()) {\n            sample_names.splice(i, 1);\n            i--;\n        }\n    }\n    for (let i: number = 0; i < sample_names.length; i++) {\n        sum += sample_names[i].length;\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Abhishek\", \"Sachin\", \"Rohit\", \"sachin\", \"sachin\", \"sachin\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122780,
      "stdout": "19\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Raj\", \"Raju\", \"Rajesh\", \"rajesh\", \"raju\", \"raj\", \"Rajesh\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122780,
      "stdout": "19\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n  let sum: number = 0;\n  for (let i = 0; i < sample_names.length; i++) {\n    if (sample_names[i].charAt(0) != sample_names[i].charAt(0).toLowerCase()) {\n      sum += sample_names[i].length;\n    }\n  }\n  return sum;\n}\n\nconsole.log(sample_nam([\"Abhishek\", \"Soni\", \"abhishek\", \"soni\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122780,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"A\", \"B\", \"C\"]));\nconsole.log(sample_nam([\"a\", \"b\", \"c\"]));\nconsole.log(sample_nam([\"a\", \"B\", \"c\"]));\nconsole.log(sample_nam([\"A\", \"b\", \"c\"]));\nconsole.log(sample_nam([\"A\", \"B\", \"c\"]));\nconsole.log(sample_nam([\"A\", \"B\", \"C\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122780,
      "stdout": "3\n0\n1\n1\n2\n3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Bhavana\", \"Bhavya\", \"Bhavitha\", \"bhavana\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122780,
      "stdout": "21\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Raj\", \"Raju\", \"Rajesh\", \"rajesh\", \"raju\", \"raj\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122780,
      "stdout": "13\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122769,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Raj\", \"Raju\", \"Rajesh\", \"rajesh\", \"raju\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122780,
      "stdout": "13\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Kiran\", \"Kumar\", \"kiran\", \"kumar\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122778,
      "stdout": "10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Krishna\", \"Hare\", \"Murari\"]));\nconsole.log(sample_nam([\"Krishna\", \"Hare\", \"murari\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122780,
      "stdout": "17\n11\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Krishna\", \"Hare\", \"Murari\"]));\nconsole.log(sample_nam([\"Mark\", \"james\", \"Paul\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122780,
      "stdout": "17\n8\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Alex\", \"Jacob\", \"Mark\", \"Max\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122780,
      "stdout": "16\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510117,
      "stdout": "../../../../tmp/tmp_25v730z.ts(12,781): error TS1002: Unterminated string literal.\n../../../../tmp/tmp_25v730z.ts(13,1): error TS1005: ',' expected.\n../../../../tmp/tmp_25v730z.ts(13,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toLowerCase()) {\n            sample_names.splice(i, 1);\n            i--;\n        }\n        else {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"abcd\", \"efgh\", \"ijkl\", \"mnop\", \"qrst\", \"uvwx\", \"yz\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "0\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Abc\", \"Xyz\", \"Nmo\"]));\nconsole.log(sample_nam([\"Abc\", \"Xyz\", \"nmo\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "9\n6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i][0] == sample_names[i][0].toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Abc\", \"Xyz\", \"Pqr\", \"lmn\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122780,
      "stdout": "9\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Alex\", \"Michael\", \"Hephaestus\", \"Neptune\", \"Hades\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122780,
      "stdout": "33\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) < 97) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Abc\", \"Xyz\", \"Pqr\", \"abc\", \"def\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "9\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n  let sum: number = 0;\n  for (let i: number = 0; i < sample_names.length; i++) {\n    if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n      sum += sample_names[i].length;\n    }\n  }\n  return sum;\n}\n\nconsole.log(sample_nam([\"Koushik\", \"koushik\", \"Koushik\", \"Koushik\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "21\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Bhavana\", \"bhavana\", \"Bhavani\", \"bhavani\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122781,
      "stdout": "14\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let count: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            count += sample_names[i].length;\n        }\n    }\n    return count;\n}\nconsole.log(sample_nam([\"adam\", \"John\", \"james\", \"jerry\", \"jim\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122782,
      "stdout": "4\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"John\", \"Doe\", \"Sam\"]));\nconsole.log(sample_nam([\"John\", \"Doe\", \"Sam\", \"john\"]));\nconsole.log(sample_nam([\"John\", \"Doe\", \"Sam\", \"john\", \"John\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122782,
      "stdout": "10\n10\n14\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Jhon\", \"Doe\", \"Sam\", \"Smith\", \"Alex\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122782,
      "stdout": "19\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Sachin\", \"Saurav\", \"Rahul\", \"Sunil\", \"Kapil\", \"Virat\", \"Rohit\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122783,
      "stdout": "37\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n  let sum: number = 0;\n  for (let i: number = 0; i < sample_names.length; i++) {\n    if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n      sum += sample_names[i].length;\n    }\n  }\n  return sum;\n}\n\nconsole.log(sample_nam([\"Koushik\", \"Soumya\", \"Souvik\", \"Sourav\", \"Soumik\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122783,
      "stdout": "31\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"John\", \"Doe\", \"jane\", \"doe\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122783,
      "stdout": "7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Abc\", \"Xyz\", \"Nmo\"]));\nconsole.log(sample_nam([\"Abc\", \"Xyz\", \"Nmo\", \"abc\", \"xyz\", \"nmo\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122783,
      "stdout": "9\n9\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) >= 97 && sample_names[i].charCodeAt(0) <= 122) {\n            sample_names.splice(i, 1);\n            i--;\n        }\n        else {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"James\", \"Jill\", \"Jane\", \"Jack\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122783,
      "stdout": "17\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) < 97) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Abc\", \"Xyz\", \"Pqr\", \"Mno\"]));\nconsole.log(sample_nam([\"Abc\", \"Xyz\", \"pqr\", \"Mno\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122783,
      "stdout": "12\n9\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Karan\", \"Mittal\", \"Aakash\", \"Harsh\"]));\nconsole.log(sample_nam([\"karan\", \"mittal\", \"aakash\", \"harsh\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122783,
      "stdout": "22\n0\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Aakash\", \"Ankit\", \"Ajay\", \"Amit\", \"Ajay\", \"Aakash\", \"Aakash\", \"Ajay\", \"Amit\", \"Ajay\", \"Aakash\", \"Aakash\", \"Ajay\", \"Amit\", \"Ajay\", \"Aakash\", \"Aakash\", \"Ajay\", \"Amit\", \"Ajay\", \"Aakash\", \"Aakash\", \"Ajay\", \"Amit\", \"Ajay\", \"Aakash\", \"Aakash\", \"Ajay\", \"Amit\", \"Ajay\", \"Aakash\", \"Aakash\", \"Ajay\", \"Amit\", \"Ajay\", \"Aakash\", \"Aakash\", \"Ajay\", \"Amit\", \"Ajay\", \"Aakash\", \"Aakash\", \"Ajay\", \"Amit\", \"Ajay\", \"Aakash\", \"Aakash\", \"Ajay\", \"Amit\", \"Ajay\", \"Aakash\", \"Aakash\", \"Ajay\", \"Amit\", \"Ajay\", \"Aakash\", \"Aakash\", \"Ajay\", \"Amit\", \"Ajay\", \"Aakash\", \"Aakash\", \"Ajay\", \"Amit\", \"Ajay\", \"Aakash\", \"Aakash\", \"Ajay\", \"Amit\", \"Ajay\", \"Aakash\", \"Aakash\", \"Ajay\", \"Amit\", \"Ajay\", \"Aakash\", \"Aakash\", \"Ajay\", \"Amit\", \"Ajay\", \"Aakash\", \"Aakash\", \"Ajay\", \"Amit\", \"Ajay\", \"Aakash\", \"Aakash\", \"Ajay\", \"Amit\", \"Ajay\", \"Aakash\", \"Aakash\", \"Ajay\", \"Amit\", \"\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122783,
      "stdout": "../../../../tmp/tmp352e7knd.ts(11,853): error TS1002: Unterminated string literal.\n../../../../tmp/tmp352e7knd.ts(12,1): error TS1005: ',' expected.\n../../../../tmp/tmp352e7knd.ts(12,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toLowerCase()) {\n            sample_names.splice(i, 1);\n            i--;\n        }\n    }\n    for (let i = 0; i < sample_names.length; i++) {\n        sum += sample_names[i].length;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Nikhil\", \"Akhil\", \"Vishal\", \"Rajesh\", \"Krishna\", \"Kiran\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122783,
      "stdout": "35\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Nam\", \"Nguyen\", \"Nam\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122783,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510117,
      "stdout": "../../../../tmp/tmp_25v730z.ts(12,781): error TS1002: Unterminated string literal.\n../../../../tmp/tmp_25v730z.ts(13,1): error TS1005: ',' expected.\n../../../../tmp/tmp_25v730z.ts(13,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"John\", \"Doe\", \"Sam\", \"Amanda\", \"Chris\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122783,
      "stdout": "21\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Abc\", \"Xyz\", \"Nop\", \"Mno\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122783,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122772,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Koushik\", \"Raj\", \"Koushik\", \"Raj\", \"Koushik\", \"Raj\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122783,
      "stdout": "30\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) < 97) {\n            sum = sum + sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\",\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122783,
      "stdout": "../../../../tmp/tmpk6kx7vg1.ts(13,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n  let sum: number = 0;\n  for (let i: number = 0; i < sample_names.length; i++) {\n    if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n      sum += sample_names[i].length;\n    }\n  }\n  return sum;\n}\n\nconsole.log(sample_nam([\"Koushik\", \"Soumya\", \"Souvik\", \"Soumya\", \"Soumya\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122783,
      "stdout": "31\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Harsh\", \"Beria\", \"harsh\", \"Sanjay\", \"Monika\", \"James\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122783,
      "stdout": "27\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Krishna\", \"Hare\", \"Murari\"]));\nconsole.log(sample_nam([\"Krishna\", \"Hare\", \"Murari\", \"Ram\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122784,
      "stdout": "17\n20\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"John\", \"Jacob\", \"Jingle\", \"Heimer\", \"Smith\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122783,
      "stdout": "26\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Harsh\", \"Beria\", \"harsh\", \"santosh\", \"Joseph\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122785,
      "stdout": "16\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122769,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Kiran\", \"Kumar\", \"kiran\", \"kumar\"]));\nconsole.log(sample_nam([\"Kiran\", \"Kumar\", \"kiran\", \"kumar\", \"Kiran\", \"Kumar\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122785,
      "stdout": "10\n20\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Krishna\", \"Hare\", \"Murari\", \"Madan\", \"Keshav\", \"Kanta\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122785,
      "stdout": "33\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toLowerCase()) {\n            sample_names.splice(i, 1);\n            i--;\n        }\n    }\n    for (let i: number = 0; i < sample_names.length; i++) {\n        sum += sample_names[i].length;\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Abhishek\", \"abhishek\", \"Abhi\", \"abhi\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122785,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Aakash\", \"Ajay\", \"Aman\", \"Amit\", \"Amitabh\", \"Ajay\", \"Aman\", \"Amit\", \"Amitabh\", \"Ajay\", \"Aman\", \"Amit\", \"Amitabh\", \"Ajay\", \"Aman\", \"Amit\", \"Amitabh\", \"Ajay\", \"Aman\", \"Amit\", \"Amitabh\", \"Ajay\", \"Aman\", \"Amit\", \"Amitabh\", \"Ajay\", \"Aman\", \"Amit\", \"Amitabh\", \"Ajay\", \"Aman\", \"Amit\", \"Amitabh\", \"Ajay\", \"Aman\", \"Amit\", \"Amitabh\", \"Ajay\", \"Aman\", \"Amit\", \"Amitabh\", \"Ajay\", \"Aman\", \"Amit\", \"Amitabh\", \"Ajay\", \"Aman\", \"Amit\", \"Amitabh\", \"Ajay\", \"Aman\", \"Amit\", \"Amitabh\", \"Ajay\", \"Aman\", \"Amit\", \"Amitabh\", \"Ajay\", \"Aman\", \"Amit\", \"Amitabh\", \"Ajay\", \"Aman\", \"Amit\", \"Amitabh\", \"Ajay\", \"Aman\", \"Amit\", \"Amitabh\", \"Ajay\", \"Aman\", \"Amit\", \"Amitabh\", \"Ajay\", \"Aman\", \"Amit\", \"Amitabh\", \"Ajay\", \"Aman\", \"Amit\", \"Amitabh\", \"Ajay\", \"Aman\", \"Amit\", \"Amitabh\", \"Ajay\", \"Aman\", \"Amit\", \"Amitabh\", \"Ajay\", \"Aman\", \"Amit\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122785,
      "stdout": "../../../../tmp/tmp5lqq7h7i.ts(11,826): error TS1002: Unterminated string literal.\n../../../../tmp/tmp5lqq7h7i.ts(12,1): error TS1005: ',' expected.\n../../../../tmp/tmp5lqq7h7i.ts(12,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nlet sample_names: string[] = [\"Sai\", \"Kiran\", \"Kumar\", \"Reddy\"];\nconsole.log(sample_nam(sample_names));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122785,
      "stdout": "18\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Sachin\", \"Saurav\", \"Rahul\", \"Kapil\", \"Virat\", \"Rohit\", \"Dhoni\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122785,
      "stdout": "37\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Raj\", \"Raju\", \"Rajesh\", \"rajesh\", \"raju\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122785,
      "stdout": "13\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122769,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toLowerCase()) {\n            sample_names.splice(i, 1);\n            i--;\n        }\n    }\n    for (let i: number = 0; i < sample_names.length; i++) {\n        sum += sample_names[i].length;\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Abhishek\", \"abhishek\", \"Abhi\", \"abhi\", \"Abh\", \"abh\", \"Ab\", \"ab\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122785,
      "stdout": "17\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Aa\", \"Bb\", \"Cc\", \"Dd\", \"Ee\", \"Ff\", \"Gg\", \"Hh\", \"Ii\", \"Jj\", \"Kk\", \"Ll\", \"Mm\", \"Nn\", \"Oo\", \"Pp\", \"Qq\", \"Rr\", \"Ss\", \"Tt\", \"Uu\", \"Vv\", \"Ww\", \"Xx\", \"Yy\", \"Zz\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122785,
      "stdout": "52\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam(['Abhishek', 'Raj', 'Kumar', 'abhishek', 'raj']));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122785,
      "stdout": "16\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) < 97) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Abhishek\", \"Kumar\", \"Singh\"]));\nconsole.log(sample_nam([\"Abhishek\", \"kumar\", \"Singh\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122785,
      "stdout": "18\n13\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Sachin\", \"Saurav\", \"Rahul\", \"sachin\", \"saurav\", \"rahul\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122785,
      "stdout": "17\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i][0] == sample_names[i][0].toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Raj\", \"Rajesh\", \"rajesh\", \"raj\", \"Raju\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122785,
      "stdout": "13\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"John\", \"Smith\", \"Alex\", \"john\", \"alex\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122785,
      "stdout": "13\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"A\", \"B\", \"C\", \"a\", \"b\", \"c\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122785,
      "stdout": "3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_268_find_star_num",
  "language": "ts",
  "prompt": "//Write a function to find the n'th star number.\nfunction find_star_num(n: number): number {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_268_find_star_num.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_star_num;\n  assert.deepEqual(candidate(3),37);\n  assert.deepEqual(candidate(4),73);\n  assert.deepEqual(candidate(5),121);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let starNum = 1;\n    for (let i = 1; i < n; i++) {\n        starNum = (starNum * 10) + 1;\n    }\n    return starNum;\n}\n\nconsole.log(find_star_num(5));\nconsole.log(find_star_num(3));\nconsole.log(find_star_num(9));\n",
    "    let starNum = 1;\n    for (let i = 1; i < n; i++) {\n        starNum = (starNum * 10) + 1;\n    }\n    return starNum;\n}\n\nconsole.log(find_star_num(5));\nconsole.log(find_star_num(3));\nconsole.log(find_star_num(9));\n",
    "    if (n === 1) {\n        return 1;\n    }\n    return find_star_num(n - 1) + 2 * n - 1;\n}\n\nconsole.log(find_star_num(1));\nconsole.log(find_star_num(2));\nconsole.log(find_star_num(3));\nconsole.log(find_star_num(4));\nconsole.log(find_star_num(5));\nconsole.log(find_star_num(6));\nconsole.log(find_star_num(7));\nconsole.log(find_star_num(8));\nconsole.log(find_star_num(9));\nconsole.log(find_star_num(10));",
    "    let starNumber = 1;\n    for (let i = 1; i < n; i++) {\n        if (i % 2 !== 0) {\n            starNumber = starNumber * 9;\n        } else {\n            starNumber = starNumber * 2;\n        }\n    }\n    return starNumber;\n}\n\nconsole.log(find_star_num(1));\nconsole.log(find_star_num(2));\nconsole.log(find_star_num(3));\nconsole.log(find_star_num(4));\nconsole.log(find_star_num(5));\nconsole.log(find_star_num(6));\nconsole.log(find_star_num(7));\nconsole.log(find_star_num(8));\nconsole.log(find_star_num(9));\nconsole.log(find_star_num(10));\n",
    "    let starNum = 1;\n    for (let i = 1; i < n; i++) {\n        starNum = (starNum * 10) + 1;\n    }\n    return starNum;\n}\n\nconsole.log(find_star_num(1));\nconsole.log(find_star_num(2));\nconsole.log(find_star_num(3));\nconsole.log(find_star_num(4));\nconsole.log(find_star_num(5));\nconsole.log(find_star_num(6));\nconsole.log(find_star_num(7));\nconsole.log(find_star_num(8));\nconsole.log(find_star_num(9));\nconsole.log(find_star_num(10));\n",
    "    let starNum = 1;\n    for (let i = 1; i < n; i++) {\n        starNum = (starNum * 10) + 1;\n    }\n    return starNum;\n}\n\nconsole.log(find_star_num(5));\nconsole.log(find_star_num(3));\nconsole.log(find_star_num(9));\n",
    "    let i = 1;\n    let star_num = 0;\n    while (i <= n) {\n        star_num = star_num + i;\n        i = i + 1;\n    }\n    return star_num;\n}\n",
    "  let star_num = 1;\n  for (let i = 1; i < n; i++) {\n    star_num = (star_num * 10) + 1;\n  }\n  return star_num;\n}\n\nconsole.log(find_star_num(1));\nconsole.log(find_star_num(2));\nconsole.log(find_star_num(3));\nconsole.log(find_star_num(4));\nconsole.log(find_star_num(5));",
    "    let starNumber = 1;\n    for (let i = 1; i < n; i++) {\n        if (i % 2 !== 0) {\n            starNumber = starNumber * 9;\n        } else {\n            starNumber = starNumber * 2;\n        }\n    }\n    return starNumber;\n}\n\nconsole.log(find_star_num(1));\nconsole.log(find_star_num(2));\nconsole.log(find_star_num(3));\nconsole.log(find_star_num(4));\nconsole.log(find_star_num(5));\nconsole.log(find_star_num(6));\nconsole.log(find_star_num(7));\nconsole.log(find_star_num(8));\nconsole.log(find_star_num(9));\nconsole.log(find_star_num(10));",
    "  let starNum = 1;\n  for (let i = 1; i < n; i++) {\n    starNum = starNum * 10 + 1;\n  }\n  return starNum;\n}\n\nconsole.log(find_star_num(1));\nconsole.log(find_star_num(2));\nconsole.log(find_star_num(3));\nconsole.log(find_star_num(4));\nconsole.log(find_star_num(5));\n",
    "    let starNum = 1;\n    let i = 1;\n    while (i < n) {\n        starNum = starNum + 4 * i;\n        i++;\n    }\n    return starNum;\n}\n\nconsole.log(find_star_num(1));\nconsole.log(find_star_num(2));\nconsole.log(find_star_num(3));\nconsole.log(find_star_num(8));\n",
    "    let star_num: number = 1;\n    for (let i = 1; i <= n; i++) {\n        star_num = star_num * 2 + 1;\n    }\n    return star_num;\n}\n",
    "    let star_num = 1;\n    for (let i = 1; i <= n; i++) {\n        star_num = star_num * i;\n    }\n    return star_num;\n}\n\nconsole.log(find_star_num(5));\nconsole.log(find_star_num(10));\n",
    "    let starNum: number = 1;\n    for (let i: number = 1; i <= n; i++) {\n        starNum = starNum * 2 + 1;\n    }\n    return starNum;\n}\n",
    "    let star_num = 0;\n    for (let i = 1; i <= n; i++) {\n        star_num = (star_num * 10) + i;\n    }\n    return star_num;\n}\n\nconsole.log(find_star_num(5));\nconsole.log(find_star_num(10));\nconsole.log(find_star_num(15));\n",
    "  let i: number = 1;\n  let count: number = 0;\n  while (count < n) {\n    if (is_star_num(i)) {\n      count++;\n    }\n    i++;\n  }\n  return i - 1;\n}\n",
    "  let starNumber = 1;\n  while (n > 1) {\n    starNumber = starNumber + 6 * (n - 1);\n    n--;\n  }\n  return starNumber;\n}\n\nconsole.log(find_star_num(1));\nconsole.log(find_star_num(2));\nconsole.log(find_star_num(3));\nconsole.log(find_star_num(4));\nconsole.log(find_star_num(5));\n",
    "    let star_num = 1;\n    for (let i = 1; i < n; i++) {\n        star_num = (star_num * 10) + 1;\n    }\n    return star_num;\n}\n\nconsole.log(find_star_num(5));\nconsole.log(find_star_num(3));\nconsole.log(find_star_num(9));\n",
    "  let starNum = 1;\n  let i = 1;\n  while (i < n) {\n    starNum = starNum + 4 * i;\n    i++;\n  }\n  return starNum;\n}\n\nconsole.log(find_star_num(1));\nconsole.log(find_star_num(2));\nconsole.log(find_star_num(3));\nconsole.log(find_star_num(4));\nconsole.log(find_star_num(5));",
    "    let result = 0;\n    for (let i = 1; i <= n; i++) {\n        result = (result + i) * 2 + 1;\n    }\n    return result;\n}\n"
  ]
}
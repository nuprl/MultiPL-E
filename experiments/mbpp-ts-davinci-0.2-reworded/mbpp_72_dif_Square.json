{
  "name": "mbpp_72_dif_Square",
  "language": "ts",
  "prompt": "//Write a tsthon function to check whether the given number can be represented as the difference of two squares or not.\nfunction dif_Square(n: number): boolean {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_72_dif_Square.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = dif_Square;\n  assert.deepEqual(candidate(5),true);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(15),true);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    var flag: boolean = false;\n    for (var i = 1; i <= n; i++) {\n        for (var j = 1; j <= n; j++) {\n            if (i * i - j * j == n) {\n                flag = true;\n            }\n        }\n    }\n    return flag;\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(3));\n",
    "    var sqrt_n = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(26));\n",
    "    var flag = false;\n    for (var i = 0; i < n; i++) {\n        for (var j = 0; j < n; j++) {\n            if ((i * i) - (j * j) == n) {\n                flag = true;\n                break;\n            }\n        }\n    }\n    return flag;\n}\nvar result = dif_Square(25);\nconsole.log(result);\n",
    "    for (let i = 0; i <= n; i++) {\n        for (let j = 0; j <= n; j++) {\n            if (i * i - j * j == n) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n",
    "    let sqrt_n = Math.sqrt(n);\n    return ((sqrt_n - Math.floor(sqrt_n)) == 0);\n}\n",
    "    var sqrt_n: number = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\n\nconsole.log(dif_Square(5));\nconsole.log(dif_Square(10));\n",
    "    var flag = false;\n    for (var i = 1; i <= n; i++) {\n        for (var j = 1; j <= n; j++) {\n            if (i * i - j * j == n) {\n                flag = true;\n                break;\n            }\n        }\n    }\n    return flag;\n}\nvar n = 25;\nvar res = dif_Square(n);\nif (res) {\n    console.log(n + \" can be represented as the difference of two squares\");\n}\nelse {\n    console.log(n + \" cannot be represented as the difference of two squares\");\n}\n",
    "    var i: number;\n    for (i = 0; i < n; i++) {\n        if (i * i == n) {\n            return true;\n        }\n    }\n    return false;\n}\n",
    "    var flag: boolean = false;\n    for (var i = 1; i <= n; i++) {\n        for (var j = 1; j <= n; j++) {\n            if (i * i - j * j == n) {\n                flag = true;\n            }\n        }\n    }\n    return flag;\n}\nvar res = dif_Square(5);\nconsole.log(res);\n",
    "    for (let i = 0; i < n; i++) {\n        for (let j = 0; j < n; j++) {\n            if ((i * i) - (j * j) == n) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n",
    "    var i: number = 0;\n    var j: number = 0;\n    for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n            if ((i * i) - (j * j) == n) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nconsole.log(dif_Square(5));\nconsole.log(dif_Square(6));\n",
    "    let sqrt_n: number = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(26));\n",
    "    var sqrt_n: number = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(26));\n",
    "    for (let i = 0; i < n; i++) {\n        for (let j = 0; j < n; j++) {\n            if (i * i - j * j == n) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n",
    "    let i: number = 1;\n    let j: number = 1;\n    let sum: number = 0;\n    let diff: number = 0;\n    while (i <= n) {\n        j = 1;\n        while (j <= n) {\n            sum = i * i + j * j;\n            diff = i * i - j * j;\n            if (sum == n || diff == n) {\n                return true;\n            }\n            j++;\n        }\n        i++;\n    }\n    return false;\n}\n",
    "    var sqrt_n: number = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(26));\n",
    "    var sqrt_n = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\n",
    "    let flag: boolean = false;\n    for (let i: number = 0; i < n; i++) {\n        for (let j: number = 0; j < n; j++) {\n            if ((i * i) - (j * j) == n) {\n                flag = true;\n                break;\n            }\n        }\n    }\n    return flag;\n}\n",
    "    var i: number;\n    for (i = 1; i <= n; i++) {\n        if (i * i > n) {\n            break;\n        }\n    }\n    i--;\n    if (i * i == n) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(24));\n",
    "    var sqrt_n = Math.sqrt(n);\n    return ((sqrt_n - Math.floor(sqrt_n)) == 0);\n}\n",
    "    var sqrt_n: number = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\n",
    "    var flag: boolean = false;\n    for (var i = 1; i <= n; i++) {\n        for (var j = 1; j <= n; j++) {\n            if (i * i - j * j == n) {\n                flag = true;\n            }\n        }\n    }\n    return flag;\n}\nvar result = dif_Square(25);\nconsole.log(result);\n",
    "    var flag: boolean = false;\n    for (var i = 0; i <= n; i++) {\n        for (var j = 0; j <= n; j++) {\n            if ((i * i) - (j * j) == n) {\n                flag = true;\n                break;\n            }\n        }\n    }\n    return flag;\n}\nvar n: number = 25;\nvar res: boolean = dif_Square(n);\nif (res) {\n    console.log(n + \" can be represented as the difference of two squares\");\n}\nelse {\n    console.log(n + \" cannot be represented as the difference of two squares\");\n}\n",
    "    var sqrt_n: number = Math.sqrt(n);\n    return (sqrt_n * sqrt_n == n);\n}\n",
    "    var sqrt_n: number = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\n\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(26));\n",
    "    var sqrt_n: number = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(26));\n",
    "    var sqrt_n = Math.sqrt(n);\n    return ((sqrt_n * sqrt_n) == n);\n}\n",
    "    var i: number;\n    var j: number;\n    var flag: boolean = false;\n    for (i = 0; i <= n; i++) {\n        for (j = 0; j <= n; j++) {\n            if (i * i - j * j == n) {\n                flag = true;\n                break;\n            }\n        }\n    }\n    return flag;\n}\n\nvar n: number = 25;\nvar result: boolean = dif_Square(n);\nif (result == true) {\n    console.log(n + \" can be represented as the difference of two squares\");\n}\nelse {\n    console.log(n + \" cannot be represented as the difference of two squares\");\n}\n",
    "    var sqrt_n: number = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(26));\n",
    "    var sqrt_n = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(26));\n",
    "    for (let i = 0; i < n; i++) {\n        for (let j = 0; j < n; j++) {\n            if (i * i - j * j == n) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n",
    "    var flag = false;\n    for (var i = 0; i <= n; i++) {\n        for (var j = i; j <= n; j++) {\n            if ((i * i) - (j * j) == n) {\n                flag = true;\n            }\n        }\n    }\n    return flag;\n}\nvar res = dif_Square(25);\nconsole.log(res);\n",
    "    var sqrt_n = Math.sqrt(n);\n    return ((sqrt_n - Math.floor(sqrt_n)) == 0);\n}\nvar x = 36;\nvar y = 55;\nconsole.log(\"Is \" + x + \" a difference of squares: \" + dif_Square(x));\nconsole.log(\"Is \" + y + \" a difference of squares: \" + dif_Square(y));",
    "    var i: number = 1;\n    var j: number = 1;\n    var sum: number = 0;\n    var diff: number = 0;\n    for (i = 1; i <= n / 2; i++) {\n        for (j = 1; j <= n / 2; j++) {\n            sum = i * i + j * j;\n            diff = i * i - j * j;\n            if (sum == n || diff == n) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n",
    "    var sqrt_n: number = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(26));\n",
    "    if (n < 0) {\n        n = -n;\n    }\n    for (let i = 0; i <= n; i++) {\n        for (let j = 0; j <= n; j++) {\n            if ((i * i - j * j) == n) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n",
    "    var i: number = 1;\n    var j: number = 1;\n    var sum: number = 0;\n    var diff: number = 0;\n    for (i = 1; i <= n; i++) {\n        for (j = 1; j <= n; j++) {\n            sum = i * i + j * j;\n            diff = i * i - j * j;\n            if (sum == n || diff == n) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n",
    "    var i: number = 0;\n    var j: number = 0;\n    var flag: boolean = false;\n    for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n            if (i * i - j * j == n) {\n                flag = true;\n                break;\n            }\n        }\n    }\n    return flag;\n}\n",
    "    var i: number = 1;\n    var j: number = 1;\n    var sum: number = 0;\n    var diff: number = 0;\n    while (i <= n) {\n        j = 1;\n        while (j <= n) {\n            sum = i * i + j * j;\n            diff = i * i - j * j;\n            if (sum == n || diff == n) {\n                return true;\n            }\n            j++;\n        }\n        i++;\n    }\n    return false;\n}\nvar res = dif_Square(25);\nconsole.log(res);\n",
    "    for (let i = 0; i < n; i++) {\n        for (let j = 0; j < n; j++) {\n            if ((i * i) - (j * j) == n) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(26));\n",
    "    var i: number = 1;\n    var j: number = 1;\n    while (i <= n) {\n        j = 1;\n        while (j <= n) {\n            if (i * i - j * j == n) {\n                return true;\n            }\n            j++;\n        }\n        i++;\n    }\n    return false;\n}\nvar res = dif_Square(25);\nconsole.log(res);\n",
    "    var flag = false;\n    for (var i = 0; i < n; i++) {\n        for (var j = 0; j < n; j++) {\n            if (i * i - j * j == n) {\n                flag = true;\n                break;\n            }\n        }\n    }\n    return flag;\n}\n",
    "    var i: number = 0;\n    var j: number = 0;\n    for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n            if ((i * i) - (j * j) == n) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(26));\n",
    "    var sqrt_n = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\n",
    "    var i: number = 1;\n    var j: number = 1;\n    var sum: number = 0;\n    var diff: number = 0;\n    var flag: boolean = false;\n    while (i <= n) {\n        j = 1;\n        while (j <= n) {\n            sum = i * i + j * j;\n            diff = i * i - j * j;\n            if (sum == n || diff == n) {\n                flag = true;\n                break;\n            }\n            j++;\n        }\n        i++;\n    }\n    return flag;\n}\n",
    "    var sqrt_n: number = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(26));\n",
    "    var sqrt_n = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\n",
    "    var sqrt_n: number = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(26));\n",
    "    var flag = false;\n    for (var i = 1; i <= n; i++) {\n        for (var j = 1; j <= n; j++) {\n            if (i * i - j * j == n) {\n                flag = true;\n                break;\n            }\n        }\n    }\n    return flag;\n}\nvar res = dif_Square(25);\nconsole.log(res);\n",
    "    var i: number = 0;\n    var j: number = 0;\n    var flag: boolean = false;\n    for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n            if (i * i - j * j == n) {\n                flag = true;\n                break;\n            }\n        }\n    }\n    return flag;\n}\nvar res = dif_Square(25);\nconsole.log(res);\n",
    "    let i: number = 1;\n    let j: number = 1;\n    let sum: number = 0;\n    let diff: number = 0;\n    while (i <= n) {\n        j = 1;\n        while (j <= n) {\n            sum = i * i + j * j;\n            diff = i * i - j * j;\n            if (sum == n || diff == n) {\n                return true;\n            }\n            j++;\n        }\n        i++;\n    }\n    return false;\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(3));\nconsole.log(dif_Square(10));\nconsole.log(dif_Square(26));\n",
    "    var sqrt_n: number = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(26));\n",
    "    var sqrt_n: number = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(26));\n",
    "    var i: number = 0;\n    var j: number = 0;\n    var k: number = 0;\n    var flag: boolean = false;\n    for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n            k = i * i - j * j;\n            if (k == n) {\n                flag = true;\n                break;\n            }\n        }\n    }\n    return flag;\n}\n",
    "    var i: number = 0;\n    var j: number = 0;\n    var flag: boolean = false;\n    for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n            if ((i * i) - (j * j) == n) {\n                flag = true;\n            }\n        }\n    }\n    return flag;\n}\n",
    "    var i: number = 1;\n    var j: number = 1;\n    while (i <= n) {\n        j = 1;\n        while (j <= n) {\n            if (i * i - j * j == n) {\n                return true;\n            }\n            j++;\n        }\n        i++;\n    }\n    return false;\n}\n",
    "    var sqrt_n = Math.sqrt(n);\n    return ((sqrt_n - Math.floor(sqrt_n)) == 0);\n}\n",
    "    for (let i = 0; i <= n; i++) {\n        for (let j = 0; j <= n; j++) {\n            if (i * i - j * j == n) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nconsole.log(dif_Square(5));\nconsole.log(dif_Square(6));\n",
    "    var i: number = 1;\n    var j: number = 1;\n    var k: number = 0;\n    var l: number = 0;\n    var m: number = 0;\n    var flag: boolean = false;\n    while (i <= n / 2) {\n        j = 1;\n        while (j <= n / 2) {\n            k = i * i;\n            l = j * j;\n            m = k - l;\n            if (m == n) {\n                flag = true;\n                break;\n            }\n            j++;\n        }\n        i++;\n    }\n    return flag;\n}\nvar result = dif_Square(25);\nconsole.log(result);\n",
    "    let sqrt_n: number = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(26));\n",
    "    var i: number = 0;\n    var j: number = 0;\n    var flag: boolean = false;\n    for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n            if ((i * i) - (j * j) == n) {\n                flag = true;\n                break;\n            }\n        }\n    }\n    return flag;\n}\nvar result = dif_Square(25);\nconsole.log(result);\n",
    "    var sqrt_n = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(26));\n",
    "    var i: number;\n    for (i = 0; i < n; i++) {\n        if (Math.pow(i, 2) - Math.pow(n - i, 2) == n) {\n            return true;\n        }\n    }\n    return false;\n}\nconsole.log(dif_Square(10));\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(3));\n",
    "    if (n % 2 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(dif_Square(8));\n",
    "    var flag = false;\n    for (var i = 0; i < n; i++) {\n        for (var j = 0; j < n; j++) {\n            if ((i * i) - (j * j) == n) {\n                flag = true;\n            }\n        }\n    }\n    return flag;\n}\nconsole.log(dif_Square(25));\n",
    "    var i: number = 1;\n    while (i * i < n) {\n        if ((n - i * i) % Math.sqrt(n - i * i) == 0)\n            return true;\n        i++;\n    }\n    return false;\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(26));\n",
    "    var sqrt_n: number = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\n\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(26));\n",
    "    let sqrt_n = Math.sqrt(n);\n    return ((sqrt_n - Math.floor(sqrt_n)) == 0);\n}\n",
    "    var i: number = 1;\n    var j: number = 1;\n    var sum: number = 0;\n    var diff: number = 0;\n    for (i = 1; i <= n; i++) {\n        for (j = 1; j <= n; j++) {\n            sum = i * i + j * j;\n            diff = i * i - j * j;\n            if (sum == n || diff == n) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(3));\nconsole.log(dif_Square(10));\nconsole.log(dif_Square(26));\n",
    "    for (let i = 0; i < n; i++) {\n        for (let j = 0; j < n; j++) {\n            if ((i * i) - (j * j) == n) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n",
    "    var sqrt_n = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\n",
    "    for (let i = 0; i < n; i++) {\n        for (let j = 0; j < n; j++) {\n            if ((i * i) - (j * j) == n) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(3));\n",
    "    var sqrt_n = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\n",
    "    var sqrt_n = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(26));\n",
    "    var i: number;\n    var j: number;\n    var flag: boolean = false;\n    for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n            if (i * i - j * j == n) {\n                flag = true;\n                break;\n            }\n        }\n    }\n    return flag;\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(24));\n",
    "    let sqrt_n: number = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(26));\n",
    "    var i: number;\n    var j: number;\n    for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n            if (i * i - j * j == n) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(3));\n",
    "    var i: number = 1;\n    while (i * i < n) {\n        var j: number = 1;\n        while (j * j < n) {\n            if (i * i - j * j == n) {\n                return true;\n            }\n            j++;\n        }\n        i++;\n    }\n    return false;\n}\nconsole.log(dif_Square(5));\nconsole.log(dif_Square(6));\n",
    "    for (let i = 0; i <= n; i++) {\n        for (let j = 0; j <= n; j++) {\n            if (i * i - j * j == n) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(3));\n",
    "    var sqrt_n: number = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(26));\n",
    "    var sqrt_n = Math.sqrt(n);\n    return ((sqrt_n - Math.floor(sqrt_n)) == 0);\n}\n",
    "    for (let i = 0; i <= n; i++) {\n        for (let j = 0; j <= n; j++) {\n            if ((i * i) - (j * j) == n) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n",
    "    var flag = false;\n    for (var i = 0; i <= n; i++) {\n        for (var j = 0; j <= n; j++) {\n            if (i * i - j * j == n) {\n                flag = true;\n            }\n        }\n    }\n    return flag;\n}\nvar n = 5;\nvar res = dif_Square(n);\nif (res == true) {\n    console.log(\"The number can be represented as the difference of two squares\");\n}\nelse {\n    console.log(\"The number can not be represented as the difference of two squares\");\n}\n",
    "    var i: number = 1;\n    var j: number = 1;\n    var flag: boolean = false;\n    while (i < n) {\n        j = 1;\n        while (j < n) {\n            if ((i * i - j * j) == n) {\n                flag = true;\n                break;\n            }\n            j++;\n        }\n        i++;\n    }\n    if (flag) {\n        console.log(\"The number can be represented as the difference of two squares\");\n    }\n    else {\n        console.log(\"The number cannot be represented as the difference of two squares\");\n    }\n    return flag;\n}\ndif_Square(25);\n",
    "    var flag = false;\n    for (var i = 0; i <= n; i++) {\n        for (var j = 0; j <= n; j++) {\n            if ((i * i) - (j * j) == n) {\n                flag = true;\n            }\n        }\n    }\n    return flag;\n}\nvar res = dif_Square(5);\nif (res) {\n    console.log(\"Difference of two squares\");\n}\nelse {\n    console.log(\"Not a difference of two squares\");\n}\n",
    "    var sqrt_n: number = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\n\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(26));\n",
    "    var sqrt_n = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(26));\n",
    "    var sqrt_n = Math.sqrt(n);\n    return ((sqrt_n * sqrt_n) == n);\n}\n",
    "    var i: number = 0;\n    var j: number = 0;\n    var flag: boolean = false;\n    for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n            if ((i * i) - (j * j) == n) {\n                flag = true;\n                break;\n            }\n        }\n    }\n    return flag;\n}\n",
    "    var i: number = 1;\n    var j: number = 1;\n    var sum: number = 0;\n    var diff: number = 0;\n    var flag: boolean = false;\n    while (i <= n) {\n        j = 1;\n        while (j <= n) {\n            sum = i * i + j * j;\n            diff = i * i - j * j;\n            if (sum == n || diff == n) {\n                flag = true;\n                break;\n            }\n            j++;\n        }\n        i++;\n    }\n    return flag;\n}\nvar result = dif_Square(25);\nconsole.log(result);\n",
    "    for (let i = 0; i <= n; i++) {\n        for (let j = 0; j <= n; j++) {\n            if (i * i - j * j == n) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n",
    "    var sqrt_n: number = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\n\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(26));\n",
    "    var square = Math.sqrt(n);\n    if (square % 1 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(26));\n",
    "    var sqrt_n = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\n",
    "    var sqrt_n: number = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\n\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(26));\n",
    "    var i: number = 0;\n    var j: number = 0;\n    var k: number = 0;\n    var l: number = 0;\n    var flag: boolean = false;\n    for (i = 1; i <= n; i++) {\n        for (j = 1; j <= n; j++) {\n            k = i * i;\n            l = j * j;\n            if (k - l == n) {\n                flag = true;\n                break;\n            }\n        }\n    }\n    return flag;\n}\n",
    "    var flag = false;\n    for (var i = 1; i <= n; i++) {\n        for (var j = 1; j <= n; j++) {\n            if (i * i - j * j == n) {\n                flag = true;\n            }\n        }\n    }\n    return flag;\n}\nconsole.log(dif_Square(10));\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(3));\n",
    "    var sqrt_n: number = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(26));\n",
    "    var sqrt_n = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\n",
    "    var flag: boolean = false;\n    var sqrt: number = Math.sqrt(n);\n    if (sqrt * sqrt == n) {\n        flag = true;\n    }\n    return flag;\n}\n",
    "    var flag: boolean = false;\n    for (var i = 0; i <= n; i++) {\n        for (var j = 0; j <= n; j++) {\n            if ((i * i) - (j * j) == n) {\n                flag = true;\n                break;\n            }\n        }\n    }\n    return flag;\n}\nvar result = dif_Square(25);\nconsole.log(result);\n",
    "    var sqrt_n = Math.sqrt(n);\n    return ((sqrt_n - Math.floor(sqrt_n)) == 0);\n}\n",
    "    var sqrt_n: number = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\n",
    "    var flag = false;\n    for (var i = 0; i < n; i++) {\n        for (var j = 0; j < n; j++) {\n            if ((i * i) - (j * j) == n) {\n                flag = true;\n                break;\n            }\n        }\n    }\n    return flag;\n}\nvar result = dif_Square(25);\nconsole.log(result);\n",
    "    var i: number = 0;\n    var j: number = 0;\n    var flag: boolean = false;\n    for (i = 1; i < n; i++) {\n        for (j = 1; j < n; j++) {\n            if (i * i - j * j == n) {\n                flag = true;\n                break;\n            }\n        }\n    }\n    if (flag == true) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nvar result = dif_Square(25);\nconsole.log(result);\n",
    "    var i: number = 1;\n    var j: number = 1;\n    var sum: number = 0;\n    var diff: number = 0;\n    while (i <= n) {\n        j = 1;\n        while (j <= n) {\n            sum = i * i + j * j;\n            diff = i * i - j * j;\n            if (sum == n || diff == n) {\n                return true;\n            }\n            j++;\n        }\n        i++;\n    }\n    return false;\n}\nvar res = dif_Square(25);\nconsole.log(res);\n",
    "    var flag: boolean = false;\n    for (var i = 0; i < n; i++) {\n        for (var j = 0; j < n; j++) {\n            if (i * i - j * j == n) {\n                flag = true;\n            }\n        }\n    }\n    return flag;\n}\n",
    "    var i: number = 1;\n    var j: number = 1;\n    var sum: number = 0;\n    var diff: number = 0;\n    while (i <= n) {\n        j = 1;\n        while (j <= n) {\n            sum = i * i + j * j;\n            diff = i * i - j * j;\n            if (sum == n || diff == n) {\n                return true;\n            }\n            j++;\n        }\n        i++;\n    }\n    return false;\n}\nvar res = dif_Square(25);\nconsole.log(res);\n",
    "    var sqrt_n = Math.sqrt(n);\n    return ((sqrt_n * sqrt_n) == n);\n}\n",
    "    var i: number;\n    var j: number;\n    var k: number;\n    var flag: boolean = false;\n    for (i = 1; i <= n; i++) {\n        for (j = 1; j <= n; j++) {\n            k = i * i - j * j;\n            if (k == n) {\n                flag = true;\n            }\n        }\n    }\n    return flag;\n}\nvar res = dif_Square(25);\nconsole.log(res);\n",
    "    var sqrt_n: number = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\n",
    "    var flag: boolean = false;\n    for (var i = 1; i <= n; i++) {\n        for (var j = 1; j <= n; j++) {\n            if (i * i - j * j == n) {\n                flag = true;\n                break;\n            }\n        }\n    }\n    return flag;\n}\n",
    "    var sqrt_n = Math.sqrt(n);\n    return ((sqrt_n * sqrt_n) == n);\n}\n",
    "    var flag: boolean = false;\n    for (var i = 1; i <= n; i++) {\n        for (var j = 1; j <= n; j++) {\n            if (i * i - j * j == n) {\n                flag = true;\n            }\n        }\n    }\n    return flag;\n}\n",
    "    var sqrt_n = Math.sqrt(n);\n    return ((sqrt_n * sqrt_n) == n);\n}\nconsole.log(dif_Square(16));\nconsole.log(dif_Square(25));\n",
    "    var flag = false;\n    var sqrt = Math.sqrt(n);\n    for (var i = 0; i < sqrt; i++) {\n        for (var j = 0; j < sqrt; j++) {\n            if ((i * i) - (j * j) == n) {\n                flag = true;\n            }\n        }\n    }\n    return flag;\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(24));\n",
    "    var i: number = 1;\n    var j: number = 1;\n    while (i < n) {\n        j = 1;\n        while (j < n) {\n            if (i * i - j * j == n) {\n                return true;\n            }\n            j++;\n        }\n        i++;\n    }\n    return false;\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(26));\n\n",
    "    var sqrt_n: number = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(26));\n",
    "    var i: number = 1;\n    var j: number = 1;\n    var sum: number = 0;\n    var diff: number = 0;\n    while (i <= n) {\n        j = 1;\n        while (j <= n) {\n            sum = i * i + j * j;\n            diff = i * i - j * j;\n            if (sum == n || diff == n) {\n                return true;\n            }\n            j++;\n        }\n        i++;\n    }\n    return false;\n}\nvar res = dif_Square(25);\nconsole.log(res);\n",
    "    var sqrt_n = Math.sqrt(n);\n    return ((sqrt_n * sqrt_n) == n);\n}\n",
    "    for (let i = 0; i < n; i++) {\n        for (let j = 0; j < n; j++) {\n            if ((i * i) - (j * j) == n) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n",
    "    for (let i = 0; i <= n; i++) {\n        for (let j = 0; j <= n; j++) {\n            if ((i * i) - (j * j) == n) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n",
    "    var square = Math.sqrt(n);\n    if (square % 1 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(26));\n",
    "    let sqrt_n: number = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(24));\n",
    "    var sqrt_n = Math.sqrt(n);\n    return ((sqrt_n * sqrt_n) == n);\n}\n",
    "    var sqrt_n: number = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(26));\n",
    "    var i: number = 1;\n    var j: number = 1;\n    var sum: number = 0;\n    var diff: number = 0;\n    for (i = 1; i <= n; i++) {\n        for (j = 1; j <= n; j++) {\n            sum = i * i + j * j;\n            diff = i * i - j * j;\n            if (sum == n || diff == n) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nvar res = dif_Square(25);\nconsole.log(res);\n",
    "    var x = Math.sqrt(n);\n    if (x * x == n) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nvar n = 9;\nvar res = dif_Square(n);\nif (res == true) {\n    console.log(n + \" can be represented as the difference of two squares\");\n}\nelse {\n    console.log(n + \" cannot be represented as the difference of two squares\");\n}\n",
    "    var sqrt_n: number = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(26));\n",
    "    var i: number = 0;\n    var j: number = 0;\n    var k: number = 0;\n    var flag: boolean = false;\n    for (i = 1; i <= n; i++) {\n        for (j = 1; j <= n; j++) {\n            k = i * i - j * j;\n            if (k == n) {\n                flag = true;\n                break;\n            }\n        }\n    }\n    return flag;\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(3));\n",
    "    var i: number = 1;\n    var j: number = 1;\n    var sum: number = 0;\n    var diff: number = 0;\n    while (i <= n) {\n        j = 1;\n        while (j <= n) {\n            sum = i * i + j * j;\n            diff = i * i - j * j;\n            if (sum == n || diff == n) {\n                return true;\n            }\n            j++;\n        }\n        i++;\n    }\n    return false;\n}\nvar res = dif_Square(25);\nconsole.log(res);\n",
    "    var sqrt_n: number = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\n\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(26));\n",
    "    var flag: boolean = false;\n    for (var i = 1; i <= n; i++) {\n        for (var j = 1; j <= n; j++) {\n            if ((i * i - j * j) == n) {\n                flag = true;\n                break;\n            }\n        }\n    }\n    return flag;\n}\nvar n = 25;\nvar res = dif_Square(n);\nif (res) {\n    console.log(n + \" can be represented as the difference of two squares\");\n}\nelse {\n    console.log(n + \" cannot be represented as the difference of two squares\");\n}\n",
    "    var flag = false;\n    for (var i = 0; i < n; i++) {\n        for (var j = 0; j < n; j++) {\n            if ((i * i) - (j * j) == n) {\n                flag = true;\n                break;\n            }\n        }\n    }\n    return flag;\n}\nconsole.log(dif_Square(25));\n",
    "    for (let i = 0; i <= n; i++) {\n        for (let j = 0; j <= n; j++) {\n            if (i * i - j * j == n) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n",
    "    var i: number;\n    var j: number;\n    var k: number;\n    var flag: boolean = false;\n    for (i = 1; i <= n; i++) {\n        for (j = 1; j <= n; j++) {\n            k = i * i - j * j;\n            if (k == n) {\n                flag = true;\n                break;\n            }\n        }\n    }\n    return flag;\n}\nvar res = dif_Square(4);\nconsole.log(res);\n",
    "    var sqrt_n = Math.sqrt(n);\n    return ((sqrt_n * sqrt_n) == n);\n}\n",
    "    var sqrt_n: number = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(26));\n",
    "    var a = 0;\n    var b = 0;\n    for (var i = 0; i < n; i++) {\n        for (var j = 0; j < n; j++) {\n            if (i * i - j * j == n) {\n                a = i;\n                b = j;\n                return true;\n            }\n        }\n    }\n    return false;\n}\nvar n = 25;\nvar res = dif_Square(n);\nif (res) {\n    console.log(\"The number can be represented as the difference of two squares\");\n}\nelse {\n    console.log(\"The number cannot be represented as the difference of two squares\");\n}\n",
    "    var i: number = 1;\n    var j: number = 1;\n    var sum: number = 0;\n    var diff: number = 0;\n    while (i <= n) {\n        j = 1;\n        while (j <= n) {\n            sum = i * i + j * j;\n            diff = i * i - j * j;\n            if (sum == n || diff == n) {\n                return true;\n            }\n            j++;\n        }\n        i++;\n    }\n    return false;\n}\nvar res = dif_Square(25);\nconsole.log(res);\n",
    "    var i: number = 1;\n    var j: number = 1;\n    var sum: number = 0;\n    var diff: number = 0;\n    while (i <= n / 2) {\n        sum = i * i + j * j;\n        diff = i * i - j * j;\n        if (sum == n || diff == n) {\n            return true;\n        }\n        else if (sum < n) {\n            i++;\n        }\n        else {\n            j++;\n        }\n    }\n    return false;\n}\n",
    "    var flag = false;\n    for (var i = 0; i < n; i++) {\n        for (var j = 0; j < n; j++) {\n            if ((i * i) - (j * j) == n) {\n                flag = true;\n                break;\n            }\n        }\n    }\n    return flag;\n}\nvar res = dif_Square(25);\nconsole.log(res);\n",
    "    var flag = false;\n    for (var i = 1; i <= n; i++) {\n        for (var j = 1; j <= n; j++) {\n            if (i * i - j * j == n) {\n                flag = true;\n                break;\n            }\n        }\n    }\n    return flag;\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(24));\n",
    "    var sqrt_n = Math.sqrt(n);\n    return ((sqrt_n * sqrt_n) == n);\n}\n",
    "    var sqrt_n: number = Math.sqrt(n);\n    var sqrt_n1: number = Math.sqrt(n - 1);\n    var sqrt_n2: number = Math.sqrt(n + 1);\n    if (sqrt_n * sqrt_n == n) {\n        return true;\n    }\n    else if (sqrt_n1 * sqrt_n1 == n - 1) {\n        return true;\n    }\n    else if (sqrt_n2 * sqrt_n2 == n + 1) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nvar res = dif_Square(25);\nconsole.log(res);\n",
    "    var i: number = 1;\n    var j: number = 1;\n    var sum: number = 0;\n    var diff: number = 0;\n    while (i <= n) {\n        j = 1;\n        while (j <= n) {\n            sum = i * i + j * j;\n            diff = i * i - j * j;\n            if (sum == n || diff == n) {\n                return true;\n            }\n            j++;\n        }\n        i++;\n    }\n    return false;\n}\n",
    "    for (let i = 0; i < n; i++) {\n        for (let j = 0; j < n; j++) {\n            if ((i * i) - (j * j) == n) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nvar res = dif_Square(25);\nconsole.log(res);\n",
    "    var i: number = 0;\n    var j: number = 0;\n    for (i = 1; i <= n; i++) {\n        for (j = 1; j <= n; j++) {\n            if (i * i - j * j == n) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n",
    "    var i: number = 1;\n    var j: number = 1;\n    var temp: number = 0;\n    while (i < n) {\n        j = 1;\n        while (j < n) {\n            temp = i * i - j * j;\n            if (temp == n) {\n                return true;\n            }\n            j++;\n        }\n        i++;\n    }\n    return false;\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(3));\n",
    "    var a = Math.sqrt(n);\n    if (a % 1 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nvar n = +prompt(\"Enter the number\");\nvar res = dif_Square(n);\nif (res == true) {\n    console.log(n + \" can be represented as the difference of two squares\");\n}\nelse {\n    console.log(n + \" cannot be represented as the difference of two squares\");\n}\n",
    "    var flag: boolean = false;\n    for (var i = 1; i <= n; i++) {\n        for (var j = 1; j <= n; j++) {\n            if ((i * i) - (j * j) == n) {\n                flag = true;\n                break;\n            }\n        }\n    }\n    return flag;\n}\n",
    "    var sqrt_n = Math.sqrt(n);\n    return ((sqrt_n * sqrt_n) == n);\n}\n",
    "    for (let i = 1; i <= n; i++) {\n        for (let j = 1; j <= n; j++) {\n            if ((i * i) - (j * j) == n) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(3));\nconsole.log(dif_Square(10));\nconsole.log(dif_Square(26));\n",
    "    var flag = false;\n    for (var i = 1; i <= n; i++) {\n        for (var j = 1; j <= n; j++) {\n            if (i * i - j * j == n) {\n                flag = true;\n                break;\n            }\n        }\n    }\n    return flag;\n}\nvar res = dif_Square(25);\nconsole.log(res);\n",
    "    var sqrt_n: number = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\n",
    "    var flag: boolean = false;\n    for (var i = 0; i <= n; i++) {\n        for (var j = 0; j <= n; j++) {\n            if ((i * i) - (j * j) == n) {\n                flag = true;\n                break;\n            }\n        }\n    }\n    return flag;\n}\nvar result = dif_Square(25);\nif (result == true) {\n    console.log(\"Number can be represented as the difference of two squares\");\n}\nelse {\n    console.log(\"Number can't be represented as the difference of two squares\");\n}\n",
    "    var a = 0, b = 0;\n    for (var i = 1; i <= n; i++) {\n        for (var j = 1; j <= n; j++) {\n            if (i * i - j * j == n) {\n                a = i;\n                b = j;\n                return true;\n            }\n        }\n    }\n    return false;\n}\nvar n = 25;\nvar res = dif_Square(n);\nif (res) {\n    console.log(n + \" can be represented as the difference of two squares\");\n}\nelse {\n    console.log(n + \" can not be represented as the difference of two squares\");\n}",
    "    var i: number = 1;\n    var j: number = 1;\n    var k: number = 0;\n    var l: number = 0;\n    var m: number = 0;\n    var flag: boolean = false;\n    for (i = 1; i <= n; i++) {\n        for (j = 1; j <= n; j++) {\n            k = i * i;\n            l = j * j;\n            m = k - l;\n            if (m == n) {\n                flag = true;\n                break;\n            }\n        }\n    }\n    return flag;\n}\nvar result = dif_Square(25);\nconsole.log(result);\n",
    "    let flag: boolean = false;\n    for (let i = 1; i <= n; i++) {\n        for (let j = 1; j <= n; j++) {\n            if (i * i - j * j == n) {\n                flag = true;\n            }\n        }\n    }\n    return flag;\n}\n",
    "    var sqrt_n: number = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\n",
    "    var i: number = 1;\n    while (i <= n) {\n        if (i * i == n) {\n            return true;\n        }\n        i++;\n    }\n    return false;\n}\n",
    "    var sqrt_n: number = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(26));\n",
    "    var i: number;\n    var j: number;\n    var flag: boolean = false;\n    for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n            if (i * i - j * j == n) {\n                flag = true;\n                break;\n            }\n        }\n    }\n    return flag;\n}\nvar res = dif_Square(25);\nif (res == true) {\n    console.log(\"The number can be represented as the difference of two squares\");\n}\nelse {\n    console.log(\"The number cannot be represented as the difference of two squares\");\n}\n",
    "    var sqrt_n = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(26));\n\n",
    "    var flag: boolean = false;\n    for (var i = 0; i <= n; i++) {\n        for (var j = 0; j <= n; j++) {\n            if ((i * i) - (j * j) == n) {\n                flag = true;\n                break;\n            }\n        }\n    }\n    return flag;\n}\nvar n = readline.question(\"Enter the number : \");\nconsole.log(dif_Square(n));\n",
    "    for (let i = 0; i <= n; i++) {\n        for (let j = 0; j <= n; j++) {\n            if (i * i - j * j == n) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nconsole.log(dif_Square(4));\nconsole.log(dif_Square(5));\nconsole.log(dif_Square(6));\nconsole.log(dif_Square(7));\nconsole.log(dif_Square(8));\nconsole.log(dif_Square(9));\nconsole.log(dif_Square(10));\nconsole.log(dif_Square(11));\nconsole.log(dif_Square(12));\nconsole.log(dif_Square(13));\nconsole.log(dif_Square(14));\nconsole.log(dif_Square(15));\nconsole.log(dif_Square(16));\nconsole.log(dif_Square(17));\nconsole.log(dif_Square(18));\nconsole.log(dif_Square(19));\nconsole.log(dif_Square(20));\nconsole.log(dif_Square(21));\nconsole.log(dif_Square(22));\nconsole.log(dif_Square(23));\nconsole.log(dif_Square(24));\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(26));\nconsole.log(dif_Square(27));\nconsole.log(dif_Square(28));\nconsole.log(dif_Square(29));\nconsole.log(dif_Square(30));\nconsole.log(dif_Square(31));\nconsole.log(dif_Square(32));\nconsole.log(dif_Square(33));\nconsole.log(dif_Square(34));\nconsole.log(dif_Square(35));\nconsole.log(dif_Square(36));\nconsole.log(dif_Square(37));\nconsole.log(dif_Square(38));\nconsole.log(dif_Square(39));\nconsole.log(dif_Square(40));",
    "    var sqrt_n: number = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\n",
    "    var sqrt_n = Math.sqrt(n);\n    return ((sqrt_n * sqrt_n) == n);\n}\n",
    "    var sqrt_n = Math.sqrt(n);\n    return ((sqrt_n * sqrt_n) == n);\n}\n",
    "    let i: number = 1;\n    let j: number = 1;\n    let sum: number = 0;\n    let diff: number = 0;\n    while (i <= n) {\n        j = 1;\n        while (j <= n) {\n            sum = i * i + j * j;\n            diff = i * i - j * j;\n            if (sum == n || diff == n) {\n                return true;\n            }\n            j++;\n        }\n        i++;\n    }\n    return false;\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(3));\nconsole.log(dif_Square(10));\nconsole.log(dif_Square(26));\n",
    "    if (n % 2 == 0) {\n        return true;\n    }\n    return false;\n}\n\nconsole.log(dif_Square(10));\nconsole.log(dif_Square(11));\n",
    "    for (let i = 0; i <= n; i++) {\n        for (let j = 0; j <= n; j++) {\n            if ((i * i) - (j * j) == n) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(3));\n",
    "    var sqrt_n = Math.sqrt(n);\n    return ((sqrt_n * sqrt_n) == n);\n}\n",
    "    var sqrt_n: number = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\n",
    "    var sqrt_n: number = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(26));\n",
    "    for (let i = 0; i < n; i++) {\n        for (let j = 0; j < n; j++) {\n            if ((i * i) - (j * j) == n) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(26));\n",
    "    var sqrt_n: number = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(26));\n",
    "    var i: number;\n    var j: number;\n    var flag: boolean = false;\n    for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n            if ((i * i) - (j * j) == n) {\n                flag = true;\n                break;\n            }\n        }\n    }\n    return flag;\n}\n",
    "    for (var i = 0; i <= n; i++) {\n        for (var j = 0; j <= n; j++) {\n            if ((i * i) - (j * j) == n) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(26));\n",
    "    var sqrt_n = Math.sqrt(n);\n    return ((sqrt_n * sqrt_n) == n);\n}\n",
    "    var flag: boolean = false;\n    for (var i = 0; i < n; i++) {\n        for (var j = 0; j < n; j++) {\n            if (i * i - j * j == n) {\n                flag = true;\n                break;\n            }\n        }\n    }\n    return flag;\n}\n",
    "    if (n % 4 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(dif_Square(36));\n",
    "    var sqrt_n = Math.sqrt(n);\n    return ((sqrt_n * sqrt_n) == n);\n}\n",
    "    var flag = false;\n    for (var i = 1; i <= n; i++) {\n        for (var j = 1; j <= n; j++) {\n            if ((i * i) - (j * j) == n) {\n                flag = true;\n                break;\n            }\n        }\n    }\n    return flag;\n}\nvar res = dif_Square(25);\nif (res == true) {\n    console.log(\"The number can be represented as the difference of two squares\");\n}\nelse {\n    console.log(\"The number cannot be represented as the difference of two squares\");\n}\n",
    "    var flag: boolean = false;\n    for (var i = 1; i < n; i++) {\n        for (var j = 1; j < n; j++) {\n            if ((i * i - j * j) == n) {\n                flag = true;\n                break;\n            }\n        }\n    }\n    return flag;\n}\nvar res = dif_Square(25);\nif (res) {\n    console.log(\"Difference of two squares\");\n}\nelse {\n    console.log(\"Not a difference of two squares\");\n}\n",
    "    var flag: boolean = false;\n    for (var i = 0; i < n; i++) {\n        for (var j = 0; j < n; j++) {\n            if (i * i - j * j == n) {\n                flag = true;\n                break;\n            }\n        }\n    }\n    return flag;\n}\nvar result = dif_Square(25);\nconsole.log(result);\n",
    "    let sqrt_n: number = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(26));\n",
    "    var sqrt_n: number = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\n\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(26));\n",
    "    let sqrt_n: number = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\n",
    "    var i: number = 1;\n    var j: number = 1;\n    var sum: number = 0;\n    var flag: boolean = false;\n    while (i <= n) {\n        j = 1;\n        while (j <= n) {\n            sum = i * i - j * j;\n            if (sum == n) {\n                flag = true;\n                break;\n            }\n            j++;\n        }\n        i++;\n    }\n    return flag;\n}\nvar result = dif_Square(25);\nif (result == true) {\n    console.log(\"The given number can be represented as the difference of two squares\");\n}\nelse {\n    console.log(\"The given number can not be represented as the difference of two squares\");\n}\n",
    "    var sqrt_n: number = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\n",
    "    var i: number = 1;\n    var j: number = 1;\n    var k: number = 0;\n    var l: number = 0;\n    while (i <= n) {\n        k = i * i;\n        j = 1;\n        while (j <= n) {\n            l = j * j;\n            if (k - l == n) {\n                return true;\n            }\n            j++;\n        }\n        i++;\n    }\n    return false;\n}\nvar n: number = 25;\nvar value: boolean = dif_Square(n);\nif (value == true) {\n    console.log(\"The given number can be represented as the difference of two squares\");\n}\nelse {\n    console.log(\"The given number cannot be represented as the difference of two squares\");\n}\n",
    "    var sqrt_n: number = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(26));\n",
    "    var sqrt_n = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(26));\n",
    "    var i: number;\n    var j: number;\n    var flag: boolean = false;\n    for (i = 0; i <= n; i++) {\n        for (j = 0; j <= n; j++) {\n            if ((i * i) - (j * j) == n) {\n                flag = true;\n                break;\n            }\n        }\n    }\n    return flag;\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(26));\n",
    "    var i: number = 1;\n    var j: number = 1;\n    var sum: number = 0;\n    var diff: number = 0;\n    for (i = 1; i <= n; i++) {\n        for (j = 1; j <= n; j++) {\n            sum = i * i + j * j;\n            diff = i * i - j * j;\n            if (sum == n || diff == n) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nvar result = dif_Square(25);\nif (result) {\n    console.log(\"The given number can be represented as the difference of two squares\");\n}\nelse {\n    console.log(\"The given number can not be represented as the difference of two squares\");\n}\n",
    "    var sqrt_n: number = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(26));\n",
    "    for (let i = 0; i < n; i++) {\n        for (let j = 0; j < n; j++) {\n            if (i * i - j * j == n) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n",
    "    var i: number;\n    var j: number;\n    var flag: boolean = false;\n    for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n            if ((i * i) - (j * j) == n) {\n                flag = true;\n                break;\n            }\n        }\n    }\n    return flag;\n}\nvar n: number = 25;\nvar result: boolean = dif_Square(n);\nif (result == true) {\n    console.log(\"The given number can be represented as the difference of two squares\");\n}\nelse {\n    console.log(\"The given number can not be represented as the difference of two squares\");\n}\n",
    "    var sqrt_n = Math.sqrt(n);\n    return Number.isInteger(sqrt_n);\n}\nconsole.log(dif_Square(25));\nconsole.log(dif_Square(26));\n"
  ]
}
{
  "name": "mbpp_418_Find_Max",
  "language": "ts",
  "prompt": "//Write a tsthon function to find the element of an array having maximum length.\nfunction Find_Max(lst: any): any {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_418_Find_Max.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Find_Max;\n  assert.deepEqual(candidate([[\"A\"], [\"A\", \"B\"], [\"A\", \"B\", \"C\"]]),[\"A\", \"B\", \"C\"]);\n  assert.deepEqual(candidate([[1], [1, 2], [1, 2, 3]]),[1, 2, 3]);\n  assert.deepEqual(candidate([[1, 1], [1, 2, 3], [1, 5, 6, 1]]),[1, 5, 6, 1]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    var max = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nvar lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    var max = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    var max = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max(['abc', 'abcd', 'abcde', 'abcdef']));\n",
    "    let max: any = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\"]));\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\"]));\n",
    "    var max: any = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nvar lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\"]));\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    var max = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"a\", \"ab\", \"abc\", \"abcd\", \"abcde\"]));\n",
    "    var max = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    var max: number = lst[0].length;\n    var item: any = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            item = lst[i];\n        }\n    }\n    return item;\n}\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(\"The element of an array having maximum length is: \" + Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    var max: any = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (max.length < lst[i].length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\"]));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    let max = lst[0];\n    for (let i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\"]));\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\"]));\n",
    "    var max = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n\nvar lst = [\"abc\", \"defgh\", \"ijklmn\", \"opqrstuvwxyz\"];\nconsole.log(Find_Max(lst));\n",
    "    var max: any = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abcd\", \"abc\", \"ab\", \"a\"]));\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abcd\", \"abc\", \"ab\", \"abcd\"]));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\"]));\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"a\", \"aa\", \"aaa\", \"aaaa\"]));\n",
    "    let max: any = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\"]));\n",
    "    let max = lst[0];\n    for (let i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nlet lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\", \"abcdefg\"];\nconsole.log(Find_Max(lst));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\"]));\n",
    "    var max = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\"]));\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    let max_len = 0;\n    let max_ele = \"\";\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max_len) {\n            max_len = lst[i].length;\n            max_ele = lst[i];\n        }\n    }\n    return max_ele;\n}\nconsole.log(Find_Max([\"abcd\", \"abc\", \"ab\", \"a\"]));\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max: any = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n\nvar lst = ['a', 'bb', 'ccc', 'dddd', 'eeeee'];\nconsole.log(Find_Max(lst));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nvar lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\"]));\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (max.length < lst[i].length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abcd\", \"abc\", \"ab\", \"a\"]));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nvar lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nvar lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\", \"abcdefg\"];\nconsole.log(Find_Max(lst));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    let max: any = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nvar lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    let max: any = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (max.length < lst[i].length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(\"Max length element of array is: \" + Find_Max([\"abcd\", \"ab\", \"abc\", \"abcd\", \"abcde\"]));\n",
    "    let max: any = lst[0];\n    for (let i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nlet lst: any = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    let max: any = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"a\", \"ab\", \"abc\", \"abcd\"]));\n",
    "    let max: any = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max: number = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    let max: number = lst[0].length;\n    let max_ele: any = lst[0];\n    for (let i = 1; i < lst.length; i++) {\n        if (max < lst[i].length) {\n            max = lst[i].length;\n            max_ele = lst[i];\n        }\n    }\n    return max_ele;\n}\n\nlet lst: any = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nvar lst = [\"abc\", \"abcd\", \"abcde\"];\nconsole.log(Find_Max(lst));\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    var max: any = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n\nvar lst: any = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\"]));\n",
    "    var max: any;\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n        }\n    }\n    return max;\n}\n",
    "    var max = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}",
    "    var max = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    let max = lst[0];\n    for (let i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    let max: any = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nlet lst: any = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    let max: any = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max: any = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    let max = lst[0];\n    for (let i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nvar lst = [\"abcd\", \"abc\", \"ab\", \"a\"];\nconsole.log(Find_Max(lst));\n",
    "    let max: any = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"a\", \"ab\", \"abc\", \"abcd\", \"abcde\"]));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"ab\", \"abcd\", \"abcde\"]));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"a\", \"ab\", \"abc\", \"abcd\"]));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nvar lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nvar lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    var max: number = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nlet lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    var max = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"a\", \"ab\", \"abc\", \"abcd\"]));\n",
    "    let max: number = 0;\n    let max_element: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    var max = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nvar lst = [\"abcd\", \"abc\", \"ab\", \"a\"];\nconsole.log(Find_Max(lst));\n",
    "    var max = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abcd\", \"abc\", \"ab\"]));\n",
    "    var max = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (max.length < lst[i].length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    let max: any = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nlet lst: any = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    let max: any = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    let max = lst[0];\n    for (let i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    var max = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nvar lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    var max = lst[0];\n    lst.forEach(function (element) {\n        if (element.length > max.length) {\n            max = element;\n        }\n    });\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max: any = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max: any = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    var max = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abcd\", \"abc\", \"ab\", \"a\"]));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (max.length < lst[i].length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    var max = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\"]));\n",
    "    let max = lst[0];\n    for (let i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n\nvar lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\", \"abcdefg\"];\nconsole.log(Find_Max(lst));\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\"]));\n",
    "    let max: any = lst[0];\n    for (let i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max: number = lst[0].length;\n    var max_item: any = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_item = lst[i];\n        }\n    }\n    return max_item;\n}\nvar lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(\"The element of an array having maximum length is: \" + Find_Max(lst));\n",
    "    var max: any = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n\nvar lst: any = ['hello', 'world', 'welcome', 'to', 'typescript'];\nconsole.log(`The element of an array having maximum length is ${Find_Max(lst)}`);\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    let max: any = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abcd\", \"abc\", \"ab\", \"a\"]));\n",
    "    let max: any = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"a\", \"ab\", \"abc\", \"abcd\"]));\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    var max: any = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (max.length < lst[i].length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nvar lst = [\"abcd\", \"ab\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\"]));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (max.length < lst[i].length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (max.length < lst[i].length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"a\", \"ab\", \"abc\", \"abcd\", \"abcde\"]));\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(\"Maximum length element is: \" + Find_Max([\"abc\", \"abcd\", \"abcde\"]));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"Ganesh\", \"Krishna\", \"Suresh\", \"Ramesh\"]));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nvar lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    var max: any = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nvar lst = [\"apple\", \"mango\", \"banana\", \"orange\"];\nconsole.log(Find_Max(lst));\n",
    "    var max: any = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (max.length < lst[i].length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"a\", \"ab\", \"abc\", \"abcd\"]));\n",
    "    let max: any = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nvar lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n\nvar lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    var max: any = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(\"Max element is \" + Find_Max([\"abcd\", \"abc\", \"ab\", \"a\"]));\n",
    "    let max = lst[0];\n    for (let i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"a\", \"ab\", \"abc\", \"abcd\", \"abcde\"]));\n",
    "    let max: number = lst[0].length;\n    let element: any = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            element = lst[i];\n        }\n    }\n    return element;\n}\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (max.length < lst[i].length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nvar lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    let max = lst[0];\n    for (let i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    var max = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max(['a', 'ab', 'abc', 'abcd']));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\"]));\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\"]));\n",
    "    let max: any = lst[0];\n    for (let i: number = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\"]));\n",
    "    let max: any = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (max.length < lst[i].length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    var max = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"sai\", \"sai kiran\", \"sai kiran kumar\", \"sai kiran kumar goud\"]));\n",
    "    var max = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n\nlet lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    var max = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    let max = lst[0];\n    for (let i = 1; i < lst.length; i++) {\n        if (max.length < lst[i].length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    let max: any = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    var max = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"aaaa\", \"bbbbb\", \"cccccc\"]));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (max.length < lst[i].length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"a\", \"ab\", \"abc\", \"abcd\", \"abcde\"]));\n",
    "    var max = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\"]));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (max.length < lst[i].length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abcd\", \"abc\", \"ab\", \"a\"]));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (max.length < lst[i].length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\"]));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max: any = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (max.length < lst[i].length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nvar lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    var max: any = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nvar lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"a\", \"aa\", \"aaa\", \"aaaa\"]));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\"]));\n",
    "    var max = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n\nvar lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    var max: any = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    var max = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n\nvar lst = [\"apple\", \"banana\", \"mango\", \"orange\", \"grapes\"];\nconsole.log(Find_Max(lst));\n",
    "    var max = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abcd\", \"abc\", \"ab\", \"a\"]));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (max.length < lst[i].length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    let max = lst[0];\n    for (let i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    var max = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nvar lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\"]));\n",
    "    var max: number = lst[0].length;\n    var max_element: any = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\nvar lst: any = [\"abc\", \"abcd\", \"abcde\", \"abcdef\", \"abcdefg\"];\nconsole.log(Find_Max(lst));\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\"]));\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"hello\", \"world\", \"welcome\"]));\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\"]));\n",
    "    var max = 0;\n    var max_element = 0;\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\n"
  ]
}
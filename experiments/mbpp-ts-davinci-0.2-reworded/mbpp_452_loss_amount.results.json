{
  "name": "mbpp_452_loss_amount",
  "language": "ts",
  "prompt": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_452_loss_amount.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(\"Loss amount is: \" + loss_amount(100, 50));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "Loss amount is: 50\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpaf9rfyi1.js:14:12)\n    at Object.<anonymous> (/tmp/tmpaf9rfyi1.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n  if (actual_cost > sale_amount) {\n    return actual_cost - sale_amount;\n  } else {\n    return 0;\n  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpfl0mso8m.js:13:12)\n    at Object.<anonymous> (/tmp/tmpfl0mso8m.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(100, 50));\nconsole.log(loss_amount(50, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "50\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp_16brjdg.js:15:12)\n    at Object.<anonymous> (/tmp/tmp_16brjdg.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(100, 50));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "50\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpf0ckn_ef.js:14:12)\n    at Object.<anonymous> (/tmp/tmpf0ckn_ef.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(100, 200));\nconsole.log(loss_amount(200, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "0\n100\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmptes9pyiw.js:15:12)\n    at Object.<anonymous> (/tmp/tmptes9pyiw.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    let loss: number = actual_cost - sale_amount;\n    if (loss > 0) {\n        return loss;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(100, 50));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "50\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp6hcoq3w8.js:15:12)\n    at Object.<anonymous> (/tmp/tmp6hcoq3w8.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    let loss: number = actual_cost - sale_amount;\n    if (loss > 0) {\n        return loss;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(1000, 500));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1666122637,
      "stdout": "500\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpe35dahny.js:15:12)\n    at Object.<anonymous> (/tmp/tmpe35dahny.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(\"Loss amount is \" + loss_amount(1000, 800));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1666122636,
      "stdout": "Loss amount is 200\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpbpdrzec7.js:14:12)\n    at Object.<anonymous> (/tmp/tmpbpdrzec7.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(100, 200));\nconsole.log(loss_amount(200, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "0\n100\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmptes9pyiw.js:15:12)\n    at Object.<anonymous> (/tmp/tmptes9pyiw.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(100, 50));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "50\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpf0ckn_ef.js:14:12)\n    at Object.<anonymous> (/tmp/tmpf0ckn_ef.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(100, 50));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "50\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpf0ckn_ef.js:14:12)\n    at Object.<anonymous> (/tmp/tmpf0ckn_ef.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(100, 50));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "50\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpf0ckn_ef.js:14:12)\n    at Object.<anonymous> (/tmp/tmpf0ckn_ef.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(100, 200));\nconsole.log(loss_amount(200, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "0\n100\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmptes9pyiw.js:15:12)\n    at Object.<anonymous> (/tmp/tmptes9pyiw.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n  let loss = actual_cost - sale_amount;\n  if (loss > 0) {\n    return loss;\n  } else {\n    return 0;\n  }\n}\nconsole.log(loss_amount(100, 50));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1666122636,
      "stdout": "50\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpxg80ynwf.js:15:12)\n    at Object.<anonymous> (/tmp/tmpxg80ynwf.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(100, 50));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "50\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpf0ckn_ef.js:14:12)\n    at Object.<anonymous> (/tmp/tmpf0ckn_ef.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(1000, 500));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1666122636,
      "stdout": "500\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpa_n714wj.js:14:12)\n    at Object.<anonymous> (/tmp/tmpa_n714wj.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    let loss: number = 0;\n    if (actual_cost > sale_amount) {\n        loss = actual_cost - sale_amount;\n    }\n    return loss;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1666122636,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp0tkxmplx.js:12:12)\n    at Object.<anonymous> (/tmp/tmp0tkxmplx.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    } else {\n        return 0;\n    }\n}\n\nconsole.log(loss_amount(100, 50));\nconsole.log(loss_amount(50, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1666122636,
      "stdout": "50\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpurf4k6gd.js:15:12)\n    at Object.<anonymous> (/tmp/tmpurf4k6gd.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    } else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1666122636,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpld7ptyqw.js:13:12)\n    at Object.<anonymous> (/tmp/tmpld7ptyqw.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(100, 50));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "50\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpf0ckn_ef.js:14:12)\n    at Object.<anonymous> (/tmp/tmpf0ckn_ef.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(100, 50));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "50\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpf0ckn_ef.js:14:12)\n    at Object.<anonymous> (/tmp/tmpf0ckn_ef.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(1000, 800));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1666122636,
      "stdout": "200\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpii1i5117.js:14:12)\n    at Object.<anonymous> (/tmp/tmpii1i5117.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    let loss = actual_cost - sale_amount;\n    if (loss > 0) {\n        return loss;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1666122637,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp4olq1qsr.js:14:12)\n    at Object.<anonymous> (/tmp/tmp4olq1qsr.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    let loss_amount: number = actual_cost - sale_amount;\n    if (loss_amount > 0) {\n        return loss_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(500, 200));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1666122637,
      "stdout": "300\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp8xujj0sq.js:15:12)\n    at Object.<anonymous> (/tmp/tmp8xujj0sq.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(100, 50));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "50\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpf0ckn_ef.js:14:12)\n    at Object.<anonymous> (/tmp/tmpf0ckn_ef.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(100, 50));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "50\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpf0ckn_ef.js:14:12)\n    at Object.<anonymous> (/tmp/tmpf0ckn_ef.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n  if (actual_cost > sale_amount) {\n    return actual_cost - sale_amount;\n  } else {\n    return 0;\n  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpfl0mso8m.js:13:12)\n    at Object.<anonymous> (/tmp/tmpfl0mso8m.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    let loss: number = 0;\n    if (actual_cost > sale_amount) {\n        loss = actual_cost - sale_amount;\n    }\n    return loss;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1666122636,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp0tkxmplx.js:12:12)\n    at Object.<anonymous> (/tmp/tmp0tkxmplx.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n  if (actual_cost > sale_amount) {\n    return actual_cost - sale_amount;\n  } else {\n    return 0;\n  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpfl0mso8m.js:13:12)\n    at Object.<anonymous> (/tmp/tmpfl0mso8m.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(100, 50));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "50\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpf0ckn_ef.js:14:12)\n    at Object.<anonymous> (/tmp/tmpf0ckn_ef.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    } else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1666122636,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpld7ptyqw.js:13:12)\n    at Object.<anonymous> (/tmp/tmpld7ptyqw.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(100, 50));\nconsole.log(loss_amount(50, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "50\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp_16brjdg.js:15:12)\n    at Object.<anonymous> (/tmp/tmp_16brjdg.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    let loss: number = actual_cost - sale_amount;\n    if (loss > 0) {\n        return loss;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1666122636,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpotqqeolg.js:14:12)\n    at Object.<anonymous> (/tmp/tmpotqqeolg.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    return 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1666122637,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp6cuoh5hs.js:11:12)\n    at Object.<anonymous> (/tmp/tmp6cuoh5hs.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\nconsole.log(loss_amount(100, 50));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1666122636,
      "stdout": "50\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpzv869ofk.js:14:12)\n    at Object.<anonymous> (/tmp/tmpzv869ofk.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    let loss: number = actual_cost - sale_amount;\n    if (loss > 0) {\n        return loss;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(100, 50));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "50\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp6hcoq3w8.js:15:12)\n    at Object.<anonymous> (/tmp/tmp6hcoq3w8.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(100, 50));\nconsole.log(loss_amount(50, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "50\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp_16brjdg.js:15:12)\n    at Object.<anonymous> (/tmp/tmp_16brjdg.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n  if (actual_cost > sale_amount) {\n    return actual_cost - sale_amount;\n  } else {\n    return 0;\n  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpfl0mso8m.js:13:12)\n    at Object.<anonymous> (/tmp/tmpfl0mso8m.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(200, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1666122637,
      "stdout": "100\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmppv5sj199.js:14:12)\n    at Object.<anonymous> (/tmp/tmppv5sj199.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(100, 50));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "50\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpf0ckn_ef.js:14:12)\n    at Object.<anonymous> (/tmp/tmpf0ckn_ef.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(1000, 800));\nconsole.log(loss_amount(1000, 1200));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1666122636,
      "stdout": "200\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpkaci8xzv.js:15:12)\n    at Object.<anonymous> (/tmp/tmpkaci8xzv.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    let loss_amount: number = actual_cost - sale_amount;\n    if (loss_amount > 0) {\n        return loss_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1666122637,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpaihjhh49.js:14:12)\n    at Object.<anonymous> (/tmp/tmpaihjhh49.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(100, 50));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "50\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpf0ckn_ef.js:14:12)\n    at Object.<anonymous> (/tmp/tmpf0ckn_ef.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(\"Loss amount is \" + loss_amount(100, 50));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1666122636,
      "stdout": "Loss amount is 50\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpryosz2xs.js:14:12)\n    at Object.<anonymous> (/tmp/tmpryosz2xs.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(100, 50));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "50\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpf0ckn_ef.js:14:12)\n    at Object.<anonymous> (/tmp/tmpf0ckn_ef.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(100, 50));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "50\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpf0ckn_ef.js:14:12)\n    at Object.<anonymous> (/tmp/tmpf0ckn_ef.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\nconsole.log(loss_amount(100, 50));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1666122636,
      "stdout": "50\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpzv869ofk.js:14:12)\n    at Object.<anonymous> (/tmp/tmpzv869ofk.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    return 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1666122637,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp6cuoh5hs.js:11:12)\n    at Object.<anonymous> (/tmp/tmp6cuoh5hs.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(100, 200));\nconsole.log(loss_amount(200, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "0\n100\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmptes9pyiw.js:15:12)\n    at Object.<anonymous> (/tmp/tmptes9pyiw.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(100, 50));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "50\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpf0ckn_ef.js:14:12)\n    at Object.<anonymous> (/tmp/tmpf0ckn_ef.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(100, 50));\nconsole.log(loss_amount(50, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "50\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp_16brjdg.js:15:12)\n    at Object.<anonymous> (/tmp/tmp_16brjdg.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\nconsole.log(loss_amount(100, 50));\nconsole.log(loss_amount(50, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1666122637,
      "stdout": "50\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpm3fmwm7c.js:15:12)\n    at Object.<anonymous> (/tmp/tmpm3fmwm7c.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(100, 50));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "50\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpf0ckn_ef.js:14:12)\n    at Object.<anonymous> (/tmp/tmpf0ckn_ef.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    return 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1666122637,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp6cuoh5hs.js:11:12)\n    at Object.<anonymous> (/tmp/tmp6cuoh5hs.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(100, 50));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "50\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpf0ckn_ef.js:14:12)\n    at Object.<anonymous> (/tmp/tmpf0ckn_ef.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    let loss: number = actual_cost - sale_amount;\n    if (loss > 0) {\n        return loss;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1666122636,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpotqqeolg.js:14:12)\n    at Object.<anonymous> (/tmp/tmpotqqeolg.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    let loss: number = 0;\n    if (actual_cost > sale_amount) {\n        loss = actual_cost - sale_amount;\n    }\n    return loss;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1666122636,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp0tkxmplx.js:12:12)\n    at Object.<anonymous> (/tmp/tmp0tkxmplx.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(100, 50));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "50\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpf0ckn_ef.js:14:12)\n    at Object.<anonymous> (/tmp/tmpf0ckn_ef.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(100, 50));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "50\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpf0ckn_ef.js:14:12)\n    at Object.<anonymous> (/tmp/tmpf0ckn_ef.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(1000, 500));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1666122636,
      "stdout": "500\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpa_n714wj.js:14:12)\n    at Object.<anonymous> (/tmp/tmpa_n714wj.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    var loss: number = actual_cost - sale_amount;\n    if (loss > 0) {\n        return loss;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(100, 50));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1666122636,
      "stdout": "50\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpq8yp_pz6.js:15:12)\n    at Object.<anonymous> (/tmp/tmpq8yp_pz6.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(\"Loss amount is: \" + loss_amount(1000, 800));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1666122637,
      "stdout": "Loss amount is: 200\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpmxqfbcpy.js:14:12)\n    at Object.<anonymous> (/tmp/tmpmxqfbcpy.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\nconsole.log(loss_amount(1000, 500));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1666122637,
      "stdout": "500\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp2crc4_ly.js:14:12)\n    at Object.<anonymous> (/tmp/tmp2crc4_ly.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(100, 50));\nconsole.log(loss_amount(50, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "50\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp_16brjdg.js:15:12)\n    at Object.<anonymous> (/tmp/tmp_16brjdg.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(100, 50));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "50\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpf0ckn_ef.js:14:12)\n    at Object.<anonymous> (/tmp/tmpf0ckn_ef.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(100, 50));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "50\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpf0ckn_ef.js:14:12)\n    at Object.<anonymous> (/tmp/tmpf0ckn_ef.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(100, 50));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "50\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpf0ckn_ef.js:14:12)\n    at Object.<anonymous> (/tmp/tmpf0ckn_ef.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(1000, 900));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1666122637,
      "stdout": "100\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpgapftskj.js:14:12)\n    at Object.<anonymous> (/tmp/tmpgapftskj.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(100, 50));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "50\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpf0ckn_ef.js:14:12)\n    at Object.<anonymous> (/tmp/tmpf0ckn_ef.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(100, 50));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "50\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpf0ckn_ef.js:14:12)\n    at Object.<anonymous> (/tmp/tmpf0ckn_ef.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(100, 50));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "50\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpf0ckn_ef.js:14:12)\n    at Object.<anonymous> (/tmp/tmpf0ckn_ef.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(1000, 500));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1666122636,
      "stdout": "500\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpa_n714wj.js:14:12)\n    at Object.<anonymous> (/tmp/tmpa_n714wj.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(100, 50));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "50\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpf0ckn_ef.js:14:12)\n    at Object.<anonymous> (/tmp/tmpf0ckn_ef.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(100, 50));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "50\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpf0ckn_ef.js:14:12)\n    at Object.<anonymous> (/tmp/tmpf0ckn_ef.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(100, 50));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "50\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpf0ckn_ef.js:14:12)\n    at Object.<anonymous> (/tmp/tmpf0ckn_ef.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(100, 50));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "50\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpf0ckn_ef.js:14:12)\n    at Object.<anonymous> (/tmp/tmpf0ckn_ef.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(100, 50));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "50\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpf0ckn_ef.js:14:12)\n    at Object.<anonymous> (/tmp/tmpf0ckn_ef.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(100, 50));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "50\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpf0ckn_ef.js:14:12)\n    at Object.<anonymous> (/tmp/tmpf0ckn_ef.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(100, 50));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "50\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpf0ckn_ef.js:14:12)\n    at Object.<anonymous> (/tmp/tmpf0ckn_ef.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(1000, 500));\nconsole.log(loss_amount(1000, 1500));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1666122637,
      "stdout": "500\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmptnp9b4js.js:15:12)\n    at Object.<anonymous> (/tmp/tmptnp9b4js.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(100, 50));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "50\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpf0ckn_ef.js:14:12)\n    at Object.<anonymous> (/tmp/tmpf0ckn_ef.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(100, 50));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "50\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpf0ckn_ef.js:14:12)\n    at Object.<anonymous> (/tmp/tmpf0ckn_ef.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\nconsole.log(loss_amount(100, 50));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1666122636,
      "stdout": "50\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpzv869ofk.js:14:12)\n    at Object.<anonymous> (/tmp/tmpzv869ofk.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(100, 50));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "50\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpf0ckn_ef.js:14:12)\n    at Object.<anonymous> (/tmp/tmpf0ckn_ef.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    var loss: number = actual_cost - sale_amount;\n    if (loss > 0) {\n        return loss;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1666122638,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp7lg6i5xy.js:14:12)\n    at Object.<anonymous> (/tmp/tmp7lg6i5xy.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(loss_amount(100, 50));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "50\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpf0ckn_ef.js:14:12)\n    at Object.<anonymous> (/tmp/tmpf0ckn_ef.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount(actual_cost: number, sale_amount: number): number {\n    if (actual_cost > sale_amount) {\n        return actual_cost - sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = loss_amount;\n  assert.deepEqual(candidate(1500, 1200),0);\n  assert.deepEqual(candidate(100, 200),100);\n  assert.deepEqual(candidate(2000, 5000),3000);\n}\n\ntest();",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n300\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp609ngjb6.js:13:12)\n    at Object.<anonymous> (/tmp/tmp609ngjb6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 300,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    }
  ]
}
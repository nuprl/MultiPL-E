{
  "name": "mbpp_404_minimum",
  "language": "ts",
  "prompt": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_404_minimum.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\nconsole.log(minimum(2, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\nconsole.log(minimum(2, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    return a < b ? a : b;\n}\n\nconsole.log(minimum(2, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    return a < b ? a : b;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\nconsole.log(minimum(0, 10));\nconsole.log(minimum(0, -10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "0\n-10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\nconsole.log(minimum(2, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    return a < b ? a : b;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\nconsole.log(minimum(3, 5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\nconsole.log(minimum(0, 10));\nconsole.log(minimum(0, -10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "0\n-10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\nconsole.log(minimum(2, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\nlet min = minimum(2, 3);\nconsole.log(min);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\nconsole.log(minimum(0, 10));\nconsole.log(minimum(0, -10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "0\n-10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\nconsole.log(minimum(1, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\nconsole.log(minimum(0, 10));\nconsole.log(minimum(0, -10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "0\n-10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\nconsole.log(minimum(0, 10));\nconsole.log(minimum(0, -10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "0\n-10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\nconsole.log(minimum(2, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\nconsole.log(minimum(0, 10));\nconsole.log(minimum(0, -10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "0\n-10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\nconsole.log(minimum(2, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n  if (a < b) {\n    return a;\n  } else {\n    return b;\n  }\n}\n\nconsole.log(minimum(0, 10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "0\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\nconsole.log(minimum(3, 5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\nconsole.log(minimum(0, 10));\nconsole.log(minimum(0, -10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "0\n-10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\nconsole.log(minimum(0, 10));\nconsole.log(minimum(0, -10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "0\n-10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    return a < b ? a : b;\n}\n\nconsole.log(minimum(2, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n  if (a < b) {\n    return a;\n  } else {\n    return b;\n  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\nconsole.log(minimum(2, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\nconsole.log(minimum(2, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\nconsole.log(minimum(2, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\nconsole.log(minimum(2, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    return a < b ? a : b;\n}\n\nconsole.log(minimum(2, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\nconsole.log(minimum(0, 10));\nconsole.log(minimum(0, -10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "0\n-10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\nconsole.log(minimum(2, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\nconsole.log(minimum(0, 10));\nconsole.log(minimum(0, -10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "0\n-10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n  if (a < b) {\n    return a;\n  } else {\n    return b;\n  }\n}\n\nconsole.log(minimum(0, 10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "0\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\nconsole.log(minimum(5, 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "5\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\nconsole.log(minimum(0, 10));\nconsole.log(minimum(0, -10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "0\n-10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\nconsole.log(minimum(0, 10));\nconsole.log(minimum(0, -10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "0\n-10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\nconsole.log(minimum(2, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\nconsole.log(minimum(2, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n  if (a < b) {\n    return a;\n  } else {\n    return b;\n  }\n}\n\nconsole.log(minimum(0, 10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "0\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\nconsole.log(minimum(2, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n  if (a < b) {\n    return a;\n  } else {\n    return b;\n  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\nconsole.log(minimum(0, 10));\nconsole.log(minimum(0, -10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "0\n-10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n  if (a < b) {\n    return a;\n  } else {\n    return b;\n  }\n}\n\nconsole.log(minimum(0, 10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "0\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\nconsole.log(minimum(2, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\nconsole.log(minimum(2, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\nconsole.log(minimum(2, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\nconsole.log(minimum(2, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    return a < b ? a : b;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\nconsole.log(minimum(0, 10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "0\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\nconsole.log(minimum(2, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\nconsole.log(minimum(0, 10));\nconsole.log(minimum(0, -10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "0\n-10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\nconsole.log(minimum(5, 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "5\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\nconsole.log(minimum(5, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\nconsole.log(minimum(2, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n  if (a < b) {\n    return a;\n  } else {\n    return b;\n  }\n}\n\nconsole.log(minimum(0, 10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "0\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\nconsole.log(minimum(0, 10));\nconsole.log(minimum(0, -10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "0\n-10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n  if (a < b) {\n    return a;\n  } else {\n    return b;\n  }\n}\n\nconsole.log(minimum(0, 10));\nconsole.log(minimum(0, -10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "0\n-10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n  if (a < b) {\n    return a;\n  } else {\n    return b;\n  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    return a < b ? a : b;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\nconsole.log(minimum(2, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\nconsole.log(minimum(2, 3));\nconsole.log(minimum(3, 2));\nconsole.log(minimum(2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "2\n2\n2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\nconsole.log(minimum(2, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\nconsole.log(minimum(0, 10));\nconsole.log(minimum(0, -10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "0\n-10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\nconsole.log(minimum(2, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\nconsole.log(minimum(10, 5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "5\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\nconsole.log(minimum(0, 10));\nconsole.log(minimum(0, -10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "0\n-10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\nconsole.log(minimum(2, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\nconsole.log(minimum(2, 3));\nconsole.log(minimum(3, 2));\nconsole.log(minimum(3, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "2\n2\n3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\nconsole.log(minimum(2, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\nconsole.log(minimum(2, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\nconsole.log(minimum(0, 10));\nconsole.log(minimum(0, -10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "0\n-10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\nconsole.log(minimum(2, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\nconsole.log(minimum(0, 10));\nconsole.log(minimum(0, -10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "0\n-10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\nconsole.log(minimum(2, 4));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\nconsole.log(minimum(2, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a > b) {\n        return b;\n    } else {\n        return a;\n    }\n}\n\nconsole.log(minimum(2, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\nconsole.log(minimum(0, 10));\nconsole.log(minimum(0, -10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "0\n-10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\nconsole.log(minimum(2, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n  if (a < b) {\n    return a;\n  } else {\n    return b;\n  }\n}\n\nconsole.log(minimum(0, 10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "0\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\nconsole.log(minimum(0, 10));\nconsole.log(minimum(0, -10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "0\n-10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\nconsole.log(minimum(0, 10));\nconsole.log(minimum(0, -10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "0\n-10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\nconsole.log(minimum(10, 5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "5\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\nconsole.log(minimum(2, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\nconsole.log(minimum(2, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\nconsole.log(minimum(0, 10));\nconsole.log(minimum(0, -10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "0\n-10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\nconsole.log(minimum(2, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\nconsole.log(minimum(2, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\nconsole.log(minimum(0, 10));\nconsole.log(minimum(0, -10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "0\n-10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return b;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\nconsole.log(minimum(2, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\nconsole.log(minimum(5, 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "5\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\nconsole.log(minimum(2, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\nconsole.log(minimum(2, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\nconsole.log(minimum(0, 10));\nconsole.log(minimum(0, -10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "0\n-10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\nconsole.log(minimum(2, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    return a < b ? a : b;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n  if (a < b) {\n    return a;\n  } else {\n    return b;\n  }\n}\n\nconsole.log(minimum(0, 10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "0\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\nconsole.log(minimum(0, 10));\nconsole.log(minimum(0, -10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "0\n-10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n  if (a < b) {\n    return a;\n  } else {\n    return b;\n  }\n}\n\nconsole.log(minimum(0, 10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "0\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n  if (a < b) {\n    return a;\n  } else {\n    return b;\n  }\n}\n\nconsole.log(minimum(0, 10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "0\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\nconsole.log(minimum(2, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n  if (a < b) {\n    return a;\n  } else {\n    return b;\n  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\nconsole.log(minimum(5, 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "5\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\nconsole.log(minimum(0, 10));\nconsole.log(minimum(0, -10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "0\n-10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a > b) {\n        return b;\n    } else {\n        return a;\n    }\n}\n\nconsole.log(minimum(0, 10));\nconsole.log(minimum(0, -10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "0\n-10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\nconsole.log(minimum(2, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\nconsole.log(minimum(2, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\nconsole.log(minimum(3, 5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\nconsole.log(minimum(2, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\nconsole.log(minimum(0, 10));\nconsole.log(minimum(0, -10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "0\n-10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    return a < b ? a : b;\n}\n\nconsole.log(minimum(2, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\nconsole.log(minimum(0, 10));\nconsole.log(minimum(0, -10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "0\n-10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\nconsole.log(minimum(2, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n  if (a < b) {\n    return a;\n  } else {\n    return b;\n  }\n}\n\nconsole.log(minimum(0, 10));\nconsole.log(minimum(0, -10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1666123856,
      "stdout": "0\n-10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\nconsole.log(minimum(2, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find the minimum of two numbers.\nfunction minimum(a: number, b: number): number {\n    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\nconsole.log(minimum(2, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = minimum;\n  assert.deepEqual(candidate(1, 2),1);\n  assert.deepEqual(candidate(-5, -4),-5);\n  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();",
      "timestamp": 1665509797,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
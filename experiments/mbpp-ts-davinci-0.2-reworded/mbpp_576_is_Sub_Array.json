{
  "name": "mbpp_576_is_Sub_Array",
  "language": "ts",
  "prompt": "//Write a tsthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array(A: number[], B: number[]): boolean {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_576_is_Sub_Array.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Sub_Array;\n  assert.deepEqual(candidate([1, 4, 3, 5], [1, 2]),false);\n  assert.deepEqual(candidate([1, 2, 1], [1, 2, 1]),true);\n  assert.deepEqual(candidate([1, 0, 2, 2], [2, 2, 0]),false);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    var M = A.length;\n    var N = B.length;\n    for (var i = 0; i < N - M; i++) {\n        var j;\n        for (j = 0; j < M; j++) {\n            if (B[i + j] != A[j])\n                break;\n        }\n        if (j == M)\n            return true;\n    }\n    return false;\n}\n",
    "  let i = 0;\n  let j = 0;\n  while (i < A.length && j < B.length) {\n    if (A[i] == B[j]) {\n      i++;\n      j++;\n    } else {\n      i++;\n    }\n  }\n  if (j == B.length) {\n    return true;\n  } else {\n    return false;\n  }\n}\n",
    "    let i = 0;\n    let j = 0;\n    let flag = false;\n    while (i < A.length && j < B.length) {\n        if (A[i] == B[j]) {\n            i++;\n            j++;\n            flag = true;\n        }\n        else {\n            i++;\n            flag = false;\n        }\n    }\n    if (flag == true) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nlet A = [1, 2, 3, 4, 5];\nlet B = [1, 2, 3, 4, 5, 6];\nconsole.log(is_Sub_Array(A, B));\n",
    "    var M = A.length;\n    var N = B.length;\n    for (var i = 0; i <= N - M; i++) {\n        var j;\n        for (j = 0; j < M; j++) {\n            if (B[i + j] != A[j]) {\n                break;\n            }\n        }\n        if (j == M) {\n            return true;\n        }\n    }\n    return false;\n}\n",
    "    let i: number = 0;\n    let j: number = 0;\n    let flag: boolean = false;\n    for (i = 0; i < A.length; i++) {\n        for (j = 0; j < B.length; j++) {\n            if (A[i] == B[j]) {\n                flag = true;\n            }\n            else {\n                flag = false;\n            }\n        }\n    }\n    return flag;\n}\n\nlet arr1: number[] = [1, 2, 3, 4, 5, 6];\nlet arr2: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nlet result: boolean = is_Sub_Array(arr1, arr2);\nconsole.log(result);\n",
    "    let i = 0;\n    let j = 0;\n    let flag = false;\n    for (i = 0; i < A.length; i++) {\n        for (j = 0; j < B.length; j++) {\n            if (A[i] == B[j]) {\n                flag = true;\n            }\n            else {\n                flag = false;\n            }\n        }\n    }\n    return flag;\n}\n\nlet A = [1, 2, 3, 4, 5];\nlet B = [1, 2, 3];\nconsole.log(is_Sub_Array(A, B));\n",
    "    let i = 0;\n    let j = 0;\n    while (i < A.length && j < B.length) {\n        if (A[i] == B[j]) {\n            i++;\n            j++;\n        }\n        else {\n            i++;\n        }\n    }\n    if (j == B.length) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n",
    "    let i = 0;\n    let j = 0;\n    while (i < A.length && j < B.length) {\n        if (A[i] == B[j]) {\n            i++;\n            j++;\n        }\n        else {\n            i++;\n        }\n    }\n    if (j == B.length) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n",
    "    let i = 0;\n    let j = 0;\n    let flag = false;\n    while (i < A.length && j < B.length) {\n        if (A[i] == B[j]) {\n            i++;\n            j++;\n            flag = true;\n        }\n        else {\n            i++;\n            flag = false;\n        }\n    }\n    if (flag == true) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n",
    "    let i: number = 0;\n    let j: number = 0;\n    let flag: boolean = false;\n    for (i = 0; i < A.length; i++) {\n        for (j = 0; j < B.length; j++) {\n            if (A[i] == B[j]) {\n                flag = true;\n            }\n            else {\n                flag = false;\n            }\n        }\n    }\n    return flag;\n}\n",
    "    let i: number = 0;\n    let j: number = 0;\n    let k: number = 0;\n    let flag: boolean = false;\n    for (i = 0; i < A.length; i++) {\n        for (j = 0; j < B.length; j++) {\n            if (A[i] == B[j]) {\n                for (k = 0; k < B.length; k++) {\n                    if (A[i + k] == B[j + k]) {\n                        flag = true;\n                    }\n                    else {\n                        flag = false;\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    return flag;\n}\n",
    "    let i = 0;\n    let j = 0;\n    while (i < A.length && j < B.length) {\n        if (A[i] == B[j]) {\n            i++;\n            j++;\n        } else {\n            i++;\n        }\n    }\n    if (j == B.length) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    let i: number = 0;\n    let j: number = 0;\n    let flag: boolean = false;\n    for (i = 0; i < A.length; i++) {\n        for (j = 0; j < B.length; j++) {\n            if (A[i] == B[j]) {\n                flag = true;\n                break;\n            }\n            else {\n                flag = false;\n            }\n        }\n        if (flag == false) {\n            break;\n        }\n    }\n    return flag;\n}\n",
    "    let i = 0;\n    let j = 0;\n    while (i < A.length && j < B.length) {\n        if (A[i] == B[j]) {\n            i++;\n            j++;\n        }\n        else {\n            i++;\n        }\n    }\n    if (j == B.length) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Sub_Array([1, 2, 3, 4, 5], [2, 3, 4]));\nconsole.log(is_Sub_Array([1, 2, 3, 4, 5], [2, 3, 4, 5]));\nconsole.log(is_Sub_Array([1, 2, 3, 4, 5], [2, 3, 4, 5, 6]));\nconsole.log(is_Sub_Array([1, 2, 3, 4, 5], [2, 3, 4, 5, 6, 7]));\nconsole.log(is_Sub_Array([1, 2, 3, 4, 5], [2, 3, 4, 5, 6, 7, 8]));\nconsole.log(is_Sub_Array([1, 2, 3, 4, 5], [2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(is_Sub_Array([1, 2, 3, 4, 5], [2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(is_Sub_Array([1, 2, 3, 4, 5], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\nconsole.log(is_Sub_Array([1, 2, 3, 4, 5], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]));\nconsole.log(is_Sub_Array([1, 2, 3, 4, 5], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]));\nconsole.log(is_Sub_Array([1, 2, 3, 4, 5], [2, 3, 4, 5",
    "    let i = 0;\n    let j = 0;\n    for (i = 0; i < A.length; i++) {\n        for (j = 0; j < B.length; j++) {\n            if (A[i] == B[j]) {\n                break;\n            }\n        }\n        if (j == B.length) {\n            return false;\n        }\n    }\n    return true;\n}\n\nlet A = [1, 2, 3, 4, 5, 6];\nlet B = [1, 2, 3, 4];\n\nlet result = is_Sub_Array(A, B);\nconsole.log(result);\n",
    "    let i = 0;\n    let j = 0;\n    let flag = false;\n    while (i < A.length && j < B.length) {\n        if (A[i] == B[j]) {\n            i++;\n            j++;\n        }\n        else {\n            i++;\n        }\n    }\n    if (j == B.length) {\n        flag = true;\n    }\n    return flag;\n}\nlet arr1 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nlet arr2 = [2, 4, 6, 8];\nconsole.log(is_Sub_Array(arr1, arr2));\n",
    "    let i = 0;\n    let j = 0;\n    for (i = 0; i < B.length; i++) {\n        for (j = 0; j < A.length; j++) {\n            if (B[i] == A[j]) {\n                break;\n            }\n        }\n        if (j == A.length) {\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    let i = 0;\n    let j = 0;\n    let k = 0;\n    let flag = false;\n    while (i < A.length) {\n        if (A[i] == B[j]) {\n            i++;\n            j++;\n            flag = true;\n        }\n        else {\n            i++;\n            flag = false;\n        }\n        if (j == B.length) {\n            k = 1;\n            break;\n        }\n    }\n    if (k == 1) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n",
    "    let i: number = 0;\n    let j: number = 0;\n    let flag: boolean = false;\n    while (i < A.length) {\n        if (A[i] == B[j]) {\n            i++;\n            j++;\n            flag = true;\n        }\n        else {\n            i++;\n            flag = false;\n        }\n    }\n    return flag;\n}\n\nlet A: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nlet B: number[] = [2, 3, 4, 5];\nconsole.log(is_Sub_Array(A, B));",
    "    let i = 0;\n    let j = 0;\n    while (i < A.length && j < B.length) {\n        if (A[i] == B[j]) {\n            i++;\n            j++;\n        }\n        else {\n            i++;\n        }\n    }\n    if (j == B.length) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Sub_Array([1, 2, 3, 4, 5], [3, 4, 5]));\nconsole.log(is_Sub_Array([1, 2, 3, 4, 5], [3, 4, 6]));\n"
  ]
}
{
  "name": "mbpp_458_rectangle_area",
  "language": "ts",
  "prompt": "//Write a function to find the area of a rectangle.\nfunction rectangle_area(l: number, b: number): number {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_458_rectangle_area.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rectangle_area;\n  assert.deepEqual(candidate(10, 20),200);\n  assert.deepEqual(candidate(10, 5),50);\n  assert.deepEqual(candidate(4, 2),8);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    return l * b;\n}\n",
    "    return l * b;\n}\n",
    "    return l * b;\n}\n",
    "    return l * b;\n}\n",
    "    return l * b;\n}\n",
    "    return l * b;\n}\n",
    "    return l * b;\n}\n",
    "    return l * b;\n}\n",
    "    return l * b;\n}\n\nconsole.log(\"Area of rectangle is: \" + rectangle_area(2, 3));\n",
    "    return l * b;\n}\n",
    "  return l * b;\n}\n",
    "    return l * b;\n}\n",
    "    return l * b;\n}\n",
    "    return l * b;\n}\n",
    "    return l * b;\n}\n",
    "    return l * b;\n}\n",
    "    return l * b;\n}\n",
    "    return l * b;\n}\n",
    "    return l * b;\n}\n",
    "    return l * b;\n}\n"
  ]
}
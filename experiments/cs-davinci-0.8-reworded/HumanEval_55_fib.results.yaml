language: cs
name: HumanEval_55_fib
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        Debug.Assert(n >= 0);\n\
    \        if (n == 0) {\n            return 0;\n        }\n        else if (n ==\
    \ 1) {\n            return 1;\n        }\n        long a = 0;\n        long b\
    \ = 1;\n        for (long i = 2; i <= n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return b;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015771
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        // From http://www.ic.unicamp.br/~meidanis/courses/mc336/2009s2/prolog/problemas/\n\
    \        //         and http://stackoverflow.com/questions/43334466/matrix-power-algorithm-for-long-numbers-biginteger\n\
    \        if (n == 0L) {\n            return (0L);\n        }\n        BigInteger\
    \ r0 = BigInteger.Zero;\n        BigInteger r1 = BigInteger.One;\n        BigInteger\
    \ s0 = BigInteger.One;\n        BigInteger s1 = BigInteger.One;\n        BigInteger\
    \ t0 = BigInteger.One;\n        BigInteger t1 = BigInteger.Zero;\n        while\
    \ (n > 0L) {\n            if ((n % 2L) == 1L) {\n                BigInteger r2\
    \ = ((r0 * s1) + (r1 * s0));\n                BigInteger s2 = ((r0 * t1) + (r1\
    \ * t0));\n                BigInteger t2 = ((s0 * t1) + (s1 * t0));\n        \
    \        r0 = r2;\n                s0 = s2;\n                t0 = t2;\n      \
    \      }\n            BigInteger r2_ = ((r1 * r1) + (s1 * t1));\n            BigInteger\
    \ s2_ = (r1 * s1);\n            BigInteger t2_ = ((s1 * s1) + (t1 * t1));\n  \
    \          r1 = r2_;\n            s1 = s2_;\n            t1 = t2_;\n         \
    \   n = (n / 2L);\n        }\n        return ((r0 % 10000000000L));\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpobv0x5b6.cs(45,18): error CS0266: Cannot implicitly convert type ''System.Numerics.BigInteger''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660015770
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        return MatrixPow(new Matrix(new\
    \ long[,] { { 0, 1 }, { 1, 1 } }), n)[0, 1];\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpl_slrm9t.cs(17,16): error CS0103: The name ''MatrixPow'' does not exist
    in the current context

    /tmp/tmpl_slrm9t.cs(17,30): error CS0246: The type or namespace name ''Matrix''
    could not be found (are you missing a using directive or an assembly reference?)

    '
  timestamp: 1660015770
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015771
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long x = 0;\n        long y = 1;\n        for (int i = 2; i <=\
    \ n; i++) {\n            long z = x + y;\n            x = y;\n            y =\
    \ z;\n        }\n        return y;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015771
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) return 0;\n\
    \        var a = BigInteger.One;\n        var b = BigInteger.One;\n        for\
    \ (var i = 2; i < n; i++) {\n            var c = a + b;\n            a = b;\n\
    \            b = c;\n        }\n        return (long)b;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015771
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0L;\n        long\
    \ b = 1L;\n        long i = 1L;\n        while (i < n) {\n            i = i +\
    \ 1L;\n            long c = a + b;\n            a = b;\n            b = c;\n \
    \       }\n        return b;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n\
    \    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n\
    \    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015771
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        BigInteger a = 0;\n   \
    \     BigInteger b = 1;\n        BigInteger c = 0;\n        if (n == 0) return\
    \ a;\n        if (n == 1) return b;\n        for (int i = 2; i <= n; i++) {\n\
    \            c = a + b;\n            a = b;\n            b = c;\n        }\n \
    \       return (long)c;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n\
    \    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n\
    \    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpfq3tb4i0.cs(20,28): error CS0266: Cannot implicitly convert type ''System.Numerics.BigInteger''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpfq3tb4i0.cs(21,28): error CS0266: Cannot implicitly convert type ''System.Numerics.BigInteger''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660015770
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if(n < 0) {\n         \
    \   throw new ArgumentException();\n        }\n        BigInteger a = 0;\n   \
    \     BigInteger b = 1;\n        BigInteger p = 0;\n        BigInteger q = 1;\n\
    \        long m = 0;\n        for(long i = 63 - n.BitLength(); i >= 0; i--) {\n\
    \            // Loop invariant: a/b == F(m)\n            //                p/q\
    \ == F(m+1)\n            Debug.Assert(a * q == p * b);\n            Debug.Assert(a\
    \ * q + b * p == b * q);\n            if(n.Bit(i)) {\n                BigInteger\
    \ t = p * a + q * b; // F(2m+1)\n                b = p * b + q * a; // F(2m+2)\n\
    \                a = t;\n                m *= 2;\n                m++;\n     \
    \       } else {\n                BigInteger t = p * p + q * q; // F(2m+2)\n \
    \               p = p * q + q * p; // F(2m+1)\n                q = t;\n      \
    \          m *= 2;\n            }\n        }\n        Debug.Assert(a == n);\n\
    \        return m;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpplu44nq4.cs(25,29): error CS1061: ''long'' does not contain a definition
    for ''BitLength'' and no accessible extension method ''BitLength'' accepting a
    first argument of type ''long'' could be found (are you missing a using directive
    or an assembly reference?)

    /tmp/tmpplu44nq4.cs(30,18): error CS1061: ''long'' does not contain a definition
    for ''Bit'' and no accessible extension method ''Bit'' accepting a first argument
    of type ''long'' could be found (are you missing a using directive or an assembly
    reference?)

    '
  timestamp: 1660015770
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) return 0;\n\
    \        if (n == 1) return 1;\n        long a = 0;\n        long b = 1;\n   \
    \     for (long i = 1; i < n; i++) {\n            long c = a + b;\n          \
    \  a = b;\n            b = c;\n        }\n        return b;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015771
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n <= 1) {\n       \
    \     return n;\n        }\n        else {\n            return Fib(n - 1) + Fib(n\
    \ - 2);\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015771
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0L) {\n      \
    \      return 0L;\n        }\n        else if (n == 1L) {\n            return\
    \ 1L;\n        }\n        else {\n            return Problem.Fib((n - 1L)) + Problem.Fib((n\
    \ - 2L));\n        }\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n\
    \    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n\
    \    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015771
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long v1 = 1;\n        long\
    \ v2 = 0;\n        long tmp;\n        for (long i = 0; i < n; i++) {\n       \
    \     tmp = v1;\n            v1 = v1 + v2;\n            v2 = tmp;\n        }\n\
    \        return v2;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n \
    \   Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n\
    \    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015771
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n <= 1) return n;\n\
    \        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015771
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        // Write your code here.\n\
    \        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7808ffa05f8c4759876c1b95130b0b52>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7808ffa05f8c4759876c1b95130b0b52>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015771
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long k = n - 1;\n     \
    \   long x = 0L;\n        long y = 1L;\n        while (k > 0L) {\n           \
    \ if ((k & 1L) == 1L) {\n                long t = x;\n                x = y;\n\
    \                y = (y + t);\n            }\n            k >>= 1L;\n        \
    \    long t1 = x;\n            x = (t1 * t1);\n            y = (((t1 * t1) + (t1\
    \ * y)) + (y * y));\n        }\n        return x;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjvm1z2_p.cs(26,13): error CS0019: Operator ''>>='' cannot be applied to
    operands of type ''long'' and ''long''

    '
  timestamp: 1660015770
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) return 0;\n\
    \        long a = 0;\n        long b = 1;\n        for (long i = 2; i <= n; i++)\
    \ {\n            long c = a + b;\n            a = b;\n            b = c;\n   \
    \     }\n        return b;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n\
    \    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n\
    \    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015771
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long[] A = new long[2];\n\
    \        long[] B = new long[2];\n        long[] C = new long[2];\n        long[]\
    \ T = new long[2];\n        A[0] = 1;\n        A[1] = 0;\n        B[0] = 0;\n\
    \        B[1] = 1;\n        while (n > 0) {\n            if ((n & 1) != 0) {\n\
    \                // C = A + B\n                C[0] = A[0] * B[0] + A[1] * B[1];\n\
    \                C[1] = A[0] * B[1] + A[1] * (B[0] + B[1]);\n                //\
    \ B = C\n                B[0] = C[0];\n                B[1] = C[1];\n        \
    \    }\n            // T = A + A\n            T[0] = A[0] * A[0] + A[1] * A[1];\n\
    \            T[1] = A[0] * A[1] + A[1] * (A[0] + A[1]);\n            // A = T\n\
    \            A[0] = T[0];\n            A[1] = T[1];\n            n >>= 1;\n  \
    \      }\n        return B[1];\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n\
    \    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n\
    \    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <95d39fdce85f4e62bcd45265048665e8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <95d39fdce85f4e62bcd45265048665e8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015771
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n < 0) {\n        \
    \    throw new ArgumentException(\"n must be positive\");\n        }\n       \
    \ if (n == 0) {\n            return 0;\n        }\n        long x = 0;\n     \
    \   long y = 1;\n        for (int i = 0; i < n - 1; i++) {\n            long z\
    \ = x + y;\n            x = y;\n            y = z;\n        }\n        return\
    \ y;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015771
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        // Replace this code with\
    \ a faster implementation\n        return n <= 1 ? n : Fib(n - 1) + Fib(n - 2);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015771
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (int i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015771
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n <= 1) {\n       \
    \     return n;\n        }\n        long first = 0;\n        long second = 1;\n\
    \        long tmp;\n        for (long i = 2; i <= n; i++) {\n            tmp =\
    \ first + second;\n            first = second;\n            second = tmp;\n  \
    \      }\n        return second;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015771
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        BigInteger a = 0;\n   \
    \     BigInteger b = 1;\n        while (n > 0) {\n            BigInteger c = a\
    \ + b;\n            a = b;\n            b = c;\n            n -= 1;\n        }\n\
    \        return (long)a;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n\
    \    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n\
    \    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015771
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        long a = 0;\n        long b = 1;\n       \
    \ while (n > 1) {\n            long c = a + b;\n            a = b;\n         \
    \   b = c;\n            n--;\n        }\n        return b;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015771
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        BigInteger a = 0;\n   \
    \     BigInteger b = 1;\n        while (n > 0) {\n            a += b;\n      \
    \      n -= 1;\n            b += a;\n            n -= 1;\n        }\n        return\
    \ (long)a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <104894c9f8fe4911936a35ef8fd22b65>:0 \n"
  stdout: ''
  timestamp: 1660015771
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n < 2) {\n        \
    \    return 1;\n        }\n        return Fib(n - 1) + Fib(n - 2);\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ae91a7c5c21a4014bd48d87fcabcc54e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ae91a7c5c21a4014bd48d87fcabcc54e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015771
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if(n==0 || n==1) return\
    \ 1;\n        long[] a = new long[n+1];\n        a[0] = 1;\n        a[1] = 1;\n\
    \        for(int i=2; i<=n; i++) {\n            a[i] = a[i-1] + a[i-2];\n    \
    \    }\n        return a[n];\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n\
    \    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n\
    \    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d2475bc9b8454f77821e49c183dcaab8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d2475bc9b8454f77821e49c183dcaab8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015771
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015771
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        BigInteger f0 = 0;\n  \
    \      BigInteger f1 = 1;\n        BigInteger f2 = f0 + f1;\n        for (long\
    \ i = 2; i <= n; i++) {\n            f2 = f0 + f1;\n            f0 = f1;\n   \
    \         f1 = f2;\n        }\n        return (long)f2;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015771
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if(n == 0) return 0;\n\
    \        if(n == 1) return 1;\n        long a = 0;\n        long b = 1;\n    \
    \    for(long i = 2; i <= n; i++) {\n            long c = a + b;\n           \
    \ a = b;\n            b = c;\n        }\n        return b;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015771
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        BigInteger a = 1;\n   \
    \     BigInteger b = 1;\n        BigInteger c = 0;\n        for (long i = 2; i\
    \ < n; i++) {\n            c = a + b;\n            a = b;\n            b = c;\n\
    \        }\n        return (long)c;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fd6e1d09442f4053a7a31d75015ea32e>:0 \n"
  stdout: ''
  timestamp: 1660015771
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long first = 0;\n     \
    \   long second = 1;\n        for (long i = 0; i < n; i++) {\n            long\
    \ tmp = first;\n            first = second;\n            second = tmp + second;\n\
    \        }\n        return first;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015771
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n <= 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        long c = 1;\n     \
    \   while (n-- > 1) {\n            c = a + b;\n            a = b;\n          \
    \  b = c;\n        }\n        return c;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015771
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0L;\n        long\
    \ b = 1L;\n        while (n > 0L) {\n            n -= 1L;\n            long t\
    \ = a;\n            a = b;\n            b = t + b;\n        }\n        return\
    \ a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015771
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        while (n > 0) {\n            long t = a;\n            a = b;\n\
    \            b = t + b;\n            n -= 1;\n        }\n        return a;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015771
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long prev = 1;\n      \
    \  long curr = 1;\n        for (long i = 2; i < n; i++) {\n            long next\
    \ = curr + prev;\n            prev = curr;\n            curr = next;\n       \
    \ }\n        return curr;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n\
    \    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n\
    \    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015771
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long ret = 0;\n        long a = 0;\n        long b = 1;\n   \
    \     for (long i = 2; i <= n; i++) {\n            ret = a + b;\n            a\
    \ = b;\n            b = ret;\n        }\n        return ret;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015771
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        var m = new Matrix<BigInteger>(\n\
    \            new BigInteger[,] {\n                { 0, 1 },\n                {\
    \ 1, 1 }\n            });\n        var x = new Matrix<BigInteger>(\n         \
    \   new BigInteger[,] {\n                { 0 },\n                { 1 }\n     \
    \       });\n        var y = m.Power(n).Multiply(x);\n        return (long)y[1,\
    \ 0];\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwp6sg_po.cs(17,21): error CS0246: The type or namespace name ''Matrix<>''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmpwp6sg_po.cs(22,21): error CS0246: The type or namespace name ''Matrix<>''
    could not be found (are you missing a using directive or an assembly reference?)

    '
  timestamp: 1660015771
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        return n <= 1 ? n : Fib(n\
    \ - 1) + Fib(n - 2);\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n\
    \    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n\
    \    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015771
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n < 2) {\n        \
    \    return 1;\n        }\n        var a = Fib(n - 1);\n        var b = Fib(n\
    \ - 2);\n        return a + b;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n\
    \    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n\
    \    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fd11c7645180468b9a58cf844e5a5945>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fd11c7645180468b9a58cf844e5a5945>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015771
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        // ********** IMPLEMENT\
    \ HERE **********\n        if (n < 2)\n            return n;\n        long a =\
    \ 0;\n        long b = 1;\n        long c = 0;\n        while (n > 0) {\n    \
    \        c = a + b;\n            a = b;\n            b = c;\n            n--;\n\
    \        }\n        return c;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n\
    \    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n\
    \    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ba21d0092e4945f480cd9d25f19db829>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ba21d0092e4945f480cd9d25f19db829>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015771
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long f1 = 0;\n        long f2 = 1;\n        for (long i = 2;\
    \ i <= n; i++) {\n            long f = f1 + f2;\n            f1 = f2;\n      \
    \      f2 = f;\n        }\n        return f2;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015771
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long x = 1;\n        long\
    \ y = 0;\n        for (int i = 63 - n.GetBitCount(); i >= 0; i--) {\n        \
    \    long tx = x;\n            x = x * x + y * y;\n            y = (tx + y) *\
    \ y + y * y;\n            if (n.GetBit(i)) {\n                long t = x;\n  \
    \              x = x + y;\n                y = t + y;\n            }\n       \
    \ }\n        return y;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n\
    \    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n\
    \    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9vefieco.cs(19,29): error CS1061: ''long'' does not contain a definition
    for ''GetBitCount'' and no accessible extension method ''GetBitCount'' accepting
    a first argument of type ''long'' could be found (are you missing a using directive
    or an assembly reference?)

    /tmp/tmp9vefieco.cs(23,19): error CS1061: ''long'' does not contain a definition
    for ''GetBit'' and no accessible extension method ''GetBit'' accepting a first
    argument of type ''long'' could be found (are you missing a using directive or
    an assembly reference?)

    '
  timestamp: 1660015771
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        // Calculate and return\
    \ (n+1)-th Fibonacci number.\n        long[] m = new long[2];\n        m[0] =\
    \ 1;\n        m[1] = 1;\n        long s = 1;\n        for (long i = 2; i <= n;\
    \ i++) {\n            s = (m[0] + m[1]) % 1000003;\n            m[0] = m[1];\n\
    \            m[1] = s;\n        }\n        return s;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d6d4b9ff26cd41d19ab09ec7c8f12520>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d6d4b9ff26cd41d19ab09ec7c8f12520>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015771
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long cur = 1;\n        long prev = 0;\n        for (long i =\
    \ 2; i <= n; i++) {\n            long tmp = cur;\n            cur = cur + prev;\n\
    \            prev = tmp;\n        }\n        return cur;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015771
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0L;\n        long\
    \ b = 1L;\n        long i = 0L;\n        while (i < n) {\n            long tmp\
    \ = a;\n            a = b;\n            b = tmp + b;\n            i = i + 1L;\n\
    \        }\n        return a;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n\
    \    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n\
    \    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015771
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n < 0)\n          \
    \  throw new Exception(\"Fib: bad argument\");\n        if (n == 0)\n        \
    \    return 0;\n        if (n == 1)\n            return 1;\n        // Init f0\
    \ = 0, f1 = 1\n        long f0 = 0;\n        long f1 = 1;\n        // Fibo(n)\
    \ = Fibo(n-1) + Fibo(n-2)\n        for (long i = 2; i <= n; i++) {\n         \
    \   long f2 = f0 + f1;\n            f0 = f1;\n            f1 = f2;\n        }\n\
    \        return f1;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n \
    \   Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n\
    \    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015772
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        // ...\n        long a\
    \ = 0;\n        long b = 1;\n        // In N steps compute Fibonacci sequence\
    \ iteratively.\n        for (long i = 0; i < n; i++) {\n            long temp\
    \ = a;\n            a = b;\n            b = temp + b;\n        }\n        return\
    \ a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015772
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        var F = new List<long>();\n\
    \        F.Add(0);\n        F.Add(1);\n        for (int i = 2; i <= n; i++) {\n\
    \            F.Add(F[i - 1] + F[i - 2]);\n        }\n        return F[n];\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpssolmsc4.cs(23,18): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015772
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0L;\n        long\
    \ b = 1L;\n        for (long i = 0L; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015772
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0L;\n        long\
    \ b = 1L;\n        for (long i = 1L; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return b;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015772
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        return 0;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8d5eb7b05dfb41d6b4f4a75ba4fbcb29>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8d5eb7b05dfb41d6b4f4a75ba4fbcb29>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015772
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0L;\n        long\
    \ b = 1L;\n        long c = 1L;\n        long i = 0L;\n        while (i < n) {\n\
    \            c = a + b;\n            a = b;\n            b = c;\n            i\
    \ = i + 1L;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015772
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        BigInteger a = 0;\n   \
    \     BigInteger b = 1;\n        for (int i = 0; i < n; i++) {\n            BigInteger\
    \ c = a + b;\n            a = b;\n            b = c;\n        }\n        return\
    \ (long)a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015772
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0L;\n        long\
    \ b = 1L;\n        while (n > 0L) {\n            long c = a + b;\n           \
    \ a = b;\n            b = c;\n            n -= 1L;\n        }\n        return\
    \ a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015772
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        // YOUR CODE HERE\n   \
    \     long a = 0;\n        long b = 1;\n        for (long i = 0; i < n; i++) {\n\
    \            long temp = a;\n            a = b;\n            b = temp + b;\n \
    \       }\n        return a;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n\
    \    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n\
    \    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015772
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long fibN = 0;\n      \
    \  long fibN1 = 1;\n        long fibN2 = 1;\n        for (long i = 2; i <= n;\
    \ i++) {\n            fibN = fibN1 + fibN2;\n            fibN2 = fibN1;\n    \
    \        fibN1 = fibN;\n        }\n        return fibN;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e0fc413491d64415ad9e6620509ad279>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e0fc413491d64415ad9e6620509ad279>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015772
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 1;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 1;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long temp = a;\n            a = b;\n            b\
    \ = b + temp;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8ccbaa7937364225b097375d818479d3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8ccbaa7937364225b097375d818479d3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015772
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long temp = a;\n\
    \            a = b;\n            b = temp + b;\n        }\n        return a;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015772
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        return FibLoop(n, 1, 0);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpimo871r2.cs(17,16): error CS0103: The name ''FibLoop'' does not exist
    in the current context

    '
  timestamp: 1660015772
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        long[] fib = new long[n + 1];\n        fib[0]\
    \ = 0;\n        fib[1] = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     fib[i] = fib[i - 1] + fib[i - 2];\n        }\n        return fib[n];\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015772
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        // Your code here!\n  \
    \      return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d969e715262e4ce1b0180187d0a5d9ad>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d969e715262e4ce1b0180187d0a5d9ad>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015772
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n < 0) {\n        \
    \    return 0;\n        }\n        if (n == 0) {\n            return 1;\n    \
    \    }\n        long a = 1;\n        long b = 1;\n        for (long i = 2; i <=\
    \ n; i++) {\n            long c = a + b;\n            a = b;\n            b =\
    \ c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <92fd824e388a46c4b2b1dbd76d1cacff>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <92fd824e388a46c4b2b1dbd76d1cacff>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015772
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n < 2) {\n        \
    \    return n;\n        }\n        long a = 0;\n        long b = 1;\n        for\
    \ (long i = 2; i <= n; i++) {\n            long c = a + b;\n            a = b;\n\
    \            b = c;\n        }\n        return b;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015772
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        // var_0 = Matrix.Power(Matrix.OneTwoOne(),\
    \ n)\n        var_0 = Matrix.Power(Matrix.OneTwoOne(), n);\n        // var_1 =\
    \ var_0.first()\n        var_1 = var_0.first();\n        // return var_1\n   \
    \     return var_1;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n \
    \   Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n\
    \    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpl0zrh2xb.cs(18,9): error CS0103: The name ''var_0'' does not exist in
    the current context

    /tmp/tmpl0zrh2xb.cs(18,17): error CS0103: The name ''Matrix'' does not exist in
    the current context

    /tmp/tmpl0zrh2xb.cs(18,30): error CS0103: The name ''Matrix'' does not exist in
    the current context

    /tmp/tmpl0zrh2xb.cs(20,9): error CS0103: The name ''var_1'' does not exist in
    the current context

    /tmp/tmpl0zrh2xb.cs(20,17): error CS0103: The name ''var_0'' does not exist in
    the current context

    /tmp/tmpl0zrh2xb.cs(22,16): error CS0103: The name ''var_1'' does not exist in
    the current context

    '
  timestamp: 1660015772
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        // Compute Fibonacci using\
    \ a memoized recursive algorithm.\n        return _FibHelper(n, new Dictionary<long,\
    \ long>(){{0L, 0L}, {1L, 1L}});\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n\
    \    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n\
    \    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpidiyk8lu.cs(18,16): error CS0103: The name ''_FibHelper'' does not exist
    in the current context

    '
  timestamp: 1660015772
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        var F0 = 0L;\n        var\
    \ F1 = 1L;\n        for (var i = 0L; i < n; i++) {\n            var T = F0;\n\
    \            F0 = F1;\n            F1 = T + F1;\n        }\n        return F0;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015772
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        BigInteger x = 0;\n   \
    \     BigInteger y = 1;\n        BigInteger z = 1;\n        BigInteger i = 0;\n\
    \        BigInteger tmp;\n        while (i < n) {\n            tmp = x;\n    \
    \        x = y;\n            y = tmp + y;\n            i = i + 1;\n        }\n\
    \        return (long)x;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n\
    \    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n\
    \    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015772
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0L;\n        long\
    \ b = 1L;\n        while (0L < n) {\n            long c = a + b;\n           \
    \ a = b;\n            b = c;\n            n = n - 1L;\n        }\n        return\
    \ a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015772
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015771
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        var x = BigInteger.One;\n\
    \        var y = BigInteger.Zero;\n        while (n > 0) {\n            y = x\
    \ + y;\n            x = y - x;\n            n = n - 1;\n        }\n        return\
    \ (long) y;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015772
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        BigInteger a, b, c;\n \
    \       BigInteger b0 = 0;\n        BigInteger b1 = 1;\n        if (n == 0)\n\
    \            return b0;\n        for (long i = 2; i <= n; i++) {\n           \
    \ c = b0 + b1;\n            b0 = b1;\n            b1 = c;\n        }\n       \
    \ return b1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptjfcyta1.cs(21,20): error CS0266: Cannot implicitly convert type ''System.Numerics.BigInteger''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmptjfcyta1.cs(27,16): error CS0266: Cannot implicitly convert type ''System.Numerics.BigInteger''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmptjfcyta1.cs(17,20): warning CS0168: The variable ''a'' is declared but
    never used

    /tmp/tmptjfcyta1.cs(17,23): warning CS0168: The variable ''b'' is declared but
    never used

    '
  timestamp: 1660015772
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        long n2 = 0;\n        long n1 = 1;\n     \
    \   for (long i = 1; i < n; i++) {\n            long n0 = n2 + n1;\n         \
    \   n2 = n1;\n            n1 = n0;\n        }\n        return n1;\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015773
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        return ((n == 0L) ? (0L)\
    \ : (Fib_helper(1L, 0L, 1L, n)));\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpseqvh8du.cs(17,37): error CS0103: The name ''Fib_helper'' does not exist
    in the current context

    '
  timestamp: 1660015772
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if(n == 0) return 0;\n\
    \        if(n == 1) return 1;\n        BigInteger a = 1;\n        BigInteger b\
    \ = 1;\n        BigInteger c = 1;\n        BigInteger i = 3;\n        for(; i\
    \ < n + 1; i++) {\n            c = a + b;\n            a = b;\n            b =\
    \ c;\n        }\n        return (long)c;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015773
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long[,] arr = new long[,]\
    \ { { 1, 1 }, { 1, 0 } };\n        long[,] unit = new long[,] { { 1, 0 }, { 0,\
    \ 1 } };\n        while (n > 0) {\n            if ((n & 1) == 1) {\n         \
    \       unit = Multiply(unit, arr);\n            }\n            arr = Multiply(arr,\
    \ arr);\n            n >>= 1;\n        }\n        return unit[0, 1];\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpvtet1dmw.cs(21,24): error CS0103: The name ''Multiply'' does not exist
    in the current context

    /tmp/tmpvtet1dmw.cs(23,19): error CS0103: The name ''Multiply'' does not exist
    in the current context

    '
  timestamp: 1660015773
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        // >>> h = { 1L:1L, 2L:1L\
    \ }\n        // >>> h[0L]\n        // KeyError: 0L\n        // >>> h.get(0L, 0L)\n\
    \        // (0L)\n        // >>> h[0L] = 0L\n        // >>> h[0L]\n        //\
    \ (0L)\n        var h = new Dictionary<long, long>();\n        h[1L] = 1L;\n \
    \       h[2L] = 1L;\n        h[0L] = 0L;\n        return Fib_Aux(n, h);\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpq7nd1z5x.cs(29,16): error CS0103: The name ''Fib_Aux'' does not exist
    in the current context

    '
  timestamp: 1660015773
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 1; i\
    \ < n; i++) {\n            long t = a + b;\n            a = b;\n            b\
    \ = t;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015773
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        // ...\n        // n should\
    \ be between 0 and 93, or the result will overflow!\n        // ...\n        long[]\
    \ arr = new long[n + 1];\n        arr[0] = 0;\n        arr[1] = 1;\n        for\
    \ (int i = 2; i <= n; i++) {\n            arr[i] = arr[i - 1] + arr[i - 2];\n\
    \        }\n        return arr[n];\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015773
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a, b, c;\n       \
    \ a = 1;\n        b = 1;\n        c = 0;\n        for (long i = 2; i < n; i++)\
    \ {\n            c = a + b;\n            a = b;\n            b = c;\n        }\n\
    \        return c;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cb977de72c834dc4b648df8213fc99e9>:0 \n"
  stdout: ''
  timestamp: 1660015773
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        // >>> Fib((1L))\n    \
    \    // (1L)\n        if (n == 1L) {\n            return 1L;\n        }\n    \
    \    // >>> Fib((2L))\n        // (1L)\n        if (n == 2L) {\n            return\
    \ 1L;\n        }\n        var res = 0L;\n        var f1 = 1L;\n        var f2\
    \ = 1L;\n        var cnt = 3L;\n        // >>> Fib((3L))\n        // (2L)\n  \
    \      while (cnt <= n) {\n            // >>> Fib((8L))\n            // (21L)\n\
    \            res = f1 + f2;\n            f1 = f2;\n            f2 = res;\n   \
    \         cnt = cnt + 1L;\n        }\n        return res;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015773
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        Debug.Assert(n >= 0);\n\
    \        if (n <= 1) return n;\n        BigInteger a = 0;\n        BigInteger\
    \ b = 1;\n        BigInteger c = 1;\n        for (long i = 2; i <= n; i++) {\n\
    \            c = a + b;\n            a = b;\n            b = c;\n        }\n \
    \       return (long)c;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n\
    \    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n\
    \    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015773
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        return (long)Fib(n, Vector.Zero<long>(),\
    \ Vector.One<long>());\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n\
    \    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n\
    \    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1jkm1dbd.cs(17,36): error CS0117: ''Vector'' does not contain a definition
    for ''Zero''

    /tmp/tmp1jkm1dbd.cs(17,57): error CS0117: ''Vector'' does not contain a definition
    for ''One''

    '
  timestamp: 1660015773
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long[] a = new long[n+1];\n\
    \        a[0] = 0;\n        a[1] = 1;\n        for (long i = 2; i <= n; i++) {\n\
    \            a[i] = a[i-1] + a[i-2];\n        }\n        return a[n];\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015773
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n<0) {\n          \
    \  throw new ArgumentException(\"n must be non-negative\");\n        }\n     \
    \   if (n<=1) {\n            return n;\n        }\n        long a = 0L;\n    \
    \    long b = 1L;\n        for (long i=2L; i<=n; i++) {\n            long t =\
    \ a+b;\n            a = b;\n            b = t;\n        }\n        return b;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015773
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n <= 0)\n         \
    \   return 0;\n        if (n == 1)\n            return 1;\n        return Fib(n\
    \ - 1) + Fib(n - 2);\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n\
    \    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n\
    \    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015773
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0L;\n        long\
    \ b = 1L;\n        while (n > 0L) {\n            long next = a + b;\n        \
    \    a = b;\n            b = next;\n            n -= 1L;\n        }\n        return\
    \ a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015773
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0L) {\n      \
    \      return 0L;\n        }\n        if (n == 1L) {\n            return 1L;\n\
    \        }\n        long fib0 = 0L;\n        long fib1 = 1L;\n        for (long\
    \ i = 2L; i <= n; i++) {\n            long tmp = fib0 + fib1;\n            fib0\
    \ = fib1;\n            fib1 = tmp;\n        }\n        return fib1;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015773
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015771
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long k = (n - ((long)1L));\n\
    \        if (k <= ((long)0L)) {\n            return (long)1L;\n        }\n   \
    \     var p = Fib(k);\n        k = (k - ((long)1L));\n        if (k <= ((long)0L))\
    \ {\n            return p;\n        }\n        var q = Fib(k);\n        return\
    \ (p + q);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015773
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015771
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        return Fib_(n).Item1;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpn_g_ylsh.cs(17,16): error CS0103: The name ''Fib_'' does not exist in
    the current context

    '
  timestamp: 1660015773
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015771
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n < 1)\n          \
    \  throw new Exception(\"Fib(n) is defined for n > 0.\");\n        long a = 0;\n\
    \        long b = 1;\n        while (n > 0) {\n            long t = a;\n     \
    \       a = b;\n            b = t + b;\n            n -= 1;\n        }\n     \
    \   return a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015773
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        BigInteger v = (new BigInteger(n)\
    \ * (new BigInteger(5L) * new BigInteger(n) + new BigInteger(4L)) * (new BigInteger(5L)\
    \ * new BigInteger(n) - new BigInteger(4L)));\n        if (((v & 1L) == 0L)) {\n\
    \            v = (v / 2L);\n        } else {\n            v = ((v - 1L) / 2L);\n\
    \        }\n        return ((long)(v % (new BigInteger(1000000007L))));\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <889ee340a9004a54aef592641e881def>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <889ee340a9004a54aef592641e881def>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015773
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long[] numbers = new long[2];\n\
    \        numbers[0] = 0;\n        numbers[1] = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            numbers[i % 2] = numbers[(i - 1) % 2] + numbers[(i\
    \ - 2) % 2];\n        }\n        return numbers[n % 2];\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015773
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        var a = 1L;\n        var\
    \ b = 1L;\n        for (var i = 2L; i < n; i++) {\n            var c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return b;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015773
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n < 2) {\n        \
    \    return n;\n        }\n        var sqrt5 = (long) Math.Sqrt(5);\n        var\
    \ fibn = ((long) Math.Pow((1 + sqrt5) / 2, n) - (long) Math.Pow((1 - sqrt5) /\
    \ 2, n)) / sqrt5;\n        return fibn;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <07722f083a604538a3625ddb2cbde09e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <07722f083a604538a3625ddb2cbde09e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015773
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        BigInteger a = 0, b = 1;\n\
    \        for (long i = 0; i < n; i++) {\n            BigInteger t = a;\n     \
    \       a = b;\n            b = t + b;\n        }\n        return (long)a;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015773
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long prev = 0;\n      \
    \  long curr = 1;\n        for (long i = 0; i < n; i++) {\n            long next\
    \ = prev + curr;\n            prev = curr;\n            curr = next;\n       \
    \ }\n        return prev;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n\
    \    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n\
    \    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015773
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long p = 1L;\n        long\
    \ q = 0L;\n        for (long i = 0L; i < n; i += 1L) {\n            long _p =\
    \ p;\n            long _q = q;\n            p = _p + _q;\n            q = _p;\n\
    \        }\n        return q;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n\
    \    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n\
    \    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015773
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n < 2) return 1;\n\
    \        else return Fib(n - 1) + Fib(n - 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ee8f3983b6664c3fb7882e8626a09582>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ee8f3983b6664c3fb7882e8626a09582>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015773
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        var a = BigInteger.Zero;\n\
    \        var b = BigInteger.One;\n        for (var i = 0L; i < n; i++) {\n   \
    \         var c = a + b;\n            a = b;\n            b = c;\n        }\n\
    \        return (long)a;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n\
    \    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n\
    \    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015773
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n < 2) {\n        \
    \    return n;\n        } else {\n            return Fib(n - 1) + Fib(n - 2);\n\
    \        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015773
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n < 2) {\n        \
    \    return n;\n        } else {\n            long f1 = 1L;\n            long\
    \ f2 = 1L;\n            for (long i = 2L; i < n; i++) {\n                long\
    \ f = f1 + f2;\n                f1 = f2;\n                f2 = f;\n          \
    \  }\n            return f2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015773
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        var a = BigInteger.One;\n\
    \        var b = BigInteger.One;\n        while (n-- > 1) {\n            var c\
    \ = a + b;\n            a = b;\n            b = c;\n        }\n        return\
    \ (long)b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a9f17b31848f4b6fb9c3b2d323a8afdb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a9f17b31848f4b6fb9c3b2d323a8afdb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015774
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        int n2 = (int)(n/2);\n\
    \        long[] fib = new long[n2+1];\n        fib[0] = 1;\n        fib[1] = 1;\n\
    \        for (int i = 2; i <= n2; i++) {\n            fib[i] = fib[i-1] + fib[i-2];\n\
    \        }\n        long a = fib[n2];\n        if (n % 2 == 0) {\n           \
    \ return a * a + fib[n2-1] * fib[n2-1];\n        } else {\n            return\
    \ a * a + a * fib[n2-1] * 2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3410ac2cb4984c32aac02bd76b6289c1>:0 \n\nUnhandled Exception:\n\
    System.IndexOutOfRangeException: Index was outside the bounds of the array.\n\
    \  at Problem.Fib (System.Int64 n) [0x00015] in <3410ac2cb4984c32aac02bd76b6289c1>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00014] in <3410ac2cb4984c32aac02bd76b6289c1>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index\
    \ was outside the bounds of the array.\n  at Problem.Fib (System.Int64 n) [0x00015]\
    \ in <3410ac2cb4984c32aac02bd76b6289c1>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00014] in <3410ac2cb4984c32aac02bd76b6289c1>:0 \n"
  stdout: ''
  timestamp: 1660015774
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n <= 1) return n;\n\
    \        long a = 0, b = 1;\n        while (n-- > 1) {\n            long t = a\
    \ + b;\n            a = b;\n            b = t;\n        }\n        return b;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015773
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (int i = 0; i < n; i++) {\n            long temp = a;\n\
    \            a = b;\n            b = temp + b;\n        }\n        return a;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015773
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) return 0;\n\
    \        long f1 = 0;\n        long f2 = 1;\n        for (long i = 2; i <= n;\
    \ i++) {\n            long f3 = f1 + f2;\n            f1 = f2;\n            f2\
    \ = f3;\n        }\n        return f2;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015773
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n < 2) return 1;\n\
    \        var a = BigInteger.One;\n        var b = BigInteger.One;\n        for\
    \ (var i = 1; i < n; i++) {\n            var t = a;\n            a = b;\n    \
    \        b = a + t;\n        }\n        return (long)b;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <49016c9cd0d7489eabfd0d84fa905429>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <49016c9cd0d7489eabfd0d84fa905429>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015774
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        BigInteger a = 0;\n   \
    \     BigInteger b = 1;\n        BigInteger c = 1;\n        BigInteger d = 0;\n\
    \        while (n > 0) {\n            if (n % 2 == 1) {\n                BigInteger\
    \ x = b;\n                BigInteger y = d;\n                BigInteger z = b\
    \ * c + a * d;\n                b = x + y;\n                d = y;\n         \
    \       a = x;\n                c = z;\n            }\n            BigInteger\
    \ x = a;\n            BigInteger y = b;\n            BigInteger z = a * a + b\
    \ * b;\n            a = x + y;\n            b = y;\n            c = z;\n     \
    \       n = n / 2;\n        }\n        return (long)b;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphedslz2r.cs(23,28): error CS0136: A local or parameter named ''x'' cannot
    be declared in this scope because that name is used in an enclosing local scope
    to define a local or parameter

    /tmp/tmphedslz2r.cs(24,28): error CS0136: A local or parameter named ''y'' cannot
    be declared in this scope because that name is used in an enclosing local scope
    to define a local or parameter

    /tmp/tmphedslz2r.cs(25,28): error CS0136: A local or parameter named ''z'' cannot
    be declared in this scope because that name is used in an enclosing local scope
    to define a local or parameter

    '
  timestamp: 1660015773
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n <= 1) {\n       \
    \     return n;\n        }\n        var matrix = new Matrix2x2(1, 1, 1, 0);\n\
    \        return matrix.Pow(n - 1).M11;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpgxkjkg4j.cs(20,26): error CS0246: The type or namespace name ''Matrix2x2''
    could not be found (are you missing a using directive or an assembly reference?)

    '
  timestamp: 1660015773
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        while (n > 0) {\n            long c = a + b;\n            a\
    \ = b;\n            b = c;\n            n -= 1;\n        }\n        return a;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015774
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long prevprev = 0;\n  \
    \      long prev = 1;\n        for (long i = 0; i < n; i++) {\n            long\
    \ next = prev + prevprev;\n            prevprev = prev;\n            prev = next;\n\
    \        }\n        return prevprev;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015774
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        n = n % 60;\n        long[]\
    \ Fn = new long[60];\n        Fn[0] = 0;\n        Fn[1] = 1;\n        for (int\
    \ i = 2; i < 60; i++) {\n            Fn[i] = (Fn[i - 1] + Fn[i - 2]) % 10;\n \
    \       }\n        return Fn[n];\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <155ec15e0ba6458d9944e3e9008ddc28>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <155ec15e0ba6458d9944e3e9008ddc28>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015774
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        int[,] a = new int[2, 2]\
    \ { { 1, 1 }, { 1, 0 } };\n        int[,] x = new int[2, 2] { { 1, 0 }, { 0, 1\
    \ } };\n        while (n > 0) {\n            if ((n & 1) == 1) {\n           \
    \     x = Mul(x, a);\n            }\n            a = Mul(a, a);\n            n\
    \ = n >> 1;\n        }\n        return x[0, 1];\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp26dzmrcz.cs(21,21): error CS0103: The name ''Mul'' does not exist in the
    current context

    /tmp/tmp26dzmrcz.cs(23,17): error CS0103: The name ''Mul'' does not exist in the
    current context

    '
  timestamp: 1660015773
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        // Write your code here.\n\
    \        if (n == 0) return 0;\n        if (n == 1) return 1;\n        BigInteger\
    \ a = 0;\n        BigInteger b = 1;\n        BigInteger c = 1;\n        for (int\
    \ i = 2; i <= n; i++) {\n            c = a + b;\n            a = b;\n        \
    \    b = c;\n        }\n        return (long)c;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015774
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n < 1) {\n        \
    \    throw new Exception();\n        }\n        long prev_1 = 1;\n        long\
    \ prev_2 = 0;\n        for (long i = 2; i <= n; i++) {\n            long next\
    \ = prev_1 + prev_2;\n            prev_2 = prev_1;\n            prev_1 = next;\n\
    \        }\n        return prev_1;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015774
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        while (n > 0) {\n            long c = a + b;\n            a\
    \ = b;\n            b = c;\n            n -= 1;\n        }\n        return a;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015774
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long t = a;\n  \
    \          a = b;\n            b = t + b;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015774
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        var a = 0L;\n        var b = 1L;\n        for (var i = 2; i <=\
    \ n; i++) {\n            var c = a + b;\n            a = b;\n            b = c;\n\
    \        }\n        return b;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n\
    \    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n\
    \    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015774
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long f1 = 1;\n        long\
    \ f2 = 1;\n        long f3 = 1;\n        for (long i = 3; i <= n; i++) {\n   \
    \         f3 = f1 + f2;\n            f1 = f2;\n            f2 = f3;\n        }\n\
    \        return f3;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n \
    \   Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n\
    \    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015774
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        return (n == 0L) ? 0L :\
    \ ((n == 1L) ? 1L : (Fib(n - 1L) + Fib(n - 2L)));\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015774
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n <= 1) {\n       \
    \     return n;\n        }\n        long a = 0;\n        long b = 1;\n       \
    \ long i = 2;\n        while (i <= n) {\n            long c = a + b;\n       \
    \     a = b;\n            b = c;\n            i += 1;\n        }\n        return\
    \ b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015774
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015771
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        var s = new List<long>();\n\
    \        s.Add(1);\n        s.Add(1);\n        while (s.Count <= n) {\n      \
    \      s.Add(s[s.Count - 1] + s[s.Count - 2]);\n        }\n        return s[s.Count\
    \ - 1];\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <932baf28497b47dba1bdad6980691691>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <932baf28497b47dba1bdad6980691691>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015774
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) return 0;\n\
    \        long a = 0;\n        long b = 1;\n        for (long i = 2; i <= n; i++)\
    \ {\n            long c = a + b;\n            a = b;\n            b = c;\n   \
    \     }\n        return b;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n\
    \    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n\
    \    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015771
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 1;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <56dd7a9b275943bdb8e519d84c53ccce>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <56dd7a9b275943bdb8e519d84c53ccce>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015774
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n < 0) {\n        \
    \    throw new ArgumentException(\"Input must be non-negative.\");\n        }\n\
    \        long a = 0;\n        long b = 1;\n        for (long i = 1; i < n; i++)\
    \ {\n            long c = a + b;\n            a = b;\n            b = c;\n   \
    \     }\n        return b;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n\
    \    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n\
    \    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015774
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n < 2) {\n        \
    \    return n;\n        }\n        long a = 0L;\n        long b = 1L;\n      \
    \  for (long i = 2L; i <= n; i++) {\n            long tmp = a + b;\n         \
    \   a = b;\n            b = tmp;\n        }\n        return b;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015774
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long[] a = new long[n +\
    \ 1];\n        for (long i = 0; i <= n; i++) {\n            if (i <= 1)\n    \
    \            a[i] = 1;\n            else\n                a[i] = a[i - 1] + a[i\
    \ - 2];\n        }\n        return a[n];\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <81acb97f3d1b4c758c98d2f56a03bb21>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <81acb97f3d1b4c758c98d2f56a03bb21>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015774
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        BigInteger[][] M = new\
    \ BigInteger[][] {\n            new BigInteger[] {1,1},\n            new BigInteger[]\
    \ {1,0}\n        };\n        Matrix.Power(M, n-1);\n        return (long) M[0][0];\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpljxco8oz.cs(21,9): error CS0103: The name ''Matrix'' does not exist in
    the current context

    '
  timestamp: 1660015774
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015771
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        // Calculate Fibonacci\
    \ number for n\n        return (long)BigInteger.ModPow(new BigInteger(1), new\
    \ BigInteger(1), new BigInteger(2));\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f042d9e0cca744bf881d3e3bcdba484d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f042d9e0cca744bf881d3e3bcdba484d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015774
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long[] f = new long[2];\n\
    \        f[0] = 0;\n        f[1] = 1;\n        for (long i = 0; i < n; i++) {\n\
    \            f[i % 2] = f[0] + f[1];\n        }\n        return f[n % 2];\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015774
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0L) {\n      \
    \      return 0L;\n        }\n        if (n == 1L) {\n            return 1L;\n\
    \        }\n        return (Fib((n - 1L)) + Fib((n - 2L)));\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015774
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        // Assume n >= 0\n    \
    \    Debug.Assert(n >= 0);\n        if (n <= 1) {\n            return n;\n   \
    \     } else {\n            long a = 0;\n            long b = 1;\n           \
    \ for (long i = 0; i < n - 1; i++) {\n                long c = a + b;\n      \
    \          a = b;\n                b = c;\n            }\n            return b;\n\
    \        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015774
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        BigInteger a = 0;\n   \
    \     BigInteger b = 1;\n        while (n > 0) {\n            if ((n & 1) != 0)\
    \ {\n                var t = a;\n                a = b;\n                b = t\
    \ + b;\n            }\n            n >>= 1;\n            var tt = a;\n       \
    \     a = a + a;\n            b = b + b;\n            if (a >= MOD) a -= MOD;\n\
    \            if (b >= MOD) b -= MOD;\n        }\n        return (long) a;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpznk_owmf.cs(29,22): error CS0103: The name ''MOD'' does not exist in the
    current context

    /tmp/tmpznk_owmf.cs(29,32): error CS0103: The name ''MOD'' does not exist in the
    current context

    /tmp/tmpznk_owmf.cs(30,22): error CS0103: The name ''MOD'' does not exist in the
    current context

    /tmp/tmpznk_owmf.cs(30,32): error CS0103: The name ''MOD'' does not exist in the
    current context

    '
  timestamp: 1660015774
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n < 1) {\n        \
    \    return 0;\n        }\n        long a = 0, b = 1;\n        for (long i = 0;\
    \ i < n; i++) {\n            long c = a + b;\n            a = b;\n           \
    \ b = c;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015774
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n <= 1) {\n       \
    \     return n;\n        } else {\n            var a = 0L;\n            var b\
    \ = 1L;\n            while (n > 1) {\n                var c = a + b;\n       \
    \         a = b;\n                b = c;\n                n -= 1;\n          \
    \  }\n            return b;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015774
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n < 0) throw new ArgumentException();\n\
    \        if (n == 0) return 0;\n        if (n == 1) return 1;\n        var a =\
    \ Fib(n / 2);\n        var b = Fib(n / 2 + 1);\n        if (n % 2 == 0) {\n  \
    \          return a * (2 * b - a);\n        } else {\n            return b * b\
    \ + a * a;\n        }\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n\
    \    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n\
    \    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1660015780
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n < 0) {\n        \
    \    throw new ArgumentException(\"Negative argument.\");\n        }\n       \
    \ if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n   \
    \         return 1;\n        }\n        long n1 = 0;\n        long n2 = 1;\n \
    \       long k = 2;\n        while (k <= n) {\n            long t = n1 + n2;\n\
    \            n1 = n2;\n            n2 = t;\n            k = k + 1;\n        }\n\
    \        return n2;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n \
    \   Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n\
    \    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015774
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        var fib = new BigInteger[n\
    \ + 1];\n        fib[0] = 0;\n        fib[1] = 1;\n        for (int i = 2; i <=\
    \ n; i++) {\n            fib[i] = fib[i - 1] + fib[i - 2];\n        }\n      \
    \  return (long)fib[n];\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n\
    \    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n\
    \    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015774
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        BigInteger a = 0;\n   \
    \     BigInteger b = 1;\n        BigInteger c = 0;\n        while (n > 0) {\n\
    \            c = a + b;\n            a = b;\n            b = c;\n            n\
    \ -= 1;\n        }\n        return c;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp2o7nfpsp.cs(26,16): error CS0266: Cannot implicitly convert type ''System.Numerics.BigInteger''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660015774
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        return (n > 1) ? (Fib(n\
    \ - 1) + Fib(n - 2)) : (n);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n\
    \    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n\
    \    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015775
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        // Your code goes here.\n\
    \        if (n == 0) return 0;\n        if (n == 1) return 1;\n        long i\
    \ = 0;\n        long j = 1;\n        for (long k = 2; k <= n; k++) {\n       \
    \     var temp = i + j;\n            i = j;\n            j = temp;\n        }\n\
    \        return j;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015775
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n <= 1) return n;\n\
    \        var v = Matrix<long>.One(2, 2);\n        v[1, 1] = 0;\n        var p\
    \ = Matrix<long>.One(2, 2);\n        for (; n > 0; n /= 2) {\n            if (n\
    \ % 2 != 0) p *= v;\n            v *= v;\n        }\n        return p[0, 1];\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpyxpt7361.cs(18,17): error CS0103: The name ''Matrix'' does not exist in
    the current context

    /tmp/tmpyxpt7361.cs(20,17): error CS0103: The name ''Matrix'' does not exist in
    the current context

    '
  timestamp: 1660015775
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        var a = 0L;\n        var b = 1L;\n        while (n > 1) {\n \
    \           var c = a + b;\n            a = b;\n            b = c;\n         \
    \   n = n - 1;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015775
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (int i = 0; i < n; i++) {\n            var c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015775
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long temp = a;\n\
    \            a = b;\n            b = temp + b;\n        }\n        return a;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015772
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n < 2) {\n        \
    \    return n;\n        }\n        long[] a = new long[2];\n        a[0] = 0;\n\
    \        a[1] = 1;\n        long[] s = new long[2];\n        s[0] = 1;\n     \
    \   s[1] = 1;\n        long[] t = new long[2];\n        t[0] = 1;\n        t[1]\
    \ = 0;\n        while (n > 0) {\n            if (n % 2 == 1) {\n             \
    \   // Multiply s with a.\n                long[] temp = new long[2];\n      \
    \          temp[0] = s[0] * a[0] + s[1] * a[1];\n                temp[1] = s[0]\
    \ * a[1] + s[1] * a[0];\n                s[0] = temp[0];\n                s[1]\
    \ = temp[1];\n            }\n            // Multiply a with a.\n            long[]\
    \ temp2 = new long[2];\n            temp2[0] = a[0] * a[0] + a[1] * a[1];\n  \
    \          temp2[1] = a[0] * a[1] + a[1] * a[0];\n            a[0] = temp2[0];\n\
    \            a[1] = temp2[1];\n            n = n / 2;\n        }\n        return\
    \ s[1];\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0b760758800140b8bddc05371c50a80d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0b760758800140b8bddc05371c50a80d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015775
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015771
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        List<long> fib = new List<long>()\
    \ {0, 1};\n        for (int i = 2; i <= n; i++) {\n            fib.Add(fib[i -\
    \ 1] + fib[i - 2]);\n        }\n        return fib[(int)n];\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015775
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        Matrix2x2 m = new Matrix2x2(new\
    \ long[] { 1, 1, 1, 0 });\n        Matrix2x2 mn = m.Power(n);\n        return\
    \ mn.Data[0];\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpv_8l7sjj.cs(17,9): error CS0246: The type or namespace name ''Matrix2x2''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmpv_8l7sjj.cs(17,27): error CS0246: The type or namespace name ''Matrix2x2''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmpv_8l7sjj.cs(18,9): error CS0246: The type or namespace name ''Matrix2x2''
    could not be found (are you missing a using directive or an assembly reference?)

    '
  timestamp: 1660015775
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        while (n-- > 0) {\n            long tmp = a;\n            a\
    \ = b;\n            b += tmp;\n        }\n        return a;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015775
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        var a = new BigInteger(0);\n\
    \        var b = new BigInteger(1);\n        var c = new BigInteger(1);\n    \
    \    for (long i = 1; i < n; i++) {\n            c = a + b;\n            a = b;\n\
    \            b = c;\n        }\n        return (long)c;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015775
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long fn0 = 0;\n       \
    \ long fn1 = 1;\n        long fn2 = 0;\n        long i = 2;\n        while (i\
    \ <= n) {\n            fn2 = fn0 + fn1;\n            fn0 = fn1;\n            fn1\
    \ = fn2;\n            i = i + 1;\n        }\n        return fn2;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <aa31caa592584a75b30c2c4c4833fd20>:0 \n"
  stdout: ''
  timestamp: 1660015775
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        BigInteger a = 1, b = 1;\n\
    \        for (long i = 0; i < n; i++) {\n            BigInteger t = a;\n     \
    \       a = b;\n            b = t + b;\n        }\n        return (long)a;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eb023427687045c8b7b30a684245f061>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eb023427687045c8b7b30a684245f061>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015775
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long f1 = 1L;\n       \
    \ long f2 = 1L;\n        for (int i = 0; i < n - 2; i++) {\n            long tmp\
    \ = f1;\n            f1 = f2;\n            f2 = tmp + f2;\n        }\n       \
    \ return f2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015775
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        // Initial values\n   \
    \     long f_prev = 0;\n        long f = 1;\n        // Key invariant: f_prev\
    \ + f = F_{n+1}\n        long i = 0;\n        while (i < n) {\n            long\
    \ f_next = f_prev + f;\n            f_prev = f;\n            f = f_next;\n   \
    \         i = i + 1;\n        }\n        return f_prev;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015775
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        // fib(n) = phi^n/sqrt(5)\n\
    \        // fib(n+1) = fib(n) * phi = phi^(n+1)/sqrt(5)\n        // fib(n+2) =\
    \ fib(n+1) * phi = phi^(n+2)/sqrt(5)\n        // fib(n+3) = fib(n+2) * phi = phi^(n+3)/sqrt(5)\n\
    \        // ...\n        // fib(n+k) = phi^(n+k)/sqrt(5)\n        //\n       \
    \ // fib(n+k) = fib(n+k-1) + fib(n+k-2)\n        // fib(n+k-1) = fib(n+k-2) +\
    \ fib(n+k-3)\n        // fib(n+k-2) = fib(n+k-3) + fib(n+k-4)\n        // ...\n\
    \        // fib(n+1) = fib(n) + fib(n-1)\n        // fib(n) = fib(n-1) + fib(n-2)\n\
    \        //\n        // fib(n+k) = fib(n+k-1) + fib(n+k-2)\n        // fib(n+k-1)\
    \ = fib(n+k-2) + fib(n+k-3)\n        // fib(n+k-2) = fib(n+k-3) + fib(n+k-4)\n\
    \        // ...\n        // fib(n+1) = fib(n) + fib(n-1)\n        // fib(n) =\
    \ fib(n-1) + fib(n-2)\n        // = phi^(n-1)/sqrt(5) + phi^(n-2)/sqrt(5)\n  \
    \      // = (phi^(n-1) + phi^(n-2))/sqrt(5)\n        // = phi^(n-2)*(phi + 1)/sqrt(5)\n\
    \        // = phi^(n-2)*(1/sqrt(5) + 1\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmdwedthb.cs(16,24): error CS0161: ''Problem.Fib(long)'': not all code
    paths return a value

    '
  timestamp: 1660015775
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long curr = 1;\n      \
    \  long next = 1;\n        for (long i = 2; i < n; i++) {\n            long temp\
    \ = next;\n            next = next + curr;\n            curr = temp;\n       \
    \ }\n        return next;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n\
    \    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n\
    \    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015775
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        var a = BigInteger.One;\n\
    \        var b = BigInteger.One;\n        while (n > 0) {\n            var c =\
    \ a + b;\n            a = b;\n            b = c;\n            n -= 1;\n      \
    \  }\n        return (long)a;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n\
    \    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n\
    \    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9cc60cfb0b7b45f88feb032cb84efc61>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9cc60cfb0b7b45f88feb032cb84efc61>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015775
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n < 1)\n          \
    \  throw new ArgumentException(\"n must be positive\");\n        if (n == 1 ||\
    \ n == 2)\n            return 1;\n        long cur = 1, prev = 1;\n        for\
    \ (long i = 3; i <= n; i++) {\n            long tmp = cur;\n            cur +=\
    \ prev;\n            prev = tmp;\n        }\n        return cur;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015775
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        var R = new long[3, 3]\
    \ { { 1, 1, 0 }, { 1, 0, 1 }, { 1, 1, 1 } };\n        var V = new long[3, 1] {\
    \ { 1 }, { 0 }, { 0 } };\n        var E = new long[3, 3] { { 1, 0, 0 }, { 0, 1,\
    \ 0 }, { 0, 0, 1 } };\n        while (n > 0) {\n            if ((n & 1) == 1)\
    \ {\n                E = Multiply(E, R);\n            }\n            R = Multiply(R,\
    \ R);\n            n >>= 1;\n        }\n        return Multiply(E, V)[0, 0];\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpc2tzoybw.cs(22,21): error CS0103: The name ''Multiply'' does not exist
    in the current context

    /tmp/tmpc2tzoybw.cs(24,17): error CS0103: The name ''Multiply'' does not exist
    in the current context

    /tmp/tmpc2tzoybw.cs(27,16): error CS0103: The name ''Multiply'' does not exist
    in the current context

    '
  timestamp: 1660015775
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015771
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (int i = 1; i < n; i++) {\n            long t = a + b;\n\
    \            a = b;\n            b = t;\n        }\n        return b;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015775
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        var x = BigInteger.One;\n\
    \        var y = BigInteger.Zero;\n        while (n > 0) {\n            var next\
    \ = x + y;\n            x = y;\n            y = next;\n            n -= 1;\n \
    \       }\n        return (long)x;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2b51b776bb6b4faca241ef8f19b783fd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2b51b776bb6b4faca241ef8f19b783fd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015775
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long i = 1;\n        long\
    \ j = 0;\n        while (n > 0) {\n            if ((n & 1) == 1) {\n         \
    \       j = i + j;\n                i = i + j;\n            } else {\n       \
    \         i = i + j;\n            }\n            n >>= 1;\n        }\n       \
    \ return j;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6c044f99f7d344fd93bca1b5812f6f65>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6c044f99f7d344fd93bca1b5812f6f65>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015775
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015771
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        var a = BigInteger.Zero;\n\
    \        var b = BigInteger.One;\n        for (long k = 0; k < n; k++) {\n   \
    \         var c = a + b;\n            a = b;\n            b = c;\n        }\n\
    \        return (long)a;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n\
    \    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n\
    \    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015775
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        Debug.Assert(n >= 0);\n\
    \        // Take care of the first two cases.\n        if (n <= 1) return n;\n\
    \        // Initialize list.\n        var f = new List<long> { 1, 1 };\n     \
    \   // Iterate.\n        for (long i = 2; i < n; i++) {\n            f.Add(f[i\
    \ - 1] + f[i - 2]);\n        }\n        // Return last number.\n        return\
    \ f[n - 1];\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppvg9fxva.cs(24,21): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmppvg9fxva.cs(24,32): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmppvg9fxva.cs(27,18): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015775
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        // TODO: Implement\n  \
    \      return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d44eb2eb6d6244ac98417fb2723b5d0f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d44eb2eb6d6244ac98417fb2723b5d0f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015776
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        //if (n == 0) {\n     \
    \   //    return 1;\n        //}\n        //long a = 1;\n        //long b = 1;\n\
    \        //for (long i = 2; i < n; i++) {\n        //    long tmp = a;\n     \
    \   //    a = b;\n        //    b = tmp + b;\n        //}\n        //return b;\n\
    \        return (1 << n) - 1;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n\
    \    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n\
    \    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpl5sistfh.cs(28,17): error CS0019: Operator ''<<'' cannot be applied to
    operands of type ''int'' and ''long''

    '
  timestamp: 1660015775
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n < 0) {\n        \
    \    throw new ArgumentException(\"Parameter n must be non-negative.\");\n   \
    \     }\n\n        BigInteger a = 1;\n        BigInteger b = 1;\n        BigInteger\
    \ c = 1;\n        BigInteger d = 0;\n        while (n > 0) {\n            if ((n\
    \ & 1) == 1) {\n                d = b * c + a * d;\n                b = b * c\
    \ + a * b;\n                a = a * c + a * b;\n            }\n            c =\
    \ b * b + a * c;\n            b = b * b + a * b;\n            a = a * b + a *\
    \ c;\n            n >>= 1;\n        }\n        return (long)b;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.OverflowException: Value was either too\
    \ large or too small for an Int64.\n  at System.Numerics.BigInteger.op_Explicit\
    \ (System.Numerics.BigInteger value) [0x00079] in <60e4143c0cb74cd7b46ca0d0274780b4>:0\
    \ \n  at Problem.Fib (System.Int64 n) [0x000d6] in <962496134a424a0abe9334ee6620ca1f>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <962496134a424a0abe9334ee6620ca1f>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.OverflowException: Value was either\
    \ too large or too small for an Int64.\n  at System.Numerics.BigInteger.op_Explicit\
    \ (System.Numerics.BigInteger value) [0x00079] in <60e4143c0cb74cd7b46ca0d0274780b4>:0\
    \ \n  at Problem.Fib (System.Int64 n) [0x000d6] in <962496134a424a0abe9334ee6620ca1f>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <962496134a424a0abe9334ee6620ca1f>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015775
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        return n == 0L ? 0L : n\
    \ == 1L ? 1L : Problem.Fib(n - 1L) + Problem.Fib(n - 2L);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015775
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n < 1)\n          \
    \  throw new Exception(\"Fibonacci number has to be greater than 0\");\n     \
    \   if (n < 3)\n            return 1;\n        return Fib(n - 1) + Fib(n - 2);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        return new long[] {\n \
    \           0L, 1L, 1L, 2L, 3L, 5L, 8L, 13L, 21L, 34L, 55L, 89L, 144L, 233L, 377L,\
    \ 610L, 987L, 1597L, 2584L, 4181L, 6765L, 10946L, 17711L, 28657L, 46368L, 75025L,\
    \ 121393L, 196418L, 317811L, 514229L, 832040L, 1346269L, 2178309L, 3524578L, 5702887L,\
    \ 9227465L, 14930352L, 24157817L, 39088169L, 63245986L, 102334155L, 165580141L,\
    \ 267914296L, 433494437L, 701408733L, 1134903170L, 1836311903L, 2971215073L, 4807526976L,\
    \ 7778742049L, 12586269025L, 20365011074L, 32951280099L, 53316291173L, 86267571272L,\
    \ 139583862445L, 225851433717L, 365435296162L, 591286729879L, 956722026041L, 1548008755920L,\
    \ 2504730781961L, 4052739537881L, 6557470319842L, 10610209857723L, 17167680177565L,\
    \ 27777890035288L, 44945570212853L, 72723460248141L, 117669030460994L, 190392490709135L,\
    \ 308061521170129L, 498454011879264L, 806515533049393L, 1304969544928657L, 2111485077978050L,\
    \ 3416454622906707L, 5527939700884757L, 8944394323791464L, 14472334024676221L,\
    \ 23416728348467685L, 37889062373143906L, 61305790721611591L, 99194853094755497L,\
    \ 16050064381636\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9buamabf.cs(19,6): error CS1002: ; expected

    /tmp/tmp9buamabf.cs(20,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmp9buamabf.cs(28,2): error CS1513: } expected

    '
  timestamp: 1660015775
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        return n < 3 ? n - 1 :\
    \ Fib(n - 1) + Fib(n - 2);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n\
    \    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n\
    \    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9efa2230c2164fed9ddf66b071e2f492>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9efa2230c2164fed9ddf66b071e2f492>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        var n_2 = 0L;\n        var n_1 = 1L;\n        for (var i = 2L;\
    \ i <= n; i++) {\n            var sum = n_1 + n_2;\n            n_2 = n_1;\n \
    \           n_1 = sum;\n        }\n        return n_1;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        var v2 = new long[] { 1L,\
    \ 0L };\n        var v3 = new long[] { 0L, 1L };\n        for (long k = n; k >\
    \ 0L; k >>= 1L) {\n            var tmp = v2[0] * (v3[0] * 2L - v2[0]);\n     \
    \       v2[0] = v2[0] * v2[0] + v3[0] * v3[0];\n            v3[0] = tmp;\n   \
    \         if ((k & 1L) == 1L) {\n                tmp = v2[0] + v3[0];\n      \
    \          v2[0] = v2[0] + v3[0] * 2L;\n                v3[0] = tmp;\n       \
    \     }\n        }\n        return v2[0];\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpvl33z6hf.cs(19,34): error CS0019: Operator ''>>='' cannot be applied to
    operands of type ''long'' and ''long''

    '
  timestamp: 1660015775
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        return (n <= 1) ? 1 : Fib(n\
    \ - 1) + Fib(n - 2);\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n\
    \    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n\
    \    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7e96a35a29d8495db7a320c6b457f109>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7e96a35a29d8495db7a320c6b457f109>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 1;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <56dd7a9b275943bdb8e519d84c53ccce>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <56dd7a9b275943bdb8e519d84c53ccce>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015774
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n < 1)\n          \
    \  throw new ArgumentException(\"n should be greater than zero.\");\n        if\
    \ (n < 3)\n            return 1;\n        long a = 1, b = 1, c = 1;\n        for\
    \ (int i = 3; i <= n; i++) {\n            c = a + b;\n            a = b;\n   \
    \         b = c;\n        }\n        return c;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        BigInteger[] F = new BigInteger[n+1];\n\
    \        F[0] = 0;\n        F[1] = 1;\n        for (int i = 2; i <= n; i++) {\n\
    \            F[i] = F[i-1] + F[i-2];\n        }\n        return (long)F[n];\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0L;\n        long\
    \ b = 1L;\n        long c = 0L;\n        long i = 0L;\n        while (i < n) {\n\
    \            c = a + b;\n            a = b;\n            b = c;\n            i\
    \ = i + 1L;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        BigInteger a = 1;\n   \
    \     BigInteger b = 1;\n        for (long i = 3; i <= n; i++) {\n           \
    \ BigInteger c = a + b;\n            a = b;\n            b = c;\n        }\n \
    \       return (long)b;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n\
    \    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n\
    \    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0L;\n        long\
    \ b = 1L;\n        for (long i = 0L; i < n; i++) {\n            long temp = a;\n\
    \            a = b;\n            b = temp + b;\n        }\n        return a;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) return 0;\n\
    \        if (n == 1) return 1;\n        long a = 0;\n        long b = 1;\n   \
    \     long c = 1;\n        while (n-- > 1) {\n            c = a + b;\n       \
    \     a = b;\n            b = c;\n        }\n        return c;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n <= 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (int i = 0; i <\
    \ n; i++) {\n            long temp = a;\n            a = b;\n            b = temp\
    \ + b;\n        }\n        return a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0L)\n        \
    \    return 0L;\n        long a = 0L;\n        long b = 1L;\n        for (long\
    \ i = 2L; i <= n; i++) {\n            long c = a + b;\n            a = b;\n  \
    \          b = c;\n        }\n        return b;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long f0 = 0L;\n       \
    \ long f1 = 1L;\n        for (long i = 0L; i < n; i++) {\n            long t =\
    \ f0;\n            f0 = f1;\n            f1 = t + f1;\n        }\n        return\
    \ f0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        // Fill here\n        if\
    \ (n == 0) return 0;\n        if (n == 1) return 1;\n        long ret1 = 0;\n\
    \        long ret2 = 1;\n        long ret3 = 1;\n        while (n > 1) {\n   \
    \         ret3 = ret1 + ret2;\n            ret1 = ret2;\n            ret2 = ret3;\n\
    \            n--;\n        }\n        return ret3;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        var (x, y) = (BigInteger.One,\
    \ BigInteger.Zero);\n        for (var i = 63 - n.LeadingZeroCount(); i >= 0; i--)\
    \ {\n            var dx = x * (y * 2 - x);\n            var dy = y * y + x * x;\n\
    \            x = dx;\n            y = dy;\n            if ((((ulong)n >> i) &\
    \ 1) != 0) {\n                var dx = x + y;\n                x = y;\n      \
    \          y = dx;\n            }\n        }\n        return (long)x;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1ft8_ne0.cs(18,29): error CS1061: ''long'' does not contain a definition
    for ''LeadingZeroCount'' and no accessible extension method ''LeadingZeroCount''
    accepting a first argument of type ''long'' could be found (are you missing a
    using directive or an assembly reference?)

    /tmp/tmp1ft8_ne0.cs(24,21): error CS0136: A local or parameter named ''dx'' cannot
    be declared in this scope because that name is used in an enclosing local scope
    to define a local or parameter

    '
  timestamp: 1660015776
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        n = n + 1;\n        var\
    \ ret = new[] { new[] { new BigInteger(1), new BigInteger(0) }, new[] { new BigInteger(0),\
    \ new BigInteger(1) } };\n        var p = new[] { new[] { new BigInteger(1), new\
    \ BigInteger(1) }, new[] { new BigInteger(1), new BigInteger(0) } };\n       \
    \ for (; n > 0; n /= 2) {\n            if (n % 2 != 0) {\n                ret\
    \ = Mult(ret, p);\n            }\n            p = Mult(p, p);\n        }\n   \
    \     return (long)ret[0][1];\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n\
    \    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n\
    \    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpyjm6uhv8.cs(22,23): error CS0103: The name ''Mult'' does not exist in
    the current context

    /tmp/tmpyjm6uhv8.cs(24,17): error CS0103: The name ''Mult'' does not exist in
    the current context

    '
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) return 0;\n\
    \        if (n == 1) return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n < 0)\n          \
    \  throw new ArgumentException();\n        if (n == 0)\n            return 0;\n\
    \        if (n == 1)\n            return 1;\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 2; i <= n; i++) {\n            var c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return b;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long prevprev = 0;\n  \
    \      long prev = 1;\n        long result = n;\n        for (long i = 2; i <=\
    \ n; i++) {\n            result = prev + prevprev;\n            prevprev = prev;\n\
    \            prev = result;\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        return (((n == 0L) || (n\
    \ == 1L)) ? n : ((Fib((n - 1L)) + Fib((n - 2L))) % 1000000007L));\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776

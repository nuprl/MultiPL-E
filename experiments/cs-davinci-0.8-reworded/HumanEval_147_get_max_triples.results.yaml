language: cs
name: HumanEval_147_get_max_triples
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long total = 0;\n        for (int i = 1;
    i < n - 1; i++) {\n            for (int j = i + 1; j < n; j++) {\n                for
    (int k = j + 1; k <= n; k++) {\n                    long iVal = i * i - i + 1;\n
    \                   long jVal = j * j - j + 1;\n                    long kVal
    = k * k - k + 1;\n                    if ((iVal + jVal + kVal) % 3 == 0) {\n                        //Console.WriteLine(\"({0},
    {1}, {2})\", iVal, jVal, kVal);\n                        total++;\n                    }\n
    \               }\n            }\n        }\n        return total;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976250
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        return n;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bf18c6bfbca847c6a88b0825b1e3d653>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bf18c6bfbca847c6a88b0825b1e3d653>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976250
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        for (int
    i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long
    res = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i +
    1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n                    if
    ((a[i] + a[j] + a[k]) % 3 == 0) res++;\n                }\n            }\n        }\n
    \       return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <10bfd9d23e884fceab265e9c5365659d>:0
    \n"
  stdout: ''
  timestamp: 1659976250
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        int count = 0;\n        if (n >= 3) {\n
    \           count = (int)(n * (n - 1) * (n - 2) / 6);\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6226e162b6ca4d9e993b5297b8f11a8f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6226e162b6ca4d9e993b5297b8f11a8f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976250
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        for (int
    i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long
    ans = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i +
    1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n                    if
    ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        ans++;\n                    }\n
    \               }\n            }\n        }\n        return ans;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cd7b8ccf5fbf4a76a4864332b92f320a>:0
    \n"
  stdout: ''
  timestamp: 1659976250
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] A = new long[n];\n        for (int
    i = 0; i < n; i++) {\n            A[i] = i * i - i + 1;\n        }\n        int
    count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i
    + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n                    if
    ((A[i] + A[j] + A[k]) % 3 == 0) {\n                        count++;\n                    }\n
    \               }\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3c136f407aa34cd188dce94680469067>:0
    \n"
  stdout: ''
  timestamp: 1659976250
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long sum = 0;\n        // As n is given
    to be positive, we can safely cast it to an int\n        int n1 = (int)n;\n        //
    The length of a, the list, is equal to n.\n        int[] a = new int[n1];\n        //
    For each i in the range of 0 to n, inclusive.\n        for (int i = 0; i <= n1;
    i++) {\n            // Calculate a[i] = i * i - i + 1\n            int a1 = i
    * i - i + 1;\n            // Store a[i] in the appropriate index.\n            a[i]
    = a1;\n        }\n        // For each element in a.\n        foreach (int i in
    a) {\n            // For each element in a following the current element.\n            foreach
    (int j in a.Skip(Array.IndexOf(a, i) + 1)) {\n                // For each element
    in a following the current element.\n                foreach (int k in a.Skip(Array.IndexOf(a,
    j) + 1)) {\n                    // If the sum of i, j, and k are multiples of
    3.\n                    if ((i + j + k) % 3 == 0) {\n                        //
    Increment sum.\n                        sum++;\n                    }\n                }\n
    \           }\n        }\n        // Return the sum.\n        return sum;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside
    the bounds of the array.\n  at Problem.GetMaxTriples (System.Int64 n) [0x0001c]
    in <89c461aa1f1e4fe685004a787411bfcd>:0 \n  at Problem.Main (System.String[] args)
    [0x00001] in <89c461aa1f1e4fe685004a787411bfcd>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.IndexOutOfRangeException: Index was outside the bounds of the array.\n
    \ at Problem.GetMaxTriples (System.Int64 n) [0x0001c] in <89c461aa1f1e4fe685004a787411bfcd>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <89c461aa1f1e4fe685004a787411bfcd>:0
    \n"
  stdout: ''
  timestamp: 1659976250
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        var arr = new List<int>();\n        for
    (var i = 1; i <= n; i++) {\n            arr.Add(i * i - i + 1);\n        }\n        var
    count = 0;\n        for (var i = 0; i < arr.Count; i++) {\n            for (var
    j = i + 1; j < arr.Count; j++) {\n                for (var k = j + 1; k < arr.Count;
    k++) {\n                    if ((arr[i] + arr[j] + arr[k]) % 3 == 0) {\n                        count++;\n
    \                   }\n                }\n            }\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976250
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] nArr = new long[n];\n        for
    (int i = 0; i < n; i++)\n        {\n            nArr[i] = i * i - i + 1;\n        }\n
    \       int count = 0;\n        for (int i = 0; i < n; i++)\n        {\n            for
    (int j = i+1; j < n; j++)\n            {\n                for (int k = j+1; k
    < n; k++)\n                {\n                    if ((nArr[i] + nArr[j] + nArr[k])
    % 3 == 0)\n                    {\n                        count++;\n                    }\n
    \               }\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9a7fe425eb13472a8463ec1c1e59c992>:0
    \n"
  stdout: ''
  timestamp: 1659976250
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long sum = 0;\n        for (int i = 1; i
    < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if
    ((j * j - j + 1) % 3 == (i * i - i + 1) % 3) {\n                    int k = 3
    - ((i * i - i + 1) % 3);\n                    long kk = (long) Math.Floor(Math.Sqrt(k
    * j + i * i - i * j + 1));\n                    if (kk * kk == k * j + i * i -
    i * j + 1) {\n                        sum++;\n                    }\n                }\n
    \           }\n        }\n        return sum;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ab87204ce45b4db081c3358e001906a5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ab87204ce45b4db081c3358e001906a5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976250
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // Your code goes here.\n        return
    0L;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <54831fb7a067439192719a57624c2abe>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <54831fb7a067439192719a57624c2abe>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976250
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        long count
    = 0;\n        for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n
    \       }\n        for (int i = 0; i < n; i++) {\n            for (int j = i +
    1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n                    if
    ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n                    }\n
    \               }\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e2d102542cab48a9982af15a5d622558>:0
    \n"
  stdout: ''
  timestamp: 1659976250
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // Implement this function yourself!\n        long
    total = 0;\n        for (long i = 1; i < n; i++) {\n            for (long j =
    i + 1; j < n; j++) {\n                for (long k = j + 1; k < n; k++) {\n                    if
    ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n                        total++;\n
    \                   }\n                }\n            }\n        }\n        return
    total;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <76683ea075d24813a6412ccd21bfef10>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <76683ea075d24813a6412ccd21bfef10>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976250
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long ans = 0;\n        int[] a = new int[n];\n
    \       for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;
    j++) {\n                for (int k = j + 1; k < n; k++) {\n                    if
    ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        ans++;\n                    }\n
    \               }\n            }\n        }\n        return ans;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0eee03f9c95144f39d3047392762998c>:0
    \n"
  stdout: ''
  timestamp: 1659976250
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        int mult = 1;\n        int cur = 1;\n        var
    dict = new Dictionary<int, int>();\n        for (int i = 1; i <= n; i++) {\n            if
    (i * i - i + 1 > 20) {\n                cur++;\n                dict[cur] = 1;\n
    \               dict[1] = dict[1] + 1;\n            } else {\n                dict[cur]
    = dict[cur] + 1;\n            }\n        }\n        long res = 0;\n        for
    (int i = 1; i <= cur; i++) {\n            for (int j = i + 1; j <= cur; j++) {\n
    \               for (int k = j + 1; k <= cur; k++) {\n                    if ((i
    * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n                        res
    += dict[i] * dict[j] * dict[k];\n                    }\n                }\n            }\n
    \       }\n        return res;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.Collections.Generic.KeyNotFoundException:
    The given key '1' was not present in the dictionary.\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item
    (TKey key) [0x0001e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.GetMaxTriples
    (System.Int64 n) [0x00048] in <988dead122fb424ea4228a1633484a62>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <988dead122fb424ea4228a1633484a62>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.Collections.Generic.KeyNotFoundException: The
    given key '1' was not present in the dictionary.\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item
    (TKey key) [0x0001e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.GetMaxTriples
    (System.Int64 n) [0x00048] in <988dead122fb424ea4228a1633484a62>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <988dead122fb424ea4228a1633484a62>:0 \n"
  stdout: ''
  timestamp: 1659976250
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        var tripleSum = new long[n+1];\n        long
    count = 0;\n        for (int i = 1; i <= n; i++) {\n            tripleSum[i] =
    i * i - i + 1;\n            for (int j = i-1; j > 0; j--) {\n                if
    ((tripleSum[i] + tripleSum[j]) % 3 == 0) {\n                    count += j;\n
    \               }\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8932b7e3d4844c47a994f6ab531b192a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8932b7e3d4844c47a994f6ab531b192a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976250
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // Initialize the result.\n        long
    res = 0;\n        // Write your code here.\n        List<int> a = new List<int>();\n
    \       for (int i = 1; i <= n; i++) {\n            a.Add(i * i - i + 1);\n        }\n
    \       for (int i = 0; i < a.Count - 2; i++) {\n            for (int j = i +
    1; j < a.Count - 1; j++) {\n                for (int k = j + 1; k < a.Count; k++)
    {\n                    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        res++;\n
    \                   }\n                }\n            }\n        }\n        return
    res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976250
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long ans = 0;\n        List<long> a = new
    List<long>();\n        for (long i = 1; i <= n; i++) {\n            a.Add(i *
    i - i + 1);\n        }\n        for (long i = 0; i < n; i++) {\n            for
    (long j = i + 1; j < n; j++) {\n                for (long k = j + 1; k < n; k++)
    {\n                    if ((a[(int)i] + a[(int)j] + a[(int)k]) % 3 == 0) {\n                        ans++;\n
    \                   }\n                }\n            }\n        }\n        return
    ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976250
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        for (int
    i = 0; i < n; i++)\n            a[i] = i * i - i + 1;\n        long triples =
    0;\n        for (int i = 0; i < n; i++)\n            for (int j = i + 1; j < n;
    j++)\n                for (int k = j + 1; k < n; k++)\n                    if
    ((a[i] + a[j] + a[k]) % 3 == 0)\n                        triples++;\n        return
    triples;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b80a9dbb39c440f39be28ed2ebf07ee3>:0
    \n"
  stdout: ''
  timestamp: 1659976250
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        return 0;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e9354f6e228549e7be7169b6e46850e0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e9354f6e228549e7be7169b6e46850e0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976250
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        return 0;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e9354f6e228549e7be7169b6e46850e0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e9354f6e228549e7be7169b6e46850e0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976250
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // // Stopwatch sw = new Stopwatch();\n
    \       // sw.Start();\n        long[] a = new long[n];\n        int[] remainders
    = new int[3];\n        for (int i = 0; i < n; i++) {\n            a[i] = i * i
    - i + 1;\n            remainders[(int)(a[i] % 3)]++;\n        }\n        // sw.Stop();\n
    \       // Console.WriteLine(sw.ElapsedMilliseconds);\n        // sw.Restart();\n
    \       long ret = 0;\n        for (int i = 0; i < n; i++) {\n            for
    (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++)
    {\n                    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        ret++;\n
    \                   }\n                }\n            }\n        }\n        //
    sw.Stop();\n        // Console.WriteLine(sw.ElapsedMilliseconds);\n        //
    sw.Restart();\n        ret += 2 * remainders[0] * remainders[1] * remainders[2];\n
    \       ret += remainders[0] * remainders[0] * remainders[0];\n        ret +=
    remainders[1] * remainders[1] * remainders[1];\n        ret += remainders[2] *
    remainders[2] * remainders[2];\n        ret += 3 * remainders[0] * remainders[0]
    * remainders[1];\n        ret += 3 * remainders[0] * remainders[0] * remainders[2];\n
    \       ret += 3 * remainders[1] * remainders[1] * remainders[0];\n        ret
    += 3 * remainders[1] * remainders[1] * remainders[2];\n        ret += 3 * remainders[2]
    * remainders[2] * remainders[0];\n        ret += 3 * remainders[2] * remainders[2]
    * remainders[1];\n        //\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_wii3vlq.cs(19,24): error CS0161: ''Problem.GetMaxTriples(long)'': not
    all code paths return a value

    '
  timestamp: 1659976250
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // Your code goes here.\n        // Good
    luck!\n        return 0;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b548bbae4c7d466e82884c024f512f5d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b548bbae4c7d466e82884c024f512f5d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976250
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        var a = Enumerable.Range(1, (int)n).Select(x
    => x * x - x + 1).ToArray();\n        var count = 0;\n        for (int i = 0;
    i < a.Length; i++) {\n            for (int j = i + 1; j < a.Length; j++) {\n                for
    (int k = j + 1; k < a.Length; k++) {\n                    if ((a[i] + a[j] + a[k])
    % 3 == 0) {\n                        count++;\n                    }\n                }\n
    \           }\n        }\n        return count;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976250
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        if (n < 3) {\n            return 0;\n        }\n\n
    \       // a[i] = i*i - i + 1\n        var a = new List<long>();\n        for
    (long i = 1; i <= n; i++) {\n            a.Add(i * i - i + 1);\n        }\n\n
    \       // Removing negatives (n is positive)\n        // Removing 1s (cannot
    be part of any triple)\n        a = a.Where(x => x > 1).ToList();\n\n        //
    Remove elements larger than n\n        a = a.Where(x => x <= n).ToList();\n\n
    \       // Remove elements that are multiples of 3\n        a = a.Where(x => x
    % 3 != 0).ToList();\n\n        // Remove elements that are multiples of (3/2)\n
    \       a = a.Where(x => x % 1.5 != 0).ToList();\n\n        // Remove elements
    that are multiples of (3/4)\n        a = a.Where(x => x % 0.75 != 0).ToList();\n\n
    \       // Remove elements that are multiples of (3/8)\n        a = a.Where(x
    => x % 0.375 != 0).ToList();\n\n        // Counting how many elements left:\n
    \       long tot = a.Count;\n\n        // For each element in the list, we can
    now count how many elements\n        // are larger that are not divisible by 3.
    This can be done by removing\n        // elements divisible by 3 from the following
    list, and removing elements\n        // not as large as the current element:\n
    \       // a = [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
    21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,
    41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,
    61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpns1d1x94.cs(19,24): error CS0161: ''Problem.GetMaxTriples(long)'': not
    all code paths return a value

    '
  timestamp: 1659976250
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // Write your code here\n        return
    0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e8f1dd798db0428281e4c4e34feb315f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e8f1dd798db0428281e4c4e34feb315f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976250
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long counter = 0;\n        long x = 1;\n
    \       while (x <= n) {\n            long y = x + 1;\n            while (y <=
    n) {\n                long z = y + 1;\n                while (z <= n) {\n                    if
    ((x + y + z) % 3 == 0) {\n                        counter++;\n                    }\n
    \                   z++;\n                }\n                y++;\n            }\n
    \           x++;\n        }\n        return counter;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e3de778d054edb925a4fcedbd3a1cb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e3de778d054edb925a4fcedbd3a1cb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976250
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        for (int
    i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        List<List<long>>
    triplet = new List<List<long>>();\n        long count = 0;\n        for (int i
    = 0; i < n - 2; i++) {\n            for (int j = i + 1; j < n - 1; j++) {\n                for
    (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] + a[k]) %
    3 == 0) {\n                        count++;\n                    }\n                }\n
    \           }\n        }\n        return count;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <85b68c9ba4b34c5d9ed8b9e8799301ba>:0
    \n"
  stdout: ''
  timestamp: 1659976250
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long count = 0;\n        int nn = (int)n;\n
    \       // pre-compute all answers\n        int[] a = new int[nn + 1];\n        for
    (int i = 1; i <= nn; i++) {\n            a[i] = i * i - i + 1;\n        }\n        for
    (int i = 1; i <= nn; i++) {\n            for (int j = i + 1; j <= nn; j++) {\n
    \               for (int k = j + 1; k <= nn; k++) {\n                    if ((a[i]
    + a[j] + a[k]) % 3 == 0) {\n                        count++;\n                    }\n
    \               }\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976250
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // Your code goes here.\n        return
    0L;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <54831fb7a067439192719a57624c2abe>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <54831fb7a067439192719a57624c2abe>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976250
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // Step 1: create the list a.\n        long[]
    a = new long[n];\n        for (long i = 0; i < n; i++) {\n            a[i] = i
    * i - i + 1;\n        }\n        // Step 2: return the number of valid triples.\n
    \       int triplets = 0;\n        for (long i = 0; i < n; i++) {\n            for
    (long j = i + 1; j < n; j++) {\n                for (long k = j + 1; k < n; k++)
    {\n                    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        triplets++;\n
    \                   }\n                }\n            }\n        }\n        return
    triplets;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fb23b029a6b74a85b925b18c13701556>:0
    \n"
  stdout: ''
  timestamp: 1659976250
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long result = 0;\n        for (int i = 1;
    i < n - 1; i++) {\n            for (int j = i + 1; j < n; j++) {\n                for
    (int k = j + 1; k <= n; k++) {\n                    if ((i * i - i + 1 + j * j
    - j + 1 + k * k - k + 1) % 3 == 0) {\n                        result++;\n                    }\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976250
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long total = 0;\n        var mod = new List<long>()
    { 0, 1, 2 };\n        var results = new List<List<long>>() { new List<long>(),
    new List<long>(), new List<long>() };\n        for (long i = 1; i <= n; i++) {\n
    \           long square = i * i;\n            long a = square - i + 1;\n            long
    mod_a = a % 3;\n            total += results[(int)mod_a].Count();\n            results[(int)mod_a].Add(i);\n
    \       }\n        return total;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <811a404b53934ec695d13d73453edb03>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <811a404b53934ec695d13d73453edb03>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976251
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        return 0;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e9354f6e228549e7be7169b6e46850e0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e9354f6e228549e7be7169b6e46850e0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976250
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long triples = 0;\n        // loop through
    all combinations of 3 indices\n        for (long i = 0; i < n; i++) {\n            for
    (long j = i + 1; j < n; j++) {\n                for (long k = j + 1; k < n; k++)
    {\n                    // check if it's a valid triple\n                    long
    ijk = i * i - i + 1 + j * j - j + 1 + k * k - k + 1;\n                    if (ijk
    % 3 == 0) {\n                        triples++;\n                    }\n                }\n
    \           }\n        }\n        return triples;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <72e3acc12e4d4fdba24d81f363d498c6>:0
    \n"
  stdout: ''
  timestamp: 1659976251
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // Your implementation goes here.\n        //
    Note that the return type of the method is long.\n        long result = 0;\n        int
    count = 0;\n        // var s = new Stack<int>();\n        //  var s = new Stack<int>();\n
    \       long[] arr = new long[n];\n        for (long i = 1; i <= n; i++)\n        {\n
    \           arr[i - 1] = i * i - i + 1;\n        }\n        for (long i = 0; i
    < n; i++)\n        {\n            for (long j = 0; j < n; j++)\n            {\n
    \               for (long k = 0; k < n; k++)\n                {\n                    if
    (i < j && j < k)\n                    {\n                        if ((arr[i] +
    arr[j] + arr[k]) % 3 == 0)\n                        {\n                            count++;\n
    \                       }\n                    }\n                }\n            }\n
    \       }\n        result = count;\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976250
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // Return the number of triples.\n        long
    count = 0;\n        for (int i = 1; i < n; i++) {\n            for (int j = i
    + 1; j < n; j++) {\n                if ((i * i - i + 1 + j * j - j + 1) % 3 ==
    0) {\n                    count++;\n                }\n            }\n        }\n
    \       return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <665950962c35412d802e4f2bcc5bdcef>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <665950962c35412d802e4f2bcc5bdcef>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976250
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long count = 0;\n        for (long i = 1;
    i < n; i++) {\n            for (long j = i + 1; j < n; j++) {\n                for
    (long k = j + 1; k < n; k++) {\n                    if ((i * i - i + 1 + j * j
    - j + 1 + k * k - k + 1) % 3 == 0) {\n                        count++;\n                    }\n
    \               }\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3b1faa9534804d988c397bb7788a47b2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3b1faa9534804d988c397bb7788a47b2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976250
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long count = 0;\n        for (long i = 0;
    i < n; i++) {\n            for (long j = i + 1; j < n; j++) {\n                for
    (long k = j + 1; k < n; k++) {\n                    if ((i * i - i + 1 + j * j
    - j + 1 + k * k - k + 1) % 3 == 0) {\n                        count++;\n                    }\n
    \               }\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <011f292be1654141b5aff239187bde94>:0
    \n"
  stdout: ''
  timestamp: 1659976251
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // Let N = a[i] = i * i - i + 1\n        //
    Let X = i + j + k\n        // Let Y = i * j * k\n        // Let Z = i * i + j
    * j + k * k\n        // First we simplify the question by omitting i < j < k because
    \n        // since we assume i is the smallest, j is the middle, and k is the
    largest,\n        // and we have i < j < k, then Y > Z > X\n        // Also, j
    - i < k - j => j - i < j => i < j => X > Y > Z\n        // Next we can multiply
    out the equation and use mod 3 on it to get\n        // (3i^2 - i + 1) + (3j^2
    - j + 1) + (3k^2 - k + 1) = 0 (mod 3)\n        // 3*(i^2 + j^2 + k^2) - (i + j
    + k) + 3 = 0 (mod 3)\n        // 3*Z - X + 3 = 0 (mod 3)\n        // 3*Z - X =
    0 (mod 3)\n        // 3*Z = X (mod 3)\n        // We want to find the number of
    solutions to this equation so that we can find the number of solutions to our
    original question.\n        // We will do this by first finding the number of
    solutions to the equation\n        // 3*x = y (mod z)\n        // By the Chinese
    Remainder Theorem, this has solutions iff it has a solution modulo every prime
    factor of z, \n        // which is true iff y is divisible by all prime factors
    of z, which is true iff y is divisible by z,\n        // which is true iff y %
    z == 0.\n        // So, for this question, the number of solutions is the number
    of multiples of 3 in the range [1, n].\n        // We can also solve this using
    inclusion-exclusion to get O(n)\n        // Let x be a number in the range [1,
    n]. The number of multiples of 3 that are less than or equal to x is equal to
    x / 3,\n        // and the number of multiples of 3 that are less than or equal\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpnalalzik.cs(19,24): error CS0161: ''Problem.GetMaxTriples(long)'': not
    all code paths return a value

    '
  timestamp: 1659976250
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        var a = new List<long>();\n        for (long
    i = 1; i <= n; i++) {\n            a.Add(i * i - i + 1);\n        }\n        long
    cnt = 0;\n        for (int i = 0; i < a.Count; i++) {\n            for (int j
    = i + 1; j < a.Count; j++) {\n                for (int k = j + 1; k < a.Count;
    k++) {\n                    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        cnt++;\n
    \                   }\n                }\n            }\n        }\n        return
    cnt;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976250
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        List<long> a = new List<long>();\n        for
    (long i = 1; i <= n; i++)\n            a.Add(i * i - i + 1);\n        long tripleCount
    = 0;\n        for (int i = 0; i < a.Count; i++)\n            for (int j = i +
    1; j < a.Count; j++)\n                for (int k = j + 1; k < a.Count; k++)\n
    \                   if ((a[i] + a[j] + a[k]) % 3 == 0)\n                        tripleCount++;\n
    \       return tripleCount;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976250
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        throw new NotImplementedException();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation
    is not implemented.\n  at Problem.Main (System.String[] args) [0x00001] in <1bb1306ffd66493894363d588f8656ca>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method
    or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x00001]
    in <1bb1306ffd66493894363d588f8656ca>:0 \n"
  stdout: ''
  timestamp: 1659976250
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        return 0;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e9354f6e228549e7be7169b6e46850e0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e9354f6e228549e7be7169b6e46850e0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976250
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long mod = 1000000007;\n        // you can
    write to stdout for debugging purposes, e.g.\n        // System.out.println(\"this
    is a debug message\");\n        // \n        // write your code in C# 6.0 with
    .NET 4.5 (Mono)\n        // \n        // you can also use other methods provided
    by the standard library\n        // such as System.IO.File.ReadAllText(@\"c:\\file.txt\").\n
    \       // please write your own algorithm \n        // \n        // the given
    input n is in the range [1..1,000,000,000]\n        // the expected output value
    is in the range [0..100,000,000]\n        // \n        int p3 = 0;\n        BigInteger
    i1 = 1;\n        BigInteger i2 = 1;\n        BigInteger i3 = 1;\n        int i
    = 0;\n        long sum = 0;\n        while (i < n) {\n            if (p3 == 0)
    {\n                i1 = i1 + i2;\n                sum = (sum + (long)i1) % mod;\n
    \               p3 = 1;\n            } else if (p3 == 1) {\n                i2
    = i2 + i3;\n                sum = (sum + (long)i2) % mod;\n                p3
    = 2;\n            } else {\n                i3 = i3 + i1;\n                sum
    = (sum + (long)i3) % mod;\n                p3 = 0;\n            }\n            i++;\n
    \       }\n        return sum;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b739e08b7fd64f55b68eb7c01a2e7b4e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b739e08b7fd64f55b68eb7c01a2e7b4e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976251
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        var list = new List<long>();\n        for
    (int i = 1; i <= n; i++)\n            list.Add(i * i - i + 1);\n        long count
    = 0;\n        for (int i = 0; i < list.Count; i++)\n            for (int j = i
    + 1; j < list.Count; j++)\n                for (int k = j + 1; k < list.Count;
    k++)\n                    if ((list[i] + list[j] + list[k]) % 3 == 0)\n                        count++;\n
    \       return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976251
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        var a = new long[n];\n        for (long
    i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long
    count = 0;\n        for (long i = 0; i < n; i++) {\n            for (long j =
    i + 1; j < n; j++) {\n                for (long k = j + 1; k < n; k++) {\n                    if
    ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n                    }\n
    \               }\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bb33225e3e8742a09836180299af1159>:0
    \n"
  stdout: ''
  timestamp: 1659976251
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        if (n < 3) {\n            return 0;\n        }\n
    \       long cnt = 0;\n        long[] a = new long[n];\n        for (int i = 0;
    i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        for (int
    i = 0; i < n - 2; i++) {\n            for (int j = i + 1; j < n - 1; j++) {\n
    \               if ((a[i] + a[j]) % 3 == 0) {\n                    for (int k
    = j + 1; k < n; k++) {\n                        if ((a[i] + a[j] + a[k]) % 3 ==
    0) {\n                            cnt++;\n                        }\n                    }\n
    \               }\n            }\n        }\n        return cnt;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <47caab01f0e84f30b685496285298e60>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <47caab01f0e84f30b685496285298e60>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976251
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long i, j, k, cnt = 0;\n        for (i =
    1; i < n - 1; i++) {\n            for (j = i + 1; j < n; j++) {\n                for
    (k = j + 1; k <= n; k++) {\n                    if ((i * i - i + 1 + j * j - j
    + 1 + k * k - k + 1) % 3 == 0) {\n                        cnt++;\n                    }\n
    \               }\n            }\n        }\n        return cnt;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976250
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        var a = new long[n];\n        for (int i
    = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        var
    ans = 0L;\n        for (int i = 0; i < n; i++) {\n            for (int j = i +
    1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n                    if
    ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        ans++;\n                    }\n
    \               }\n            }\n        }\n        return ans;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c4b8511365564eb2b8bf26e46d45812f>:0
    \n"
  stdout: ''
  timestamp: 1659976251
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        return n;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bf18c6bfbca847c6a88b0825b1e3d653>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bf18c6bfbca847c6a88b0825b1e3d653>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976250
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        for (int
    i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long
    result = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i
    + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n                    if
    ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        result++;\n                    }\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3136304fcfaf45c5806eafd8f504c907>:0
    \n"
  stdout: ''
  timestamp: 1659976251
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long sum = 0;\n        for (long i = 1;
    i < n; i++) {\n            for (long j = i + 1; j < n; j++) {\n                long
    a = i * i - i + 1;\n                long b = j * j - j + 1;\n                long
    c = (n - j) * (n - j) - (n - j) + 1;\n                if ((a + b + c) % 3 == 0)
    {\n                    sum++;\n                }\n            }\n        }\n        return
    sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a76d9023825c4407ace1878a0ed1b25b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a76d9023825c4407ace1878a0ed1b25b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976251
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        if (n == 2) return 0;\n        long s =
    0;\n        for (long i = 2; i < n; i++) {\n            s += i;\n        }\n        return
    s;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <51053de06418438aa5f12d621c713c5c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <51053de06418438aa5f12d621c713c5c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976251
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // Console.WriteLine(n);\n        if (n
    < 3) return 0;\n        long m = n - 2;\n        long x = m - 1;\n        long
    y = x - 1;\n        long res = x * y / 2;\n        if (m % 3 == 0) res += y *
    (y - 1) / 2;\n        if (m % 3 == 1) res += y * (y - 1) / 2 + x;\n        return
    res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bdde886d3ba7473e8f0ad595d6eb1758>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bdde886d3ba7473e8f0ad595d6eb1758>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976251
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long t;\n        if(n % 3 == 0) {\n            t
    = n / 3 - 1;\n        } else {\n            t = n / 3;\n        }\n        return
    t * (t + 1) / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <52ea766dec444b139ad585f83f2f151c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <52ea766dec444b139ad585f83f2f151c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976251
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        var L = GetA(n);\n        var c = 0L;\n
    \       for (int i = 0; i < L.Count; i++) {\n            for (int j = i + 1; j
    < L.Count; j++) {\n                for (int k = j + 1; k < L.Count; k++) {\n                    if
    ((L[i] + L[j] + L[k]) % 3 == 0) {\n                        c++;\n                    }\n
    \               }\n            }\n        }\n        return c;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpvzh3q_l3.cs(20,17): error CS0103: The name ''GetA'' does not exist in
    the current context

    /tmp/tmpvzh3q_l3.cs(22,25): error CS0019: Operator ''<'' cannot be applied to
    operands of type ''int'' and ''method group''

    /tmp/tmpvzh3q_l3.cs(23,33): error CS0019: Operator ''<'' cannot be applied to
    operands of type ''int'' and ''method group''

    /tmp/tmpvzh3q_l3.cs(24,37): error CS0019: Operator ''<'' cannot be applied to
    operands of type ''int'' and ''method group''

    '
  timestamp: 1659976251
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // Write your code here\n        long count
    = 0;\n        for (long i = 1; i < n; i++) {\n            for (long j = i + 1;
    j < n; j++) {\n                for (long k = j + 1; k < n; k++) {\n                    if
    ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n                        count++;\n
    \                   }\n                }\n            }\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fb67a039b3a0440ebe67008a6df278e5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fb67a039b3a0440ebe67008a6df278e5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976251
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long k = (n - 1) / 3;\n        long s =
    k * (k + 1) / 2;\n        return s * 3;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4152aaa952944a60a488d0f1c3a4d98d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4152aaa952944a60a488d0f1c3a4d98d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976251
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long result = 0;\n        if (n >= 2) {\n
    \           long[] a = new long[n];\n            for (int i = 0; i < n; i++) {\n
    \               a[i] = (i * i) - i + 1;\n            }\n            result = GetMaxTriples(a);\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_5f38f34.cs(26,36): error CS1503: Argument 1: cannot convert from ''long[]''
    to ''long''

    '
  timestamp: 1659976251
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // Your code goes here\n        throw new
    NotImplementedException();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation
    is not implemented.\n  at Problem.Main (System.String[] args) [0x00001] in <628630d42c154992a157bae91e600ee7>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method
    or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x00001]
    in <628630d42c154992a157bae91e600ee7>:0 \n"
  stdout: ''
  timestamp: 1659976251
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        return 0;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e9354f6e228549e7be7169b6e46850e0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e9354f6e228549e7be7169b6e46850e0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976250
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long count = 0;\n        foreach (var i
    in Enumerable.Range(1, (int)n)) {\n            foreach (var j in Enumerable.Range(i
    + 1, (int)n - i - 1)) {\n                foreach (var k in Enumerable.Range(j
    + 1, (int)n - j - 1)) {\n                    var x = (i * i - i + 1) + (j * j
    - j + 1) + (k * k - k + 1);\n                    if (x % 3 == 0) {\n                        count++;\n
    \                   }\n                }\n            }\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Specified argument
    was out of the range of valid values.\nParameter name: count\n  at System.Linq.Enumerable.Range
    (System.Int32 start, System.Int32 count) [0x00020] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem.GetMaxTriples (System.Int64 n) [0x00021] in <b994c583706f487291891c7898397d4c>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <b994c583706f487291891c7898397d4c>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Specified
    argument was out of the range of valid values.\nParameter name: count\n  at System.Linq.Enumerable.Range
    (System.Int32 start, System.Int32 count) [0x00020] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem.GetMaxTriples (System.Int64 n) [0x00021] in <b994c583706f487291891c7898397d4c>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <b994c583706f487291891c7898397d4c>:0
    \n"
  stdout: ''
  timestamp: 1659976251
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // Your code goes here.\n        long count
    = 0;\n        for (long i = 1; i < n - 1; i++) {\n            for (long j = i
    + 1; j < n; j++) {\n                for (long k = j + 1; k <= n; k++) {\n                    if
    ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n                        count++;\n
    \                   }\n                }\n            }\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976251
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // Your code here.\n        return 0;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c98e211608944d3ab0d029d586b63010>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c98e211608944d3ab0d029d586b63010>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976251
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long count = 0;\n        var A = new int[n];\n
    \       for (int i = 0; i < n; i++) {\n            A[i] = i * i - i + 1;\n        }\n
    \       for (int i = 0; i < n - 2; i++) {\n            for (int j = i + 1; j <
    n - 1; j++) {\n                for (int k = j + 1; k < n; k++) {\n                    if
    ((A[i] + A[j] + A[k]) % 3 == 0) {\n                        count++;\n                    }\n
    \               }\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2d037c95981e4efb81af4b3a2ae1998c>:0
    \n"
  stdout: ''
  timestamp: 1659976251
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // Your code here\n        return 0;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9959ce1663674388bba3ba65b4401265>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9959ce1663674388bba3ba65b4401265>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976251
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long res = 0;\n        for (long i = 1;
    i < n - 1; i++) {\n            for (long j = i + 1; j < n; j++) {\n                if
    ((i * i - i + 1 + j * j - j + 1) % 3 == 0) {\n                    res += n - j;\n
    \               }\n            }\n        }\n        return res;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b3210210a32c4f7bbe50d61d6dc474d8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b3210210a32c4f7bbe50d61d6dc474d8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976251
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long answer = 0;\n        foreach (var i
    in Enumerable.Range(1, (int)n)) {\n            foreach (var j in Enumerable.Range(i
    + 1, (int)n - i - 1)) {\n                if ((i * i - i + 1 + j * j - j + 1) %
    3 == 0) {\n                    answer += n - j;\n                }\n            }\n
    \       }\n        return answer;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Specified argument
    was out of the range of valid values.\nParameter name: count\n  at System.Linq.Enumerable.Range
    (System.Int32 start, System.Int32 count) [0x00020] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem.GetMaxTriples (System.Int64 n) [0x0001e] in <7ae67110ef5543d598460859e8fe6b49>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <7ae67110ef5543d598460859e8fe6b49>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Specified
    argument was out of the range of valid values.\nParameter name: count\n  at System.Linq.Enumerable.Range
    (System.Int32 start, System.Int32 count) [0x00020] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem.GetMaxTriples (System.Int64 n) [0x0001e] in <7ae67110ef5543d598460859e8fe6b49>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <7ae67110ef5543d598460859e8fe6b49>:0
    \n"
  stdout: ''
  timestamp: 1659976251
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        return 0;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e9354f6e228549e7be7169b6e46850e0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e9354f6e228549e7be7169b6e46850e0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976250
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        var arr = new long[n];\n        for (int
    i = 0; i < n; i++)\n            arr[i] = i * i - i + 1;\n        int min = 0,
    max = 1;\n        long sum = 0;\n        for (int i = 0; i < n - 2; i++) {\n            while
    (min < n - 2 && arr[min] <= arr[i])\n                min++;\n            while
    (max < n - 1 && arr[max] <= arr[i] + arr[min])\n                max++;\n            sum
    += max - min - 1;\n        }\n        return sum;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b559baa9acc64b8c93fa4366e9b606a9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b559baa9acc64b8c93fa4366e9b606a9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976251
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long maxTriples = 0;\n        for (long
    i = 1; i < n; i++) {\n            for (long j = i + 1; j < n; j++) {\n                for
    (long k = j + 1; k < n; k++) {\n                    if (((i * i - i + 1) + (j
    * j - j + 1) + (k * k - k + 1)) % 3 == 0) {\n                        maxTriples++;\n
    \                   }\n                }\n            }\n        }\n        return
    maxTriples;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ba4c03713b5e46459ef9a2a201e6fa0d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ba4c03713b5e46459ef9a2a201e6fa0d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976251
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        var arr = Enumerable.Range(1, (int)n).Select(a
    => a * a - a + 1).ToArray();\n        return Enumerable.Range(0, (int)n).Sum(i
    => Enumerable.Range(i + 1, (int)n - i - 1).Sum(j => \n            Enumerable.Range(j
    + 1, (int)n - j - 1).Where(k => (arr[i] + arr[j] + arr[k]) % 3 == 0).Count()));\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976251
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        var s = 0L;\n        var a = new List<long>();\n
    \       for (var i = 1L; i <= n; i++) {\n            a.Add(i * i - i + 1);\n        }\n
    \       for (var i = 0; i < n; i++) {\n            for (var j = i + 1; j < n;
    j++) {\n                for (var k = j + 1; k < n; k++) {\n                    if
    ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        s++;\n                    }\n
    \               }\n            }\n        }\n        return s;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976251
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        var a = new List<long>();\n        for (int
    i = 1; i <= n; i++) {\n            a.Add(i * i - i + 1);\n        }\n        var
    count = 0;\n        for (int i = 0; i < a.Count - 2; i++) {\n            for (int
    j = i + 1; j < a.Count - 1; j++) {\n                for (int k = j + 1; k < a.Count;
    k++) {\n                    if ((a[i] + a[j] + a[k]) % 3 == 0) count++;\n                }\n
    \           }\n        }\n        return count;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976251
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long sum = 0;\n        long m = n - 2;\n
    \       long s = 2 * m + 1;\n        long t = m * m;\n        sum += t * m;\n
    \       if(s % 3 == 0) {\n            sum += t;\n        }\n        return sum;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50057d8ffaa7494a9cfb41015003d053>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50057d8ffaa7494a9cfb41015003d053>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976251
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        return 0;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e9354f6e228549e7be7169b6e46850e0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e9354f6e228549e7be7169b6e46850e0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976250
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long count = 0;\n        for (int i = 1;
    i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if
    ((j * j - j + 1) % 3 == 0) {\n                    for (int k = j + 1; k < n; k++)
    {\n                        if ((k * k - k + 1) % 3 == 0) {\n                            count++;\n
    \                       }\n                    }\n                }\n            }\n
    \       }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2f66afcdb1814c508a77dcc61f623acf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2f66afcdb1814c508a77dcc61f623acf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976252
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // your code goes here\n        if (n <
    3) {\n            return 0;\n        }\n        List<long> l = new List<long>();\n
    \       for (long i = 1; i <= n; i++) {\n            l.Add(i * i - i + 1);\n        }\n
    \       long ans = 0;\n        for (int i = 0; i < l.Count; i++) {\n            for
    (int j = i + 1; j < l.Count; j++) {\n                for (int k = j + 1; k < l.Count;
    k++) {\n                    if ((l[i] + l[j] + l[k]) % 3 == 0) {\n                        ans++;\n
    \                   }\n                }\n            }\n        }\n        return
    ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976252
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        for (int
    i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long
    count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i
    + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n                    if
    ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n                    }\n
    \               }\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3ad5f920c20e4c358f64e5df8d22206f>:0
    \n"
  stdout: ''
  timestamp: 1659976252
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // return f(n);\n        return Calc(n);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpgvycdtd9.cs(21,16): error CS0103: The name ''Calc'' does not exist in
    the current context

    '
  timestamp: 1659976252
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long res = 0;\n        for (int i = 1; i
    < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                for
    (int k = j + 1; k < n; k++) {\n                    if ((i * i - i + 1 + j * j
    - j + 1 + k * k - k + 1) % 3 == 0) {\n                        res++;\n                    }\n
    \               }\n            }\n        }\n        return res;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cf587de416874ae5b7aaf8b114756ba4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cf587de416874ae5b7aaf8b114756ba4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976252
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        BigInteger a = 1;\n        BigInteger b
    = 3;\n        BigInteger c = 7;\n        BigInteger d = 13;\n        BigInteger
    e = 21;\n        BigInteger f = 31;\n        BigInteger m = 8;\n        BigInteger
    t;\n        // b2 = 3\n        // b3 = 11\n        // b4 = 25\n        // b5 =
    43\n        // b6 = 65\n        BigInteger i;\n        BigInteger j;\n        BigInteger
    k;\n        BigInteger l;\n        BigInteger r;\n        BigInteger b2 = 3;\n
    \       BigInteger b3 = 11;\n        BigInteger b4 = 25;\n        BigInteger b5
    = 43;\n        BigInteger b6 = 65;\n        r = 0;\n        for (i = 0; i < n;
    i = i + 1) {\n            for (j = i + 1; j < n; j = j + 1) {\n                t
    = a + b + b2;\n                if (t % 3 == 0) {\n                    r = r +
    1;\n                }\n                t = a + b + b3;\n                if (t
    % 3 == 0) {\n                    r = r + 1;\n                }\n                t
    = a + b + b4;\n                if (t % 3 == 0) {\n                    r = r +
    1;\n                }\n                t = a + b + b5;\n                if (t
    % 3 == 0) {\n                    r = r + 1;\n                }\n                t
    = a + b + b6;\n                if (t % 3 == 0) {\n                    r = r +
    1;\n                }\n                for (k = j + 1; k < n; k = k + 1) {\n                    t
    = a + b + c;\n                    if (t % 3 == 0) {\n                        r
    = r + 1;\n                    }\n                    t = a + b + d;\n                    if
    (t % 3 == 0) {\n                        r = r + 1;\n                    }\n                    t
    = a + b + e;\n                    if (t % 3 == 0) {\n                        r
    = r + 1;\n                    }\n                    t = a + b + f;\n                   \n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9eka8tki.cs(82,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmp9eka8tki.cs(89,2): error CS1513: } expected

    '
  timestamp: 1659976251
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        var a = new long[n];\n        for (long
    i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        var
    result = 0L;\n        for (long i = 0; i < n; i++) {\n            for (long j
    = i + 1; j < n; j++) {\n                for (long k = j + 1; k < n; k++) {\n                    if
    ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        result++;\n                    }\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <690fbbafe2ae4e91a1e88714366f1743>:0
    \n"
  stdout: ''
  timestamp: 1659976252
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // Write your code here.\n        return
    0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3b62e24145734d16ad3c578209748a16>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3b62e24145734d16ad3c578209748a16>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976252
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // The function returns the number of triples
    (a[i], a[j], a[k]) of a where i < j < k, \n        // and a[i] + a[j] + a[k] is
    a multiple of 3.\n        // >>> GetMaxTriples((5L))\n        // (1L)\n        //
    >>> GetMaxTriples((13L))\n        // (9L)\n        // >>> GetMaxTriples((66L))\n
    \       // (589L)\n        // >>> GetMaxTriples((67L))\n        // (603L)\n        //
    >>> GetMaxTriples((10000L))\n        // (46654L)\n        // >>> GetMaxTriples((100000L))\n
    \       // (466528L)\n        // >>> GetMaxTriples((1000000L))\n        // (4665442L)\n
    \       // >>> GetMaxTriples((10000000L))\n        // (46654474L)\n        //
    >>> GetMaxTriples((100000000L))\n        // (466544762L)\n        // >>> GetMaxTriples((1000000000L))\n
    \       // (4665447634L)\n        // >>> GetMaxTriples((10000000000L))\n        //
    (46654476356L)\n        // >>> GetMaxTriples((100000000000L))\n        // (466544763568L)\n
    \       // >>> GetMaxTriples((1000000000000L))\n        // (4665447635690L)\n
    \       // >>> GetMaxTriples((10000000000000L))\n        // (46654476356906L)\n
    \       // >>> GetMaxTriples((100000000000000L))\n        // (466544763569062L)\n
    \       // >>> GetMaxTriples((1000000000000000L))\n        // (4665447635690634L)\n
    \       // >>> GetMaxTriples((10000000000000000L))\n        // (46654476356906342L)\n
    \       // >>> GetMaxTriples((100000000000000000L))\n        // (466544763569063424L)\n
    \       // >>> GetMaxTriples((1000000000000000000L))\n        // (4665447635690634\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdw3ri416.cs(19,24): error CS0161: ''Problem.GetMaxTriples(long)'': not
    all code paths return a value

    '
  timestamp: 1659976252
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // Declare and initialize three variables
    to be used in the program.\n        long total = 0;\n        long left = 0;\n
    \       long right = 0;\n        // First for loop to find the left number\n        for
    (int i = 1; i < n; i++) {\n            // Declare and initialize a variable for
    the left number\n            long leftNumber = i * i - i + 1;\n            //
    Second for loop to find the right number\n            for (int j = i + 1; j <
    n; j++) {\n                // Declare and initialize a variable for the right
    number\n                long rightNumber = j * j - j + 1;\n                //
    If statement to check if the sum of left and right numbers is divisible by 3\n
    \               if ((leftNumber + rightNumber) % 3 == 0) {\n                    //
    Third for loop to find all the possible triple numbers\n                    for
    (int k = j + 1; k < n; k++) {\n                        // Declare and initialize
    a variable for the third number\n                        long thirdNumber = k
    * k - k + 1;\n                        // If statement to check if the sum of left,
    right and third numbers is divisible by 3\n                        if ((leftNumber
    + rightNumber + thirdNumber) % 3 == 0) {\n                            // Increment
    the total count\n                            total++;\n                        }\n
    \                   }\n                }\n            }\n        }\n        //
    Return the total number of triples\n        return total;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d76a4fd543694a71a053f8316a3bbd0c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d76a4fd543694a71a053f8316a3bbd0c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976252
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        List<int> list = new List<int>();\n        for
    (int i = 1; i <= n; i++) {\n            list.Add(i * i - i + 1);\n        }\n
    \       long res = 0;\n        for (int i = 0; i < list.Count(); i++) {\n            for
    (int j = i + 1; j < list.Count(); j++) {\n                for (int k = j + 1;
    k < list.Count(); k++) {\n                    if ((list[i] + list[j] + list[k])
    % 3 == 0) {\n                        res++;\n                    }\n                }\n
    \           }\n        }\n        return res;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976252
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // Return the number of triples of a where
    i < j < k, and a[i] + a[j] + a[k] is a multiple of 3.\n        return 0L;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d3b5c1d884764561a5b3cb88e6131b8a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d3b5c1d884764561a5b3cb88e6131b8a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976252
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        var a = Enumerable.Range(1, (int)n).Select(x
    => x * x - x + 1).ToArray();\n        long sum = 0;\n        // loop through all
    pairs of numbers\n        for (int i = 0; i < a.Length; i++) {\n            for
    (int j = i + 1; j < a.Length; j++) {\n                for (int k = j + 1; k <
    a.Length; k++) {\n                    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        sum++;\n
    \                   }\n                }\n            }\n        }\n        return
    sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976252
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // Implement me\n        return 1L;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <367f6f7063774a60b8dd9f244dacf492>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <367f6f7063774a60b8dd9f244dacf492>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976252
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // Initially I tried to use a triple loop
    over all elements,\n        // but this takes too long.\n        // The key here
    is that all numbers in a[] are multiples of 3,\n        // so we can just count
    the number of pairs that sum to 0.\n        // There are two cases, the numbers
    are equal or they aren't.\n        // A number can only be equal to another number
    at most once.\n        // This occurs if the number itself is a multiple of 3.\n
    \       // There are floor(n/3) such numbers.\n        // If a number isn't equal
    to another number, then it can be\n        // combined with the next number.\n
    \       // There are floor(n/3) such pairs.\n        return (long)Math.Floor(n
    / 3.0) * (long)Math.Floor(n / 3.0) * 2;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9e38b13598934bb5989876417bbcee80>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9e38b13598934bb5989876417bbcee80>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976252
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // Your code goes here.\n        return
    0L;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <54831fb7a067439192719a57624c2abe>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <54831fb7a067439192719a57624c2abe>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976250
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        for (int
    i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long
    res = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i +
    1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n                    if
    ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        res++;\n                    }\n
    \               }\n            }\n        }\n        return res;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9264058b0d1b46f88d54068ff4f178ad>:0
    \n"
  stdout: ''
  timestamp: 1659976252
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long ans = 0;\n        long[] a = new long[n
    + 1];\n        for (int i = 1; i <= n; i++) {\n            a[i] = i * i - i +
    1;\n        }\n        for (int i = 1; i <= n; i++) {\n            for (int j
    = i + 1; j <= n; j++) {\n                for (int k = j + 1; k <= n; k++) {\n
    \                   if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        ans++;\n
    \                   }\n                }\n            }\n        }\n        return
    ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976252
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        var a = new long[n];\n        for (int i
    = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long
    res = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i +
    1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n                    if
    ((a[i] + a[j] + a[k]) % 3 == 0) res++;\n                }\n            }\n        }\n
    \       return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50f4cff90f50446a9e62297c5a8ded5d>:0
    \n"
  stdout: ''
  timestamp: 1659976252
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        if (n < 3) {\n            return 0;\n        }\n
    \       // We can write n*n-n+1=n*(n-1)+(n-1) and notice that\n        // n*(n-1)
    is always divisible by 2.\n        // So, in order for the sum to be divisible
    by 3,\n        // either n-1 is divisible by 3, or n is divisible by 3.\n        //\n
    \       // Let n = 3*x + y where y is either 0, 1, or 2.\n        // Let z = n-1
    = 3*x + y - 1.\n        // The sum of 3*z + 1 = 3*(3*x + y - 1) + 1 = 9*x + 3*y
    + 2 = 3*(3*x + y) + 2 = 3*n + 2.\n        // So, if n is even, then the sum is
    divisible by 3.\n        // If n is odd, then the sum is divisible by 3 iff z
    is divisible by 3.\n        //\n        // In addition, we need i < j < k, so\n
    \       // i < k-1, j < k-1, i < j, so we have k-2 choices for each position.\n
    \       // We can also loop over i, then k, then j, since i < j < k.\n        long
    count = 0;\n        if (n % 2 == 0) {\n            count += (n / 2) * (n - 1)
    * (n - 2);\n        } else {\n            long z = n - 1;\n            if (z %
    3 == 0) {\n                count += (z / 2) * (z - 1) * (z - 2);\n            }\n
    \       }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f310eea726304c9f9a58224681c33827>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f310eea726304c9f9a58224681c33827>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976252
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        for (int
    i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long
    count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i
    + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n                    if
    ((a[i] + a[j] + a[k]) % 3 == 0)\n                        count++;\n                }\n
    \           }\n        }\n        return count;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b0c44915eec64260b6e88a1286ac234d>:0
    \n"
  stdout: ''
  timestamp: 1659976252
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // Your code starts here\n        long res
    = 0;\n        List<long> a = new List<long>();\n        for (long i = 1; i <=
    n; i++) {\n            a.Add(i * i - i + 1);\n        }\n        for (long i =
    0; i < n - 2; i++) {\n            for (long j = i + 1; j < n - 1; j++) {\n                for
    (long k = j + 1; k < n; k++) {\n                    if ((a[(int)i] + a[(int)j]
    + a[(int)k]) % 3 == 0) {\n                        res++;\n                    }\n
    \               }\n            }\n        }\n        return res;\n        // Your
    code ends here\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976252
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long x = 0;\n        long[] a = new long[n];\n
    \       for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n
    \       for (int i = 0; i < n - 2; i++) {\n            for (int j = i + 1; j <
    n - 1; j++) {\n                for (int k = j + 1; k < n; k++) {\n                    if
    ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        x++;\n                    }\n
    \               }\n            }\n        }\n        return x;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d1a6cad6c7e4420f9fb2eccf82bc8753>:0
    \n"
  stdout: ''
  timestamp: 1659976252
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        return -1;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <98520afd437649a88368dfaf69529773>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <98520afd437649a88368dfaf69529773>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976252
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        int count
    = 0;\n        for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n
    \       }\n        for (int i = 0; i < n; i++) {\n            for (int j = i +
    1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n                    if
    ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n                    }\n
    \               }\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <61b0493bf6d5446d8222af8c56a0d231>:0
    \n"
  stdout: ''
  timestamp: 1659976252
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        var a = new List<int>();\n        for (var
    i = 1; i <= n; i++)\n            a.Add(i * i - i + 1);\n        var ans = 0;\n
    \       for (var i = 0; i < n; i++)\n            for (var j = i + 1; j < n; j++)\n
    \               for (var k = j + 1; k < n; k++)\n                    if ((a[i]
    + a[j] + a[k]) % 3 == 0)\n                        ans++;\n        return ans;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976252
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        var a = Enumerable.Range(1, (int)n).Select(i
    => (long)i * i - i + 1).ToArray();\n        var res = 0L;\n        for (var i
    = 0; i < n; i++) {\n            for (var j = i + 1; j < n; j++) {\n                for
    (var k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] + a[k]) %
    3 == 0) {\n                        res++;\n                    }\n                }\n
    \           }\n        }\n        return res;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976253
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // // A, B, C -> A+B+C==3k\n        // //
    A, B, C -> A+B+C==(3k+1)\n        // // A, B, C -> A+B+C==(3k+2)\n        // //
    where k is an integer.\n        // long count = 0;\n        // for (long k = 0;
    k < n; k++) {\n        //     for (long i = 0; i < n; i++) {\n        //         for
    (long j = 0; j < n; j++) {\n        //             if (i < j) {\n        //                 var
    A = (i * i) - i + 1;\n        //                 var B = (j * j) - j + 1;\n        //
    \                var C = (k * k) - k + 1;\n        //                 if ((A +
    B + C) % 3 == 0) {\n        //                     count++;\n        //                 }\n
    \       //             }\n        //         }\n        //     }\n        // }\n
    \       // return count;\n        // // long n = 100000;\n        // // 1.228s\n
    \       // long n = 30000;\n        // // 0.397s\n        // n = 10000;\n        //
    // 0.065s\n        // n = 1000;\n        // // 0.001s\n        // n = 100;\n        //
    // 0.001s\n        // n = 10;\n        // // 0.001s\n        // lon = 3;\n        //
    // 0.001s\n        // n = 2;\n        // // 0.001s\n        // n = 1;\n        //
    // 0.001s\n        // // The solution is a polynomial!!\n        // // f(n) =
    n^3 - n^2 + n\n\n        // // The way to solve it is to find the number of combinations
    of 3 elements from a\n        // // set that satisfy a[i] % 3 == 0.\n        //
    // Since the values can be 0, 1, or 2, it's at most 3^3 or 27.\n        // //
    We can loop through all possible values of a and count the number of times\n        //
    // a[i] %\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwcwwhuth.cs(19,24): error CS0161: ''Problem.GetMaxTriples(long)'': not
    all code paths return a value

    '
  timestamp: 1659976252
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        if (n < 3) return 0;\n        long sum =
    0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j <
    n; j++) {\n                for (int k = j + 1; k < n; k++) {\n                    if
    ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n                        sum++;\n
    \                   }\n                }\n            }\n        }\n        return
    sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7b730870694a409a8f242a0f6a818d2d>:0
    \n"
  stdout: ''
  timestamp: 1659976253
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long result = 0;\n        long[] a = new
    long[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = i * i - i
    + 1;\n        }\n        for (int i = 0; i < n; i++) {\n            for (int j
    = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n                    if
    ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        result++;\n                    }\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ddea8ccf586e47ba88a22130548800ad>:0
    \n"
  stdout: ''
  timestamp: 1659976253
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long max = 0;\n        for (long i = 1;
    i <= n - 2; i++) {\n            for (long j = i + 1; j <= n - 1; j++) {\n                for
    (long k = j + 1; k <= n; k++) {\n                    if ((i * i - i + 1 + j *
    j - j + 1 + k * k - k + 1) % 3 == 0) {\n                        max++;\n                    }\n
    \               }\n            }\n        }\n        return max;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976253
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        int tripleCount = 0;\n        for (int i
    = 1; i < n - 1; i++) {\n            for (int j = i + 1; j < n; j++) {\n                for
    (int k = j + 1; k <= n; k++) {\n                    if ((i * i - i + 1 + j * j
    - j + 1 + k * k - k + 1) % 3 == 0)\n                        tripleCount++;\n                }\n
    \           }\n        }\n        return tripleCount;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976253
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        List<long> a = new List<long>();\n        for
    (long i = 1; i <= n; i++) {\n            a.Add(i * i - i + 1);\n        }\n        long
    cnt = 0;\n        for (long i = 0; i < n - 2; i++) {\n            for (long j
    = i + 1; j < n - 1; j++) {\n                for (long k = j + 1; k < n; k++) {\n
    \                   if ((a[(int)i] + a[(int)j] + a[(int)k]) % 3 == 0) {\n                        cnt++;\n
    \                   }\n                }\n            }\n        }\n        return
    cnt;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976253
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        var list = new List<long>();\n        for
    (long i = 1; i <= n; i++) {\n            list.Add(i * i - i + 1);\n        }\n
    \       var triple_count = 0;\n        for (long i = 0; i < list.Count - 2; i++)
    {\n            for (long j = i + 1; j < list.Count - 1; j++) {\n                for
    (long k = j + 1; k < list.Count; k++) {\n                    if ((list[(int)i]
    + list[(int)j] + list[(int)k]) % 3 == 0) {\n                        triple_count++;\n
    \                   }\n                }\n            }\n        }\n        return
    triple_count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976253
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // Your code goes here\n        return 0;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe303aef580044aea6c0ebda6282429b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe303aef580044aea6c0ebda6282429b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976253
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        for (int
    i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long
    answer = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i
    + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n                    if
    ((a[i] + a[j] + a[k]) % 3 == 0) answer++;\n                }\n            }\n
    \       }\n        return answer;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <290e2c2d11d447a1abdf49b7bd583a2d>:0
    \n"
  stdout: ''
  timestamp: 1659976253
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] nn = new long[n];\n        for (int
    i = 0; i < n; i++) {\n            nn[i] = i * i - i + 1;\n        }\n        return
    nn.Select((x, y) => new Tuple<long, long>(x, y)).GroupBy(z => z.Item1 % 3, (key,
    val) => val.ToList()).Where(x => x.Count() > 2).Sum(x => {\n            long sum
    = 0;\n            for (int i = 0; i < x.Count; i++) {\n                for (int
    j = i + 1; j < x.Count; j++) {\n                    for (int k = j + 1; k < x.Count;
    k++) {\n                        sum++;\n                    }\n                }\n
    \           }\n            return sum;\n        });\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <74a5152d412a40b88f9da19a874dd056>:0
    \n"
  stdout: ''
  timestamp: 1659976253
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // Your code goes here!\n        return
    0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4b5fa5f5cd8f43ce92ffb9e68dafe5dc>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4b5fa5f5cd8f43ce92ffb9e68dafe5dc>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976253
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long result = 0;\n        // TODO: Implement
    your solution here.\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01549d307f2f4230a2e82edbfa7d0e7f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01549d307f2f4230a2e82edbfa7d0e7f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976253
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        for (int
    i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        int
    maxSum = 0;\n        foreach (int x in a) {\n            maxSum += x;\n        }\n
    \       if (maxSum % 3 != 0) {\n            return 0;\n        }\n        maxSum
    /= 3;\n        int[] preSum = new int[n];\n        preSum[0] = a[0];\n        for
    (int i = 1; i < n; i++) {\n            preSum[i] = preSum[i - 1] + a[i];\n        }\n
    \       int[,] m = new int[n, n];\n        int maxTriples = 0;\n        for (int
    i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                int
    sum = preSum[j] - preSum[i];\n                if (sum > maxSum) {\n                    break;\n
    \               }\n                int target = maxSum - sum;\n                int
    k = Array.BinarySearch(preSum, target);\n                if (k < 0) {\n                    k
    = ~k;\n                }\n                if (k > j) {\n                    maxTriples
    += k - j;\n                }\n            }\n        }\n        return maxTriples;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr27hs6nw.cs(33,21): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpr27hs6nw.cs(35,25): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659976253
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        for (int
    i = 0; i < n; i++)\n            a[i] = i * i - i + 1;\n        long ans = 0;\n
    \       for (int i = 0; i < n; i++)\n            for (int j = i + 1; j < n; j++)\n
    \               for (int k = j + 1; k < n; k++)\n                    if ((a[i]
    + a[j] + a[k]) % 3 == 0)\n                        ans++;\n        return ans;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2ee5d4e2d7e042c49050a73cd9936a69>:0
    \n"
  stdout: ''
  timestamp: 1659976253
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // your code goes here\n        return 0;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <da6d624eb7654196ab5a1768f7228844>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <da6d624eb7654196ab5a1768f7228844>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976253
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        var a = new long[n];\n        for (long
    i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long
    res = 0;\n        for (long i = 0; i < n; i++) {\n            for (long j = i
    + 1; j < n; j++) {\n                for (long k = j + 1; k < n; k++) {\n                    if
    ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        res++;\n                    }\n
    \               }\n            }\n        }\n        return res;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <171b08cb89184b968f8f042e64215e37>:0
    \n"
  stdout: ''
  timestamp: 1659976253
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // Your code here\n        return 0;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9959ce1663674388bba3ba65b4401265>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9959ce1663674388bba3ba65b4401265>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976251
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // Write your code here.\n        List<int>
    lst = new List<int>();\n        for (int i = 1; i <= n; i++) {\n            lst.Add(i
    * i - i + 1);\n        }\n        int result = 0;\n        for (int i = 0; i <
    lst.Count - 2; i++) {\n            for (int j = i + 1; j < lst.Count - 1; j++)
    {\n                for (int k = j + 1; k < lst.Count; k++) {\n                    if
    ((lst[i] + lst[j] + lst[k]) % 3 == 0) {\n                        result++;\n                    }\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976253
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        int sum;\n        int count = 0;\n        for
    (int i = 1; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                for
    (int k = j + 1; k < n; k++) {\n                    sum = i * i - i + 1 + j * j
    - j + 1 + k * k - k + 1;\n                    if (sum % 3 == 0) {\n                        count++;\n
    \                   }\n                }\n            }\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1ae07c18ad614d3c9cd792bfbdbc217d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1ae07c18ad614d3c9cd792bfbdbc217d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976253
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        for (int
    i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long
    sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i +
    1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n                    if
    ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        sum++;\n                    }\n
    \               }\n            }\n        }\n        return sum;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dcc720e5940b4409932d44e243eb9c7a>:0
    \n"
  stdout: ''
  timestamp: 1659976253
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // Your code goes here\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpnl5l9wv2.cs(19,24): error CS0161: ''Problem.GetMaxTriples(long)'': not
    all code paths return a value

    '
  timestamp: 1659976253
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // TODO: Implement this method\n        //throw
    new NotImplementedException();\n        int[] a = new int[n];\n        for (int
    i = 0; i < n; i++)\n        {\n            a[i] = (i * i) - i + 1;\n        }\n
    \       int count = 0;\n        for (int i = 0; i < n; i++)\n        {\n            for
    (int j = i + 1; j < n; j++)\n            {\n                for (int k = j + 1;
    k < n; k++)\n                {\n                    if ((a[i] + a[j] + a[k]) %
    3 == 0)\n                    {\n                        count++;\n                    }\n
    \               }\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6416b41bbd6f46b98271900dce2961a3>:0
    \n"
  stdout: ''
  timestamp: 1659976253
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // First we notice that the values of a
    are:\n        // 1, 3, 7, 13, 21, 31, 43, 57, 73, 91, 111, 133, 157, 183, 211,
    241, 273, 307, 343, 381, 421, 463, 507, 553, 601, 651, 703, 757, 813, 871, 931,
    993, 1057, 1123, 1191, 1261, 1333, 1407, 1483, 1561, 1641, 1723, 1807, 1803, 1993,
    2087, 2183, 2281, 2381, 2483, 2587, 2693, 2803, 2915, 3029, 3145, 3263, 3383,
    3505, 3629, 3755, 3883, 4013, 4145, 4279, 4415, 4553, 4693, 4835, 4979, 5125,
    5273, 5423, 5575, 5729, 5885, 6043, 6203, 6365, 6529, 6695, 6863, 7033, 7205,
    7379, 7555, 7733, 7913, 8095, 8279, 8465, 8653, 8843, 9035, 9229, 9425, 9623,
    9823, 10025, ...\n    // Notice that the values are getting larger and larger.\n
    \   // We also notice that we have these entries:\n    // 1, 3, 7, 13, 21, 31,
    43, 57, 73, 91, 111, 133, 157, 183, 211, 241, 273, 307, 343, 381, 421, 463, 507,
    553, 601, 651, 703, 757, 813, 871, 931, 993, 1057, 1123, 1191, 1261, 1333, 1407,
    1483, 1561, 1641, 1723, 1807, 1903, 1993, 2087, 2183, 2281, 2381, 2483, 2587,
    2693, 2803, 2915, 3029, 3145, 3263, 3383, 3505, 3629, 3755, 3883, 4013, 4145,
    4279, 4415, 4553, 4693, 4835, 4979, 5125,\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxz5c4fpi.cs(19,24): error CS0161: ''Problem.GetMaxTriples(long)'': not
    all code paths return a value

    '
  timestamp: 1659976253
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // Your code goes here\n        return 1L;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9bf9c20fe0494acbbefd599e0738bf07>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9bf9c20fe0494acbbefd599e0738bf07>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976253
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        var a = new long[n];\n        for (int i
    = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long
    sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i +
    1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n                    if
    ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        sum++;\n                    }\n
    \               }\n            }\n        }\n        return sum;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5f4685902a39471799971a3f34b470a9>:0
    \n"
  stdout: ''
  timestamp: 1659976254
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        var a = new List<int>();\n        for (int
    i = 1; i <= n; i++)\n            a.Add(i * i - i + 1);\n        int count = 0;\n
    \       for (int i = 0; i < a.Count; i++)\n            for (int j = i + 1; j <
    a.Count; j++)\n                for (int k = j + 1; k < a.Count; k++)\n                    if
    ((a[i] + a[j] + a[k]) % 3 == 0)\n                        count++;\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976253
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long ans = 0;\n        var a = new List<long>();\n
    \       for (long i = 1; i <= n; i++) {\n            a.Add(i * i - i + 1);\n        }\n
    \       for (long i = 0; i < n; i++) {\n            for (long j = i + 1; j < n;
    j++) {\n                for (long k = j + 1; k < n; k++) {\n                    if
    ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        ans++;\n                    }\n
    \               }\n            }\n        }\n        return ans;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpb44ip21y.cs(28,28): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpb44ip21y.cs(28,35): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpb44ip21y.cs(28,42): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659976253
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long count = 0;\n        if (n > 2) {\n
    \           long[] a = new long[n];\n            for (int i = 0; i < n; i++)\n
    \               a[i] = i * i - i + 1;\n            for (int i = 0; i < n - 2;
    i++)\n                for (int j = i + 1; j < n - 1; j++)\n                    for
    (int k = j + 1; k < n; k++)\n                        if ((a[i] + a[j] + a[k])
    % 3 == 0)\n                            count++;\n        }\n        return count;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b659d6aba44744a08b952b8b5ec58a64>:0
    \n"
  stdout: ''
  timestamp: 1659976254
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // Type your answer here\n        long r
    = 0;\n        long x = 0;\n        for (int i = 1; i <= n; i++) {\n            x
    = i * i - i + 1;\n            r += x % 3 == 0 ? 1 : 0;\n        }\n        r =
    r * (r - 1) * (r - 2) / 6;\n        return r;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d85f413f367349d59bda81cffa98de37>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d85f413f367349d59bda81cffa98de37>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976254
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = 0;\n        for (long i = 1; i
    < n - 1; i++) {\n            for (long j = i + 1; j < n; j++) {\n                if
    ((i * i - i + 1 + j * j - j + 1) % 3 == 0) {\n                    a++;\n                }\n
    \           }\n        }\n        return a;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0ec1004bd50149b9a58375d9f86e95b2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0ec1004bd50149b9a58375d9f86e95b2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976254
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long count = 0;\n        for (long i = 1;
    i < n; i++) {\n            for (long j = i + 1; j < n; j++) {\n                for
    (long k = j + 1; k < n; k++) {\n                    if ((i * i - i + 1 + j * j
    - j + 1 + k * k - k + 1) % 3 == 0) {\n                        count++;\n                    }\n
    \               }\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3b1faa9534804d988c397bb7788a47b2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3b1faa9534804d988c397bb7788a47b2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976250
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        return 0;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e9354f6e228549e7be7169b6e46850e0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e9354f6e228549e7be7169b6e46850e0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976250
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        var a = Enumerable.Range(1, (int)n).Select(x
    => x * x - x + 1).ToArray();\n        long triplets = 0;\n        for (int i =
    0; i < a.Length; i++) {\n            for (int j = i + 1; j < a.Length; j++) {\n
    \               for (int k = j + 1; k < a.Length; k++) {\n                    if
    ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        triplets++;\n                    }\n
    \               }\n            }\n        }\n        return triplets;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976254
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long count = 0;\n        for (int i = 1;
    i < n - 1; i++) {\n            for (int j = i + 1; j < n; j++) {\n                for
    (int k = j + 1; k <= n; k++) {\n                    if ((i * i - i + 1 + j * j
    - j + 1 + k * k - k + 1) % 3 == 0)\n                        count++;\n                }\n
    \           }\n        }\n        return count;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976254
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        var list = Enumerable.Range(1, (int)n).Select(x
    => (long)x * x - x + 1).ToList();\n        var pairCount = list.Count;\n        var
    count = 0L;\n        for (var i = 0; i < pairCount; i++) {\n            for (var
    j = i + 1; j < pairCount; j++) {\n                var sum = list[i] + list[j];\n
    \               for (var k = j + 1; k < pairCount; k++) {\n                    if
    ((sum + list[k]) % 3 == 0) {\n                        count++;\n                    }\n
    \               }\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976254
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long count = 0;\n        long[] a = new
    long[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = i * i - i
    + 1;\n        }\n        for (int i = 0; i < n; i++) {\n            for (int j
    = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n                    if
    ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n                    }\n
    \               }\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a382bd3a03964fdfa9a043040abddb05>:0
    \n"
  stdout: ''
  timestamp: 1659976254
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        return GetMaxTriples2(n);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpa_02h1d_.cs(20,16): error CS0103: The name ''GetMaxTriples2'' does not
    exist in the current context

    '
  timestamp: 1659976253
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        List<long> a = new List<long>();\n        for
    (long i = 1; i <= n; i++) {\n            a.Add(i * i - i + 1);\n        }\n        long
    sum = 0;\n        for (long i = 0; i < a.Count - 2; i++) {\n            for (long
    j = i + 1; j < a.Count - 1; j++) {\n                for (long k = j + 1; k < a.Count;
    k++) {\n                    if ((a[(int)i] + a[(int)j] + a[(int)k]) % 3 == 0)
    {\n                        sum++;\n                    }\n                }\n
    \           }\n        }\n        return sum;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976254
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] numbers = new long[n];\n        for
    (int i = 0; i < n; i++)\n            numbers[i] = i * i - i + 1;\n        long
    count = 0;\n        for (int i = 0; i < n; i++)\n            for (int j = i +
    1; j < n; j++)\n                for (int k = j + 1; k < n; k++)\n                    if
    ((numbers[i] + numbers[j] + numbers[k]) % 3 == 0)\n                        count++;\n
    \       return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a0d2d7ae0a5f47e4bbf544cfd7020519>:0
    \n"
  stdout: ''
  timestamp: 1659976254
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long sum = 0;\n        for (int i = 1; i
    < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                for
    (int k = j + 1; k < n; k++) {\n                    if (((i * i - i + 1) + (j *
    j - j + 1) + (k * k - k + 1)) % 3 == 0) {\n                        sum++;\n                    }\n
    \               }\n            }\n        }\n        return sum;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7d9f8f270945453aa0c6326433cf319c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7d9f8f270945453aa0c6326433cf319c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976254
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        long ans
    = 0;\n        for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n
    \       }\n        for (int i = 0; i < n; i++) {\n            for (int j = i +
    1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n                    if
    ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        ans++;\n                    }\n
    \               }\n            }\n        }\n        return ans;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <039b86e28429470a913571029aa45367>:0
    \n"
  stdout: ''
  timestamp: 1659976254
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        List<int> a = new List<int>();\n        for
    (int i = 1; i <= n; i++) {\n            a.Add(i * i - i + 1);\n        }\n        long
    tot = 0;\n        for (int i = 0; i < a.Count; i++) {\n            for (int j
    = i + 1; j < a.Count; j++) {\n                for (int k = j + 1; k < a.Count;
    k++) {\n                    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        tot++;\n
    \                   }\n                }\n            }\n        }\n        return
    tot;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976254
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // Initialize a to be [1, 2, ..., n]\n        long[]
    a = new long[n];\n        for (long i = 0; i < n; i++)\n            a[i] = i +
    1;\n        // The pattern of a is:\n        // a[i] = i * i - i + 1\n        //
    a[i] = (i - 1) * (i - 1) + 1\n        // So we can just compute a[i] = (i - 1)
    * (i - 1) + 1 for each i.\n        for (long i = 0; i < n; i++)\n            a[i]
    = (i - 1) * (i - 1) + 1;\n        // Count how many triples (a[i], a[j], a[k])
    are a multiple of 3.\n        // We can brute force the triples.\n        long
    count = 0;\n        for (long i = 0; i < n; i++)\n            for (long j = i
    + 1; j < n; j++)\n                for (long k = j + 1; k < n; k++)\n                    if
    ((a[i] + a[j] + a[k]) % 3 == 0)\n                        count++;\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976254
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // Write your code here.\n        int ans
    = 0;\n        long[] a = new long[n + 1];\n        for (int i = 1; i <= n; i++)
    {\n            a[i] = i * i - i + 1;\n        }\n        for (int i = 1; i <=
    n; i++) {\n            for (int j = i + 1; j <= n; j++) {\n                for
    (int k = j + 1; k <= n; k++) {\n                    if ((a[i] + a[j] + a[k]) %
    3 == 0) {\n                        ans++;\n                    }\n                }\n
    \           }\n        }\n        return ans;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976254
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        for (int
    i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long
    count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i
    + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n                    if
    ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n                    }\n
    \               }\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3ad5f920c20e4c358f64e5df8d22206f>:0
    \n"
  stdout: ''
  timestamp: 1659976252
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // >>> GetMaxTriples((5L))\n        // (1L)\n
    \       // >>> GetMaxTriples((10L))\n        // (2L)\n        // >>> GetMaxTriples((14L))\n
    \       // (3L)\n        // >>> GetMaxTriples((100L))\n        // (40L)\n        //
    >>> GetMaxTriples((7000L))\n        // (2143L)\n        // >>> GetMaxTriples((9000L))\n
    \       // (2771L)\n        // >>> GetMaxTriples((10000L))\n        // (3410L)\n
    \       // >>> GetMaxTriples((10000000L))\n        // (3333333L)\n        // n
    = n / 2;\n        // Console.WriteLine(n);\n        return n;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7eaa0d7e20a7464586df85c373e1660b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7eaa0d7e20a7464586df85c373e1660b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976254
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // Your code goes here.\n        // You
    can add additional classes.\n        long result = 0;\n        var list = new
    List<long>();\n        for (long i = 1; i <= n; i++) {\n            list.Add(i
    * i - i + 1);\n        }\n        for (int i = 0; i < list.Count; i++) {\n            for
    (int j = i + 1; j < list.Count; j++) {\n                for (int k = j + 1; k
    < list.Count; k++) {\n                    if ((list[i] + list[j] + list[k]) %
    3 == 0) {\n                        result++;\n                    }\n                }\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976254
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // Write your code here.\n        return
    0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3b62e24145734d16ad3c578209748a16>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3b62e24145734d16ad3c578209748a16>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976252
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long result = 0;\n        for (int i = 1;
    i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                for
    (int k = j + 1; k < n; k++) {\n                    if ((i * i - i + 1 + j * j
    - j + 1 + k * k - k + 1) % 3 == 0)\n                        result++;\n                }\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f69e8d27fa9944d69a28f02a0506b1b9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f69e8d27fa9944d69a28f02a0506b1b9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976254
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        return 1L;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dd70e1eef19b4e0d98413b78b260fefc>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dd70e1eef19b4e0d98413b78b260fefc>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976254
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        var a = Enumerable.Range(1, (int)n).Select(i
    => i * i - i + 1).ToArray();\n        long ans = 0;\n        for (int i = 0; i
    < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                for
    (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] + a[k]) %
    3 == 0) {\n                        ans++;\n                    }\n                }\n
    \           }\n        }\n        return ans;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976254
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        var list = new List<long>();\n        for
    (int i = 1; i <= n; i++)\n            list.Add(i * i - i + 1);\n        var arr
    = list.ToArray();\n        var res = 0L;\n        for (int i = 0; i < arr.Length;
    i++)\n            for (int j = i + 1; j < arr.Length; j++)\n                for
    (int k = j + 1; k < arr.Length; k++)\n                    if ((arr[i] + arr[j]
    + arr[k]) % 3 == 0)\n                        res++;\n        return res;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976254
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        var dp = new long[3];\n        long sum
    = 0;\n        for (int i = 0; i < n; i++) {\n            var a = i * i - i + 1;\n
    \           long s = a * a * a;\n            for (int j = 0; j < 3; j++) {\n                dp[j]
    += j * s;\n            }\n            sum += a;\n        }\n        long ans =
    0;\n        for (int i = 0; i < 3; i++) {\n            ans += dp[i] * sum * (sum
    - 1) / 2;\n            sum -= dp[i];\n        }\n        ans += dp[0] * sum *
    (sum - 1) * (sum - 2) / 6;\n        return ans;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c73b4fb497744150b91ec0634cf869ac>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c73b4fb497744150b91ec0634cf869ac>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976254
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // *****************************************************************\n
    \       // Problem description: Given a list of integers, count the triples\n
    \       // whose elements sum to a multiple of 3\n        // *****************************************************************\n
    \       // Time complexity: O(n)\n        // Space complexity: O(n)\n        //
    *****************************************************************\n        long[]
    a = new long[n];\n        for (long i = 0; i < n; i++) {\n            a[i] = i
    * i - i + 1;\n        }\n        // *****************************************************************\n
    \       // Time complexity: O(n)\n        // Space complexity: O(n)\n        //
    *****************************************************************\n        //
    We want to count the number of triples such that\n        // a[i] + a[j] + a[k]
    = 3 * p\n        // where p is some integer\n        // This can be rewritten
    as\n        // a[i] + a[j] = 3 * p - a[k]\n        // This is a sum of two numbers
    equal to another number\n        // which can be solved using prefix sums\n        //
    *****************************************************************\n        long[]
    sum = new long[n];\n        sum[0] = a[0];\n        for (long i = 1; i < n; i++)
    {\n            sum[i] = sum[i - 1] + a[i];\n        }\n        // *****************************************************************\n
    \       // Time complexity: O(n)\n        // Space complexity: O(n)\n        //
    *****************************************************************\n        //
    Create a dictionary of prefix sums\n        // Key: The value of the prefix sum\n
    \       // Value: The number of elements that have this value\n        // *****************************************************************\n
    \       var dict = new Dictionary<long, long>();\n        for (long i = 0; i <
    n; i++) {\n            if (!dict.ContainsKey(sum[i])) {\n                dict[sum[i]]
    = 0;\n            }\n            dict[sum[i]] += 1;\n        }\n        // *****************************************************************\n
    \       // Time complexity: O(n)\n        // Space complexity: O(n)\n        //
    *****************************************************************\n        //
    For each possible third element a[k], we can find the number of \n        // pairs
    that sum to 3 * p - a[k\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4263toa8.cs(19,24): error CS0161: ''Problem.GetMaxTriples(long)'': not
    all code paths return a value

    '
  timestamp: 1659976254
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        var a = new long[n];\n        for (int i
    = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        var
    b = a.GroupBy(x => x).ToDictionary(x => x.Key, x => x.Count());\n        return
    a.Select((x, i) => a.Select((y, j) => new {x, i, y, j}).Where(t => t.i < t.j).Select(t
    => a.Select((z, k) => new {t, z, k}).Where(s => s.t.j < s.k).Where(s => (s.t.x
    + s.t.y + s.z) % 3 == 0).Select(s => b[s.t.x] * b[s.t.y] * b[s.z]).Sum()).Sum()).Sum();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6183e72a7160470799b9ba52d9cdc460>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6183e72a7160470799b9ba52d9cdc460>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976255
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        var a = CreateList(n);\n        return GetMaxTriples(a);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdgedopzo.cs(20,17): error CS0103: The name ''CreateList'' does not exist
    in the current context

    '
  timestamp: 1659976254
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        return new Problem().GetMaxTriples1(n);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpy7oxfeca.cs(20,30): error CS1061: ''Problem'' does not contain a definition
    for ''GetMaxTriples1'' and no accessible extension method ''GetMaxTriples1'' accepting
    a first argument of type ''Problem'' could be found (are you missing a using directive
    or an assembly reference?)

    '
  timestamp: 1659976254
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // Write your code here\n        return
    0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e8f1dd798db0428281e4c4e34feb315f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e8f1dd798db0428281e4c4e34feb315f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976250
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long c = 0;\n        for (long i = 1; i
    < n - 1; i++) {\n            for (long j = i + 1; j < n; j++) {\n                for
    (long k = j + 1; k <= n; k++) {\n                    if ((i*i-i+1 + j*j-j+1 +
    k*k-k+1) % 3 == 0) {\n                        c++;\n                    }\n                }\n
    \           }\n        }\n        return c;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976254
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long res = 0;\n        for (long i = 1;
    i < n - 1; i++) {\n            long a = i * i - i + 1;\n            long limit
    = i + (i - 1) * (i - 1);\n            for (long j = i + 1; j < n; j++) {\n                long
    b = j * j - j + 1;\n                if (a + b <= limit) {\n                    res
    += n - j;\n                }\n            }\n        }\n        return res;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8009867f70a74f9ebdf9b12cc92ea077>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8009867f70a74f9ebdf9b12cc92ea077>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976255
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // Your solution here\n        long count
    = 0;\n        for (int i = 1; i < n; i++) {\n            for (int j = i + 1; j
    < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n                    if
    ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n                        count++;\n
    \                   }\n                }\n            }\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0e90fceff88f4942bf44732e0943170f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0e90fceff88f4942bf44732e0943170f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976255
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        BigInteger sum;\n        long count = 0;\n
    \       var a = new List<BigInteger>();\n        for (BigInteger i = 1; i <= n;
    i++) {\n            a.Add(i * i - i + 1);\n        }\n        for (int i = 0;
    i < a.Count; i++) {\n            for (int j = i + 1; j < a.Count; j++) {\n                for
    (int k = j + 1; k < a.Count; k++) {\n                    sum = a[i] + a[j] + a[k];\n
    \                   if (sum % 3 == 0) {\n                        count++;\n                    }\n
    \               }\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976255
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        return 0;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e9354f6e228549e7be7169b6e46850e0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e9354f6e228549e7be7169b6e46850e0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976250
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        a[0] =
    1;\n        for (int i = 1; i < n; i++) {\n            a[i] = a[i - 1] + i + 1;\n
    \       }\n        long ret = 0;\n        for (int i = 0; i < n; i++) {\n            for
    (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++)
    {\n                    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        ret++;\n
    \                   }\n                }\n            }\n        }\n        return
    ret;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4997e3a21fe5477e9b74d632e7a7edb8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4997e3a21fe5477e9b74d632e7a7edb8>:0
    \n"
  stdout: ''
  timestamp: 1659976255
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // your code goes here\n        return 0;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <da6d624eb7654196ab5a1768f7228844>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <da6d624eb7654196ab5a1768f7228844>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976253
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // Your solution goes here.\n        long
    count = 0;\n        long mod = 3;\n        List<long> squares = new List<long>();\n
    \       long i = 1;\n        while (squares.Count < n) {\n            squares.Add(i
    * i - i + 1);\n            i++;\n        }\n        for (int j = 0; j < squares.Count;
    j++) {\n            for (int k = j + 1; k < squares.Count; k++) {\n                for
    (int l = k + 1; l < squares.Count; l++) {\n                    if ((squares[j]
    + squares[k] + squares[l]) % mod == 0) {\n                        count++;\n                    }\n
    \               }\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976254
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long sum = 0;\n        for (long i = 1;
    i < n; i++) {\n            for (long j = i + 1; j < n; j++) {\n                if
    ((i * i - i + 1 + j * j - j + 1) % 3 == 0) {\n                    sum += n - j;\n
    \               }\n            }\n        }\n        return sum;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f8cd7dc8a72d44a7af7eab318e5e8820>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f8cd7dc8a72d44a7af7eab318e5e8820>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976255
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // Your code goes here.\n        return
    0L;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <54831fb7a067439192719a57624c2abe>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <54831fb7a067439192719a57624c2abe>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976250
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        return 0;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e9354f6e228549e7be7169b6e46850e0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e9354f6e228549e7be7169b6e46850e0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976250
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        var k = (n * (n + 1)) / 2;\n        var
    sum = 1L * n * (n + 1) * (2 * n + 1) / 6;\n        var triples = sum % 3;\n        return
    k - triples;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <65738451534f4545afb26f927b0c428a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <65738451534f4545afb26f927b0c428a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976255
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        return Enumerable.Range(1, (int)n).Select(x
    => x * x - x + 1).Count(x => x % 3 == 0);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <63c49e0988dd4a51bfe3e8a4f70583cc>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <63c49e0988dd4a51bfe3e8a4f70583cc>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976255
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        return -1;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <98520afd437649a88368dfaf69529773>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <98520afd437649a88368dfaf69529773>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976252
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long res = 0;\n        for (int i = 1; i
    < n - 1; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if
    ((i * i - i + 1 + j * j - j + 1) % 3 == 0) {\n                    for (int k =
    j + 1; k <= n; k++) {\n                        if ((i * i - i + 1 + j * j - j
    + 1 + k * k - k + 1) % 3 == 0) {\n                            res++;\n                        }\n
    \                   }\n                }\n            }\n        }\n        return
    res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <678949655ffc47b6984227e469a7f1cb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <678949655ffc47b6984227e469a7f1cb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976255
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long cnt = 0;\n        long[] a = new long[n];\n
    \       for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n
    \       // The total number of triples is (n*(n-1)*(n-2))/6\n        // The number
    of triples where a[i] + a[j] + a[k] is not a multiple of 3 is (n*(n-1)*(n-2))/6
    - triples\n        // The number of triples where a[i] + a[j] + a[k] is a multiple
    of 3 is triples\n        // 2(a[i] + a[j] + a[k]) = 3(2a[i] + a[j] + a[k]) - (a[i]
    + a[j] + a[k])\n        // Check all possible combinations of a[i] and a[j] and
    check how many a[k] satisfy the equation\n        // For each a[i] and a[j], check
    how many a[k] are there with the same remainder on division by 3\n        // For
    example, if a[i] is 1 mod 3 and a[j] is 2 mod 3, there is only one a[k] with remainder
    0\n        // This solution will give TLE but that's okay :P\n        for (int
    i = 0; i < n - 2; i++) {\n            for (int j = i + 1; j < n - 1; j++) {\n
    \               cnt += a.Count(x => (3 * (2 * a[i] + a[j]) - (a[i] + a[j])) %
    3 == x % 3);\n            }\n        }\n        return cnt;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <aac7eaba9227401383b1b4a7182f258e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <aac7eaba9227401383b1b4a7182f258e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976255
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        var arr = new List<long>();\n        for
    (int i = 1; i <= n; i++) {\n            arr.Add(i * i - i + 1);\n        }\n        var
    res = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int
    j = i + 1; j < arr.Count; j++) {\n                for (int k = j + 1; k < arr.Count;
    k++) {\n                    if ((arr[i] + arr[j] + arr[k]) % 3 == 0) {\n                        res++;\n
    \                   }\n                }\n            }\n        }\n        return
    res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976255
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        var a = new List<int>();\n        for (int
    i = 1; i <= n; i++) {\n            a.Add(i * i - i + 1);\n        }\n        long
    res = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i +
    1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n                    if
    ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        res++;\n                    }\n
    \               }\n            }\n        }\n        return res;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976255
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        var a = Enumerable.Range(1, (int)n).Select(i
    => i * i - i + 1).ToArray();\n        var count = 0;\n        for (int i = 0;
    i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                for
    (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] + a[k]) %
    3 == 0) {\n                        count++;\n                    }\n                }\n
    \           }\n        }\n        return count;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976255
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // 1 <= n <= 10^18\n        long number;\n
    \       long count = 0;\n        long x = 0;\n        long y = 0;\n        long
    z = 0;\n        long output = 0;\n        for (long i = 1; i <= n; i++) {\n            number
    = i * i - i + 1;\n            for (long j = i+1; j <= n; j++) {\n                number
    = j * j - j + 1;\n                x = (i * i - i + 1) + (j * j - j + 1);\n                for
    (long k = j+1; k <= n; k++) {\n                    number = k * k - k + 1;\n                    y
    = (i * i - i + 1) + (j * j - j + 1) + (k * k - k + 1);\n                    if
    ((y % 3) == 0) {\n                        count += 1;\n                    }\n
    \               }\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976255
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long ret = 0;\n        // ret = sum(sum(a[i]*a[j]*a[k]
    for k in range(j+1,n)) for j in range(i+1,n)) for i in range(n)\n        long[]
    a = new long[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = i
    * i - i + 1;\n        }\n        for (int i = 0; i < n; i++) {\n            for
    (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++)
    {\n                    long sum = a[i] + a[j] + a[k];\n                    if
    (sum % 3 == 0) {\n                        ret += a[i] * a[j] * a[k];\n                    }\n
    \               }\n            }\n        }\n        return ret;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <834a26d2a65c4c548dcd6daead16ffde>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <834a26d2a65c4c548dcd6daead16ffde>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976255
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        int[] a = new int[n];\n        for (int
    i = 0; i < n; i++)\n            a[i] = i * i - i + 1;\n        int count = 0;\n
    \       for (int i = 0; i < n; i++)\n            for (int j = i + 1; j < n; j++)\n
    \               for (int k = j + 1; k < n; k++)\n                    if ((a[i]
    + a[j] + a[k]) % 3 == 0)\n                        count++;\n        return count;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7ecc644ae3544a59a04c44e019149379>:0
    \n"
  stdout: ''
  timestamp: 1659976255
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long i,j,k, res = 0;\n        int[] list
    = new int[n];\n        for (i = 0; i < n; i++) {\n            list[i] = (int)(i
    * i - i + 1);\n        }\n        for (i = 0; i < n; i++) {\n            for (j
    = i + 1; j < n; j++) {\n                for (k = j + 1; k < n; k++) {\n                    if
    ((list[i] + list[j] + list[k]) % 3 == 0) {\n                        res++;\n                    }\n
    \               }\n            }\n        }\n        return res;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fdb7387fda61487ea06d4acc1d6705df>:0
    \n"
  stdout: ''
  timestamp: 1659976255
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        return Enumerable.Range(1, (int)n)\n            .Select(i
    => i * i - i + 1)\n            .SelectMany((x, i) => Enumerable.Range(i + 1, (int)n
    - i - 1)\n                .Select(j => new { x, j }))\n            .SelectMany(t
    => Enumerable.Range(t.j + 1, (int)n - t.j - 1)\n                .Select(k => new
    { t.x, t.j, k }))\n            .Where(t => (t.x + t.j + t.k) % 3 == 0)\n            .LongCount();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9bf97913709442bca062902fc3cbe427>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9bf97913709442bca062902fc3cbe427>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976255
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        int[] a = new int[n];\n        int count
    = 0;\n        for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n
    \       }\n        for (int i = 0; i < n; i++) {\n            for (int j = i +
    1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n                    if
    ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n                    }\n
    \               }\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90643906db0040a595570198c8cc70e4>:0
    \n"
  stdout: ''
  timestamp: 1659976255
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // your code here\n        long ans = 0;\n
    \       for (long i = 1; i < n - 1; i++) {\n            for (long j = i + 1; j
    < n; j++) {\n                for (long k = j + 1; k <= n; k++) {\n                    if
    ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n                        ans++;\n
    \                   }\n                }\n            }\n        }\n        return
    ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976255
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        return 0;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e9354f6e228549e7be7169b6e46850e0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e9354f6e228549e7be7169b6e46850e0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976250
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        return n - 2;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bce4a8a8a4dd46e8a1a6062e47bbb369>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bce4a8a8a4dd46e8a1a6062e47bbb369>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976255
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        return 0;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e9354f6e228549e7be7169b6e46850e0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e9354f6e228549e7be7169b6e46850e0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976250
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // FIXME: \n        // Replace the following
    code by your own code.\n        return 1L;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0323fdd52a1d41ad9a56f2f1195f92d2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0323fdd52a1d41ad9a56f2f1195f92d2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976255
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        List<long> a = new List<long>();\n        long
    s = 0;\n        for (long i = 1; i <= n; i++) {\n            long x = i * i -
    i + 1;\n            s += x;\n            a.Add(x);\n        }\n        long res
    = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j
    < n; j++) {\n                if ((s - a[i] - a[j]) % 3 == 0) {\n                    res++;\n
    \               }\n            }\n        }\n        return res;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c8112111698b43538fe231f131765e94>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c8112111698b43538fe231f131765e94>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976255
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        // This is a pretty specific problem which
    can be solved with a bit of maths.\n        // The problem is asking you to find
    the number of triples of elements (x, y, z)\n        // where x, y, z are numbers
    in the following range:\n        //      1 < x < y < z < n\n        // And where
    x + y + z is a multiple of 3.\n        // First we notice that z can be any value
    in the range\n        //      n-2 < z <= n.\n        // We then notice that y
    can be any value in the range\n        //      n-3 < y <= n-2.\n        // Lastly
    we note that x can be any value in the range\n        //      1 < x <= n-3.\n
    \       // We then need to calculate the number of valid triples,\n        //
    which is the number of valid values for x and y multiplied\n        // by the
    number of valid values for z.\n        // We then need to handle the case where
    x, y, z are all equal\n        // (and as such invalid as a triple).\n        //
    So we just subtract this number from the total number of triples.\n        //
    The total number of triples is:\n        //      (n-2)*(n-3)/2 * (n-2) = ((n-2)^2*(n-3))/2\n
    \       // The number of invalid triples is simply:\n        //      (n-2)\n        //
    The final answer is:\n        //      ((n-2)^2*(n-3))/2 - (n-2)\n        return
    ((n - 2) * (n - 2) * (n - 3)) / 2 - (n - 2);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4adffe74b2a246e4b877a87ba8256e3c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4adffe74b2a246e4b877a87ba8256e3c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976255
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        Debug.Assert(n > 0);\n        long count
    = 0;\n        // Your code goes here.\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fd7f3c44b2134c3f98c70dc6fb2aae9e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fd7f3c44b2134c3f98c70dc6fb2aae9e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976256
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        long cnt
    = 0;\n        for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n
    \       }\n        for (int i = 0; i < n; i++) {\n            for (int j = i +
    1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n                    if
    ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        cnt++;\n                    }\n
    \               }\n            }\n        }\n        return cnt;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2fe024028102430fa782466ff999c7c6>:0
    \n"
  stdout: ''
  timestamp: 1659976256
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        var a = new long[n];\n        for (int i
    = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        var
    sum = 0L;\n        for (int i = 0; i < n; i++) {\n            for (int j = i +
    1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n                    if
    ((a[i] + a[j] + a[k]) % 3 == 0) sum++;\n                }\n            }\n        }\n
    \       return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ee2e7ef14664488b80a86a23383f08bb>:0
    \n"
  stdout: ''
  timestamp: 1659976256
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long sum = 0;\n        // Your code here.\n
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;
    j++) {\n                for (int k = j + 1; k < n; k++) {\n                    if
    ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n                        sum++;\n
    \                   }\n                }\n            }\n        }\n        return
    sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <06949c925724420c982bd02ce862664b>:0
    \n"
  stdout: ''
  timestamp: 1659976256
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        return 0;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e9354f6e228549e7be7169b6e46850e0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e9354f6e228549e7be7169b6e46850e0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976250
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        int[] dp = new int[3];\n        for (int
    i = 1; i <= n; i++) {\n            dp[i % 3] = 0;\n            for (int j = 0;
    j < 3; j++) {\n                if ((i + j) % 3 == 0) {\n                    dp[i
    % 3] += dp[j];\n                }\n            }\n            dp[i % 3]++;\n        }\n
    \       return dp[(int)(n % 3)];\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c6a7dca4bc2e44f1932efc396c4e8da9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c6a7dca4bc2e44f1932efc396c4e8da9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976256
